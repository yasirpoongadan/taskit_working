webpackJsonp(["main"],{

/***/ "../../../../../src/$$_lazy_route_resource lazy recursive":
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncatched exception popping up in devtools
	return Promise.resolve().then(function() {
		throw new Error("Cannot find module '" + req + "'.");
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "../../../../../src/$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "../../../../../src/app/app.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/app.component.html":
/***/ (function(module, exports) {

module.exports = "<router-outlet></router-outlet>"

/***/ }),

/***/ "../../../../../src/app/app.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var AppComponent = (function () {
    function AppComponent() {
        this.title = 'app';
    }
    AppComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-root',
            template: __webpack_require__("../../../../../src/app/app.component.html"),
            styles: [__webpack_require__("../../../../../src/app/app.component.css")]
        })
    ], AppComponent);
    return AppComponent;
}());



/***/ }),

/***/ "../../../../../src/app/app.module.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export DemoMaterialModule */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AppModule; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__ = __webpack_require__("../../../platform-browser/esm5/platform-browser.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__("../../../forms/esm5/forms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_platform_browser_animations__ = __webpack_require__("../../../platform-browser/esm5/animations.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_http__ = __webpack_require__("../../../http/esm5/http.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular2_recaptcha__ = __webpack_require__("../../../../angular2-recaptcha/angular2-recaptcha.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_angular2_recaptcha___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_angular2_recaptcha__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_hammerjs__ = __webpack_require__("../../../../hammerjs/hammer.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_hammerjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_hammerjs__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__app_component__ = __webpack_require__("../../../../../src/app/app.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_ng2_daterangepicker__ = __webpack_require__("../../../../ng2-daterangepicker/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_ng2_daterangepicker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_ng2_daterangepicker__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__ng_bootstrap_ng_bootstrap__ = __webpack_require__("../../../../@ng-bootstrap/ng-bootstrap/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__node_modules_ng2_dragula_ng2_dragula__ = __webpack_require__("../../../../ng2-dragula/ng2-dragula.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__node_modules_ng2_dragula_ng2_dragula___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15__node_modules_ng2_dragula_ng2_dragula__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__components_reference_component_reference_component_component__ = __webpack_require__("../../../../../src/app/components/reference-component/reference-component.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__components_admin_login_admin_login_component__ = __webpack_require__("../../../../../src/app/components/admin-login/admin-login.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__components_admin_sidebar_admin_sidebar_component__ = __webpack_require__("../../../../../src/app/components/admin-sidebar/admin-sidebar.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__components_admin_topbar_admin_topbar_component__ = __webpack_require__("../../../../../src/app/components/admin-topbar/admin-topbar.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__components_admin_footer_admin_footer_component__ = __webpack_require__("../../../../../src/app/components/admin-footer/admin-footer.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__components_admin_company_admin_company_component__ = __webpack_require__("../../../../../src/app/components/admin-company/admin-company.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__components_buttons_buttons_component__ = __webpack_require__("../../../../../src/app/components/buttons/buttons.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__components_count_down_timer_count_down_timer_component__ = __webpack_require__("../../../../../src/app/components/count-down-timer/count-down-timer.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__components_admin_all_companies_admin_all_companies_component__ = __webpack_require__("../../../../../src/app/components/admin-all-companies/admin-all-companies.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__components_admin_subscribed_admin_subscribed_component__ = __webpack_require__("../../../../../src/app/components/admin-subscribed/admin-subscribed.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__components_admin_trial_admin_trial_component__ = __webpack_require__("../../../../../src/app/components/admin-trial/admin-trial.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__components_admin_not_verified_admin_not_verified_component__ = __webpack_require__("../../../../../src/app/components/admin-not-verified/admin-not-verified.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__components_admin_expired_admin_expired_component__ = __webpack_require__("../../../../../src/app/components/admin-expired/admin-expired.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__components_company_footer_company_footer_component__ = __webpack_require__("../../../../../src/app/components/company-footer/company-footer.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__components_company_users_company_users_component__ = __webpack_require__("../../../../../src/app/components/company-users/company-users.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__components_company_project_category_company_project_category_component__ = __webpack_require__("../../../../../src/app/components/company-project-category/company-project-category.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__components_company_employee_leaves_company_employee_leaves_component__ = __webpack_require__("../../../../../src/app/components/company-employee-leaves/company-employee-leaves.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__components_company_request_management_company_request_management_component__ = __webpack_require__("../../../../../src/app/components/company-request-management/company-request-management.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__components_company_time_extension_request_company_time_extension_request_component__ = __webpack_require__("../../../../../src/app/components/company-time-extension-request/company-time-extension-request.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__components_company_activity_log_company_activity_log_component__ = __webpack_require__("../../../../../src/app/components/company-activity-log/company-activity-log.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__components_company_leave_request_list_company_leave_request_list_component__ = __webpack_require__("../../../../../src/app/components/company-leave-request-list/company-leave-request-list.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__components_company_user_leave_request_company_user_leave_request_component__ = __webpack_require__("../../../../../src/app/components/company-user-leave-request/company-user-leave-request.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__components_user_sidebar_user_sidebar_component__ = __webpack_require__("../../../../../src/app/components/user-sidebar/user-sidebar.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__components_user_footer_user_footer_component__ = __webpack_require__("../../../../../src/app/components/user-footer/user-footer.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__components_user_dashboard_user_dashboard_component__ = __webpack_require__("../../../../../src/app/components/user-dashboard/user-dashboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__components_user_dashboard_bar_user_dashboard_bar_component__ = __webpack_require__("../../../../../src/app/components/user-dashboard-bar/user-dashboard-bar.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__components_user_activity_log_user_activity_log_component__ = __webpack_require__("../../../../../src/app/components/user-activity-log/user-activity-log.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__components_user_leave_request_user_leave_request_component__ = __webpack_require__("../../../../../src/app/components/user-leave-request/user-leave-request.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__components_user_my_request_user_my_request_component__ = __webpack_require__("../../../../../src/app/components/user-my-request/user-my-request.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__components_user_my_request_mytask_user_my_request_mytask_component__ = __webpack_require__("../../../../../src/app/components/user-my-request-mytask/user-my-request-mytask.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__components_user_task_vs_status_user_task_vs_status_component__ = __webpack_require__("../../../../../src/app/components/user-task-vs-status/user-task-vs-status.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__components_user_progress_graph_user_progress_graph_component__ = __webpack_require__("../../../../../src/app/components/user-progress-graph/user-progress-graph.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__components_user_bar_graph_user_bar_graph_component__ = __webpack_require__("../../../../../src/app/components/user-bar-graph/user-bar-graph.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__components_user_status_graph_user_status_graph_component__ = __webpack_require__("../../../../../src/app/components/user-status-graph/user-status-graph.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__components_admin_plan_admin_plan_component__ = __webpack_require__("../../../../../src/app/components/admin-plan/admin-plan.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__components_home_home_component__ = __webpack_require__("../../../../../src/app/components/home/home.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__components_company_upgrade_company_upgrade_component__ = __webpack_require__("../../../../../src/app/components/company-upgrade/company-upgrade.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__components_company_planlist_company_planlist_component__ = __webpack_require__("../../../../../src/app/components/company-planlist/company-planlist.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__components_admin_dashboard_pie_admin_dashboard_pie_component__ = __webpack_require__("../../../../../src/app/components/admin-dashboard-pie/admin-dashboard-pie.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__components_company_add_project_company_add_project_component__ = __webpack_require__("../../../../../src/app/components/company-add-project/company-add-project.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__components_company_project_company_project_component__ = __webpack_require__("../../../../../src/app/components/company-project/company-project.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__components_company_assign_project_company_assign_project_component__ = __webpack_require__("../../../../../src/app/components/company-assign-project/company-assign-project.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__components_company_edit_project_company_edit_project_component__ = __webpack_require__("../../../../../src/app/components/company-edit-project/company-edit-project.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__components_company_login_company_login_component__ = __webpack_require__("../../../../../src/app/components/company-login/company-login.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__components_email_verification_email_verification_component__ = __webpack_require__("../../../../../src/app/components/email-verification/email-verification.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__components_company_topbar_company_topbar_component__ = __webpack_require__("../../../../../src/app/components/company-topbar/company-topbar.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__components_user_topbar_user_topbar_component__ = __webpack_require__("../../../../../src/app/components/user-topbar/user-topbar.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__components_user_project_estimation_user_project_estimation_component__ = __webpack_require__("../../../../../src/app/components/user-project-estimation/user-project-estimation.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__components_company_approve_estimation_company_approve_estimation_component__ = __webpack_require__("../../../../../src/app/components/company-approve-estimation/company-approve-estimation.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__components_company_approve_project_company_approve_project_component__ = __webpack_require__("../../../../../src/app/components/company-approve-project/company-approve-project.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__components_user_edit_profile_user_edit_profile_component__ = __webpack_require__("../../../../../src/app/components/user-edit-profile/user-edit-profile.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__components_test_user_test_user_component__ = __webpack_require__("../../../../../src/app/components/test-user/test-user.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__components_company_dashboard_company_dashboard_component__ = __webpack_require__("../../../../../src/app/components/company-dashboard/company-dashboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__components_company_task_vs_status_company_task_vs_status_component__ = __webpack_require__("../../../../../src/app/components/company-task-vs-status/company-task-vs-status.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_70__components_company_resoure_vs_hour_company_resoure_vs_hour_component__ = __webpack_require__("../../../../../src/app/components/company-resoure-vs-hour/company-resoure-vs-hour.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_71__components_company_project_vs_hour_company_project_vs_hour_component__ = __webpack_require__("../../../../../src/app/components/company-project-vs-hour/company-project-vs-hour.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_72__components_company_project_vs_status_company_project_vs_status_component__ = __webpack_require__("../../../../../src/app/components/company-project-vs-status/company-project-vs-status.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_73__components_company_progress_graph_company_progress_graph_component__ = __webpack_require__("../../../../../src/app/components/company-progress-graph/company-progress-graph.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_74__components_company_status_graph_company_status_graph_component__ = __webpack_require__("../../../../../src/app/components/company-status-graph/company-status-graph.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_75__components_company_bar_graph_company_bar_graph_component__ = __webpack_require__("../../../../../src/app/components/company-bar-graph/company-bar-graph.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_76__components_admin_dashboard_bar_admin_dashboard_bar_component__ = __webpack_require__("../../../../../src/app/components/admin-dashboard-bar/admin-dashboard-bar.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_77__components_company_signup_company_signup_component__ = __webpack_require__("../../../../../src/app/components/company-signup/company-signup.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_78__components_compay_aditninfo_compay_aditninfo_component__ = __webpack_require__("../../../../../src/app/components/compay-aditninfo/compay-aditninfo.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_79__components_forgot_password_forgot_password_component__ = __webpack_require__("../../../../../src/app/components/forgot-password/forgot-password.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_80__components_spinner_spinner_component__ = __webpack_require__("../../../../../src/app/components/spinner/spinner.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_81__components_company_sidebar_company_sidebar_component__ = __webpack_require__("../../../../../src/app/components/company-sidebar/company-sidebar.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_82__components_company_project_planning_company_project_planning_component__ = __webpack_require__("../../../../../src/app/components/company-project-planning/company-project-planning.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_83__components_company_manage_team_company_manage_team_component__ = __webpack_require__("../../../../../src/app/components/company-manage-team/company-manage-team.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_84__components_company_manage_access_rights_company_manage_access_rights_component__ = __webpack_require__("../../../../../src/app/components/company-manage-access-rights/company-manage-access-rights.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_85__components_admin_estimation_report_admin_estimation_report_component__ = __webpack_require__("../../../../../src/app/components/admin-estimation-report/admin-estimation-report.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_86__angular_service_worker__ = __webpack_require__("../../../service-worker/esm5/service-worker.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_87__environments_environment__ = __webpack_require__("../../../../../src/environments/environment.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_88__app_myfocus__ = __webpack_require__("../../../../../src/app/app.myfocus.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_89__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_90__angular_cdk_table__ = __webpack_require__("../../../cdk/esm5/table.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_91__services_super_admin_service__ = __webpack_require__("../../../../../src/app/services/super-admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_92__services_timer_service__ = __webpack_require__("../../../../../src/app/services/timer.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_93__services_overlay_notifcount_service__ = __webpack_require__("../../../../../src/app/services/overlay-notifcount.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_94__components_user_task_management_user_task_management_component__ = __webpack_require__("../../../../../src/app/components/user-task-management/user-task-management.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_95__components_company_expired_company_expired_component__ = __webpack_require__("../../../../../src/app/components/company-expired/company-expired.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_96_ng2_simple_timer__ = __webpack_require__("../../../../ng2-simple-timer/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_96_ng2_simple_timer___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_96_ng2_simple_timer__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_97__components_admin_dashboard_admin_dashboard_component__ = __webpack_require__("../../../../../src/app/components/admin-dashboard/admin-dashboard.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_98__components_company_working_time_company_working_time_component__ = __webpack_require__("../../../../../src/app/components/company-working-time/company-working-time.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_99_ngx_treeview__ = __webpack_require__("../../../../ngx-treeview/src/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_100_primeng_primeng__ = __webpack_require__("../../../../primeng/primeng.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_100_primeng_primeng___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_100_primeng_primeng__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_101__components_company_manage_holidays_company_manage_holidays_component__ = __webpack_require__("../../../../../src/app/components/company-manage-holidays/company-manage-holidays.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_102__components_user_projects_user_projects_component__ = __webpack_require__("../../../../../src/app/components/user-projects/user-projects.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_103__components_user_view_project_user_view_project_component__ = __webpack_require__("../../../../../src/app/components/user-view-project/user-view-project.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_104__pipes_project_pipe__ = __webpack_require__("../../../../../src/app/pipes/project.pipe.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_105__components_company_task_requests_company_task_requests_component__ = __webpack_require__("../../../../../src/app/components/company-task-requests/company-task-requests.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_106__components_company_new_task_management_company_new_task_management_component__ = __webpack_require__("../../../../../src/app/components/company-new-task-management/company-new-task-management.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_107__components_admin_project_report_admin_project_report_component__ = __webpack_require__("../../../../../src/app/components/admin-project-report/admin-project-report.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_108__components_company_activity_log_report_company_activity_log_report_component__ = __webpack_require__("../../../../../src/app/components/company-activity-log-report/company-activity-log-report.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_109__components_company_view_project_company_view_project_component__ = __webpack_require__("../../../../../src/app/components/company-view-project/company-view-project.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_110__components_user_taskstatus_graph_user_taskstatus_graph_component__ = __webpack_require__("../../../../../src/app/components/user-taskstatus-graph/user-taskstatus-graph.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_111_ng2_scroll_to__ = __webpack_require__("../../../../ng2-scroll-to/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_111_ng2_scroll_to___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_111_ng2_scroll_to__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_112__components_company_manage_designation_company_manage_designation_component__ = __webpack_require__("../../../../../src/app/components/company-manage-designation/company-manage-designation.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_113__components_user_task_verification_user_task_verification_component__ = __webpack_require__("../../../../../src/app/components/user-task-verification/user-task-verification.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_114__components_company_approve_project_final_company_approve_project_final_component__ = __webpack_require__("../../../../../src/app/components/company-approve-project-final/company-approve-project-final.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_115__components_company_revised_execution_plan_company_revised_execution_plan_component__ = __webpack_require__("../../../../../src/app/components/company-revised-execution-plan/company-revised-execution-plan.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_116__components_company_show_revised_projects_company_show_revised_projects_component__ = __webpack_require__("../../../../../src/app/components/company-show-revised-projects/company-show-revised-projects.component.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_117__pipes_teamfilter_pipe__ = __webpack_require__("../../../../../src/app/pipes/teamfilter.pipe.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_118__pipes_users_pipe__ = __webpack_require__("../../../../../src/app/pipes/users.pipe.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_119__pipes_viewproject_pipe__ = __webpack_require__("../../../../../src/app/pipes/viewproject.pipe.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




































































































// import {NgbModule} from '@ng-bootstrap/ng-bootstrap';





















var appRoutes = [
    { path: '', component: __WEBPACK_IMPORTED_MODULE_51__components_home_home_component__["a" /* HomeComponent */] },
    { path: '', redirectTo: '/home', pathMatch: 'full' },
    { path: 'reference', component: __WEBPACK_IMPORTED_MODULE_16__components_reference_component_reference_component_component__["a" /* ReferenceComponentComponent */] },
    { path: 'admin-login', component: __WEBPACK_IMPORTED_MODULE_17__components_admin_login_admin_login_component__["a" /* AdminLoginComponent */] },
    { path: 'admin-sidebar', component: __WEBPACK_IMPORTED_MODULE_18__components_admin_sidebar_admin_sidebar_component__["a" /* AdminSidebarComponent */] },
    { path: 'admin-topbar', component: __WEBPACK_IMPORTED_MODULE_19__components_admin_topbar_admin_topbar_component__["a" /* AdminTopbarComponent */] },
    { path: 'admin-footer', component: __WEBPACK_IMPORTED_MODULE_20__components_admin_footer_admin_footer_component__["a" /* AdminFooterComponent */] },
    { path: 'admin-company', component: __WEBPACK_IMPORTED_MODULE_21__components_admin_company_admin_company_component__["a" /* AdminCompanyComponent */] },
    { path: 'admin-dashboard', component: __WEBPACK_IMPORTED_MODULE_97__components_admin_dashboard_admin_dashboard_component__["a" /* AdminDashboardComponent */] },
    { path: 'admin-all-companies', component: __WEBPACK_IMPORTED_MODULE_24__components_admin_all_companies_admin_all_companies_component__["a" /* AdminAllCompaniesComponent */] },
    { path: 'admin-subscribed', component: __WEBPACK_IMPORTED_MODULE_25__components_admin_subscribed_admin_subscribed_component__["a" /* AdminSubscribedComponent */] },
    { path: 'admin-trial', component: __WEBPACK_IMPORTED_MODULE_26__components_admin_trial_admin_trial_component__["a" /* AdminTrialComponent */] },
    { path: 'admin-NotVerified', component: __WEBPACK_IMPORTED_MODULE_27__components_admin_not_verified_admin_not_verified_component__["a" /* AdminNotVerifiedComponent */] },
    { path: 'admin-expired', component: __WEBPACK_IMPORTED_MODULE_28__components_admin_expired_admin_expired_component__["a" /* AdminExpiredComponent */] },
    { path: 'company-sidebar', component: __WEBPACK_IMPORTED_MODULE_81__components_company_sidebar_company_sidebar_component__["a" /* CompanySidebarComponent */] },
    { path: 'company-topbar', component: __WEBPACK_IMPORTED_MODULE_61__components_company_topbar_company_topbar_component__["a" /* CompanyTopbarComponent */] },
    { path: 'company-footer', component: __WEBPACK_IMPORTED_MODULE_29__components_company_footer_company_footer_component__["a" /* CompanyFooterComponent */] },
    { path: 'company-users', component: __WEBPACK_IMPORTED_MODULE_30__components_company_users_company_users_component__["a" /* CompanyUsersComponent */] },
    { path: 'company-project-category', component: __WEBPACK_IMPORTED_MODULE_31__components_company_project_category_company_project_category_component__["a" /* CompanyProjectCategoryComponent */] },
    { path: 'company-employee-leaves', component: __WEBPACK_IMPORTED_MODULE_32__components_company_employee_leaves_company_employee_leaves_component__["a" /* CompanyEmployeeLeavesComponent */] },
    { path: 'company-request-management', component: __WEBPACK_IMPORTED_MODULE_33__components_company_request_management_company_request_management_component__["a" /* CompanyRequestManagementComponent */] },
    { path: 'company-time-extension-request/:id1/:id2', component: __WEBPACK_IMPORTED_MODULE_34__components_company_time_extension_request_company_time_extension_request_component__["a" /* CompanyTimeExtensionRequestComponent */] },
    { path: 'user-topbar', component: __WEBPACK_IMPORTED_MODULE_62__components_user_topbar_user_topbar_component__["a" /* UserTopbarComponent */] },
    { path: 'user-sidebar', component: __WEBPACK_IMPORTED_MODULE_38__components_user_sidebar_user_sidebar_component__["a" /* UserSidebarComponent */] },
    { path: 'user-footer', component: __WEBPACK_IMPORTED_MODULE_39__components_user_footer_user_footer_component__["a" /* UserFooterComponent */] },
    { path: 'user-dashboard', component: __WEBPACK_IMPORTED_MODULE_40__components_user_dashboard_user_dashboard_component__["a" /* UserDashboardComponent */] },
    { path: 'user-activity-log', component: __WEBPACK_IMPORTED_MODULE_42__components_user_activity_log_user_activity_log_component__["a" /* UserActivityLogComponent */] },
    { path: 'user-leave-request', component: __WEBPACK_IMPORTED_MODULE_43__components_user_leave_request_user_leave_request_component__["a" /* UserLeaveRequestComponent */] },
    { path: 'company-activity-log', component: __WEBPACK_IMPORTED_MODULE_35__components_company_activity_log_company_activity_log_component__["a" /* CompanyActivityLogComponent */] },
    { path: 'user-my-request', component: __WEBPACK_IMPORTED_MODULE_44__components_user_my_request_user_my_request_component__["a" /* UserMyRequestComponent */] },
    { path: 'user-dashboard-bar', component: __WEBPACK_IMPORTED_MODULE_41__components_user_dashboard_bar_user_dashboard_bar_component__["a" /* UserDashboardBarComponent */] },
    { path: 'user-task-vs-status', component: __WEBPACK_IMPORTED_MODULE_41__components_user_dashboard_bar_user_dashboard_bar_component__["a" /* UserDashboardBarComponent */] },
    { path: 'user-progress-graph', component: __WEBPACK_IMPORTED_MODULE_47__components_user_progress_graph_user_progress_graph_component__["a" /* UserProgressGraphComponent */] },
    { path: 'user-bar-graph', component: __WEBPACK_IMPORTED_MODULE_48__components_user_bar_graph_user_bar_graph_component__["a" /* UserBarGraphComponent */] },
    { path: 'user-status-graph', component: __WEBPACK_IMPORTED_MODULE_49__components_user_status_graph_user_status_graph_component__["a" /* UserStatusGraphComponent */] },
    { path: 'company-leave-request-list', component: __WEBPACK_IMPORTED_MODULE_36__components_company_leave_request_list_company_leave_request_list_component__["a" /* CompanyLeaveRequestListComponent */] },
    { path: 'company-user-leave-request/:id', component: __WEBPACK_IMPORTED_MODULE_37__components_company_user_leave_request_company_user_leave_request_component__["a" /* CompanyUserLeaveRequestComponent */] },
    { path: 'user-my-request-mytask', component: __WEBPACK_IMPORTED_MODULE_45__components_user_my_request_mytask_user_my_request_mytask_component__["a" /* UserMyRequestMytaskComponent */] },
    { path: 'admin-plan', component: __WEBPACK_IMPORTED_MODULE_50__components_admin_plan_admin_plan_component__["a" /* AdminPlanComponent */] },
    { path: 'home', component: __WEBPACK_IMPORTED_MODULE_51__components_home_home_component__["a" /* HomeComponent */] },
    { path: 'planlist', component: __WEBPACK_IMPORTED_MODULE_53__components_company_planlist_company_planlist_component__["a" /* CompanyPlanlistComponent */] },
    { path: 'upgrade/:id', component: __WEBPACK_IMPORTED_MODULE_52__components_company_upgrade_company_upgrade_component__["a" /* CompanyUpgradeComponent */] },
    { path: 'add-project', component: __WEBPACK_IMPORTED_MODULE_55__components_company_add_project_company_add_project_component__["a" /* CompanyAddProjectComponent */] },
    { path: 'project', component: __WEBPACK_IMPORTED_MODULE_56__components_company_project_company_project_component__["a" /* CompanyProjectComponent */] },
    { path: 'assign-project/:id', component: __WEBPACK_IMPORTED_MODULE_57__components_company_assign_project_company_assign_project_component__["a" /* CompanyAssignProjectComponent */] },
    { path: 'company-dashboard', component: __WEBPACK_IMPORTED_MODULE_68__components_company_dashboard_company_dashboard_component__["a" /* CompanyDashboardComponent */] },
    { path: 'company-signup', component: __WEBPACK_IMPORTED_MODULE_77__components_company_signup_company_signup_component__["a" /* CompanySignupComponent */] },
    { path: 'company-access-rights', component: __WEBPACK_IMPORTED_MODULE_84__components_company_manage_access_rights_company_manage_access_rights_component__["a" /* CompanyManageAccessRightsComponent */] },
    { path: 'company-working-time', component: __WEBPACK_IMPORTED_MODULE_98__components_company_working_time_company_working_time_component__["a" /* CompanyWorkingTimeComponent */] },
    { path: 'company-manage-holyday', component: __WEBPACK_IMPORTED_MODULE_101__components_company_manage_holidays_company_manage_holidays_component__["a" /* CompanyManageHolidaysComponent */] },
    { path: 'company-task-requests', component: __WEBPACK_IMPORTED_MODULE_105__components_company_task_requests_company_task_requests_component__["a" /* CompanyTaskRequestsComponent */] },
    { path: 'company-task-manage/:id', component: __WEBPACK_IMPORTED_MODULE_106__components_company_new_task_management_company_new_task_management_component__["a" /* CompanyNewTaskManagementComponent */] },
    { path: 'company-login', component: __WEBPACK_IMPORTED_MODULE_59__components_company_login_company_login_component__["a" /* CompanyLoginComponent */] },
    { path: 'compay-aditninfo/:id', component: __WEBPACK_IMPORTED_MODULE_78__components_compay_aditninfo_compay_aditninfo_component__["a" /* CompayAditninfoComponent */] },
    { path: 'company-team', component: __WEBPACK_IMPORTED_MODULE_83__components_company_manage_team_company_manage_team_component__["a" /* CompanyManageTeamComponent */] },
    { path: 'email-verification/:id', component: __WEBPACK_IMPORTED_MODULE_60__components_email_verification_email_verification_component__["a" /* EmailVerificationComponent */] },
    { path: 'edit-project/:id', component: __WEBPACK_IMPORTED_MODULE_58__components_company_edit_project_company_edit_project_component__["a" /* CompanyEditProjectComponent */] },
    { path: 'approve-estimation/:id', component: __WEBPACK_IMPORTED_MODULE_64__components_company_approve_estimation_company_approve_estimation_component__["a" /* CompanyApproveEstimationComponent */] },
    { path: 'approve-project/:id', component: __WEBPACK_IMPORTED_MODULE_65__components_company_approve_project_company_approve_project_component__["a" /* CompanyApproveProjectComponent */] },
    { path: 'edit-profile', component: __WEBPACK_IMPORTED_MODULE_66__components_user_edit_profile_user_edit_profile_component__["a" /* UserEditProfileComponent */] },
    { path: 'test-user', component: __WEBPACK_IMPORTED_MODULE_67__components_test_user_test_user_component__["a" /* TestUserComponent */] },
    { path: 'forgot-password', component: __WEBPACK_IMPORTED_MODULE_79__components_forgot_password_forgot_password_component__["a" /* ForgotPasswordComponent */] },
    { path: 'project-planning/:id', component: __WEBPACK_IMPORTED_MODULE_82__components_company_project_planning_company_project_planning_component__["a" /* CompanyProjectPlanningComponent */] },
    { path: 'expired', component: __WEBPACK_IMPORTED_MODULE_95__components_company_expired_company_expired_component__["a" /* CompanyExpiredComponent */] },
    { path: 'user-task-management', component: __WEBPACK_IMPORTED_MODULE_94__components_user_task_management_user_task_management_component__["a" /* UserTaskManagementComponent */] },
    { path: 'project-estimation-report', component: __WEBPACK_IMPORTED_MODULE_85__components_admin_estimation_report_admin_estimation_report_component__["a" /* AdminEstimationReportComponent */] },
    { path: 'spinner', component: __WEBPACK_IMPORTED_MODULE_80__components_spinner_spinner_component__["a" /* SpinnerComponent */] },
    { path: 'user-projects', component: __WEBPACK_IMPORTED_MODULE_102__components_user_projects_user_projects_component__["a" /* UserProjectsComponent */] },
    { path: 'user-view-project/:id', component: __WEBPACK_IMPORTED_MODULE_103__components_user_view_project_user_view_project_component__["a" /* UserViewProjectComponent */] },
    { path: 'estimate-project/:id1/:id2', component: __WEBPACK_IMPORTED_MODULE_63__components_user_project_estimation_user_project_estimation_component__["a" /* UserProjectEstimationComponent */] },
    { path: 'view-project/:id', component: __WEBPACK_IMPORTED_MODULE_109__components_company_view_project_company_view_project_component__["a" /* CompanyViewProjectComponent */] },
    { path: 'revised-execution-planning/:id', component: __WEBPACK_IMPORTED_MODULE_115__components_company_revised_execution_plan_company_revised_execution_plan_component__["a" /* CompanyRevisedExecutionPlanComponent */] },
    { path: 'user-taskstatus-graph', component: __WEBPACK_IMPORTED_MODULE_110__components_user_taskstatus_graph_user_taskstatus_graph_component__["a" /* UserTaskstatusGraphComponent */] },
    { path: 'project-report', component: __WEBPACK_IMPORTED_MODULE_107__components_admin_project_report_admin_project_report_component__["a" /* AdminProjectReportComponent */] },
    { path: 'activity-log-report', component: __WEBPACK_IMPORTED_MODULE_108__components_company_activity_log_report_company_activity_log_report_component__["a" /* CompanyActivityLogReportComponent */] },
    { path: 'company-manage-designation', component: __WEBPACK_IMPORTED_MODULE_112__components_company_manage_designation_company_manage_designation_component__["a" /* CompanyManageDesignationComponent */] },
    { path: 'user-task-verification', component: __WEBPACK_IMPORTED_MODULE_113__components_user_task_verification_user_task_verification_component__["a" /* UserTaskVerificationComponent */] },
    { path: 'company-project-approval/:id', component: __WEBPACK_IMPORTED_MODULE_114__components_company_approve_project_final_company_approve_project_final_component__["a" /* CompanyApproveProjectFinalComponent */] },
    { path: 'revise-project/:id', component: __WEBPACK_IMPORTED_MODULE_116__components_company_show_revised_projects_company_show_revised_projects_component__["a" /* CompanyShowRevisedProjectsComponent */] },
];
var DemoMaterialModule = (function () {
    function DemoMaterialModule() {
    }
    DemoMaterialModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            exports: [
                __WEBPACK_IMPORTED_MODULE_90__angular_cdk_table__["m" /* CdkTableModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["a" /* MatAutocompleteModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["b" /* MatButtonModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["c" /* MatButtonToggleModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["d" /* MatCardModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["e" /* MatCheckboxModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["f" /* MatChipsModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["D" /* MatStepperModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["g" /* MatDatepickerModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["h" /* MatDialogModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["i" /* MatExpansionModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["j" /* MatGridListModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["k" /* MatIconModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["l" /* MatInputModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["m" /* MatListModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["n" /* MatMenuModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["o" /* MatNativeDateModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["q" /* MatPaginatorModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["r" /* MatProgressBarModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["s" /* MatProgressSpinnerModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["t" /* MatRadioModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["u" /* MatRippleModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["v" /* MatSelectModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["w" /* MatSidenavModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["y" /* MatSliderModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["x" /* MatSlideToggleModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["A" /* MatSnackBarModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["C" /* MatSortModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["F" /* MatTableModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["G" /* MatTabsModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["H" /* MatToolbarModule */],
                __WEBPACK_IMPORTED_MODULE_89__angular_material__["I" /* MatTooltipModule */],
            ],
            declarations: [],
        })
    ], DemoMaterialModule);
    return DemoMaterialModule;
}());

var AppModule = (function () {
    function AppModule() {
    }
    AppModule = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"])({
            declarations: [
                __WEBPACK_IMPORTED_MODULE_9__app_component__["a" /* AppComponent */],
                __WEBPACK_IMPORTED_MODULE_9__app_component__["a" /* AppComponent */],
                __WEBPACK_IMPORTED_MODULE_16__components_reference_component_reference_component_component__["a" /* ReferenceComponentComponent */],
                __WEBPACK_IMPORTED_MODULE_17__components_admin_login_admin_login_component__["a" /* AdminLoginComponent */],
                __WEBPACK_IMPORTED_MODULE_18__components_admin_sidebar_admin_sidebar_component__["a" /* AdminSidebarComponent */],
                __WEBPACK_IMPORTED_MODULE_20__components_admin_footer_admin_footer_component__["a" /* AdminFooterComponent */],
                __WEBPACK_IMPORTED_MODULE_21__components_admin_company_admin_company_component__["a" /* AdminCompanyComponent */],
                __WEBPACK_IMPORTED_MODULE_24__components_admin_all_companies_admin_all_companies_component__["a" /* AdminAllCompaniesComponent */],
                __WEBPACK_IMPORTED_MODULE_25__components_admin_subscribed_admin_subscribed_component__["a" /* AdminSubscribedComponent */],
                __WEBPACK_IMPORTED_MODULE_26__components_admin_trial_admin_trial_component__["a" /* AdminTrialComponent */],
                __WEBPACK_IMPORTED_MODULE_27__components_admin_not_verified_admin_not_verified_component__["a" /* AdminNotVerifiedComponent */],
                __WEBPACK_IMPORTED_MODULE_28__components_admin_expired_admin_expired_component__["a" /* AdminExpiredComponent */],
                __WEBPACK_IMPORTED_MODULE_50__components_admin_plan_admin_plan_component__["a" /* AdminPlanComponent */],
                __WEBPACK_IMPORTED_MODULE_51__components_home_home_component__["a" /* HomeComponent */],
                __WEBPACK_IMPORTED_MODULE_53__components_company_planlist_company_planlist_component__["a" /* CompanyPlanlistComponent */],
                __WEBPACK_IMPORTED_MODULE_52__components_company_upgrade_company_upgrade_component__["a" /* CompanyUpgradeComponent */],
                __WEBPACK_IMPORTED_MODULE_54__components_admin_dashboard_pie_admin_dashboard_pie_component__["a" /* AdminDashboardPieComponent */],
                __WEBPACK_IMPORTED_MODULE_55__components_company_add_project_company_add_project_component__["a" /* CompanyAddProjectComponent */],
                __WEBPACK_IMPORTED_MODULE_56__components_company_project_company_project_component__["a" /* CompanyProjectComponent */],
                __WEBPACK_IMPORTED_MODULE_59__components_company_login_company_login_component__["a" /* CompanyLoginComponent */],
                __WEBPACK_IMPORTED_MODULE_60__components_email_verification_email_verification_component__["a" /* EmailVerificationComponent */],
                __WEBPACK_IMPORTED_MODULE_57__components_company_assign_project_company_assign_project_component__["a" /* CompanyAssignProjectComponent */],
                __WEBPACK_IMPORTED_MODULE_58__components_company_edit_project_company_edit_project_component__["a" /* CompanyEditProjectComponent */],
                __WEBPACK_IMPORTED_MODULE_61__components_company_topbar_company_topbar_component__["a" /* CompanyTopbarComponent */],
                __WEBPACK_IMPORTED_MODULE_62__components_user_topbar_user_topbar_component__["a" /* UserTopbarComponent */],
                __WEBPACK_IMPORTED_MODULE_63__components_user_project_estimation_user_project_estimation_component__["a" /* UserProjectEstimationComponent */],
                __WEBPACK_IMPORTED_MODULE_64__components_company_approve_estimation_company_approve_estimation_component__["a" /* CompanyApproveEstimationComponent */],
                __WEBPACK_IMPORTED_MODULE_65__components_company_approve_project_company_approve_project_component__["a" /* CompanyApproveProjectComponent */],
                __WEBPACK_IMPORTED_MODULE_66__components_user_edit_profile_user_edit_profile_component__["a" /* UserEditProfileComponent */],
                __WEBPACK_IMPORTED_MODULE_67__components_test_user_test_user_component__["a" /* TestUserComponent */],
                __WEBPACK_IMPORTED_MODULE_59__components_company_login_company_login_component__["a" /* CompanyLoginComponent */],
                __WEBPACK_IMPORTED_MODULE_60__components_email_verification_email_verification_component__["a" /* EmailVerificationComponent */],
                __WEBPACK_IMPORTED_MODULE_78__components_compay_aditninfo_compay_aditninfo_component__["a" /* CompayAditninfoComponent */],
                __WEBPACK_IMPORTED_MODULE_79__components_forgot_password_forgot_password_component__["a" /* ForgotPasswordComponent */],
                __WEBPACK_IMPORTED_MODULE_54__components_admin_dashboard_pie_admin_dashboard_pie_component__["a" /* AdminDashboardPieComponent */],
                __WEBPACK_IMPORTED_MODULE_76__components_admin_dashboard_bar_admin_dashboard_bar_component__["a" /* AdminDashboardBarComponent */],
                __WEBPACK_IMPORTED_MODULE_77__components_company_signup_company_signup_component__["a" /* CompanySignupComponent */],
                __WEBPACK_IMPORTED_MODULE_80__components_spinner_spinner_component__["a" /* SpinnerComponent */],
                __WEBPACK_IMPORTED_MODULE_61__components_company_topbar_company_topbar_component__["a" /* CompanyTopbarComponent */],
                __WEBPACK_IMPORTED_MODULE_81__components_company_sidebar_company_sidebar_component__["a" /* CompanySidebarComponent */],
                __WEBPACK_IMPORTED_MODULE_82__components_company_project_planning_company_project_planning_component__["a" /* CompanyProjectPlanningComponent */],
                __WEBPACK_IMPORTED_MODULE_68__components_company_dashboard_company_dashboard_component__["a" /* CompanyDashboardComponent */],
                __WEBPACK_IMPORTED_MODULE_69__components_company_task_vs_status_company_task_vs_status_component__["a" /* CompanyTaskVsStatusComponent */],
                __WEBPACK_IMPORTED_MODULE_70__components_company_resoure_vs_hour_company_resoure_vs_hour_component__["a" /* CompanyResoureVsHourComponent */],
                __WEBPACK_IMPORTED_MODULE_71__components_company_project_vs_hour_company_project_vs_hour_component__["a" /* CompanyProjectVsHourComponent */],
                __WEBPACK_IMPORTED_MODULE_72__components_company_project_vs_status_company_project_vs_status_component__["a" /* CompanyProjectVsStatusComponent */],
                __WEBPACK_IMPORTED_MODULE_73__components_company_progress_graph_company_progress_graph_component__["a" /* CompanyProgressGraphComponent */],
                __WEBPACK_IMPORTED_MODULE_74__components_company_status_graph_company_status_graph_component__["a" /* CompanyStatusGraphComponent */],
                __WEBPACK_IMPORTED_MODULE_75__components_company_bar_graph_company_bar_graph_component__["a" /* CompanyBarGraphComponent */],
                __WEBPACK_IMPORTED_MODULE_83__components_company_manage_team_company_manage_team_component__["a" /* CompanyManageTeamComponent */],
                __WEBPACK_IMPORTED_MODULE_84__components_company_manage_access_rights_company_manage_access_rights_component__["a" /* CompanyManageAccessRightsComponent */],
                __WEBPACK_IMPORTED_MODULE_95__components_company_expired_company_expired_component__["a" /* CompanyExpiredComponent */],
                __WEBPACK_IMPORTED_MODULE_94__components_user_task_management_user_task_management_component__["a" /* UserTaskManagementComponent */],
                __WEBPACK_IMPORTED_MODULE_38__components_user_sidebar_user_sidebar_component__["a" /* UserSidebarComponent */],
                __WEBPACK_IMPORTED_MODULE_62__components_user_topbar_user_topbar_component__["a" /* UserTopbarComponent */],
                __WEBPACK_IMPORTED_MODULE_22__components_buttons_buttons_component__["a" /* ButtonsComponent */],
                __WEBPACK_IMPORTED_MODULE_23__components_count_down_timer_count_down_timer_component__["a" /* CountDownTimerComponent */],
                __WEBPACK_IMPORTED_MODULE_98__components_company_working_time_company_working_time_component__["a" /* CompanyWorkingTimeComponent */],
                __WEBPACK_IMPORTED_MODULE_101__components_company_manage_holidays_company_manage_holidays_component__["a" /* CompanyManageHolidaysComponent */],
                __WEBPACK_IMPORTED_MODULE_102__components_user_projects_user_projects_component__["a" /* UserProjectsComponent */],
                __WEBPACK_IMPORTED_MODULE_103__components_user_view_project_user_view_project_component__["a" /* UserViewProjectComponent */],
                __WEBPACK_IMPORTED_MODULE_104__pipes_project_pipe__["a" /* ProjectPipe */],
                __WEBPACK_IMPORTED_MODULE_105__components_company_task_requests_company_task_requests_component__["a" /* CompanyTaskRequestsComponent */],
                __WEBPACK_IMPORTED_MODULE_106__components_company_new_task_management_company_new_task_management_component__["a" /* CompanyNewTaskManagementComponent */],
                __WEBPACK_IMPORTED_MODULE_97__components_admin_dashboard_admin_dashboard_component__["a" /* AdminDashboardComponent */],
                __WEBPACK_IMPORTED_MODULE_85__components_admin_estimation_report_admin_estimation_report_component__["a" /* AdminEstimationReportComponent */],
                __WEBPACK_IMPORTED_MODULE_17__components_admin_login_admin_login_component__["a" /* AdminLoginComponent */],
                __WEBPACK_IMPORTED_MODULE_18__components_admin_sidebar_admin_sidebar_component__["a" /* AdminSidebarComponent */],
                __WEBPACK_IMPORTED_MODULE_19__components_admin_topbar_admin_topbar_component__["a" /* AdminTopbarComponent */],
                __WEBPACK_IMPORTED_MODULE_20__components_admin_footer_admin_footer_component__["a" /* AdminFooterComponent */],
                __WEBPACK_IMPORTED_MODULE_21__components_admin_company_admin_company_component__["a" /* AdminCompanyComponent */],
                __WEBPACK_IMPORTED_MODULE_24__components_admin_all_companies_admin_all_companies_component__["a" /* AdminAllCompaniesComponent */],
                __WEBPACK_IMPORTED_MODULE_25__components_admin_subscribed_admin_subscribed_component__["a" /* AdminSubscribedComponent */],
                __WEBPACK_IMPORTED_MODULE_26__components_admin_trial_admin_trial_component__["a" /* AdminTrialComponent */],
                __WEBPACK_IMPORTED_MODULE_27__components_admin_not_verified_admin_not_verified_component__["a" /* AdminNotVerifiedComponent */],
                __WEBPACK_IMPORTED_MODULE_28__components_admin_expired_admin_expired_component__["a" /* AdminExpiredComponent */],
                __WEBPACK_IMPORTED_MODULE_61__components_company_topbar_company_topbar_component__["a" /* CompanyTopbarComponent */],
                __WEBPACK_IMPORTED_MODULE_29__components_company_footer_company_footer_component__["a" /* CompanyFooterComponent */],
                __WEBPACK_IMPORTED_MODULE_81__components_company_sidebar_company_sidebar_component__["a" /* CompanySidebarComponent */],
                __WEBPACK_IMPORTED_MODULE_30__components_company_users_company_users_component__["a" /* CompanyUsersComponent */],
                __WEBPACK_IMPORTED_MODULE_31__components_company_project_category_company_project_category_component__["a" /* CompanyProjectCategoryComponent */],
                __WEBPACK_IMPORTED_MODULE_32__components_company_employee_leaves_company_employee_leaves_component__["a" /* CompanyEmployeeLeavesComponent */],
                __WEBPACK_IMPORTED_MODULE_33__components_company_request_management_company_request_management_component__["a" /* CompanyRequestManagementComponent */],
                __WEBPACK_IMPORTED_MODULE_34__components_company_time_extension_request_company_time_extension_request_component__["a" /* CompanyTimeExtensionRequestComponent */],
                __WEBPACK_IMPORTED_MODULE_35__components_company_activity_log_company_activity_log_component__["a" /* CompanyActivityLogComponent */],
                __WEBPACK_IMPORTED_MODULE_62__components_user_topbar_user_topbar_component__["a" /* UserTopbarComponent */],
                __WEBPACK_IMPORTED_MODULE_38__components_user_sidebar_user_sidebar_component__["a" /* UserSidebarComponent */],
                __WEBPACK_IMPORTED_MODULE_39__components_user_footer_user_footer_component__["a" /* UserFooterComponent */],
                __WEBPACK_IMPORTED_MODULE_40__components_user_dashboard_user_dashboard_component__["a" /* UserDashboardComponent */],
                __WEBPACK_IMPORTED_MODULE_42__components_user_activity_log_user_activity_log_component__["a" /* UserActivityLogComponent */],
                __WEBPACK_IMPORTED_MODULE_43__components_user_leave_request_user_leave_request_component__["a" /* UserLeaveRequestComponent */],
                __WEBPACK_IMPORTED_MODULE_44__components_user_my_request_user_my_request_component__["a" /* UserMyRequestComponent */],
                __WEBPACK_IMPORTED_MODULE_41__components_user_dashboard_bar_user_dashboard_bar_component__["a" /* UserDashboardBarComponent */],
                __WEBPACK_IMPORTED_MODULE_46__components_user_task_vs_status_user_task_vs_status_component__["a" /* UserTaskVsStatusComponent */],
                __WEBPACK_IMPORTED_MODULE_47__components_user_progress_graph_user_progress_graph_component__["a" /* UserProgressGraphComponent */],
                __WEBPACK_IMPORTED_MODULE_48__components_user_bar_graph_user_bar_graph_component__["a" /* UserBarGraphComponent */],
                __WEBPACK_IMPORTED_MODULE_49__components_user_status_graph_user_status_graph_component__["a" /* UserStatusGraphComponent */],
                __WEBPACK_IMPORTED_MODULE_36__components_company_leave_request_list_company_leave_request_list_component__["a" /* CompanyLeaveRequestListComponent */],
                __WEBPACK_IMPORTED_MODULE_37__components_company_user_leave_request_company_user_leave_request_component__["a" /* CompanyUserLeaveRequestComponent */],
                __WEBPACK_IMPORTED_MODULE_45__components_user_my_request_mytask_user_my_request_mytask_component__["a" /* UserMyRequestMytaskComponent */],
                __WEBPACK_IMPORTED_MODULE_107__components_admin_project_report_admin_project_report_component__["a" /* AdminProjectReportComponent */],
                __WEBPACK_IMPORTED_MODULE_108__components_company_activity_log_report_company_activity_log_report_component__["a" /* CompanyActivityLogReportComponent */],
                __WEBPACK_IMPORTED_MODULE_109__components_company_view_project_company_view_project_component__["a" /* CompanyViewProjectComponent */],
                __WEBPACK_IMPORTED_MODULE_110__components_user_taskstatus_graph_user_taskstatus_graph_component__["a" /* UserTaskstatusGraphComponent */],
                __WEBPACK_IMPORTED_MODULE_88__app_myfocus__["a" /* FocusDirective */],
                __WEBPACK_IMPORTED_MODULE_112__components_company_manage_designation_company_manage_designation_component__["a" /* CompanyManageDesignationComponent */],
                __WEBPACK_IMPORTED_MODULE_113__components_user_task_verification_user_task_verification_component__["a" /* UserTaskVerificationComponent */],
                __WEBPACK_IMPORTED_MODULE_114__components_company_approve_project_final_company_approve_project_final_component__["a" /* CompanyApproveProjectFinalComponent */],
                __WEBPACK_IMPORTED_MODULE_115__components_company_revised_execution_plan_company_revised_execution_plan_component__["a" /* CompanyRevisedExecutionPlanComponent */],
                __WEBPACK_IMPORTED_MODULE_116__components_company_show_revised_projects_company_show_revised_projects_component__["a" /* CompanyShowRevisedProjectsComponent */],
                __WEBPACK_IMPORTED_MODULE_117__pipes_teamfilter_pipe__["a" /* TeamfilterPipe */],
                __WEBPACK_IMPORTED_MODULE_118__pipes_users_pipe__["a" /* UsersPipe */],
                __WEBPACK_IMPORTED_MODULE_119__pipes_viewproject_pipe__["a" /* ViewprojectPipe */]
            ],
            imports: [
                __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__["BrowserModule"],
                __WEBPACK_IMPORTED_MODULE_3__angular_platform_browser_animations__["a" /* BrowserAnimationsModule */],
                __WEBPACK_IMPORTED_MODULE_3__angular_platform_browser_animations__["b" /* NoopAnimationsModule */],
                __WEBPACK_IMPORTED_MODULE_15__node_modules_ng2_dragula_ng2_dragula__["DragulaModule"],
                __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormsModule"],
                __WEBPACK_IMPORTED_MODULE_5__angular_http__["c" /* HttpModule */],
                __WEBPACK_IMPORTED_MODULE_2__angular_forms__["ReactiveFormsModule"],
                __WEBPACK_IMPORTED_MODULE_4__angular_router__["RouterModule"].forRoot(appRoutes),
                __WEBPACK_IMPORTED_MODULE_87__environments_environment__["a" /* environment */].production ? __WEBPACK_IMPORTED_MODULE_86__angular_service_worker__["a" /* ServiceWorkerModule */].register('/ngsw-worker.js') : [],
                DemoMaterialModule,
                __WEBPACK_IMPORTED_MODULE_14__ng_bootstrap_ng_bootstrap__["a" /* NgbModule */].forRoot(),
                __WEBPACK_IMPORTED_MODULE_99_ngx_treeview__["a" /* TreeviewModule */].forRoot(), __WEBPACK_IMPORTED_MODULE_100_primeng_primeng__["TreeModule"], __WEBPACK_IMPORTED_MODULE_100_primeng_primeng__["SharedModule"],
                __WEBPACK_IMPORTED_MODULE_7_angular2_recaptcha__["ReCaptchaModule"],
                __WEBPACK_IMPORTED_MODULE_14__ng_bootstrap_ng_bootstrap__["a" /* NgbModule */].forRoot(),
                __WEBPACK_IMPORTED_MODULE_99_ngx_treeview__["a" /* TreeviewModule */].forRoot(),
                __WEBPACK_IMPORTED_MODULE_10_ng2_daterangepicker__["Daterangepicker"],
                __WEBPACK_IMPORTED_MODULE_111_ng2_scroll_to__["ScrollToModule"].forRoot()
            ],
            providers: [__WEBPACK_IMPORTED_MODULE_6__config_config__["a" /* Config */], __WEBPACK_IMPORTED_MODULE_12__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_11__services_admin_service__["a" /* AdminService */], __WEBPACK_IMPORTED_MODULE_91__services_super_admin_service__["a" /* SuperAdminService */], __WEBPACK_IMPORTED_MODULE_96_ng2_simple_timer__["SimpleTimer"], __WEBPACK_IMPORTED_MODULE_13__services_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_92__services_timer_service__["a" /* TimerService */], __WEBPACK_IMPORTED_MODULE_93__services_overlay_notifcount_service__["a" /* OverlayNotifcountService */]],
            bootstrap: [__WEBPACK_IMPORTED_MODULE_9__app_component__["a" /* AppComponent */]]
        })
    ], AppModule);
    return AppModule;
}());



/***/ }),

/***/ "../../../../../src/app/app.myfocus.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FocusDirective; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};

var FocusDirective = (function () {
    function FocusDirective(element) {
        this.element = element;
    }
    FocusDirective.prototype.ngOnChanges = function () {
        this.element.nativeElement.focus();
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"])(),
        __metadata("design:type", Boolean)
    ], FocusDirective.prototype, "focus", void 0);
    FocusDirective = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Directive"])({
            selector: '[focus]'
        }),
        __param(0, Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Inject"])(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"]])
    ], FocusDirective);
    return FocusDirective;
}());



/***/ }),

/***/ "../../../../../src/app/components/admin-all-companies/admin-all-companies.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n.mat-form-field {\r\n  font-size: 14px;\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/admin-all-companies/admin-all-companies.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n  \r\n  <!-- <p>You selected: {{selected}} </p> -->\r\n\r\n  <div class=\"col-md-12\">\r\n    <div class=\"row\">\r\n    <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\" >\r\n        <div class=\"\"  >\r\n            <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n            width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n        <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n          <animateTransform attributeType=\"xml\"\r\n            attributeName=\"transform\"\r\n            type=\"rotate\"\r\n            from=\"0 25 25\"\r\n            to=\"360 25 25\"\r\n            dur=\"0.6s\"\r\n            repeatCount=\"indefinite\"/>\r\n          </path>\r\n        </svg>\r\n    </div>\r\n    </div> -->\r\n    \r\n\r\n    <div class=\"col-md-12 optionz\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n              <div class=\"example-header\">\r\n                  <mat-form-field>\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                  </mat-form-field>\r\n                </div>\r\n          </div>\r\n          <div class=\"col-md-2 pull-right\">\r\n              <div *ngIf=\"all_value\">\r\n              <mat-form-field class=\"filter\"> \r\n                  \r\n                    <mat-select  (change)=\"refresh()\" [(value)]=\"selected\">\r\n                      <!-- <mat-option>None</mat-option> -->\r\n                      <mat-option value=\"all\">All</mat-option>\r\n                      <mat-option value=\"Active\">Active</mat-option>\r\n                      <mat-option value=\"Block\">Block</mat-option>\r\n                      <mat-option value=\"Delete\">Delete </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n<!--    \r\n          <div class=\"example-header\" >\r\n              <mat-form-field>\r\n                <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n              </mat-form-field>\r\n          </div> -->\r\n       \r\n    <div class=\"example-container mat-elevation-z8 \">\r\n  <mat-table [dataSource]=\"dataSource\" matSort>\r\n <!-- Name Column -->\r\n <ng-container matColumnDef=\"slno\">\r\n    <mat-header-cell *matHeaderCellDef >Sl_No </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row;let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}} </mat-cell>\r\n  </ng-container>\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"cmp_name\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>COMPANY NAME </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.cmp_name}} </mat-cell>\r\n    </ng-container>\r\n\r\n <!-- Name Column -->\r\n <ng-container matColumnDef=\"email\">\r\n  <mat-header-cell *matHeaderCellDef mat-sort-header> EMAIL </mat-header-cell>\r\n  <mat-cell *matCellDef=\"let row\"> {{row.tbl_login.email}} </mat-cell>\r\n</ng-container>\r\n  \r\n   <!-- Progress Column -->\r\n   <ng-container matColumnDef=\"contactnumber\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> CONTACT NUMBER </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\"> {{row.contact_no}}</mat-cell>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"companystatus\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> COMPANY STATUS </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\"> {{row.tbl_login.cmp_status}}</mat-cell>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"status\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> STATUS </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">\r\n        <div *ngIf=\"row.tbl_login.block_status==false && row.tbl_login.delete_status==false\"> Active</div>\r\n        <div *ngIf=\"row.tbl_login.block_status==true && row.tbl_login.delete_status==false\"> Blocked</div>\r\n        <div *ngIf=\" row.tbl_login.delete_status==true\"> Deleted</div>\r\n      </mat-cell>\r\n    </ng-container>\r\n  <ng-container matColumnDef=\"action\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\">\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button *ngIf=\"row.tbl_login.delete_status==false\" (click)=\"getId(row.tbl_login.id)\" data-toggle=\"modal\" data-target=\"#deleteModal\" mat-menu-item >\r\n                <i class=\"material-icons\">delete</i>\r\n              <span>Delete</span>\r\n            </button>\r\n            <button *ngIf=\"row.tbl_login.delete_status==true\" mat-menu-item disabled>\r\n              <i class=\"material-icons\">delete_forever</i>\r\n            <span>Deleted</span>\r\n          </button>\r\n            <button *ngIf=\"row.tbl_login.block_status==false && row.tbl_login.delete_status==false\" (click)=\"blockCompany(row.tbl_login.id)\" mat-menu-item>\r\n                <i class=\"material-icons\">block</i>\r\n              <span>Block</span>\r\n            </button>\r\n            <button *ngIf=\"row.tbl_login.block_status==true && row.tbl_login.delete_status==false\" (click)=\"unblockCompany(row.tbl_login.id)\" mat-menu-item>\r\n                <i class=\"material-icons\">block</i>\r\n              <span>Unblock</span>\r\n            </button>\r\n          </mat-menu>\r\n       \r\n      </mat-cell>\r\n  </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n    </mat-row>\r\n  </mat-table>\r\n  <div class=\"col-md-15 \">\r\n      <!-- <div *ngIf=\"showSpinner\" class=\"deletespinner\">\r\n          <mat-spinner></mat-spinner>\r\n         </div> -->\r\n  </div>\r\n  <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n      <div class=\"col-md-4 col-md-offset-4\">\r\n          <mat-toolbar   class=\"back-color\">No item found!</mat-toolbar>\r\n      </div>\r\n    </div>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n</div>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n<!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n\r\n<div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n      <!-- Modal content-->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n          <h4 class=\"modal-title\">Delete </h4>\r\n        </div>\r\n        <!-- <div class=\"modal-header\"> -->\r\n        <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n        <!-- </div> -->\r\n        <div class=\"modal-body delete-popup\">\r\n          <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n          <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" (click)=\"deleteCompany(id)\" class=\"btn round-button\" data-dismiss=\"modal\">Delete</button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>"

/***/ }),

/***/ "../../../../../src/app/components/admin-all-companies/admin-all-companies.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminAllCompaniesComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AdminAllCompaniesComponent = (function () {
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin user management
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 06-03-2018
    // Last Modified : 
    // Desc          : All users
    function AdminAllCompaniesComponent(adminService, routes, snackBar) {
        this.adminService = adminService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'cmp_name', 'email', 'contactnumber', 'companystatus', 'status', 'action'];
        this.notExist = false;
        this.selected = 'all';
        this.all_value = false;
        this.showSpinner = false;
    }
    AdminAllCompaniesComponent.prototype.refresh = function () {
        var _this = this;
        this.showSpinner = true;
        //  console.log(this.selected);
        var company = [];
        if (this.selected == 'all') {
            this.adminService.getAllcompanies().subscribe(function (data) {
                // console.log(data);
                if (data.length != 0) {
                    _this.all_value = true;
                }
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Active') {
            this.adminService.getAllactivecompanies().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Block') {
            this.adminService.getAllblockedcompanies().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Delete') {
            this.adminService.getAlldeletedcompanies().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
    };
    AdminAllCompaniesComponent.prototype.loadToDataTable = function (data) {
        this.notExist = false;
        if (data.length == 0) {
            this.notExist = true;
        }
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
        // console.log(this.dataSource);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    AdminAllCompaniesComponent.prototype.ngOnInit = function () {
        this.refresh();
    };
    AdminAllCompaniesComponent.prototype.applyFilter = function (filterValue) {
        // console.log(filterValue)
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    AdminAllCompaniesComponent.prototype.getId = function (id) {
        // this.showSpinner =false
        // this.showSpinnerDelete =false
        this.id = id;
        //  console.log(this.id)
    };
    //delete company
    AdminAllCompaniesComponent.prototype.deleteCompany = function (id) {
        var _this = this;
        this.showSpinner = true;
        this.adminService.deleteCompany(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    //block company
    AdminAllCompaniesComponent.prototype.blockCompany = function (id) {
        var _this = this;
        // console.log(id);
        this.adminService.blockCompany(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    //unblock company
    AdminAllCompaniesComponent.prototype.unblockCompany = function (id) {
        var _this = this;
        this.adminService.unblockCompany(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], AdminAllCompaniesComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], AdminAllCompaniesComponent.prototype, "sort", void 0);
    AdminAllCompaniesComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'admin-all-companies',
            template: __webpack_require__("../../../../../src/app/components/admin-all-companies/admin-all-companies.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/admin-all-companies/admin-all-companies.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_admin_service__["a" /* AdminService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], AdminAllCompaniesComponent);
    return AdminAllCompaniesComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/admin-company/admin-company.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".side-bar-menu{background:#fff;}\r\n.side-bar-menu li{    border-bottom: 1px solid #e4e4e4;}\r\n.side-bar-menu li a{color:#111;text-align:left;padding: 20px 23px;}\r\n.side-bar-menu li a:hover{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:focus{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:active{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:active1{background-color: #fe6a07;color:#fff;}\r\n\r\nul.breadcrumb {\r\n    padding: 10px 0;\r\n    list-style: none;\r\n\r\n    text-align: left;\r\n    color: #d68956;\r\n}\r\nul.breadcrumb li {\r\n    display: inline;\r\n    font-size: 15px;\r\n}\r\nul.breadcrumb li+li:before {\r\n    padding: 8px;\r\n    color: black;\r\n    content: \"/\\A0\";\r\n}\r\nul.breadcrumb li a {\r\n    color: #bbbbbb;\r\n    text-decoration: none;\r\n}\r\nul.breadcrumb li a:hover {\r\n    color: #d68956;\r\n    text-decoration: none;\r\n\r\n}\r\n.breadcrumb{    background-color: #f6f7fa;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/admin-company/admin-company.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n    <div class=\"container-fluid display-table\">\r\n        <div class=\"row display-table-row\">\r\n      \r\n            <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n                 <!-- sidebar-->\r\n               \r\n                 <admin-sidebar></admin-sidebar> \r\n                 <!-- end sidebar-->\r\n            </div>\r\n            \r\n            <div class=\"col-md-12 col-xs-12\">\r\n                <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n                <!-- topbar-->\r\n                <admin-topbar></admin-topbar> \r\n                \r\n                    <!-- end topbar-->\r\n                \r\n                \r\n                <div class=\"user-dashboard\">\r\n                        <h2>COMPANY</h2>\r\n                        <ul class=\"breadcrumb\">\r\n                          <li><a href=\"#\">company</a></li>\r\n                          \r\n                          \r\n                          <li>{{viewComp}}</li>\r\n                        </ul>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-2 col-sm-2 col-xs-12 gutter\">\r\n\r\n                            <ul class=\"nav tabs side-bar-menu\">\r\n                                <li [ngClass]=\"{'active1': viewComp == 'AllCompanies'}\"><a (click)=\"updateView('AllCompanies')\" href=\"#tab1\" data-toggle=\"tab\">All Companies</a></li>\r\n                                <li [ngClass]=\"{'active1': viewComp == 'Subscribed'}\"><a (click)=\"updateView('Subscribed')\" href=\"#tab2\" data-toggle=\"tab\">Subscribed</a></li> \r\n                                <li [ngClass]=\"{'active1': viewComp == 'Trial'}\"><a (click)=\"updateView('Trial')\" href=\"#tab3\" data-toggle=\"tab\">Trail</a></li>\r\n                                <li [ngClass]=\"{'active1': viewComp == 'NotVerified'}\"><a (click)=\"updateView('NotVerified')\" href=\"#tab4\" data-toggle=\"tab\">Not Verified</a></li>  \r\n                                <li [ngClass]=\"{'active1': viewComp == 'Expired'}\"><a (click)=\"updateView('Expired')\" href=\"#tab5\" data-toggle=\"tab\">Expired</a></li>\r\n                                              \r\n                          </ul>\r\n                        </div>\r\n                        <div class=\"col-md-10 col-sm-10 col-xs-12 gutter\">\r\n\r\n                            <div *ngIf=\"viewComp == 'AllCompanies'\">\r\n                                <admin-all-companies></admin-all-companies>\r\n                              </div>\r\n                              <div *ngIf=\"viewComp == 'Subscribed'\">\r\n                                  <admin-subscribed></admin-subscribed>\r\n                                </div>\r\n                              <div *ngIf=\"viewComp == 'Trial'\">\r\n                                <admin-trial></admin-trial>\r\n                              </div>\r\n                              <div *ngIf=\"viewComp == 'NotVerified'\">\r\n                                <admin-not-verified></admin-not-verified>\r\n                              </div>\r\n                              <div *ngIf=\"viewComp == 'Expired'\">\r\n                                <admin-expired></admin-expired>\r\n                              </div>\r\n                            \r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n                <!-- footer-->\r\n                <admin-footer></admin-footer>\r\n       <!-- end footer-->\r\n        </div>\r\n         </div>\r\n        <!-- Modal -->\r\n     </body>"

/***/ }),

/***/ "../../../../../src/app/components/admin-company/admin-company.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminCompanyComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var AdminCompanyComponent = (function () {
    function AdminCompanyComponent(routes) {
        this.routes = routes;
        this.viewComp = 'AllCompanies';
    }
    AdminCompanyComponent.prototype.ngOnInit = function () {
        // console.log(this.viewComp);
        this.viewComp = 'AllCompanies';
    };
    AdminCompanyComponent.prototype.updateView = function (page) {
        this.viewComp = page;
        this.title = page + ' Users List';
    };
    AdminCompanyComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'admin-company',
            template: __webpack_require__("../../../../../src/app/components/admin-company/admin-company.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/admin-company/admin-company.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_router__["Router"]])
    ], AdminCompanyComponent);
    return AdminCompanyComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/admin-dashboard-bar/admin-dashboard-bar.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\r\n.domain,\r\n.tick,\r\n.tick line {\r\n  stroke: #62D2E7;\r\n}\r\n.no-dt-pd{\r\n  text-align: center;\r\n    padding: 217px;\r\n}\r\n#containerId{\r\n  padding: 0px 0;\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/admin-dashboard-bar/admin-dashboard-bar.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n<!-- <h1>{{title}}</h1> -->\r\n<!-- <h2>{{subtitle}}</h2> -->\r\n<div  class=\"col-md-12 no-g-data\" >\r\n    <!-- <svg  width=\"960\" height=\"500\"></svg> -->\r\n    <h4>Company vs Projects</h4>\r\n    <div [hidden]=\"!exist\">\r\n        <div id=\"containerId\" ></div>\r\n    </div>\r\n    <h4 [hidden]=\"exist\" class=\"no-dt-pd\">No Data Available!</h4>\r\n    <ng-template #emptyx>\r\n            <!-- <img src=\"assets/images/sad.png\" alt=\"sad\"> -->\r\n            \r\n    </ng-template>\r\n</div>\r\n"

/***/ }),

/***/ "../../../../../src/app/components/admin-dashboard-bar/admin-dashboard-bar.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminDashboardBarComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var $;
var AdminDashboardBarComponent = (function () {
    // years = [];
    // offensesByYear = [];
    // offenseNames = [
    //   "count",
    // ];
    function AdminDashboardBarComponent(superAdminService) {
        this.superAdminService = superAdminService;
        // public barchart: count[] =[ ] ;
        this.graphData = true;
        this.title = '';
        this.margin = { top: 20, right: 20, bottom: 30, left: 40 };
        this.exist = false;
    }
    AdminDashboardBarComponent.prototype.ngOnInit = function () {
        this.refresh();
        this.bargraph();
    };
    AdminDashboardBarComponent.prototype.getGraphData = function () {
        // this.superAdminService.getBarDataforAdminDashboard().subscribe(data=>{
        //   console.log(data)
        //   if(data.length>0){
        //     data.forEach(element => {
        //       this.years.push(element.cmp_name)
        //       this.offensesByYear.push({"count":element.tbl_projects.length})
        //     });
        // this.bargraph()
        //   }
        // })
    };
    AdminDashboardBarComponent.prototype.bargraph = function () {
        var _this = this;
        // const years = ["On Hold", "Completed","In Progress","New-Yet to Star"];
        // const offensesByYear = [
        //   {
        //     "count": 6,
        //    },
        //   { "count":  5,
        //   },
        //   {
        //     "count": 8,
        //    },
        //   { "count": 12,
        //   },
        // ];
        var offenseNames = [
            "count",
        ];
        var years = [];
        var offensesByYear = [];
        this.superAdminService.getBarDataforAdminDashboard().subscribe(function (data) {
            if (data.length > 0) {
                // console.log("data")
                _this.exist = true;
                data.forEach(function (element) {
                    if (element.tbl_projects.length > 0) {
                        years.push(element.cmp_name);
                        offensesByYear.push({ "count": element.tbl_projects.length });
                    }
                });
                var generateClassStr_1 = function (str) {
                    return str.replace(/\s+/g, '-').toLowerCase();
                };
                // console.log(offensesByYear)
                // console.log(years)
                var n = offenseNames.length, // number of layers
                m = offensesByYear.length, // number of samples per layer
                stack = d3.stack().keys(offenseNames);
                var layers = stack(offensesByYear); // calculate the stack layout
                layers.forEach(function (d, i) {
                    // add keys to every datapoint
                    d.forEach(function (dd, j) {
                        dd.year = years[j];
                        dd.offenseName = offenseNames[i];
                        dd.class = generateClassStr_1(dd.offenseName);
                        dd.value = dd.data[dd.offenseName];
                    });
                });
                var yStackMax = d3.max(layers, function (layer) {
                    return d3.max(layer, function (d) {
                        return d[1];
                    });
                });
                var margin = { top: 50, right: 15, bottom: 80, left: 50 }, fullChartWidth = 560, fullChartHeight = 400, width = fullChartWidth - margin.left - margin.right, height = fullChartHeight - margin.top - margin.bottom;
                d3.select("#containerId")
                    .style("width", fullChartWidth)
                    .style("height", fullChartHeight);
                var x_1 = d3
                    .scaleBand()
                    .domain(years)
                    .rangeRound([0, width])
                    .padding(0.08);
                var y_1 = d3
                    .scaleLinear()
                    .domain([0, yStackMax])
                    .range([height, 0]);
                var z = d3
                    .scaleBand()
                    .domain(offenseNames)
                    .rangeRound([0, x_1.bandwidth()]);
                var color = ["#beaed4", "#7fc97f", "#fdc086"];
                var svg = d3
                    .select("#containerId")
                    .append("svg")
                    .attr("width", width + margin.left + margin.right + 20)
                    .attr("height", height + margin.top + margin.bottom)
                    .append("g")
                    .attr("transform", "translate(" + (margin.left + 20) + "," + margin.top + ")");
                var mycount = 1;
                var layer = svg
                    .selectAll(".layer")
                    .data(layers)
                    .enter()
                    .append("g")
                    .attr("class", "layer")
                    .style("fill", function (d, i) {
                    // mycount++;
                    //  alert(mycount);
                    // alert(i);
                    // if(mycount == 0){
                    //   mycount++;
                    //   return '#7fc97f';
                    // }else{
                    //   mycount++;
                    //   return  '#279428';
                    // }
                    //   alert(d);
                    //  // alert(i);
                    return '#7fc97f';
                });
                var rect = layer
                    .selectAll(".bar")
                    .data(function (d) {
                    return d;
                })
                    .enter()
                    .append("rect")
                    .attr("x", function (d) {
                    return x_1(d.year);
                })
                    .attr("y", height)
                    .attr("width", x_1.bandwidth())
                    .attr("height", 0)
                    .on("mouseover", function (d) {
                    d3.select(_this);
                    // .filter(dd => dd.class != d.class)
                    //  .style("opacity", 0.6)
                });
                rect
                    .transition()
                    .delay(function (d, i) {
                    return i * 10;
                })
                    .attr("y", function (d) {
                    return y_1(d[1]);
                })
                    .attr("height", function (d) {
                    return y_1(d[0]) - y_1(d[1]);
                });
                svg
                    .append("g")
                    .attr("class", "x axis")
                    .attr("transform", "translate(0," + height + ")")
                    .call(d3.axisBottom(x_1));
                svg.selectAll('.tick text').attr("transform", "translate(10) rotate(42 -17 31)");
                svg.append("g")
                    .call(d3.axisLeft(y_1));
                // text label for the y axis    
                svg.append("text")
                    .attr("transform", "rotate(-90)")
                    .attr("y", 0 - margin.left - 30)
                    .attr("x", 0 - (height / 2))
                    .attr("dy", "3em")
                    .style("text-anchor", "middle")
                    .text("No of Projects");
            }
            else {
                // console.log("hhh")
                // this.empty = true;
            }
        });
        // console.log(this.years)
        // console.log(this.offensesByYear)
        // const years = ["On Hold", "Completed","In Progress","New-Yet to Star"];
        // const offensesByYear = [
        //   {
        //     "count": 5,
        //    },
        //   { "count":  10,
        //   },
        //   {
        //     "count": 8,
        //    },
        //   { "count": 6,
        //   },
        // ];
        // console.log(years)
        // console.log(offensesByYear)
    };
    AdminDashboardBarComponent.prototype.refresh = function () {
        //     this.superAdminService.getBarDataforAdminDashboard().subscribe(data=>{
        //      console.log(data.length)
        //      if(data.length <= 0){
        //      }
        //      // console.log(this.graphData)
        //    this.barchart= [];
        //    data.forEach(elm =>{
        //     //  console.log(elm);
        //      if (elm.tbl_projects.length != 0){
        //       this.graphData = true;
        //        this.barchart.push({label: elm.cmp_name, value:(elm.tbl_projects.length)});
        //        // this.initSvg();
        //        // this.initAxis();
        //        // this.drawAxis();
        //        // this.drawBars();
        //      }
        //    });
        //    this.barchart.push({label: "elm.cmp_name", value:5});
        //    this.barchart.push({label: "elm.cmp_name", value:5});
        //    this.barchart.push({label: "elm.cmp_name", value:5});
        //    this.barchart.push({label: "elm.cmp_name", value:5});
        //    this.barchart.push({label: "elm.cmp_name", value:5});
        //    this.barchart.push({label: "elm.cmp_name", value:5});
        //    this.barchart.push({label: "elm.cmp_name", value:5});
        //    this.barchart.push({label: "elm.cmp_name", value:5});
        //    this.barchart.push({label: "elm.cmp_name", value:5});
        //    this.barchart.push({label: "elm.cmp_name", value:5});
        //    this.barchart.push({label: "elm.cmp_name", value:5});
        //    this.barchart.push({label: "elm.cmp_name", value:5});
        //    this.barchart.push({label: "elm.cmp_name", value:5});
        //    this.barchart.push({label: "elm.cmp_name", value:5});
        //    this.barchart.push({label: "elm.cmp_name", value:5});
        //    this.drawBar();
        //   //  console.log(data);
        //   });
        //   }
        //   /*_____________________________________BAR CHART____________________________________*/
        // drawBar(){
        //   var bardata = [];
        // for (var i = 0; i < 100; i++) {
        //   bardata.push(Math.round(Math.random()*30) +1)
        // };
        // var height = 500,
        // 		width = 800		
        // var yScale = d3.scaleLinear()
        //     .domain([0, d3.max(bardata)])
        //     .range([0, height]);
        // var xScale = d3.scaleBand()
        //     .domain(d3.range(0, bardata.length))
        //     .range([0, width]);
        // var colors = d3.scaleLinear()
        //     .domain([0, d3.max(bardata)])
        //     .range(['#ffeb3b', '#d20f53']);
        // var tooltip = d3.select('body').append('div')
        // 		.style('position', 'absolute')
        // 		.style('background', '#fff')
        // 		.style('padding', '5px')
        // 		.style('border', '1px #000 solid')
        // 		.style('border-radius', '5px')
        // 		.style('opacity', '0');
        // var myChart = d3.select('#chart').append('svg')
        // 					.attr('width', width)
        // 					.attr('height', height)
        // 					.style('background', '#fdf6e3')
        // 					.selectAll('rect').data(bardata)
        // 					.enter().append('rect')
        // 						.style('fill', colors)
        // 						.attr('width', xScale.bandwidth())
        // 						.attr('height', 0)
        // 						.attr('x', function(d,i) {
        // 							return (i * xScale.bandwidth()) + 1;
        // 						})
        // 						.attr('y', height)
        // 				.on('mouseover', function(d) {
        //           d3.select(this).style('opacity', '0.3')	
        // 					tooltip.style('opacity', '1').html(d)
        // 						.style('left', (d3.event.pageX)+'px')
        // 						.style('top', (d3.event.pageY)+'px')	
        // 				})
        // 				.on('mouseout', function(d) {
        //           d3.select(this).style('opacity', '1')
        // 					tooltip.style('opacity', '0')
        // 				});
        // 	myChart.transition()
        // 		.attr('height', function(d){
        // 			return yScale(d);
        // 		})
        // 		.attr('y', function(d){
        // 			return height - yScale(d);
        // 		})
        // 		.duration(800)
        // 		.delay(function(d,i) {
        // 			return i * 20;
        // 		});
    };
    AdminDashboardBarComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-admin-dashboard-bar',
            template: __webpack_require__("../../../../../src/app/components/admin-dashboard-bar/admin-dashboard-bar.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/admin-dashboard-bar/admin-dashboard-bar.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_admin_service__["a" /* AdminService */]])
    ], AdminDashboardBarComponent);
    return AdminDashboardBarComponent;
}());

// export interface count {
//   company: string,
//   count: number
// } 


/***/ }),

/***/ "../../../../../src/app/components/admin-dashboard-pie/admin-dashboard-pie.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "html, body {\r\n    height: 100%;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n  }\r\n  \r\n  .pie-gr {\r\n    /* background: -webkit-gradient(linear, left top, left bottom, from(#606c88), to(#3f4c6b));\r\n    background: linear-gradient(to bottom, #606c88 0%, #3f4c6b 100%); */\r\n    background-color: #fff;\r\n    font-family: 'Source Sans Pro', sans-serif;\r\n    padding: 80px;\r\n  }\r\n  \r\n  .pie {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    -webkit-filter: drop-shadow(0 2px 0px #333);\r\n            filter: drop-shadow(0 2px 0px #333);\r\n  }\r\n  \r\n  .data-path:hover {\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .data-text {\r\n    transition: transform .2s ease-in-out;\r\n    fill: #fff;\r\n  }\r\n  .data-text__value {\r\n    font-size: 7rem;\r\n    transform: translateY(-0.5rem);\r\n    opacity: 0;\r\n  }\r\n  .data-text__name {\r\n    font-size: 2rem;\r\n    transform: translateY(0.5rem);\r\n    opacity: 0;\r\n  }\r\n  .data-text--show {\r\n    transform: translateY(0);\r\n    animation: fadeGraphTextIn 0.5s forwards;\r\n  }\r\n  .data-text:hover {\r\n    -webkit-user-select: none;\r\n       -moz-user-select: none;\r\n        -ms-user-select: none;\r\n            user-select: none;\r\n  }\r\n  \r\n  .legend-text {\r\n    fill: #fff;\r\n  }\r\n  \r\n  @keyframes fadeGraphTextIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  @media only screen and (max-width : 1920px) {\r\n    \r\n    \r\n    \r\n    }\r\n    \r\n    @media only screen and (max-width : 1600px) {\r\n    \r\n    }\r\n    \r\n    \r\n    @media only screen and (max-width : 1366px) {\r\n        .pie-gr{padding: 21px 0px;}\r\n    \r\n    }\r\n    \r\n    @media only screen and (max-width : 1280px) {\r\n        .count-sub-txt{\r\n            font-size: 13px;\r\n        }\r\n        .pie-gr{padding: 21px 0px !important;    margin-left: -30px;}\r\n        \r\n    \r\n    }\r\n    \r\n    @media only screen and (max-width : 1024px) {\r\n    \r\n    }\r\n    @media only screen and (max-width : 768px) {}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/admin-dashboard-pie/admin-dashboard-pie.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"pie-gr\"></div>"

/***/ }),

/***/ "../../../../../src/app/components/admin-dashboard-pie/admin-dashboard-pie.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminDashboardPieComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var $;
var AdminDashboardPieComponent = (function () {
    function AdminDashboardPieComponent(superAdminService) {
        this.superAdminService = superAdminService;
    }
    AdminDashboardPieComponent.prototype.ngOnInit = function () {
        this.loadDetails();
    };
    AdminDashboardPieComponent.prototype.loadDetails = function () {
        var _this = this;
        this.superAdminService.getPieDataforAdminDashboard().subscribe(function (resData) {
            console.log(resData);
            _this.pieData = resData;
            _this.drawPie();
        });
    };
    AdminDashboardPieComponent.prototype.drawPie = function () {
        // const pieData = [
        //   {name: 'Running', value: 40, color: '#18FFFF'},
        //   {name: 'Paused', value: 40, color: '#0288D1'},
        //   {name: 'Stopped', value: 7, color: '#BF360C'},
        //   {name: 'Failed', value: 13, color: '#F4511E'},
        //   {name: 'Unknown', value: 19, color: '#F9A825'},
        // ];
        bakeDonut(this.pieData);
        function bakeDonut(d) {
            var activeSegment;
            var data = d.sort(function (a, b) { return b['value'] - a['value']; }), viewWidth = 500, viewHeight = 300, svgWidth = viewHeight, svgHeight = viewHeight, thickness = 40, colorArray = data.map(function (k) { return k.color; }), el = d3.select('.pie-gr'), radius = Math.min(svgWidth, svgHeight) / 2, color = d3.scaleOrdinal()
                .range(colorArray);
            var max = d3.max(data, function (maxData) { return maxData.value; });
            var svg = el.append('svg')
                .attr('viewBox', "0 0 " + (viewWidth + thickness) + " " + (viewHeight + thickness))
                .attr('class', 'pie')
                .attr('width', viewWidth)
                .attr('height', svgHeight);
            var g = svg.append('g')
                .attr('transform', "translate( " + ((svgWidth / 2) + (thickness / 2)) + ", " + ((svgHeight / 2) + (thickness / 2)) + ")");
            var arc = d3.arc()
                .innerRadius(radius - thickness)
                .outerRadius(radius);
            var arcHover = d3.arc()
                .innerRadius(radius - (thickness + 5))
                .outerRadius(radius + 8);
            var pie = d3.pie()
                .value(function (pieData) { return pieData.value; })
                .sort(null);
            var maxAssigned = false;
            var maxArcAssigned = false;
            var path = g.selectAll('path')
                .attr('class', 'data-path')
                .data(pie(data))
                .enter()
                .append('g')
                .attr('class', 'data-group')
                .each(function (pathData, i) {
                var group = d3.select(this);
                group.append('text')
                    .text("" + pathData.data.value)
                    .attr('class', 'data-text data-text__value')
                    .attr('text-anchor', 'middle')
                    .attr('dy', '0em');
                group.append('text')
                    .text("" + pathData.data.name)
                    .attr('class', 'data-text data-text__name')
                    .attr('text-anchor', 'middle')
                    .attr('dy', '1.5em');
                // Set default active segment
                if (pathData.value === max && !maxAssigned) {
                    var textVal = d3.select(this).select('.data-text__value')
                        .classed('data-text--show', true);
                    var textName = d3.select(this).select('.data-text__name')
                        .classed('data-text--show', true);
                    maxAssigned = true;
                }
            })
                .append('path')
                .attr('d', arc)
                .attr('fill', function (fillData, i) { return color(fillData.data.name); })
                .attr('class', 'data-path')
                .on('mouseover', function () {
                var _thisPath = this, parentNode = _thisPath.parentNode;
                if (_thisPath !== activeSegment) {
                    activeSegment = _thisPath;
                    var dataTexts = d3.selectAll('.data-text')
                        .classed('data-text--show', false);
                    var paths = d3.selectAll('.data-path')
                        .transition()
                        .duration(250)
                        .attr('d', arc);
                    d3.select(_thisPath)
                        .transition()
                        .duration(250)
                        .attr('d', arcHover);
                    var thisDataValue = d3.select(parentNode).select('.data-text__value')
                        .classed('data-text--show', true);
                    var thisDataText = d3.select(parentNode).select('.data-text__name')
                        .classed('data-text--show', true);
                }
            })
                .each(function (v, i) {
                if (v.value === max && !maxArcAssigned) {
                    var maxArc = d3.select(this)
                        .attr('d', arcHover);
                    activeSegment = this;
                    maxArcAssigned = true;
                }
                this._current = i;
            });
            var legendRectSize = 15;
            var legendSpacing = 10;
            var legend = svg.selectAll('.legend')
                .data(color.domain())
                .enter()
                .append('g')
                .attr('class', 'legend')
                .attr('transform', function (legendData, i) {
                var itemHeight = legendRectSize + legendSpacing;
                var offset = legendRectSize * color.domain().length;
                var horz = svgWidth + 80;
                var vert = (i * itemHeight) + legendRectSize + (svgHeight - offset) / 2;
                return "translate(" + horz + ", " + vert + ")";
            });
            legend.append('circle')
                .attr('r', legendRectSize / 2)
                .style('fill', color);
            legend.append('text')
                .attr('x', legendRectSize + legendSpacing)
                .attr('y', legendRectSize - legendSpacing)
                .attr('class', 'legend-text')
                .text(function (legendData) { return legendData; });
        }
    };
    AdminDashboardPieComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-admin-dashboard-pie',
            template: __webpack_require__("../../../../../src/app/components/admin-dashboard-pie/admin-dashboard-pie.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/admin-dashboard-pie/admin-dashboard-pie.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_admin_service__["a" /* AdminService */]])
    ], AdminDashboardPieComponent);
    return AdminDashboardPieComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/admin-dashboard/admin-dashboard.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".count-txt{\r\n    font-weight: 700;\r\n}\r\n.count-sub-txt{\r\n    font-size: 14px;\r\n}\r\n.gr-cont{\r\n    padding-top: 30px;\r\n}\r\n.bg-white{\r\n    background-color: #fff;\r\n    padding: 29px;\r\n}\r\n\r\n@media only screen and (max-width : 1920px) {\r\n    \r\n    \r\n    \r\n    }\r\n    \r\n    @media only screen and (max-width : 1600px) {\r\n    \r\n    }\r\n    \r\n    \r\n    @media only screen and (max-width : 1366px) {\r\n        .pie-gr{padding: 21px 0px;}\r\n        .bg-white{min-height: 497px;}\r\n    }\r\n    \r\n    @media only screen and (max-width : 1280px) {\r\n        .count-sub-txt{\r\n            font-size: 13px;\r\n        }\r\n        .pie-gr{padding: 21px 0px !important;}\r\n        .bg-white{min-height: 497px;}\r\n    \r\n    }\r\n    \r\n    @media only screen and (max-width : 1024px) {\r\n    \r\n    }\r\n    @media only screen and (max-width : 768px) {}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/admin-dashboard/admin-dashboard.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\" *ngIf=\"counts\">\r\n    <div class=\"container-fluid display-table\">\r\n        <div class=\"row display-table-row\">\r\n\r\n            <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n                <!-- sidebar-->\r\n\r\n                <admin-sidebar></admin-sidebar>\r\n                <!-- end sidebar-->\r\n            </div>\r\n\r\n            <div class=\"col-md-12 col-xs-12\">\r\n                <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n                <!-- topbar-->\r\n                <admin-topbar></admin-topbar>\r\n\r\n                <!-- end topbar-->\r\n                <div class=\"user-dashboard\">\r\n                    <!-- <h1>Hello, JS</h1> -->\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-10 col-sm-5 col-xs-12 gutter ad-tp\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"cnts\">\r\n                                        <div class=\"col-md-4 text-center lh\">\r\n                                            <i class=\"fa fa-users\" aria-hidden=\"true\"></i>\r\n                                        </div>\r\n                                        <div class=\"col-md-8\">\r\n                                            <h2 class=\"count-txt\">{{counts.users}}</h2>\r\n                                            <h4 class=\"count-sub-txt\">Total no. of Users</h4>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"cnts\">\r\n                                        <div class=\"col-md-4 text-center lh\">\r\n                                            <i class=\"la la-industry\" aria-hidden=\"true\"></i>\r\n                                        </div>\r\n                                        <div class=\"col-md-8\">\r\n                                            <h2 class=\"count-txt\">{{counts.companies}}</h2>\r\n                                            <h4 class=\"count-sub-txt\">Total no. of Companies</h4>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"cnts\">\r\n                                        <div class=\"col-md-4 text-center lh\">\r\n                                            <i class=\"la la-code-fork\" aria-hidden=\"true\"></i>\r\n                                        </div>\r\n                                        <div class=\"col-md-8\">\r\n                                            <h2 class=\"count-txt\">{{counts.projects}}</h2>\r\n                                            <h4 class=\"count-sub-txt\">Total no. of Projects</h4>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div class=\"col-md-12 gr-cont\">\r\n                            <div class=\"col-md-5 bg-white\">\r\n                                <h4>Company vs Status</h4>                                \r\n                                <app-admin-dashboard-pie></app-admin-dashboard-pie>\r\n                            </div>\r\n                            <div class=\"col-md-7\">\r\n                                    <app-admin-dashboard-bar></app-admin-dashboard-bar>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                </div>\r\n               \r\n\r\n            </div>\r\n            <!-- footer-->\r\n            <admin-footer></admin-footer>\r\n            <!-- end footer-->\r\n        </div>\r\n    </div>\r\n    <!-- Modal -->\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/admin-dashboard/admin-dashboard.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminDashboardComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var AdminDashboardComponent = (function () {
    function AdminDashboardComponent(adminService) {
        this.adminService = adminService;
    }
    AdminDashboardComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.adminService.getCountsforAdminDashboard().subscribe(function (resCounts) {
            // console.log(resCounts)
            _this.counts = resCounts;
        });
    };
    AdminDashboardComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'admin-dashboard',
            template: __webpack_require__("../../../../../src/app/components/admin-dashboard/admin-dashboard.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/admin-dashboard/admin-dashboard.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_admin_service__["a" /* AdminService */]])
    ], AdminDashboardComponent);
    return AdminDashboardComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/admin-estimation-report/admin-estimation-report.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n \r\n  .mat-form-field {\r\n    /* font-size: 14px; */\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .modal{top:0;}\r\n  .example-container > * {\r\n    width: 100%;\r\n  }\r\n  .add-project{\r\n    float: right;\r\n    margin-right: 50px;\r\n    margin-top: 50px;\r\n    border: none;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n    padding: 0;\r\n    font-size: 28px;\r\n    line-height: 42px;\r\n    box-shadow: 4px 7px 31px #ffbb8e;\r\n  }\r\n  .modal-header {\r\n    padding: 10px 30px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #fe6a07;\r\n}\r\n.modal-content{\r\n  box-shadow:none;\r\n  border-radius: 9px;\r\n  overflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\n  display: block;\r\n  position: relative;\r\n  -ms-flex: auto;\r\n      flex: auto;\r\n  min-width: 0;\r\n  width: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\n  padding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\n  font-family: Roboto, Arial, sans-serif;\r\n  margin: 0;\r\n}\r\n\r\n.basic-container {\r\n  padding: 5px;\r\n}\r\n\r\n.version-info {\r\n  font-size: 8pt;\r\n  float: right;\r\n}\r\n.round-button{\r\n  float:none !important;\r\n}\r\n.center-bt {\r\n    margin: 20px auto 10px auto;\r\n    float: none;\r\n}\r\n\r\n.back-color{\r\n  color: #757575;\r\n  background-color:#f6f7fa !important;\r\n}\r\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/admin-estimation-report/admin-estimation-report.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n      <div class=\"col-md-1 col-xs-2 display-table-cell v-align box\" id=\"navigation\">\r\n        <company-sidebar></company-sidebar>\r\n      </div>\r\n       <company-topbar></company-topbar> \r\n      <br>\r\n      <div class=\"col-md-12 col-xs-9\">\r\n          <div class=\"col-md-12\">\r\n              <h2 _ngcontent-c16=\"\">Project Estimation Report</h2>\r\n              <ul _ngcontent-c16=\"\" class=\"breadcrumb\">\r\n                <li _ngcontent-c16=\"\">\r\n                  <a _ngcontent-c16=\"\">Report</a>\r\n                </li>\r\n    \r\n    \r\n                <li _ngcontent-c16=\"\">Project Estimation Report</li>\r\n              </ul>\r\n            </div>\r\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n        <div class=\"pull-right\" >\r\n        <button id=\"create\" class=\"btn round-button\" (click)=\"exportPdf()\">Export Pdf</button>\r\n        <input type=\"button\" class=\"btn round-button\"  (click)=\"tableToExcel('testTable', 'taskit')\" value=\"Export to Excel\">\r\n        <button id=\"create\" class=\"btn round-button\"  (click)=\"PrintDiv()\">Print</button> \r\n      </div>\r\n        <div class=\"row\">\r\n            \r\n          <div class=\"col-md-12\">\r\n              <!-- <div class=\"col-md-12\" *ngIf=\"showxData\"> -->\r\n             <div class=\"col-md-12\">  \r\n              <div class=\"bottom-space\">\r\n                  <div class=\"col-md-3\">\r\n                      \r\n                                 <input type=\"text\" class=\"form-control form-control2\" name=\"daterangeInput\" daterangepicker [options]=\"options\" (selected)=\"selectedStartDate($event, daterange)\" />\r\n                       </div>\r\n                  <div class=\"col-md-3\" >\r\n                      <mat-form-field>\r\n                          <input matInput (keyup)=\"applyFilter()\" [(ngModel)]=\"filters.filterText\" placeholder=\"Filter\">\r\n                        </mat-form-field>\r\n                </div>\r\n               \r\n                  <div class=\"col-md-3\" >\r\n                      <mat-form-field>\r\n                          <mat-select placeholder=\"Projects\" [(ngModel)]=\"filters.selProj\" (change)=\"getEstimation()\" >\r\n                              <mat-option [value]=\"'All'\" > All</mat-option>\r\n                              <mat-option [value]=\"item.id\" *ngFor=\"let item of projects\">\r\n                                  {{item.project_name}}\r\n                              </mat-option>\r\n                           \r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                        \r\n                  </div>\r\n\r\n                 \r\n                  <div class=\"col-md-3\" >\r\n                      <mat-form-field>\r\n                          <mat-select placeholder=\"Category\" [(ngModel)]=\"filters.selCat\" (change)=\"getEstimation()\">\r\n                              <mat-option [value]=\"'All'\" >All</mat-option>\r\n                              <mat-option [value]=\"item.id\" *ngFor=\"let item of category\">\r\n                                  {{item.category_name}}\r\n                              </mat-option>\r\n                           \r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                <div class=\"col-md-12\"> \r\n\r\n            <div class=\"example-container mat-elevation-z8\">\r\n\r\n                <!-- <div class=\"col-md-4\" >\r\n                    <mat-form-field>\r\n                        <mat-select placeholder=\"Projects\" (change)=\"getSelectedProjects()\" [(value)]=\"ProjectSelected\">\r\n                            <mat-option [value]=\"All\" >\r\n                                All\r\n                            </mat-option>\r\n                            <mat-option [value]=\"item.tbl_project.id\" *ngFor=\"let item of projects\">\r\n                                {{item.tbl_project.project_name}}\r\n                            </mat-option>\r\n                         \r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                      \r\n                </div>\r\n\r\n                <div class=\"col-md-4\" >\r\n                    <mat-form-field>\r\n                        <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                      </mat-form-field>\r\n              </div>\r\n                <div class=\"col-md-4\" >\r\n                    <mat-form-field>\r\n                        <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                      </mat-form-field>\r\n              </div> -->\r\n              \r\n              <!-- <div class=\"example-header\">\r\n                <mat-form-field>\r\n                  <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                </mat-form-field>\r\n              </div> -->\r\n              <mat-table [dataSource]=\"dataSource\" matSort>\r\n                <ng-container matColumnDef=\"slno\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header> SL NO. </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}} </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"project_name\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header> Project Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.tbl_project.project_name}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"project_code\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header> Project Code</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.tbl_project.project_code}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header> Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row?.createdAt |  date: 'yyyy-MM-dd HH:mm a'}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"ttl_hr\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header> Total Hours</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.estimation_hour}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"team_head\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header> Team Head</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.tbl_project_estimation_team.tbl_user_profile.f_name}} {{row.tbl_project_estimation_team.tbl_user_profile.l_name}}</mat-cell>\r\n                </ng-container>\r\n           <!--      <ng-container matColumnDef=\"team_memb\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header> Team Members</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">\r\n                    \r\n                     <div *ngFor=\"let member of row.tbl_project_estimation_team.tbl_project_estimation_team_members\"> {{member.tbl_user_profile.f_name}} {{member.tbl_user_profile.l_name}}</div>\r\n                    </mat-cell>\r\n                </ng-container> -->\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                </mat-row>\r\n              </mat-table>\r\n              <div *ngIf=\"showSpinner\" class=\"spinner\">\r\n                <app-spinner></app-spinner>\r\n              </div>\r\n              <!-- <div class=\"col-md-15 \"> -->\r\n              <!-- <div *ngIf=\"showSpinnerDelete\" class=\"deletespinner\">\r\n                          <mat-spinner></mat-spinner>\r\n                       </div> -->\r\n\r\n              <!-- </div> -->\r\n\r\n              <div class=\"col-md-12 noItemFound\" *ngIf=\"projectsFlt.length == 0\">\r\n                <div class=\"col-md-4 col-md-offset-4\">\r\n                  <mat-toolbar class=\"back-color\">No item found!</mat-toolbar>\r\n                </div>\r\n              </div>\r\n              <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n   \r\n\r\n      <div *ngIf=\"reachMaxPlan\" id=\"addModal\" class=\"modal fade\">\r\n        <div class=\"modal-dialog\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n              <h4 class=\"modal-title\">Error..! </h4>\r\n            </div>\r\n            <div class=\"modal-body delete-popup\">\r\n              <i class=\"fa fa-exclamation\"></i>\r\n              <h4 class=\"textalign\">Cant Add, Maximum number of plan reached</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n     \r\n\r\n      <div id=\"dvContents\" style=\"display: none;\" >\r\n        <table class=\"table\" id=\"testTable\">\r\n          <tr style=\"background-color: #CCC\">\r\n            <th>Sl No.</th>\r\n            <th>Project Name</th>\r\n            <th>Code</th>\r\n            <th>Date</th>\r\n            <th>Total Hours</th>\r\n            <th>Team Head</th>\r\n            <th>Team Members</th>\r\n          </tr>\r\n          <tr *ngFor=\"let project of projectsFlt; let i=index\">\r\n            <td>{{i}}</td>\r\n            <td>{{project.tbl_project.project_name}}</td>\r\n            <td>{{project.tbl_project.project_code}}</td>\r\n            <td>{{project?.createdAt |  date: 'yyyy-MM-dd HH:mm a'}}</td>\r\n            <td>{{project.estimation_hour}}</td>\r\n            <td>{{project.tbl_project_estimation_team.tbl_user_profile.f_name}} {{project.tbl_project_estimation_team.tbl_user_profile.l_name}}</td>\r\n            <td>\r\n              <div *ngFor=\"let member of project.tbl_project_estimation_team_members\"> {{member.tbl_user_profile.f_name}} {{member.tbl_user_profile.l_name}}</div>\r\n            </td>\r\n          </tr>\r\n          <tr *ngIf=\"projects.length == 0\">\r\n              <td colspan=\"7\" style=\"text-align:center\">No item found!</td>\r\n             \r\n            </tr>\r\n          \r\n        </table>\r\n      </div>\r\n\r\n </div>\r\n  </div>\r\n  <!-- <footer></footer>  -->\r\n\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/admin-estimation-report/admin-estimation-report.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminEstimationReportComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var AdminEstimationReportComponent = (function () {
    function AdminEstimationReportComponent(adminService, companyService, routes, snackBar) {
        this.adminService = adminService;
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'project_name', 'project_code', 'date', 'ttl_hr', 'team_head'];
        this.projectsFlt = [];
        this.projects = [];
        this.category = [];
        this.showSpinner = false;
        this.filters = {
            sDate: new Date,
            eDate: new Date,
            filterText: '',
            selProj: 'All',
            selCat: 'All',
            filetype: ''
        };
        this.options = {
            locale: { format: 'DD-MM-YYYY' },
            alwaysShowCalendars: false,
        };
    }
    AdminEstimationReportComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.getEstimation();
        this.companyService.getAllprojectcategory().subscribe(function (data) {
            _this.category = data;
            // console.log(data);
        });
        this.projects = [];
        this.companyService.getAllProject().subscribe(function (data) {
            _this.projects = data;
        });
    };
    AdminEstimationReportComponent.prototype.getEstimation = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getEstimatedProject
        // Params        : 
        // Returns       : 
        // Author        : Yasir Poongadan
        // Date          : 07-04-2018
        // Last Modified : 07-04-2018, Yasir Poongadan
        // Desc          : get Estimated Project 
        this.adminService.getEstimatedProject(this.filters).subscribe(function (data) {
            // data.project_name = data.tbl_project.project_name;
            _this.projectsFlt = data;
            _this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
            // this.dataSource.filterPredicate = (data, filter: string)  => {
            //   const accumulator = (currentTerm, key) => {
            //     return key === 'orderInfo' ? currentTerm + data.orderInfo.type : currentTerm + data[key];
            //   };
            //   const dataStr = Object.keys(data).reduce(accumulator, '').toLowerCase();
            //   // Transform the filter by converting it to lowercase and removing whitespace.
            //   const transformedFilter = filter.trim().toLowerCase();
            //   return dataStr.indexOf(transformedFilter) !== -1;
            // };
            _this.dataSource.paginator = _this.paginator;
            _this.dataSource.sort = _this.sort;
        });
        // ---------------------------------End-------------------------------------------
    };
    AdminEstimationReportComponent.prototype.applyFilter = function () {
        var filterValue = this.filters.filterText;
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    AdminEstimationReportComponent.prototype.selectedStartDate = function (value, datepicker) {
        this.filters.sDate = value.start;
        this.filters.eDate = value.end;
        this.getEstimation();
    };
    AdminEstimationReportComponent.prototype.PrintDiv = function () {
        var mywindow = window.open('', 'PRINT', 'height=400,width=600');
        mywindow.document.write('<html><head><title>' + document.title + '</title>');
        mywindow.document.write('</head><body >');
        mywindow.document.write('<h1>' + document.title + '</h1>');
        mywindow.document.write(document.getElementById('dvContents').innerHTML);
        mywindow.document.write('</body></html>');
        mywindow.document.close(); // necessary for IE >= 10
        mywindow.focus(); // necessary for IE >= 10*/
        mywindow.print();
        mywindow.close();
        return true;
        // var contents = document.getElementById("dvContents").innerHTML;       
        // var printContents = document.getElementById("dvContents").innerHTML;
        // var originalContents = document.body.innerHTML;
        // document.body.innerHTML = printContents;
        // window.print();
        // document.body.innerHTML = originalContents;
    };
    AdminEstimationReportComponent.prototype.exportPdf = function () {
        var _this = this;
        this.showSpinner = true;
        this.filters.filetype = 'pdf';
        this.adminService.estimationReportpdf(this.filters).subscribe(function (res) {
            _this.showSpinner = false;
            console.log('start download:', res);
            var url = window.URL.createObjectURL(res.data);
            var a = document.createElement('a');
            document.body.appendChild(a);
            a.setAttribute('style', 'display: none');
            a.href = url;
            a.download = res.filename;
            a.click();
            window.URL.revokeObjectURL(url);
            a.remove(); // remove the element
            /* window.open(url) */
        });
        /*     var doc = new jsPDF();
            var col = ["Project Name", "Code",'date','Total Hours','Team Head','Team Members'];
            var rows = [];
            var members = '';
            this.projectsFlt.forEach((data, key) => {
              members = '';
              if(data.tbl_project_estimation_team.tbl_project_estimation_team_members){
              data.tbl_project_estimation_team.tbl_project_estimation_team_members.forEach((d,k) => {
                members += d.tbl_user_profile.f_name + ' ' +  d.tbl_user_profile.l_name + ', ';
              })
            }
              var temp = [
                data.tbl_project.project_name,
                data.tbl_project.project_code,
                data.createdAt,
                data.estimation_hour,
                data.tbl_project_estimation_team.tbl_user_profile.f_name + ' ' + data.tbl_project_estimation_team.tbl_user_profile.l_name ,
                members
              ];
              rows.push(temp);
            });
        
            // console.log(rows);
            doc.autoTable(col, rows,
              {
                margin: { horizontal: 7 },
                overflow : 'linebreak',
            });
        
            doc.save('Test.pdf'); */
    };
    AdminEstimationReportComponent.prototype.tableToExcel = function (table, name) {
        var _this = this;
        this.showSpinner = true;
        this.filters.filetype = 'excel';
        this.adminService.estimationReportexcel(this.filters).subscribe(function (res) {
            _this.showSpinner = false;
            console.log('start download:', res);
            var url = window.URL.createObjectURL(res.data);
            var a = document.createElement('a');
            document.body.appendChild(a);
            a.setAttribute('style', 'display: none');
            a.href = url;
            a.download = res.filename;
            a.click();
            window.URL.revokeObjectURL(url);
            a.remove(); // remove the element
            /* window.open(url) */
        });
        /* let uri = 'data:application/vnd.ms-excel;base64,'
            , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--><meta http-equiv="content-type" content="text/plain; charset=UTF-8"/></head><body><table>{table}</table></body></html>'
            , base64 = function(s) { return window.btoa(decodeURIComponent(encodeURIComponent(s))) }
            , format = function(s, c) { return s.replace(/{(\w+)}/g, function(m, p) { return c[p]; }) }
                if (!table.nodeType) table = document.getElementById(table)
                var ctx = {worksheet: name || 'Worksheet', table: table.innerHTML}
                window.location.href = uri + base64(format(template, ctx)) */
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], AdminEstimationReportComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], AdminEstimationReportComponent.prototype, "sort", void 0);
    AdminEstimationReportComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-admin-estimation-report',
            template: __webpack_require__("../../../../../src/app/components/admin-estimation-report/admin-estimation-report.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/admin-estimation-report/admin-estimation-report.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_admin_service__["a" /* AdminService */],
            __WEBPACK_IMPORTED_MODULE_3__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], AdminEstimationReportComponent);
    return AdminEstimationReportComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/admin-expired/admin-expired.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/admin-expired/admin-expired.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n  \r\n  <!-- <p>You selected: {{selected}} </p> -->\r\n\r\n  <div class=\"col-md-12\">\r\n    <div class=\"row\">\r\n    <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\" >\r\n        <div class=\"\"  >\r\n            <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n            width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n        <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n          <animateTransform attributeType=\"xml\"\r\n            attributeName=\"transform\"\r\n            type=\"rotate\"\r\n            from=\"0 25 25\"\r\n            to=\"360 25 25\"\r\n            dur=\"0.6s\"\r\n            repeatCount=\"indefinite\"/>\r\n          </path>\r\n        </svg>\r\n    </div>\r\n    </div> -->\r\n    \r\n\r\n    <div class=\"col-md-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-10\">\r\n              <div class=\"example-header\">\r\n                  <mat-form-field>\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                  </mat-form-field>\r\n                </div>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n              <div *ngIf=\"all_value\">\r\n              <mat-form-field class=\"filter\"> \r\n                  \r\n                    <mat-select  (change)=\"refresh()\" [(value)]=\"selected\">\r\n                      <!-- <mat-option>None</mat-option> -->\r\n                      <mat-option value=\"all\">All</mat-option>\r\n                      <mat-option value=\"Active\">Active</mat-option>\r\n                      <mat-option value=\"Block\">Block</mat-option>\r\n                      <mat-option value=\"Delete\">Delete </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n<!--    \r\n          <div class=\"example-header\" >\r\n              <mat-form-field>\r\n                <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n              </mat-form-field>\r\n          </div> -->\r\n       \r\n    <div class=\"example-container mat-elevation-z8 \">\r\n  <mat-table [dataSource]=\"dataSource\" matSort>\r\n <!-- Name Column -->\r\n <ng-container matColumnDef=\"slno\">\r\n    <mat-header-cell *matHeaderCellDef>Sl_No </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row;let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}} </mat-cell>\r\n  </ng-container>\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"cmp_name\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>COMPANY NAME </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.cmp_name}} </mat-cell>\r\n    </ng-container>\r\n\r\n <!-- Name Column -->\r\n <ng-container matColumnDef=\"email\">\r\n  <mat-header-cell *matHeaderCellDef mat-sort-header> EMAIL </mat-header-cell>\r\n  <mat-cell *matCellDef=\"let row\"> {{row.tbl_login.email}} </mat-cell>\r\n</ng-container>\r\n  \r\n   <!-- Progress Column -->\r\n   <ng-container matColumnDef=\"contactnumber\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> CONTACT NUMBER </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\"> {{row.contact_no}}</mat-cell>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"companystatus\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> COMPANY STATUS </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\"> {{row.tbl_login.cmp_status}}</mat-cell>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"status\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> STATUS </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">\r\n        <div *ngIf=\"row.tbl_login.block_status==false && row.tbl_login.delete_status==false\"> Active</div>\r\n        <div *ngIf=\"row.tbl_login.block_status==true && row.tbl_login.delete_status==false\"> Blocked</div>\r\n        <div *ngIf=\" row.tbl_login.delete_status==true\"> Deleted</div>\r\n      </mat-cell>\r\n    </ng-container>\r\n  <ng-container matColumnDef=\"action\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\">\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button *ngIf=\"row.tbl_login.delete_status==false\" (click)=\"getId(row.tbl_login.id)\" data-toggle=\"modal\" data-target=\"#deleteModal\" mat-menu-item >\r\n                <i class=\"material-icons\">delete</i>\r\n              <span>Delete</span>\r\n            </button>\r\n            <button *ngIf=\"row.tbl_login.delete_status==true\" mat-menu-item disabled>\r\n              <i class=\"material-icons\">delete_forever</i>\r\n            <span>Deleted</span>\r\n          </button>\r\n            <button *ngIf=\"row.tbl_login.block_status==false && row.tbl_login.delete_status==false\" (click)=\"blockCompany(row.tbl_login.id)\" mat-menu-item>\r\n                <i class=\"material-icons\">block</i>\r\n              <span>Block</span>\r\n            </button>\r\n            <button *ngIf=\"row.tbl_login.block_status==true && row.tbl_login.delete_status==false\" (click)=\"unblockCompany(row.tbl_login.id)\" mat-menu-item>\r\n                <i class=\"material-icons\">block</i>\r\n              <span>Unblock</span>\r\n            </button>\r\n          </mat-menu>\r\n       \r\n      </mat-cell>\r\n  </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n    </mat-row>\r\n  </mat-table>\r\n  <div class=\"col-md-15 \">\r\n      <!-- <div *ngIf=\"showSpinner\" class=\"deletespinner\">\r\n          <mat-spinner></mat-spinner>\r\n         </div> -->\r\n  </div>\r\n  <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n      <div class=\"col-md-4 col-md-offset-4\">\r\n          <mat-toolbar   class=\"back-color\">No item found!</mat-toolbar>\r\n      </div>\r\n    </div>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n</div>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n<!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n\r\n<div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n      <!-- Modal content-->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n          <h4 class=\"modal-title\">Delete </h4>\r\n        </div>\r\n        <!-- <div class=\"modal-header\"> -->\r\n        <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n        <!-- </div> -->\r\n        <div class=\"modal-body delete-popup\">\r\n          <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n          <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" (click)=\"deleteCompany(id)\" class=\"btn round-button\" data-dismiss=\"modal\">Delete</button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  "

/***/ }),

/***/ "../../../../../src/app/components/admin-expired/admin-expired.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminExpiredComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AdminExpiredComponent = (function () {
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin admin management
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          :  06-03-2018
    // Last Modified :
    // Desc          : Allexpiredcompanies
    function AdminExpiredComponent(adminService, routes, snackBar) {
        this.adminService = adminService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'cmp_name', 'email', 'contactnumber', 'companystatus', 'status', 'action'];
        this.notExist = false;
        this.selected = 'all';
        this.all_value = false;
        this.showSpinner = false;
    }
    AdminExpiredComponent.prototype.refresh = function () {
        var _this = this;
        this.showSpinner = true;
        console.log(this.selected);
        var company = [];
        if (this.selected == 'all') {
            this.adminService.getAllexpiredcompanies().subscribe(function (data) {
                console.log(data);
                if (data.length != 0) {
                    _this.all_value = true;
                }
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Active') {
            this.adminService.getAllexpiredactivecompanies().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Block') {
            this.adminService.getAllexpiredblockcompanies().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Delete') {
            this.adminService.getAllexpireddeletecompanies().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
    };
    AdminExpiredComponent.prototype.loadToDataTable = function (data) {
        this.notExist = false;
        if (data.length == 0) {
            this.notExist = true;
        }
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
        // console.log(this.dataSource);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    AdminExpiredComponent.prototype.ngOnInit = function () {
        this.refresh();
    };
    AdminExpiredComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    AdminExpiredComponent.prototype.getId = function (id) {
        // this.showSpinner =false
        // this.showSpinnerDelete =false
        this.id = id;
        //  console.log(this.id)
    };
    //delete company
    AdminExpiredComponent.prototype.deleteCompany = function (id) {
        var _this = this;
        this.showSpinner = true;
        this.adminService.deleteCompany(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    //block company
    AdminExpiredComponent.prototype.blockCompany = function (id) {
        var _this = this;
        this.adminService.blockCompany(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    //unblock company
    AdminExpiredComponent.prototype.unblockCompany = function (id) {
        var _this = this;
        this.adminService.unblockCompany(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], AdminExpiredComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], AdminExpiredComponent.prototype, "sort", void 0);
    AdminExpiredComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'admin-expired',
            template: __webpack_require__("../../../../../src/app/components/admin-expired/admin-expired.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/admin-expired/admin-expired.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_admin_service__["a" /* AdminService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], AdminExpiredComponent);
    return AdminExpiredComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/admin-footer/admin-footer.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/admin-footer/admin-footer.component.html":
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "../../../../../src/app/components/admin-footer/admin-footer.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminFooterComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var AdminFooterComponent = (function () {
    function AdminFooterComponent() {
    }
    AdminFooterComponent.prototype.ngOnInit = function () {
        // console.log($(window).height());
        // var footerHeight = $('.site-footer').height();
        // var contHeight = ($(window).height() - footerHeight -80) ;
        // $('.user-dashboard').css('min-height', contHeight +'px');
    };
    AdminFooterComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'admin-footer',
            template: __webpack_require__("../../../../../src/app/components/admin-footer/admin-footer.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/admin-footer/admin-footer.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], AdminFooterComponent);
    return AdminFooterComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/admin-login/admin-login.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n.logn{height:100%;overflow-x:hidden;background:#fff;}\n.logn-img{height:100%;width:100%;position:relative;overflow:hidden;}\n.paragraph{width:60%;left:10%;bottom:10%;z-index:100;min-height:20px;color:#fff;text-align:left;font-size:14px;position:absolute;}\n.social-login{\n  position:relative;\n  float: none;\n  margin:0 auto;\n  height:auto;\n  padding: 10px 0 15px 0;\n  border-bottom: 1px solid #eee;\n  display: table;\n      width: 79%;\n}\n\n.social-login a{\n     position: relative;\n    float: left;\n    width: 48%;\n    text-decoration: none;\n    color: #fff;\n    border: 1px solid rgba(0,0,0,0.05);\n    padding: 7px 12px;\n    border-radius: 12px;\n    font-size: 12px;\n   \n        margin: 0px 1%;\n    text-align: center;\n}\n.social-login a i{\n  position: relative;\n  float: left;\n  width: 20px;\n  top: 2px;\n}\n.social-login a:first-child{\n  background-color: #49639F;\n}\n.social-login a:last-child{\n  background-color: #DF4A32;\n}\n.email-login,.email-signup{\n  position:relative;\n  float: left;\n  width: 100%;\n  height:auto;\n  margin-top: 20px;\n  text-align:center;\n}\nbody {\n  background: #e9e9e9;\n  color: #666666;\n  font-family: 'RobotoDraft', 'Roboto', sans-serif;\n  font-size: 14px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* Pen Title */\n.pen-title {\n  padding: 20px 0;\n  text-align: center;\n  letter-spacing: 2px;\n}\n.pen-title h1 {\n  margin: 0 0 20px;\n  font-size: 40px;\n  font-weight: 300;\n}\n.pen-title span {\n  font-size: 12px;\n}\n.pen-title span .fa {\n  color: #ed2553;\n}\n.pen-title span a {\n  color: #ed2553;\n  font-weight: 600;\n  text-decoration: none;\n}\n\n/* Rerun */\n.rerun {\n  margin: 0 0 30px;\n  text-align: center;\n}\n.rerun a {\n  cursor: pointer;\n  display: inline-block;\n  background: #ed2553;\n  border-radius: 3px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  padding: 10px 20px;\n  color: #ffffff;\n  text-decoration: none;\n  transition: 0.3s ease;\n}\n.rerun a:hover {\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n\n/* Scroll To Bottom */\n#codepen, #portfolio {\n  position: fixed;\n  bottom: 30px;\n  right: 30px;\n  background: #ec2652;\n  width: 56px;\n  height: 56px;\n  border-radius: 100%;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: 0.3s ease;\n  color: #ffffff;\n  text-align: center;\n}\n#codepen i, #portfolio i {\n  line-height: 56px;\n}\n#codepen:hover, #portfolio:hover {\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n}\n\n/* CodePen */\n#portfolio {\n  bottom: 96px;\n  right: 36px;\n  background: #ec2652;\n  width: 44px;\n  height: 44px;\n  animation: buttonFadeInUp 1s ease;\n}\n#portfolio i {\n  line-height: 44px;\n}\n\n/* Container */\n.container {\n  position: relative;\n  max-width: 460px;\n  width: 100%;\n  margin: 0 auto 100px;\n}\n.container.active .card:first-child {\n  background: #f2f2f2;\n  margin: 0 15px;\n}\n.container.active .card:nth-child(2) {\n  background: #fafafa;\n  margin: 0 10px;\n}\n.container.active .card.alt {\n  top: 20px;\n  right: 0;\n  width: 100%;\n  min-width: 100%;\n  height: auto;\n  border-radius: 5px;\n  padding: 60px 0 40px;\n  overflow: hidden;\n}\n.container.active .card.alt .toggle {\n  position: absolute;\n  top: 40px;\n  right: -70px;\n  box-shadow: none;\n  transform: scale(15);\n  transition: transform .5s ease;\n}\n.container.active .card.alt .toggle:before {\n  content: '';\n}\n.container.active .card.alt .title,\n.container.active .card.alt .input-container,\n.container.active .card.alt .button-container {\n  left: 0;\n  opacity: 1;\n  visibility: visible;\n  transition: .3s ease;\n}\n.container.active .card.alt .title {\n  transition-delay: .3s;\n}\n.container.active .card.alt .input-container {\n  transition-delay: .4s;\n}\n.container.active .card.alt .input-container:nth-child(2) {\n  transition-delay: .5s;\n}\n.container.active .card.alt .input-container:nth-child(3) {\n  transition-delay: .6s;\n}\n.container.active .card.alt .button-container {\n  transition-delay: .7s;\n}\n\n/* Card */\n.card {\n \n}\n.card:first-child {\n\n}\n.card .title {\n      position: relative;\n    z-index: 1;\n    /* border-left: 5px solid #ec2652; */\n    margin: 0 0 35px;\n        padding: 20% 0 6% 0;\n    color: #f37501;\n    font-size: 32px;\n    font-weight: 600;\n    text-transform: uppercase;\n    text-align: center;\n}\ninput:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill{background-color:none !important;}\n.card .input-container {\n        position: relative;\n    margin: 0 60px 34px;\n    /* overflow: hidden; */\n    display: inline-block;\n\t\n}\n.card .input-container input {\n  outline: none;\n  z-index: 1;\n  position: relative;\n  background: none;\n  width: 100%;\n  height: 54px;\n  border: 0;\n  color: #212121;\n  font-size: 20px;\n  font-weight: 400;\n}\n.card .input-container input:focus ~ label {\n  color: #9d9d9d;\n  transform: translate(-12%, -50%) scale(0.75);\n}\n.card .input-container input:focus ~ .bar:before, .card .input-container input:focus ~ .bar:after {\n  width: 50%;\n}\n.card .input-container input:valid ~ label {\n  color: #9d9d9d;\n  transform: translate(-12%, -50%) scale(0.75);\n}\n.card .input-container label {\n  position: absolute;\n  top: 0;\n      left: 20px;\n  color: #757575;\n      font-size: 18px;\n  font-weight: 300;\n  line-height: 60px;\n  transition: 0.2s ease;\n}\n.card .fa{     padding-top: 19px;\n    font-size: 28px;color:#f37600;}\n.card .input-container .bar {\n  position: absolute;\n      left: -4%;\n  bottom: 0;\n  background: #757575;\n  width: 100%;\n  height: 1px;\n}\n.card .input-container .bar:before, .card .input-container .bar:after {\n  content: '';\n  position: absolute;\n      background: #f47453;\n  width: 0;\n  height: 2px;\n  transition: .2s ease;\n}\n.card .input-container .bar:before {\n  left: 50%;\n}\n.card .input-container .bar:after {\n  right: 50%;\n}\n.card .button-container {\n  margin: 0 60px;\n  text-align: center;\n}\n.card .button-container button {\n  outline: 0;\n  cursor: pointer;\n  position: relative;\n  display: inline-block;\n  background: 0;\n  width: 240px;\n  border: 2px solid #e3e3e3;\n  padding: 20px 0;\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1;\n  text-transform: uppercase;\n  overflow: hidden;\n  transition: .3s ease;\n}\n.card .button-container button span {\n  position: relative;\n  z-index: 1;\n  color: #ddd;\n  transition: .3s ease;\n}\n.card .button-container button:before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  display: block;\n  background: #ec2652;\n  width: 30px;\n  height: 30px;\n  border-radius: 100%;\n  margin: -15px 0 0 -15px;\n  opacity: 0;\n  transition: .3s ease;\n}\n.card .button-container button:hover, .card .button-container button:active, .card .button-container button:focus {\n  border-color: #ec2652;\n}\n.card .button-container button:hover span, .card .button-container button:active span, .card .button-container button:focus span {\n  color: #ec2652;\n}\n.card .button-container button:active span, .card .button-container button:focus span {\n  color: #ffffff;\n}\n.card .button-container button:active:before, .card .button-container button:focus:before {\n  opacity: 1;\n  transform: scale(10);\n}\n.card .footer {\n  margin: 6px 0 9%;\n  color: #d3d3d3;\n  font-size: 24px;\n  font-weight: 300;\n  text-align: center;\n}\n.card .footer a {\n      color: inherit;\n    text-decoration: none;\n    transition: .3s ease;\n    font-size: 15px;\n    color: #111;\n}\n.card .footer a:hover {\n  color: #bababa;\n}\n.card.alt {\n  position: absolute;\n  top: 40px;\n  right: -70px;\n  z-index: 10;\n  width: 100px;\n  height: 100px;\n  background: none;\n  border-radius: 100%;\n  box-shadow: none;\n  padding: 0;\n  transition: .3s ease;\n  /* Toggle */\n  /* Title */\n  /* Input */\n  /* Button */\n}\n.card.alt .toggle {\n  position: relative;\n  background: #ec2652;\n  width: 100px;\n  height: 100px;\n  border-radius: 100%;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  color: #ffffff;\n  font-size: 42px;\n  line-height: 100px;\n  text-align: center;\n  cursor: pointer;\n}\n.card.alt .toggle:before {\n  content: '\\F067';\n  display: inline-block;\n  font: normal normal normal 14px/1 FontAwesome;\n  font-size: inherit;\n  text-rendering: auto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  transform: translate(0, 0);\n}\n.card.alt .title,\n.card.alt .input-container,\n.card.alt .button-container {\n  left: 100px;\n  opacity: 0;\n  visibility: hidden;\n}\n.card.alt .title {\n  position: relative;\n  border-color: #ffffff;\n  color: #ffffff;\n}\n.card.alt .title .close {\n  cursor: pointer;\n  position: absolute;\n  top: 0;\n  right: 60px;\n  display: inline;\n  color: #ffffff;\n  font-size: 58px;\n  font-weight: 400;\n}\n.card.alt .title .close:before {\n  content: '\\D7';\n}\n.card.alt .input-container input {\n  color: #ffffff;\n}\n.card.alt .input-container input:focus ~ label {\n  color: #ffffff;\n}\n.card.alt .input-container input:focus ~ .bar:before, .card.alt .input-container input:focus ~ .bar:after {\n  background: #ffffff;\n}\n.card.alt .input-container input:valid ~ label {\n  color: #ffffff;\n}\n.card.alt .input-container label {\n  color: rgba(255, 255, 255, 0.8);\n}\n.card.alt .input-container .bar {\n  background: rgba(255, 255, 255, 0.8);\n}\n.card.alt .button-container button {\n  width: 100%;\n  background: #ffffff;\n  border-color: #ffffff;\n}\n.card.alt .button-container button span {\n  color: #ec2652;\n}\n.card.alt .button-container button:hover {\n  background: rgba(255, 255, 255, 0.9);\n}\n.card.alt .button-container button:active:before, .card.alt .button-container button:focus:before {\n  display: none;\n}\n.logn-img img{width:100%;}\n/* Keyframes */\n@keyframes buttonFadeInUp {\n  0% {\n    bottom: 30px;\n    opacity: 0;\n  }\n}\n.g-recaptcha {\n    transform:scale(0.89);\n    transform-origin:0 0;\n}\n.round-button{border-radius:20px;margin:0 auto;float:none;background:#f37600;color:#fff;    padding: 10px 32px; /* Safari */\n    transition: background 2s;}\n.round-button:hover{background:#ffaa05;color:#fff;}\n.padd-lft{padding-left:20px;}\n.admin-logn{ margin-top: 18%; }\n@media only screen and (max-width : 768px) {\n.logn-img {\n    height: 72%;\n    width: 98%;\n\tmax-height:300px;\n}\n}\n\n@media only screen and (max-width : 480px)  { \n.card .input-container{    margin: 12px;}\n.logn-img{display:none;}\nform{text-align:center;}\n.logn-img {\n    height: 72%;\n    width: 98%;\n\tmax-height:300px;\n}\n.logn-img img{width:100%;}\n}\n@media only screen and (max-width : 320px) { \n\t.card .input-container{    width: 74%;\n        margin: 24px auto;\n    float: none;}\n\t.card .input-container .bar{left: 3%;}\n\t.container{max-width:100%;}\n\tform{text-align:center;}\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/admin-login/admin-login.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"logn\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col-md-8\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"logn-img\">\r\n\t\t\t\t\t<img src=\"./assets/images/login.jpg\" />\r\n\t\t\t\t\t<div class=\"paragraph\">\r\n\r\n\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Proin tincidunt bibendum malesuada. Fusce tincidunt nibh quis nisi\r\n\t\t\t\t\t\ttristique, sed ultrices lorem aliquam. Nam facilisis posuere vehicula. Integer tempus rhoncus volutpat.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"col-md-4\">\r\n\t\t\t<div class=\"row\">\r\n\r\n\t\t\t\t<!-- Mixins-->\r\n\t\t\t\t<!-- Pen Title-->\r\n\r\n\t\t\t\t<div class=\"container admin-logn\">\r\n\t\t\t\t\t<div class=\"card\"></div>\r\n\t\t\t\t\t<div class=\"card\">\r\n\t\t\t\t\t\t<h1 class=\"title\">Login</h1>\r\n\r\n\t\t\t\t\t\t<form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"f.form.valid && login()\" novalidate>\r\n\t\t\t\t\t\t\t<div class=\"input-container\">\r\n\t\t\t\t\t\t\t\t<div class=\"col-xs-1\"><i class=\"fa fa-user\" aria-hidden=\"true\"></i></div>\r\n\t\t\t\t\t\t\t\t<div class=\"col-xs-10\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"Username\" [(ngModel)]=\"newLogin.email\" name=\"email\" #email=\"ngModel\" />\r\n\t\t\t\t\t\t\t\t\t<label for=\"Username\">Email</label>\r\n\t\t\t\t\t\t\t\t\t<div class=\"bar\"></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"clearfix\"></div>\r\n\t\t\t\t\t\t\t<div class=\"input-container\">\r\n\t\t\t\t\t\t\t\t<div class=\"col-xs-1\"><i class=\"fa fa-lock\" aria-hidden=\"true\"></i></div>\r\n\t\t\t\t\t\t\t\t<div class=\"col-xs-10\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"password\" id=\"Password\" [(ngModel)]=\"newLogin.password\" name=\"password\" #password=\"ngModel\" />\r\n\t\t\t\t\t\t\t\t\t<label for=\"Password\">Password</label>\r\n\t\t\t\t\t\t\t\t\t<div class=\"bar\"></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<!-- <div class=\"input-container\">\r\n\t\t\t\t\t \r\n\t\t\t\t\t  <div class=\"col-xs-10 padd-lft\">\r\n\t\t\t\t\t  <div class=\"g-recaptcha\" data-sitekey=\"6LdZBxoUAAAAABdVce0Btdcb5H9Ade6Zoxd-dDNU\"><div style=\"width: 304px; height: 78px;\"><div><iframe src=\"https://www.google.com/recaptcha/api2/anchor?k=6LdZBxoUAAAAABdVce0Btdcb5H9Ade6Zoxd-dDNU&amp;co=aHR0cDovL3d3dy50c3MtYWR2LmNvbTo4MA..&amp;hl=en&amp;v=v1518566665321&amp;size=normal&amp;cb=ri090lbnphd5\" width=\"304\" height=\"78\" role=\"presentation\" frameborder=\"0\" scrolling=\"no\" sandbox=\"allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation allow-modals allow-popups-to-escape-sandbox\"></iframe></div><textarea id=\"g-recaptcha-response\" name=\"g-recaptcha-response\" class=\"g-recaptcha-response\" style=\"width: 250px; height: 40px; border: 1px solid #c1c1c1; margin: 10px 25px; padding: 0px; resize: none;  display: none; \"></textarea></div></div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t  </div> -->\r\n\t\t\t\t\t\t\t<div class=\"clearfix\"></div>\r\n\t\t\t\t\t\t\t<!-- <div class=\"footer\"><a href=\"#\">Forgot your password?</a></div> -->\r\n\t\t\t\t\t\t\t<div class=\"col-md-12\" style=\"text-align:center;\"><button type=\"submit\" class=\"btn round-button\">Sign in</button></div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t\t<!-- \t\t\t\r\n\t\t  <div class=\"social-login\">\r\n\t\t\t  <a href=\"#\">\r\n\t\t\t\t<i class=\"fa fa-facebook fa-lg\"></i>\r\n\t\t\t\tLogin in with facebook\r\n\t\t\t  </a>\r\n\t\t\t  <a href=\"#\">\r\n\t\t\t\t<i class=\"fa fa-google-plus fa-lg\"></i>\r\n\t\t\t\tlog in with Google\r\n\t\t\t  </a>\r\n\t\t\t</div> -->\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<!-- Modal -->\r\n\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/admin-login/admin-login.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminLoginComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AdminLoginComponent = (function () {
    function AdminLoginComponent(adminService, routes, snackBar) {
        this.adminService = adminService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.newLogin = {
            email: '',
            password: '',
        };
        this.showError = false;
        this.showSpinner = false;
        this.Error = '';
    }
    AdminLoginComponent.prototype.ngOnInit = function () {
    };
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin Login
    // Params        : admin username,admin password from form
    // Returns       : Token, admin id and role
    // Author        : Rinsha
    // Date          : 01-03-2018
    // Last Modified : 01-03-2018, Rinsha
    // Desc          : Admin login
    AdminLoginComponent.prototype.login = function () {
        var _this = this;
        this.showSpinner = true;
        // console.log(this.newLogin);
        this.adminService.adminLogin(this.newLogin).subscribe(function (data) {
            console.log(data);
            if (data.success == false) {
                //  this.showSpinner =false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 3000
                });
            }
            if (data.success) {
                //  this.showSpinner =false
                _this.adminService.storeUserData(data.token, data.admin);
                _this.routes.navigate(['/admin-dashboard']);
            }
        });
    };
    AdminLoginComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-admin-login',
            template: __webpack_require__("../../../../../src/app/components/admin-login/admin-login.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/admin-login/admin-login.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_admin_service__["a" /* AdminService */], __WEBPACK_IMPORTED_MODULE_2__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_3__angular_material__["z" /* MatSnackBar */]])
    ], AdminLoginComponent);
    return AdminLoginComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/admin-not-verified/admin-not-verified.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/admin-not-verified/admin-not-verified.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n  \r\n  <!-- <p>You selected: {{selected}} </p> -->\r\n\r\n  <div class=\"col-md-12\">\r\n    <div class=\"row\">\r\n    <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\" >\r\n        <div class=\"\"  >\r\n            <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n            width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n        <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n          <animateTransform attributeType=\"xml\"\r\n            attributeName=\"transform\"\r\n            type=\"rotate\"\r\n            from=\"0 25 25\"\r\n            to=\"360 25 25\"\r\n            dur=\"0.6s\"\r\n            repeatCount=\"indefinite\"/>\r\n          </path>\r\n        </svg>\r\n    </div>\r\n    </div> -->\r\n    \r\n\r\n    <div class=\"col-md-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-10\">\r\n              <div class=\"example-header\">\r\n                  <mat-form-field>\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                  </mat-form-field>\r\n                </div>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n              <div *ngIf=\"all_value\">\r\n              <mat-form-field class=\"filter\"> \r\n                  \r\n                    <mat-select  (change)=\"refresh()\" [(value)]=\"selected\">\r\n                      <!-- <mat-option>None</mat-option> -->\r\n                      <mat-option value=\"all\">All</mat-option>\r\n                      <mat-option value=\"Active\">Active</mat-option>\r\n                      <mat-option value=\"Block\">Block</mat-option>\r\n                      <mat-option value=\"Delete\">Delete </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n<!--    \r\n          <div class=\"example-header\" >\r\n              <mat-form-field>\r\n                <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n              </mat-form-field>\r\n          </div> -->\r\n       \r\n    <div class=\"example-container mat-elevation-z8 \">\r\n  <mat-table [dataSource]=\"dataSource\" matSort>\r\n <!-- Name Column -->\r\n <ng-container matColumnDef=\"slno\">\r\n    <mat-header-cell *matHeaderCellDef >Sl_No </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row;let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}} </mat-cell>\r\n  </ng-container>\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"cmp_name\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>COMPANY NAME </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.cmp_name}} </mat-cell>\r\n    </ng-container>\r\n\r\n <!-- Name Column -->\r\n <ng-container matColumnDef=\"email\">\r\n  <mat-header-cell *matHeaderCellDef mat-sort-header> EMAIL </mat-header-cell>\r\n  <mat-cell *matCellDef=\"let row\"> {{row.tbl_login.email}} </mat-cell>\r\n</ng-container>\r\n  \r\n   <!-- Progress Column -->\r\n   <ng-container matColumnDef=\"contactnumber\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> CONTACT NUMBER </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\"> {{row.contact_no}}</mat-cell>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"companystatus\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> COMPANY STATUS </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\"> {{row.tbl_login.cmp_status}}</mat-cell>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"status\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> STATUS </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">\r\n        <div *ngIf=\"row.tbl_login.block_status==false && row.tbl_login.delete_status==false\"> Active</div>\r\n        <div *ngIf=\"row.tbl_login.block_status==true && row.tbl_login.delete_status==false\"> Blocked</div>\r\n        <div *ngIf=\" row.tbl_login.delete_status==true\"> Deleted</div>\r\n      </mat-cell>\r\n    </ng-container>\r\n  <ng-container matColumnDef=\"action\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\">\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button *ngIf=\"row.tbl_login.delete_status==false\" (click)=\"getId(row.tbl_login.id)\" data-toggle=\"modal\" data-target=\"#deleteModal\" mat-menu-item >\r\n                <i class=\"material-icons\">delete</i>\r\n              <span>Delete</span>\r\n            </button>\r\n            <button *ngIf=\"row.tbl_login.delete_status==true\" mat-menu-item disabled>\r\n              <i class=\"material-icons\">delete_forever</i>\r\n            <span>Deleted</span>\r\n          </button>\r\n            <button *ngIf=\"row.tbl_login.block_status==false && row.tbl_login.delete_status==false\" (click)=\"blockCompany(row.tbl_login.id)\" mat-menu-item>\r\n                <i class=\"material-icons\">block</i>\r\n              <span>Block</span>\r\n            </button>\r\n            <button *ngIf=\"row.tbl_login.block_status==true && row.tbl_login.delete_status==false\" (click)=\"unblockCompany(row.tbl_login.id)\" mat-menu-item>\r\n                <i class=\"material-icons\">block</i>\r\n              <span>Unblock</span>\r\n            </button>\r\n          </mat-menu>\r\n       \r\n      </mat-cell>\r\n  </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n    </mat-row>\r\n  </mat-table>\r\n  <div class=\"col-md-15 \">\r\n      <!-- <div *ngIf=\"showSpinner\" class=\"deletespinner\">\r\n          <mat-spinner></mat-spinner>\r\n         </div> -->\r\n  </div>\r\n  <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n      <div class=\"col-md-4 col-md-offset-4\">\r\n          <mat-toolbar   class=\"back-color\">No item found!</mat-toolbar>\r\n      </div>\r\n    </div>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n</div>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n<!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n\r\n\r\n<div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n      <!-- Modal content-->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n          <h4 class=\"modal-title\">Delete </h4>\r\n        </div>\r\n        <!-- <div class=\"modal-header\"> -->\r\n        <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n        <!-- </div> -->\r\n        <div class=\"modal-body delete-popup\">\r\n          <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n          <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" (click)=\"deleteCompany(id)\" class=\"btn round-button\" data-dismiss=\"modal\">Delete</button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  "

/***/ }),

/***/ "../../../../../src/app/components/admin-not-verified/admin-not-verified.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminNotVerifiedComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AdminNotVerifiedComponent = (function () {
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin user management
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 06-03-2018
    // Last Modified : 
    // Desc          : All users
    function AdminNotVerifiedComponent(adminService, routes, snackBar) {
        this.adminService = adminService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'cmp_name', 'email', 'contactnumber', 'companystatus', 'status', 'action'];
        this.notExist = false;
        this.selected = 'all';
        this.all_value = false;
        this.showSpinner = false;
    }
    AdminNotVerifiedComponent.prototype.refresh = function () {
        var _this = this;
        this.showSpinner = true;
        console.log(this.selected);
        var company = [];
        if (this.selected == 'all') {
            this.adminService.getAllnotverficompanies().subscribe(function (data) {
                if (data.length != 0) {
                    _this.all_value = true;
                }
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Active') {
            this.adminService.getAllnotverfiactivecompanies().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Block') {
            this.adminService.getAllnotverfiblockcompanies().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Delete') {
            this.adminService.getAllnotverfideletecompanies().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
    };
    AdminNotVerifiedComponent.prototype.loadToDataTable = function (data) {
        this.notExist = false;
        if (data.length == 0) {
            this.notExist = true;
        }
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
        // console.log(this.dataSource);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    AdminNotVerifiedComponent.prototype.ngOnInit = function () {
        this.refresh();
    };
    AdminNotVerifiedComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    AdminNotVerifiedComponent.prototype.getId = function (id) {
        // this.showSpinner =false
        // this.showSpinnerDelete =false
        this.id = id;
        //  console.log(this.id)
    };
    //delete company
    AdminNotVerifiedComponent.prototype.deleteCompany = function (id) {
        var _this = this;
        this.showSpinner = true;
        this.adminService.deleteCompany(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    //block company
    AdminNotVerifiedComponent.prototype.blockCompany = function (id) {
        var _this = this;
        this.adminService.blockCompany(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    //unblock company
    AdminNotVerifiedComponent.prototype.unblockCompany = function (id) {
        var _this = this;
        this.adminService.unblockCompany(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], AdminNotVerifiedComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], AdminNotVerifiedComponent.prototype, "sort", void 0);
    AdminNotVerifiedComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'admin-not-verified',
            template: __webpack_require__("../../../../../src/app/components/admin-not-verified/admin-not-verified.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/admin-not-verified/admin-not-verified.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_admin_service__["a" /* AdminService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], AdminNotVerifiedComponent);
    return AdminNotVerifiedComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/admin-plan/admin-plan.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n \r\n  .mat-form-field {\r\n    /* font-size: 14px; */\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .modal{top:0;}\r\n  .example-container > * {\r\n    width: 100%;\r\n  }\r\n  .add-project{\r\n    float: right;\r\n    margin-right: 50px;\r\n    margin-top: 50px;\r\n    border: none;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n    padding: 0;\r\n    font-size: 28px;\r\n    line-height: 42px;\r\n    box-shadow: 4px 7px 31px #ffbb8e;\r\n  }\r\n  .modal-header {\r\n    padding: 10px 30px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #fe6a07;\r\n}\r\n.modal-content{\r\n  box-shadow:none;\r\n  border-radius: 9px;\r\n  overflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\n  display: block;\r\n  position: relative;\r\n  -ms-flex: auto;\r\n      flex: auto;\r\n  min-width: 0;\r\n  width: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\n  padding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\n  font-family: Roboto, Arial, sans-serif;\r\n  margin: 0;\r\n}\r\n\r\n.basic-container {\r\n  padding: 5px;\r\n}\r\n\r\n.version-info {\r\n  font-size: 8pt;\r\n  float: right;\r\n}\r\n.round-button{\r\n  float:none !important;\r\n}\r\n.center-bt {\r\n    margin: 20px auto 10px auto;\r\n    float: none;\r\n}\r\n@media only screen and (max-width: 1366px){\r\n\r\n.navbar-default {\r\n    min-height: 648px !important;\r\n}\r\n}\r\n@media only screen and (max-width: 1280px){\r\n.navbar-default {\r\n    min-height: 643px;\r\n}\r\nbody{min-height: 723px;}\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/admin-plan/admin-plan.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n    <div class=\"container-fluid display-table\">\r\n      <div class=\"row display-table-row\">\r\n        <div class=\"col-md-1 col-xs-2 display-table-cell v-align box\" id=\"navigation\">\r\n          <admin-sidebar></admin-sidebar>\r\n        </div>\r\n        <admin-topbar></admin-topbar>\r\n        <br>\r\n        <div class=\"col-md-12 col-xs-9\">\r\n          <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"example-container mat-elevation-z8\">\r\n                <div class=\"example-header\">\r\n                  <mat-form-field>\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <mat-table [dataSource]=\"dataSource\" matSort>\r\n                  <ng-container matColumnDef=\"slno\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> SL NO. </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row; let i = index\"> {{i+1}} </mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"plan_name\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> PLAN NAME</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.plan_name}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"plan_price\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> PRICE</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\">\r\n                      <span matPrefix>₹&nbsp;</span> {{row.plan_price | number : '1.2-2'}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"bestvalue\">\r\n                    <mat-header-cell *matHeaderCellDef> BEST VALUE</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\">\r\n  \r\n                      <mat-slide-toggle class=\"example-margin\" name=\"best\" [(ngModel)]=\"row.is_best_value\" (change)=\"onChange(row.id,row.is_best_value)\"\r\n                        [checked]=\"row.is_best_value\">\r\n  \r\n                      </mat-slide-toggle>\r\n                    </mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"action\">\r\n                    <mat-header-cell *matHeaderCellDef> ACTION</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\">\r\n                      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n                        <mat-icon>more_vert</mat-icon>\r\n                      </button>\r\n                      <mat-menu #menu=\"matMenu\">\r\n                        <!-- <button mat-menu-item disabled *ngIf=\"row.status==false\" (click)=\"getEditId(row._id)\" data-toggle=\"modal\" data-target=\"#myModal2\">\r\n                              <mat-icon><i class=\"material-icons\">mode_edit</i></mat-icon>\r\n                              <span>Edit</span>\r\n                        </button> -->\r\n                        <button mat-menu-item (click)=\"getEditId(row.id)\" data-toggle=\"modal\" data-target=\"#myModal2\" data-backdrop=\"static\" data-keyboard=\"false\">\r\n                          <mat-icon>\r\n                            <i class=\"material-icons\">mode_edit</i>\r\n                          </mat-icon>\r\n                          <span>Edit</span>\r\n                        </button>\r\n                        <button mat-menu-item (click)=\"getId(row.id)\" data-toggle=\"modal\" data-target=\"#deleteModal\" data-backdrop=\"static\" data-keyboard=\"false\">\r\n                          <mat-icon>\r\n                            <i class=\"material-icons\">delete</i>\r\n                          </mat-icon>\r\n                          <span>Delete</span>\r\n                        </button>\r\n                      </mat-menu>\r\n                    </mat-cell>\r\n                  </ng-container>\r\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                  <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                  </mat-row>\r\n                </mat-table>\r\n                <!-- <div class=\"col-md-15 \"> -->\r\n                <!-- <div *ngIf=\"showSpinnerDelete\" class=\"deletespinner\">\r\n                            <mat-spinner></mat-spinner>\r\n                         </div> -->\r\n  \r\n                <!-- </div> -->\r\n                <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n                  <div class=\"col-md-4 col-md-offset-4\">\r\n                    <mat-toolbar class=\"back-color\">No item found!</mat-toolbar>\r\n                  </div>\r\n                </div>\r\n                <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"add-button\">\r\n          <button type=\"button\" class=\"add-project\" data-toggle=\"modal\" data-target=\"#addModal\" data-backdrop=\"static\">+</button>\r\n        </div>\r\n        <!-- -------------------------Modal -add plan------------------------------ -->\r\n  \r\n        <div *ngIf=\"!reachMaxPlan\" id=\"addModal\" class=\"modal fade\">\r\n          <div class=\"modal-dialog\">\r\n  \r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn>&times;</button>\r\n                <h4 class=\"modal-title\">Add New Plan</h4>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n  \r\n                <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"addPlan(newPlan);\">\r\n  \r\n                  <div>\r\n                    <div class=\"example-container\">\r\n                      <mat-form-field>\r\n                        <input matInput placeholder=\"Plan Name\" name=\"plan_name\" [(ngModel)]=\"newPlan.plan_name\">\r\n                      </mat-form-field>\r\n                      <br>\r\n                      <mat-form-field>\r\n                        <span matPrefix>₹&nbsp;</span>\r\n                        <input matInput placeholder=\"Price\" type=\"number\" min=\"1\" class=\"example-right-align\" name=\"plan_price\" [(ngModel)]=\"newPlan.plan_price\">\r\n                        <!-- <span matSuffix>.00</span> -->\r\n                      </mat-form-field>\r\n                      <br>\r\n                      <mat-form-field>\r\n                        <mat-select placeholder=\"No of projects\" name=\"no_projects\" [(ngModel)]=\"newPlan.no_projects\">\r\n                          <mat-option value=\"Unlimited\">Unlimited</mat-option>\r\n                          <mat-option value=\"limited\">limited</mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                      <br>\r\n                      <mat-form-field *ngIf=\"newPlan.no_projects == 'limited'\">\r\n                        <input matInput placeholder=\"value\" type=\"number\" name=\"value1\" [(ngModel)]=\"newPlan.value1\" min=\"1\">\r\n                      </mat-form-field>\r\n                      <br>\r\n                      <mat-form-field>\r\n                        <mat-select placeholder=\"No of Members\" name=\"no_members\" [(ngModel)]=\"newPlan.no_members\">\r\n                          <mat-option value=\"Unlimited\">Unlimited</mat-option>\r\n                          <mat-option value=\"limited\">limited</mat-option>\r\n  \r\n                        </mat-select>\r\n  \r\n                      </mat-form-field>\r\n                      <br>\r\n                      <mat-form-field *ngIf=\"newPlan.no_members == 'limited'\">\r\n                        <input matInput placeholder=\"value\" type=\"number\" name=\"value2\" [(ngModel)]=\"newPlan.value2\" min=\"1\" >\r\n                      </mat-form-field>\r\n                      <br>\r\n                      <mat-form-field>\r\n                        <mat-select placeholder=\"No of Modules\" name=\"no_modules\" [(ngModel)]=\"newPlan.no_modules\">\r\n                          <mat-option value=\"Unlimited\">Unlimited</mat-option>\r\n                          <mat-option value=\"limited\">limited</mat-option>\r\n  \r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                      <br>\r\n                      <mat-form-field *ngIf=\"newPlan.no_modules == 'limited'\">\r\n                        <input matInput placeholder=\"value\" type=\"number\" name=\"value3\" [(ngModel)]=\"newPlan.value3\" min=\"1\" >\r\n                      </mat-form-field>\r\n                      <br>\r\n                      <mat-form-field>\r\n                        <mat-select placeholder=\"No of Tasks\" name=\"no_tasks\" [(ngModel)]=\"newPlan.no_tasks\">\r\n                          <mat-option value=\"Unlimited\">Unlimited</mat-option>\r\n                          <mat-option value=\"limited\">limited</mat-option>\r\n  \r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                      <br>\r\n                      <mat-form-field *ngIf=\"newPlan.no_tasks == 'limited'\">\r\n                        <input matInput placeholder=\"value\" type=\"number\" name=\"value4\" [(ngModel)]=\"newPlan.value4\" min=\"1\">\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <br>\r\n                  <!-- <div *ngIf=\"showSpinner\">\r\n                                      <mat-spinner></mat-spinner>\r\n                                     </div> -->\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                      <button type=\"submit\" class=\"btn round-button\">Submit</button>\r\n                    </div>\r\n                    <!-- <div class=\"col-md-8\" *ngIf=\"showSpinner\">\r\n                      <svg class=\"svgclass\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                        x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\"\r\n                        xml:space=\"preserve\">\r\n                        <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                          <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n                          />\r\n                        </path>\r\n                      </svg>\r\n                    </div> -->\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        <div *ngIf=\"reachMaxPlan\" id=\"addModal\" class=\"modal fade\">\r\n          <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">Error..! </h4>\r\n              </div>\r\n              <div class=\"modal-body delete-popup\">\r\n                <i class=\"fa fa-exclamation\"></i>\r\n                <h4 class=\"textalign\">Cant Add, Maximum number of plan reached</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n        <div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\r\n          <div class=\"modal-dialog\">\r\n  \r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">Delete </h4>\r\n              </div>\r\n              <!-- <div class=\"modal-header\"> -->\r\n              <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n              <!-- </div> -->\r\n              <div class=\"modal-body delete-popup\">\r\n                <i class=\"fa fa-exclamation\"></i>\r\n  \r\n  \r\n                <h4 class=\"textalign\">Are you sure?</h4>\r\n  \r\n              </div>\r\n  \r\n              <div class=\"modal-footer\" style=\"text-align:center;\">\r\n                <button type=\"button\" (click)=\"deletePlan(planId)\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Delete</button>\r\n              </div>\r\n            </div>\r\n  \r\n          </div>\r\n        </div>\r\n        <!-- ----------------------------------------------------------------------delete modal-------------------------------------------------------------------------- -->\r\n  \r\n        <!-- ----------------------------------------------------------------------edit modal-------------------------------------------------------------------------- -->\r\n        <div id=\"myModal2\" class=\"modal fade\">\r\n          <div class=\"modal-dialog\">\r\n  \r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn1>&times;</button>\r\n                <h4 class=\"modal-title\">Update Plan</h4>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n  \r\n                <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"updatePlan(plan);\">\r\n  \r\n                  <div class=\"form-group\">\r\n                    <div class=\"example-container\">\r\n  \r\n                      <mat-form-field>\r\n                        <input matInput placeholder=\"Plan Name\" name=\"plan_name\" [(ngModel)]=\"plan.plan_name\">\r\n                      </mat-form-field>\r\n                    \r\n                      <div *ngIf=\"!disablePrice\">\r\n                        <mat-form-field class=\"inputfileds\">\r\n  \r\n                          <input matInput placeholder=\"Price\" type=\"number\" min=\"1\" class=\"example-right-align\" name=\"plan_price\" [(ngModel)]=\"plan.plan_price\">\r\n                          <span matPrefix>₹&nbsp;</span>\r\n                          <!-- <span matSuffix>.00</span> -->\r\n  \r\n                        </mat-form-field>\r\n                      </div>\r\n                      <mat-form-field class=\"inputfileds\">\r\n                        <mat-select placeholder=\"No of projects\" name=\"noprojects\" [(ngModel)]=\"plan.noprojects\">\r\n  \r\n                          <mat-option value=\"Unlimited\">Unlimited</mat-option>\r\n                          <mat-option value=\"limited\">limited</mat-option>\r\n  \r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                      <mat-form-field *ngIf=\"plan.noprojects != 'Unlimited'\">\r\n                        <input matInput placeholder=\"value\" type=\"number\" name=\"value1\" [(ngModel)]=\"plan.no_projects\" min=\"1\">\r\n                      </mat-form-field>\r\n  \r\n                      <!-- <mat-form-field *ngIf=\"newPlan.no_projects == 'limited'\">\r\n                        <input matInput placeholder=\"value\" type=\"number\" name=\"value1\" [(ngModel)]=\"newPlan.value1\" min=\"1\">\r\n                      </mat-form-field> -->\r\n  \r\n                      <mat-form-field class=\"inputfileds\">\r\n                        <mat-select placeholder=\"No of members\" name=\"no_members\" [(ngModel)]=\"plan.nomembers\">\r\n  \r\n                          <mat-option value=\"Unlimited\">Unlimited</mat-option>\r\n                          <mat-option value=\"limited\">limited</mat-option>\r\n  \r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                      <mat-form-field *ngIf=\"plan.nomembers != 'Unlimited'\">\r\n                        <input matInput placeholder=\"value\" type=\"number\" name=\"value2\" [(ngModel)]=\"plan.no_members\" min=\"1\">\r\n                      </mat-form-field>\r\n  \r\n                      <mat-form-field class=\"inputfileds\">\r\n                        <mat-select placeholder=\"No of modules\" name=\"no_modules\" [(ngModel)]=\"plan.nomodules\">\r\n  \r\n                          <mat-option value=\"Unlimited\">Unlimited</mat-option>\r\n                          <mat-option value=\"limited\">limited</mat-option>\r\n  \r\n                        </mat-select>\r\n                   \r\n                      </mat-form-field>\r\n                      <mat-form-field *ngIf=\"plan.nomodules != 'Unlimited'\">\r\n                        <input matInput placeholder=\"value\" type=\"number\" name=\"value3\" [(ngModel)]=\"plan.no_modules\" min=\"1\">\r\n                      </mat-form-field>\r\n                      <mat-form-field class=\"inputfileds\">\r\n                        <mat-select placeholder=\"No of tasks\" name=\"no_tasks\" [(ngModel)]=\"plan.notasks\">\r\n  \r\n                          <mat-option value=\"Unlimited\">Unlimited</mat-option>\r\n                          <mat-option value=\"limited\">limited</mat-option>\r\n  \r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                      <mat-form-field *ngIf=\"plan.notasks != 'Unlimited'\">\r\n                        <input matInput placeholder=\"value\" type=\"number\" name=\"value4\" [(ngModel)]=\"plan.no_tasks\" min=\"1\">\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <!-- <div *ngIf=\"showSpinner\">\r\n              <mat-spinner></mat-spinner>\r\n             </div> -->\r\n                  <br>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                      <button type=\"submit\" class=\"btn round-button\">Update</button>\r\n                    </div>\r\n                    <!-- <div class=\"col-md-8\" *ngIf=\"showSpinner\">\r\n                      <svg class=\"svgclass\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                        x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\"\r\n                        xml:space=\"preserve\">\r\n                        <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                          <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n                          />\r\n                        </path>\r\n                      </svg>\r\n                    </div> -->\r\n  \r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- ----------------------------------------------------------------------edit modal-------------------------------------------------------------------------- -->\r\n      </div>\r\n    </div>\r\n   \r\n      <admin-footer></admin-footer>  \r\n   \r\n  \r\n  </body>"

/***/ }),

/***/ "../../../../../src/app/components/admin-plan/admin-plan.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminPlanComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var AdminPlanComponent = (function () {
    function AdminPlanComponent(adminService, routes, snackBar) {
        this.adminService = adminService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'plan_name', 'plan_price', 'bestvalue', 'action'];
        this.notExist = false;
        this.disablePrice = false;
        this.showSpinner = false;
        this.showSpinnerDelete = false;
        this.reachMaxPlan = false;
        this.plan = {
            plan_name: '',
            plan_price: '',
            no_projects: '',
            no_members: '',
            no_modules: '',
            no_tasks: '',
            noprojects: '',
            nomembers: '',
            nomodules: '',
            notasks: '',
        };
        this.newPlan = {
            plan_name: '',
            plan_price: '',
            no_projects: '',
            no_members: '',
            no_modules: '',
            no_tasks: '',
            value1: '',
            value2: '',
            value3: '',
            value4: ''
        };
    }
    AdminPlanComponent.prototype.ngOnInit = function () {
        this.getPlan();
    };
    AdminPlanComponent.prototype.getPlan = function () {
        var _this = this;
        this.reachMaxPlan = false;
        var users = [];
        // ---------------------------------Start-------------------------------------------
        // Function      : get all plans
        // Params        : 
        // Returns       : 
        // Author        : Rinsha
        // Date          : 05-03-2018
        // Last Modified : 05-03-2018, Rinsha
        // Desc          : getAllplans 
        this.adminService.getAllplans().subscribe(function (data) {
            _this.showSpinnerDelete = false;
            // console.log(data);
            if (data.length == 0) {
                _this.notExist = true;
            }
            if (data.length == "4") {
                _this.reachMaxPlan = true;
            }
            _this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
            _this.dataSource.paginator = _this.paginator;
            _this.dataSource.sort = _this.sort;
        });
        // ---------------------------------End-------------------------------------------
    };
    // ---------------------------------Start-------------------------------------------
    // Function      : add plan
    // Params        : data from form
    // Returns       : 
    // Author        : Rinsha
    // Date          : 07-03-2018
    // Last Modified : 07-03-2018, Rinsha
    // Desc          : add plan 
    // console.log(plan);
    AdminPlanComponent.prototype.addPlan = function (plan) {
        var _this = this;
        if (this.newPlan.no_projects == 'limited' && this.newPlan.value1 == '') {
            var snackBarRef = this.snackBar.open('No of project is required ', '', {
                duration: 3000
            });
        }
        else if (this.newPlan.no_members == 'limited' && this.newPlan.value2 == '') {
            var snackBarRef = this.snackBar.open('No of members is required ', '', {
                duration: 3000
            });
        }
        else if (this.newPlan.no_modules == 'limited' && this.newPlan.value3 == '') {
            var snackBarRef = this.snackBar.open('No of modules is required', '', {
                duration: 3000
            });
        }
        else if (this.newPlan.no_tasks == 'limited' && this.newPlan.value4 == '') {
            var snackBarRef = this.snackBar.open('No of tasks is required ', '', {
                duration: 3000
            });
        }
        else {
            this.adminService.addPlan(plan).subscribe(function (data) {
                if (data.success == true) {
                    var snackBarRef = _this.snackBar.open(data.msg, '', {
                        duration: 3000
                    });
                    _this.closeBtn.nativeElement.click();
                    _this.getPlan();
                    _this.newPlan = {
                        plan_name: '',
                        plan_price: '',
                        no_projects: '',
                        no_members: '',
                        no_modules: '',
                        no_tasks: '',
                        value1: '',
                        value2: '',
                        value3: '',
                        value4: ''
                    };
                }
                else {
                    var snackBarRef = _this.snackBar.open(data.msg, '', {
                        duration: 3000
                    });
                }
            });
        }
        // ---------------------------------End-------------------------------------------
    };
    AdminPlanComponent.prototype.updatePlan = function (plan) {
        var _this = this;
        console.log(plan);
        if (this.plan.noprojects == 'limited' && (this.plan.no_projects == null || this.plan.no_projects == 'Unlimited')) {
            var snackBarRef = this.snackBar.open('No of project is required ', '', {
                duration: 3000
            });
        }
        else if (this.plan.nomembers == 'limited' && (this.plan.no_members == null || this.plan.no_members == 'Unlimited')) {
            var snackBarRef = this.snackBar.open('No of members is required ', '', {
                duration: 3000
            });
        }
        else if (this.plan.nomodules == 'limited' && (this.plan.no_modules == null || this.plan.no_modules == 'Unlimited')) {
            var snackBarRef = this.snackBar.open('No of modules is required', '', {
                duration: 3000
            });
        }
        else if (this.plan.notasks == 'limited' && (this.plan.no_tasks == null || this.plan.no_tasks == 'Unlimited')) {
            var snackBarRef = this.snackBar.open('No of tasks is required ', '', {
                duration: 3000
            });
        }
        else {
            this.adminService.updatePlan(plan).subscribe(function (data) {
                if (data.success == true) {
                    var snackBarRef = _this.snackBar.open(data.msg, '', {
                        duration: 3000
                    });
                    _this.closeBtn1.nativeElement.click();
                    _this.newPlan = {
                        plan_name: '',
                        plan_price: '',
                        no_projects: '',
                        no_members: '',
                        no_modules: '',
                        no_tasks: '',
                        value1: '',
                        value2: '',
                        value3: '',
                        value4: ''
                    };
                    _this.getPlan();
                }
                else {
                    var snackBarRef = _this.snackBar.open(data.msg, '', {
                        duration: 3000
                    });
                }
            });
        }
    };
    // } else if (this.plan.no_members == 'limited' && this.plan.value2 == '') {
    //   let snackBarRef = this.snackBar.open('No of members is required ', '', {
    //     duration: 3000
    //   });
    // } else if (this.plan.no_modules == 'limited' && this.plan.value3 == '') {
    //   let snackBarRef = this.snackBar.open('No of modules is required', '', {
    //     duration: 3000
    //   });
    // } else if (this.plan.no_tasks == 'limited' && this.plan.value4 == '') {
    //   let snackBarRef = this.snackBar.open('No of tasks is required ', '', {
    //     duration: 3000
    //   });
    // }
    AdminPlanComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    AdminPlanComponent.prototype.onChange = function (id, value) {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : best plan
        // Params        : id and value
        // Returns       : 
        // Author        : Rinsha
        // Date          : 07-03-2018
        // Last Modified : 07-03-2018, Rinsha
        // Desc          : to change a plan to best
        this.adminService.bestPlan(id, value).subscribe(function (data2) {
            if (data2.success == true) {
                _this.getPlan();
            }
            else {
            }
        });
        // ---------------------------------End-------------------------------------------
    };
    AdminPlanComponent.prototype.deletePlan = function (id) {
        var _this = this;
        // console.log(id);
        // ---------------------------------Start-------------------------------------------
        // Function      : delete plan
        // Params        : id 
        // Returns       : 
        // Author        : Rinsha
        // Date          : 07-03-2018
        // Last Modified : 07-03-2018, Rinsha
        // Desc          : to delete a plan which is'nt used by any company
        this.adminService.deletePlan(id).subscribe(function (data2) {
            if (data2.success == true) {
                var snackBarRef = _this.snackBar.open(data2.msg, '', {
                    duration: 2000
                });
                _this.getPlan();
            }
            else {
                var snackBarRef = _this.snackBar.open(data2.msg, '', {
                    duration: 2000
                });
            }
        });
        // ---------------------------------End-------------------------------------------
    };
    AdminPlanComponent.prototype.getId = function (id) {
        this.planId = id;
    };
    AdminPlanComponent.prototype.getEditId = function (id) {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : get plan by id
        // Params        : id
        // Returns       : plan
        // Author        : Rinsha
        // Date          : 07-03-2018
        // Last Modified : 07-03-2018, Rinsha
        // Desc          : getplan
        this.adminService.getPlan(id).subscribe(function (res) {
            // console.log(res);
            _this.disablePrice = false;
            _this.plan = res;
            _this.plan.noprojects = (res.no_projects != 'Unlimited') ? "limited" : "Unlimited";
            _this.plan.nomembers = (res.no_members != 'Unlimited') ? "limited" : "Unlimited";
            _this.plan.nomodules = (res.no_modules != 'Unlimited') ? "limited" : "Unlimited";
            _this.plan.notasks = (res.no_tasks != 'Unlimited') ? "limited" : "Unlimited";
            console.log(res.is_defualt);
            if (res.is_defualt == true) {
                _this.disablePrice = true;
            }
        });
        // ---------------------------------End-------------------------------------------
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AdminPlanComponent.prototype, "closeBtn", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn1'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], AdminPlanComponent.prototype, "closeBtn1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], AdminPlanComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], AdminPlanComponent.prototype, "sort", void 0);
    AdminPlanComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-admin-plan',
            template: __webpack_require__("../../../../../src/app/components/admin-plan/admin-plan.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/admin-plan/admin-plan.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_admin_service__["a" /* AdminService */], __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], AdminPlanComponent);
    return AdminPlanComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/admin-project-report/admin-project-report.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n \r\n  .mat-form-field {\r\n    /* font-size: 14px; */\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n\r\n  .example-container > * {\r\n    width: 100%;\r\n  }\r\n\r\n.mat-form-field-infix {\r\n  display: block;\r\n  position: relative;\r\n  -ms-flex: auto;\r\n      flex: auto;\r\n  min-width: 0;\r\n  width: 180px;\r\n}\r\n\r\n.loader{width:100%;}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\n  padding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\n  font-family: Roboto, Arial, sans-serif;\r\n  margin: 0;\r\n}\r\n\r\n.basic-container {\r\n  padding: 5px;\r\n}\r\n\r\n.version-info {\r\n  font-size: 8pt;\r\n  float: right;\r\n}\r\n.round-button{\r\n  float:none !important;\r\n}\r\n.center-bt {\r\n    margin: 20px auto 10px auto;\r\n    float: none;\r\n}\r\n\r\n@page { margin: 0; }\r\n@media print {\r\n       @page { margin: 0; }\r\n}\r\n\r\n.back-color{\r\n  color: #757575;\r\n  background-color:#f6f7fa !important;\r\n}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.optionz{    background-color: #fff;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  margin: 10px 0;\r\n  padding-top: 10px;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/admin-project-report/admin-project-report.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n      <div class=\"col-md-1 col-xs-2 display-table-cell v-align box\" id=\"navigation\">\r\n        <company-sidebar></company-sidebar>\r\n      </div>\r\n      <company-topbar></company-topbar>\r\n      <br>\r\n      <div class=\"col-md-12 col-xs-9\">\r\n        <div class=\"col-md-12\">\r\n          <h2 _ngcontent-c16=\"\">Project Report</h2>\r\n          <ul _ngcontent-c16=\"\" class=\"breadcrumb\">\r\n            <li _ngcontent-c16=\"\">\r\n              <a _ngcontent-c16=\"\">Report</a>\r\n            </li>\r\n\r\n\r\n            <li _ngcontent-c16=\"\">Project Report</li>\r\n          </ul>\r\n        </div>\r\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n        <div class=\"pull-right\">\r\n          <button id=\"create\" class=\"btn round-button\" (click)=\"exportPdf()\">Export Pdf</button>\r\n          <input type=\"button\" class=\"btn round-button\" (click)=\"tableToExcel('testTable', 'taskit')\" value=\"Export to Excel\">\r\n          <button id=\"create\" class=\"btn round-button\" (click)=\"PrintDiv()\">Print</button>\r\n        </div>\r\n        <div class=\"row\">\r\n\r\n          <div class=\"col-md-12\">\r\n            <div class=\"col-md-12\">\r\n              <div class=\"optionz\">\r\n                <!-- <div class=\"col-md-12\" *ngIf=\"showxData\"> -->\r\n                <div class=\"col-md-2\">\r\n\r\n                  <input type=\"text\" class=\"form-control form-control2\" name=\"daterangeInput\" daterangepicker [options]=\"options\" (selected)=\"selectedStartDate($event, daterange)\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-md-2\">\r\n                  <mat-form-field>\r\n                    <input matInput (keyup)=\"applyFilter()\" [(ngModel)]=\"filters.filterText\" placeholder=\"Filter\">\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"col-md-2\">\r\n                  <mat-form-field>\r\n                    <mat-select placeholder=\"Projects\" [(ngModel)]=\"filters.selProj\" (change)=\"getEstimation()\">\r\n                      <mat-option [value]=\"'All'\"> All</mat-option>\r\n                      <mat-option [value]=\"item.id\" *ngFor=\"let item of projects\">\r\n                        {{item.project_name}}\r\n                      </mat-option>\r\n\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n\r\n                </div>\r\n\r\n\r\n                <div class=\"col-md-2\">\r\n                  <mat-form-field>\r\n                    <mat-select placeholder=\"Category\" [(ngModel)]=\"filters.selCat\" (change)=\"getEstimation()\">\r\n                      <mat-option [value]=\"'All'\">All</mat-option>\r\n                      <mat-option [value]=\"item.id\" *ngFor=\"let item of category\">\r\n                        {{item.category_name}}\r\n                      </mat-option>\r\n\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!--      <div class=\"col-md-2\" >\r\n                      <mat-form-field>\r\n                          <mat-select placeholder=\"Status\" [(ngModel)]=\"filters.status\" (change)=\"getEstimation()\">\r\n                              <mat-option [value]=\"'All'\" >All</mat-option>\r\n                              <mat-option [value]=\"item.status\" *ngFor=\"let item of projects \">\r\n                                  {{item.status}}\r\n                              </mat-option>\r\n                           \r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                </div> -->\r\n            <!-- <div class=\"col-md-2\" >\r\n                    <div *ngIf=\"showPMlist\">\r\n                    <mat-form-field>\r\n                        <mat-select placeholder=\"Project Manager\" [(ngModel)]=\"filters.pm\" (change)=\"getEstimation()\">\r\n                            <mat-option [value]=\"'All'\" >All</mat-option>\r\n                            <mat-option *ngFor=\"let item of pm\" [value]=\"item.login_id\">\r\n                                {{ item.f_name }} {{ item.l_name }}\r\n                            </mat-option>\r\n                         \r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                      </div>\r\n              </div> -->\r\n\r\n\r\n\r\n\r\n            <div class=\"col-md-12\">\r\n\r\n              <div class=\"example-container mat-elevation-z8\">\r\n\r\n\r\n                <mat-table [dataSource]=\"dataSource\" matSort>\r\n                  <ng-container matColumnDef=\"slno\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> SL NO. </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row; let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"project_name\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Project Name</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.prj.project_name}} </mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"project_code\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Project Code</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.prj.project_code}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"sdate\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Planned Start Date</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.prj?.planned_start_date | date: 'yyyy-MM-dd HH:mm a'}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"edate\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Planned End Date</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.prj?.planned_end_date | date: 'yyyy-MM-dd HH:mm a'}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"ttl_hr\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Total Hours</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.ttlHr}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"category\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Category</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.prj?.tbl_project_category.category_name}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"status\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Status</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.prj?.status}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"team_head\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Team Head</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\">\r\n                      <div *ngIf=\"row.prj.Pm_id.role_id=='3' && row.prj.Pm_id.tbl_user_profiles.length > 0\">\r\n                        {{row.prj.Pm_id.tbl_user_profiles[0].f_name}} {{row.prj.Pm_id.tbl_user_profiles[0].l_name}}\r\n                      </div>\r\n                      <div *ngIf=\"row.prj.Pm_id.role_id=='1'\">\r\n                        {{row.prj.Pm_id.tbl_companies[0].cmp_name}}\r\n                      </div>\r\n                    </mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"project_cost\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Project Cost</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.prj?.project_cost}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"action\">\r\n                    <mat-header-cell *matHeaderCellDef> ACTION</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\">\r\n                      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n                        <mat-icon>more_vert</mat-icon>\r\n                      </button>\r\n                      <mat-menu #menu=\"matMenu\" class=\"matdropdown\">\r\n                        <button mat-menu-item (click)=\"viewProject(row.prj?.id)\" *ngIf=\"(row.prj?.status == 'Planned' || row.prj?.status == 'Completed' || row.prj?.status == 'In Progress' )&& (row.assignee_id == loggedin_id || row.pm_id == loggedin_id)\">\r\n                          <mat-icon>\r\n                            <i class=\"material-icons\">description</i>\r\n                          </mat-icon>\r\n                          <span>View Project</span>\r\n                        </button>\r\n\r\n                      </mat-menu>\r\n                    </mat-cell>\r\n                  </ng-container>\r\n\r\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                  <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                  </mat-row>\r\n                </mat-table>\r\n                <div *ngIf=\"showSpinner\">\r\n                  <app-spinner></app-spinner>\r\n                </div>\r\n                <!-- <div class=\"col-md-15 \"> -->\r\n                <!-- <div *ngIf=\"showSpinnerDelete\" class=\"deletespinner\">\r\n                          <mat-spinner></mat-spinner>\r\n                       </div> -->\r\n\r\n                <!-- </div> -->\r\n\r\n                <div class=\"col-md-12 noItemFound\" *ngIf=\"projectsFlt.length == 0\">\r\n                  <div class=\"col-md-4 col-md-offset-4\">\r\n                    <mat-toolbar class=\"back-color\">No item found!</mat-toolbar>\r\n                  </div>\r\n                </div>\r\n                <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div *ngIf=\"reachMaxPlan\" id=\"addModal\" class=\"modal fade\">\r\n        <div class=\"modal-dialog\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n              <h4 class=\"modal-title\">Error..! </h4>\r\n            </div>\r\n            <div class=\"modal-body delete-popup\">\r\n              <i class=\"fa fa-exclamation\"></i>\r\n              <h4 class=\"textalign\">Cant Add, Maximum number of plan reached</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div id=\"dvContents\" style=\"display: none;\">\r\n        <table class=\"table\" id=\"testTable\">\r\n          <tr style=\"background-color: #CCC\">\r\n            <th>Sl No.</th>\r\n            <th>Project Name</th>\r\n            <th>Code</th>\r\n            <th>Planned Start Date</th>\r\n            <th>Planned End Date</th>\r\n            <th>Total Hours</th>\r\n            <th>Category</th>\r\n            <th>Status</th>\r\n            <th>Team Head</th>\r\n            <th>Team Members</th>\r\n          </tr>\r\n          <tr *ngFor=\"let project of projectsFlt; let i=index\">\r\n            <td>{{i+1}}</td>\r\n            <td>{{project.prj.project_name}}</td>\r\n            <td>{{project.prj.project_code}}</td>\r\n            <td>{{project.prj?.planned_start_date | date: 'yyyy-MM-dd HH:mm a'}}</td>\r\n            <td>{{project.prj?.planned_end_date | date: 'yyyy-MM-dd HH:mm a'}}</td>\r\n            <td>{{project.ttlHr}}</td>\r\n            <td>{{project.prj?.tbl_project_category.category_name}}</td>\r\n            <td>{{project.prj?.status}}</td>\r\n            <td>\r\n              <div *ngIf=\"project.prj.Pm_id.role_id=='3' && project.prj.Pm_id.tbl_user_profiles.length > 0\">\r\n                {{project.prj.Pm_id.tbl_user_profiles[0].f_name}} {{project.prj.Pm_id.tbl_user_profiles[0].l_name}}\r\n              </div>\r\n              <div *ngIf=\"project.prj.Pm_id.role_id=='1'\">\r\n                {{project.prj.Pm_id.tbl_companies[0].cmp_name}}\r\n              </div>\r\n            </td>\r\n            <td>\r\n              <div *ngFor=\"let member of project.members\"> {{member.f_name}} {{member.l_name}}</div>\r\n            </td>\r\n          </tr>\r\n          <tr *ngIf=\"projects.length == 0\">\r\n            <td colspan=\"10\" style=\"text-align:center\">No item found!</td>\r\n\r\n          </tr>\r\n\r\n        </table>\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n  </div>\r\n  <!-- <footer></footer>  -->\r\n\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/admin-project-report/admin-project-report.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminProjectReportComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var AdminProjectReportComponent = (function () {
    function AdminProjectReportComponent(adminService, companyService, routes, snackBar) {
        this.adminService = adminService;
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'project_name', 'project_code', 'sdate', 'edate', 'category', 'status', 'ttl_hr', 'team_head', 'project_cost', 'action'];
        this.projects = [];
        this.category = [];
        this.pm = [];
        this.projectsFlt = [];
        this.showPMlist = false;
        this.showSpinner = false;
        this.filters = {
            sDate: new Date,
            eDate: new Date,
            filterText: '',
            selProj: 'All',
            selCat: 'All',
            pm: 'All',
            status: 'All',
            filetype: ''
        };
        this.options = {
            locale: { format: 'DD-MM-YYYY' },
            alwaysShowCalendars: false,
        };
    }
    AdminProjectReportComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.companyService.getLoggedinEntity().subscribe(function (data) {
            // console.log(data);
            _this.entity = data;
            if (_this.entity.role_id != 3) {
                _this.showPMlist = true;
            }
        });
        this.companyService.getAllPm().subscribe(function (res) {
            _this.pm = res;
        });
        this.getEstimation();
        this.companyService.getAllprojectcategory().subscribe(function (data) {
            _this.category = data;
            // console.log(data);
        });
        this.companyService.getAllProject().subscribe(function (data) {
            console.log(data);
            _this.projects = data;
        });
    };
    AdminProjectReportComponent.prototype.getEstimation = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getEstimatedProject
        // Params        : 
        // Returns       : 
        // Author        : Yasir Poongadan
        // Date          : 07-04-2018
        // Last Modified : 07-04-2018, Yasir Poongadan
        // Desc          : get Estimated Project 
        this.adminService.getProjectReport(this.filters).subscribe(function (data) {
            // data.project_name = data.tbl_project.project_name;
            // console.log(data);
            _this.projectsFlt = data;
            _this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
            _this.dataSource.paginator = _this.paginator;
            _this.dataSource.sort = _this.sort;
        });
        // ---------------------------------End-------------------------------------------
    };
    AdminProjectReportComponent.prototype.applyFilter = function () {
        var filterValue = this.filters.filterText;
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    AdminProjectReportComponent.prototype.selectedStartDate = function (value, datepicker) {
        this.filters.sDate = value.start;
        this.filters.eDate = value.end;
        this.getEstimation();
    };
    AdminProjectReportComponent.prototype.PrintDiv = function () {
        var mywindow = window.open('', 'PRINT', 'height=400,width=600');
        mywindow.document.write('<html><head><title>' + document.title + '</title>');
        mywindow.document.write('</head><body >');
        mywindow.document.write('<h1>' + document.title + '</h1>');
        mywindow.document.write(document.getElementById('dvContents').innerHTML);
        mywindow.document.write('</body></html>');
        mywindow.document.close(); // necessary for IE >= 10
        mywindow.focus(); // necessary for IE >= 10*/
        mywindow.print();
        mywindow.close();
        return true;
        // var contents = document.getElementById("dvContents").innerHTML;       
        // var printContents = document.getElementById("dvContents").innerHTML;
        // var originalContents = document.body.innerHTML;
        // document.body.innerHTML = printContents;
        // window.print();
        // document.body.innerHTML = originalContents;
    };
    AdminProjectReportComponent.prototype.viewProject = function (id) {
        this.routes.navigate(['/view-project', id]);
    };
    AdminProjectReportComponent.prototype.exportPdf = function () {
        var _this = this;
        this.showSpinner = true;
        this.filters.filetype = 'pdf';
        this.adminService.projectReportpdf(this.filters).subscribe(function (res) {
            _this.showSpinner = false;
            var url = window.URL.createObjectURL(res.data);
            var a = document.createElement('a');
            document.body.appendChild(a);
            a.setAttribute('style', 'display: none');
            a.href = url;
            a.download = res.filename;
            a.click();
            window.URL.revokeObjectURL(url);
            a.remove(); // remove the element
            /* window.open(url) */
        });
        /*  var doc = new jsPDF();
         var col = ["Project Name", "Code",'Planned Start Date','Planned End Date','Total Hours','Category','Status','Team Head','Team Members'];
         var rows = [];
         var members = '';
         this.projectsFlt.forEach((data, key) => {
           members = '';
           data.members.forEach((d,k) => {
             members += d.f_name + ' ' +  d.l_name + ', ';
           })
          let pm = '';
           if(data.prj.Pm_id.role_id=='3' && data.prj.Pm_id.tbl_user_profiles.length > 0){
             pm = data.prj.Pm_id.tbl_user_profiles[0].f_name + ' ' +data.prj.Pm_id.tbl_user_profiles[0].l_name;
           }
           if(data.prj.Pm_id.role_id=='1'){
             pm = data.prj.Pm_id.tbl_companies[0].cmp_name;
           }
           var temp = [
             // data.prj.project_name,
             // data.prj.project_code,
             // data.prj.createdAt,
             // data.estimation_hour,
             // data.tbl_project_estimation_team.tbl_user_profile.f_name + ' ' + data.tbl_project_estimation_team.tbl_user_profile.l_name ,
             // members
     
             data.prj.project_name,
             data.prj.project_code,
             data.prj.planned_start_date,
             data.prj.planned_end_date,
             data.ttlHr,
             data.prj.tbl_project_category.category_name,
             data.prj.status,
             pm,
             members
           ];
           rows.push(temp);
         });
     
         // console.log(rows);
         doc.autoTable(col, rows,
           {
             margin: { horizontal: 7 },
             overflow : 'linebreak',
         });
     
         doc.save('Test.pdf'); */
    };
    AdminProjectReportComponent.prototype.tableToExcel = function (table, name) {
        var _this = this;
        this.showSpinner = true;
        this.filters.filetype = 'excel';
        this.adminService.projectReportexcel(this.filters).subscribe(function (res) {
            _this.showSpinner = false;
            var url = window.URL.createObjectURL(res.data);
            var a = document.createElement('a');
            document.body.appendChild(a);
            a.setAttribute('style', 'display: none');
            a.href = url;
            a.download = res.filename;
            a.click();
            window.URL.revokeObjectURL(url);
            a.remove(); // remove the element
            /* window.open(url) */
        });
        /*  let uri = 'data:application/vnd.ms-excel;base64,'
             , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--><meta http-equiv="content-type" content="text/plain; charset=UTF-8"/></head><body><table>{table}</table></body></html>'
             , base64 = function(s) { return window.btoa(decodeURIComponent(encodeURIComponent(s))) }
             , format = function(s, c) { return s.replace(/{(\w+)}/g, function(m, p) { return c[p]; }) }
                 if (!table.nodeType) table = document.getElementById(table)
                 var ctx = {worksheet: name || 'Worksheet', table: table.innerHTML}
                 window.location.href = uri + base64(format(template, ctx)) */
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], AdminProjectReportComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], AdminProjectReportComponent.prototype, "sort", void 0);
    AdminProjectReportComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'admin-project-report',
            template: __webpack_require__("../../../../../src/app/components/admin-project-report/admin-project-report.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/admin-project-report/admin-project-report.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_admin_service__["a" /* AdminService */],
            __WEBPACK_IMPORTED_MODULE_3__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], AdminProjectReportComponent);
    return AdminProjectReportComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/admin-sidebar/admin-sidebar.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/admin-sidebar/admin-sidebar.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"logo\">\r\n    <a><img src=\"./assets/images/logo.jpg\" alt=\"\" class=\"\">\r\n   \r\n</a>\r\n</div>\r\n\r\n<nav class=\"navbar navbar-default\">\r\n\r\n<!-- Brand and toggle get grouped for better mobile display -->\r\n<div class=\"navbar-header\">\r\n  <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\r\n    <span class=\"sr-only\">Toggle navigation</span>\r\n    <span class=\"icon-bar\"></span>\r\n    <span class=\"icon-bar\"></span>\r\n    <span class=\"icon-bar\"></span>\r\n  </button>\r\n \r\n</div>\r\n\r\n<!-- Collect the nav links, forms, and other content for toggling -->\r\n<div class=\"collapse navbar-collapse navi\" id=\"bs-example-navbar-collapse-1\">\r\n    <ul class=\"zx nav navbar-nav\">\r\n        <li  [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\r\n          <a routerLink=\"/admin-dashboard\"><i class=\"fa fa-desktop\" aria-hidden=\"true\"></i><span class=\"\">Dashboard</span></a></li>\r\n        <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\r\n          <a routerLink=\"/admin-company\"><i class=\"fa fa-building-o\"></i> Company</a></li>\r\n        <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\r\n          <a routerLink=\"/admin-plan\"><i class=\"fa fa-file-text\" aria-hidden=\"true\"></i><span class=\"\">Plan</span></a></li>\r\n    </ul>\r\n \r\n \r\n</div><!-- /.navbar-collapse -->\r\n\r\n</nav>\r\n<div class=\"footerlink\">\r\n    <i class=\"fa fa-facebook\" aria-hidden=\"true\"></i>\r\n    <i class=\"fa fa-twitter\" aria-hidden=\"true\"></i>\r\n    <i class=\"fa fa-google\" aria-hidden=\"true\"></i>\r\n    <p>Copyright 2018  All Rights Reserved.</p>\r\n   </div>"

/***/ }),

/***/ "../../../../../src/app/components/admin-sidebar/admin-sidebar.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminSidebarComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var AdminSidebarComponent = (function () {
    function AdminSidebarComponent(routes, adminService) {
        this.routes = routes;
        this.adminService = adminService;
    }
    AdminSidebarComponent.prototype.ngOnInit = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : Get logged in entity
        // Params        : 
        // Returns       : Get logged in entity
        // Author        : Rinsha
        // Date          : 20-04-2018
        // Last Modified : 20-04-2018, Rinsha
        // Desc          :  
        this.adminService.getLoggedinEntity().subscribe(function (data) {
            if (data == null || data == '') {
                _this.routes.navigate(['/home']);
            }
            if (data.role_id == 2) {
                //super admin
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/home']);
                }
                // this.routes.navigate(['/admin-dashboard']);
            }
            if (data.role_id == 3 || data.role_id == 1) {
                //company admin or pm
                if (data.delete_status == true || data.block_status == true || data.cmp_status == "Not Verified") {
                    _this.routes.navigate(['/company-login']);
                }
                if (data.cmp_status == "Expired") {
                    _this.routes.navigate(['/expired']);
                }
                if (data.is_profile_completed == false) {
                    _this.routes.navigate(['/compay-aditninfo', data.cmp_id]);
                }
                _this.routes.navigate(['/company-dashboard']);
            }
            if (data.role_id == 4) {
                //user
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/company-login']);
                }
                _this.routes.navigate(['/user-dashboard']);
            }
        });
        // -----------------------------------End------------------------------------------
    };
    AdminSidebarComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'admin-sidebar',
            template: __webpack_require__("../../../../../src/app/components/admin-sidebar/admin-sidebar.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/admin-sidebar/admin-sidebar.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__angular_router__["Router"],
            __WEBPACK_IMPORTED_MODULE_1__services_admin_service__["a" /* AdminService */]])
    ], AdminSidebarComponent);
    return AdminSidebarComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/admin-subscribed/admin-subscribed.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n\r\n\r\n\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/admin-subscribed/admin-subscribed.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n  \r\n  <!-- <p>You selected: {{selected}} </p> -->\r\n\r\n  <div class=\"col-md-12\">\r\n    <div class=\"row\">\r\n    <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\" >\r\n        <div class=\"\"  >\r\n            <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n            width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n        <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n          <animateTransform attributeType=\"xml\"\r\n            attributeName=\"transform\"\r\n            type=\"rotate\"\r\n            from=\"0 25 25\"\r\n            to=\"360 25 25\"\r\n            dur=\"0.6s\"\r\n            repeatCount=\"indefinite\"/>\r\n          </path>\r\n        </svg>\r\n    </div>\r\n    </div> -->\r\n    \r\n\r\n    <div class=\"col-md-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-10\">\r\n              <div class=\"example-header\">\r\n                  <mat-form-field>\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                  </mat-form-field>\r\n                </div>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n              <div *ngIf=\"all_value\">\r\n              <mat-form-field class=\"filter\"> \r\n                  \r\n                    <mat-select  (change)=\"refresh()\" [(value)]=\"selected\">\r\n                      <!-- <mat-option>None</mat-option> -->\r\n                      <mat-option value=\"all\">All</mat-option>\r\n                      <mat-option value=\"Active\">Active</mat-option>\r\n                      <mat-option value=\"Block\">Block</mat-option>\r\n                      <mat-option value=\"Delete\">Delete </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n<!--    \r\n          <div class=\"example-header\" >\r\n              <mat-form-field>\r\n                <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n              </mat-form-field>\r\n          </div> -->\r\n       \r\n    <div class=\"example-container mat-elevation-z8 \">\r\n  <mat-table [dataSource]=\"dataSource\" matSort>\r\n <!-- Name Column -->\r\n <ng-container matColumnDef=\"slno\">\r\n    <mat-header-cell *matHeaderCellDef >Sl_No </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row;let i = index\">{{(paginator.pageIndex * paginator.pageSize) + (i+1)}} </mat-cell>\r\n  </ng-container>\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"cmp_name\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>COMPANY NAME </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.cmp_name}} </mat-cell>\r\n    </ng-container>\r\n\r\n <!-- Name Column -->\r\n <ng-container matColumnDef=\"email\">\r\n  <mat-header-cell *matHeaderCellDef mat-sort-header> EMAIL </mat-header-cell>\r\n  <mat-cell *matCellDef=\"let row\"> {{row.tbl_login.email}} </mat-cell>\r\n</ng-container>\r\n  \r\n   <!-- Progress Column -->\r\n   <ng-container matColumnDef=\"contactnumber\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> CONTACT NUMBER </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\"> {{row.contact_no}}</mat-cell>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"companystatus\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> COMPANY STATUS </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\"> {{row.tbl_login.cmp_status}}</mat-cell>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"plan\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header>PLAN SUBSCRIBED </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\"> {{row.tbl_plan.plan_name}}</mat-cell>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"status\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> STATUS </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">\r\n        <div *ngIf=\"row.tbl_login.block_status==false && row.tbl_login.delete_status==false\"> Active</div>\r\n        <div *ngIf=\"row.tbl_login.block_status==true && row.tbl_login.delete_status==false\"> Blocked</div>\r\n        <div *ngIf=\" row.tbl_login.delete_status==true\"> Deleted</div>\r\n      </mat-cell>\r\n    </ng-container>\r\n  <ng-container matColumnDef=\"action\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\">\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button *ngIf=\"row.tbl_login.delete_status==false\" (click)=\"getId(row.tbl_login.id)\" data-toggle=\"modal\" data-target=\"#deleteModal\" mat-menu-item >\r\n                <i class=\"material-icons\">delete</i>\r\n              <span>Delete</span>\r\n            </button>\r\n            <button *ngIf=\"row.tbl_login.delete_status==true\" mat-menu-item disabled>\r\n              <i class=\"material-icons\">delete_forever</i>\r\n            <span>Deleted</span>\r\n          </button>\r\n            <button *ngIf=\"row.tbl_login.block_status==false && row.tbl_login.delete_status==false\" (click)=\"blockCompany(row.tbl_login.id)\" mat-menu-item>\r\n                <i class=\"material-icons\">block</i>\r\n              <span>Block</span>\r\n            </button>\r\n            <button *ngIf=\"row.tbl_login.block_status==true && row.tbl_login.delete_status==false\" (click)=\"unblockCompany(row.tbl_login.id)\" mat-menu-item>\r\n                <i class=\"material-icons\">block</i>\r\n              <span>Unblock</span>\r\n            </button>\r\n            \r\n          </mat-menu>\r\n       \r\n      </mat-cell>\r\n  </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n    </mat-row>\r\n  </mat-table>\r\n  <div class=\"col-md-15 \">\r\n      <!-- <div *ngIf=\"showSpinner\" class=\"deletespinner\">\r\n          <mat-spinner></mat-spinner>\r\n         </div> -->\r\n  </div>\r\n  <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n      <div class=\"col-md-4 col-md-offset-4\">\r\n          <mat-toolbar   class=\"back-color\">No item found!</mat-toolbar>\r\n      </div>\r\n    </div>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n</div>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n<!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n\r\n<div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n      <!-- Modal content-->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n          <h4 class=\"modal-title\">Delete </h4>\r\n        </div>\r\n        <!-- <div class=\"modal-header\"> -->\r\n        <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n        <!-- </div> -->\r\n        <div class=\"modal-body delete-popup\">\r\n          <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n          <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" (click)=\"deleteCompany(id)\" class=\"btn round-button\" data-dismiss=\"modal\">Delete</button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>"

/***/ }),

/***/ "../../../../../src/app/components/admin-subscribed/admin-subscribed.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminSubscribedComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AdminSubscribedComponent = (function () {
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin user management
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 29-12-2017 
    // Last Modified : 03-01-2018
    // Desc          : All users
    function AdminSubscribedComponent(adminService, routes, snackBar) {
        this.adminService = adminService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'cmp_name', 'email', 'contactnumber', 'companystatus', 'plan', 'status', 'action'];
        this.notExist = false;
        this.selected = 'all';
        this.all_value = false;
        this.showSpinner = false;
    }
    AdminSubscribedComponent.prototype.refresh = function () {
        var _this = this;
        this.showSpinner = true;
        var company = [];
        if (this.selected == 'all') {
            this.adminService.getAllsubcompanies().subscribe(function (data) {
                console.log(data);
                if (data.length != 0) {
                    _this.all_value = true;
                }
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Active') {
            this.adminService.getAllsubactivecompanies().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Block') {
            this.adminService.getAllsubblockcompanies().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Delete') {
            this.adminService.getAllsubdeletecompanies().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
    };
    AdminSubscribedComponent.prototype.loadToDataTable = function (data) {
        this.notExist = false;
        if (data.length == 0) {
            this.notExist = true;
        }
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
        // console.log(this.dataSource);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    AdminSubscribedComponent.prototype.ngOnInit = function () {
        this.refresh();
    };
    AdminSubscribedComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    AdminSubscribedComponent.prototype.getId = function (id) {
        // this.showSpinner =false
        // this.showSpinnerDelete =false
        this.id = id;
        //  console.log(this.id)
    };
    //delete company
    AdminSubscribedComponent.prototype.deleteCompany = function (id) {
        var _this = this;
        this.showSpinner = true;
        this.adminService.deleteCompany(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    //block company
    AdminSubscribedComponent.prototype.blockCompany = function (id) {
        var _this = this;
        this.adminService.blockCompany(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    //unblock company
    AdminSubscribedComponent.prototype.unblockCompany = function (id) {
        var _this = this;
        this.adminService.unblockCompany(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], AdminSubscribedComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], AdminSubscribedComponent.prototype, "sort", void 0);
    AdminSubscribedComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'admin-subscribed',
            template: __webpack_require__("../../../../../src/app/components/admin-subscribed/admin-subscribed.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/admin-subscribed/admin-subscribed.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_admin_service__["a" /* AdminService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], AdminSubscribedComponent);
    return AdminSubscribedComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/admin-topbar/admin-topbar.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".drp2 .dropdown-menu{padding:0;right:0;left:inherit;}\r\n.drp2 .dropdown-menu li a{padding:10px 20px;}\r\n.drp2 .navbar-content{text-align:left;}\r\n.drp2 .dropdown-menu li{width:100%;}\r\n.drp2 .dropdown-menu > li > a:hover p{color:#fff !important;}\r\n.dropdown-menu{margin-bottom:0;}\r\nheader .dropdown-menu{top: 261%;}\r\n.dropdown-menu p {\r\n    margin: 0 0 0px;\r\n}\r\n.media-heading{font-size:14px;}\r\n.closbtn{\r\n    border-radius: 50%;\r\n    height: 15px;\r\n    width: 15px;\r\n    /* padding-top: 0; */\r\n    margin-right: 12px;\r\n    line-height: 13px;\r\n    font-size: 9px;\r\n    padding: 0;\r\n    text-align: center;\r\n    margin-top: 0;\r\n    background: #fe6a07;\r\n    border: none;\r\n}\r\n.dropdown-menu .divider {\r\n    height: 1px;\r\n    margin: 0px 0;\r\n    overflow: hidden;\r\n    background-color: #e5e5e5;\r\n}\r\n.head{background: #fe6a07;color:#fff !important;}\r\n.head>a{color:#fff !important;}\r\n.list-inline li a{cursor:pointer;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/admin-topbar/admin-topbar.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n    <header>\r\n        \r\n        <div class=\"col-md-5 pull-right\">\r\n            <div class=\"header-rightside\">\r\n                <ul class=\"list-inline header-top pull-right\">\r\n                    <!-- <li class=\"\"><a href=\"#\" class=\"add-project\">Add Project</a></li> -->\r\n                    \r\n                    <li class=\"dropdown drp2\">\r\n                        <a class=\"icon-info dropdown-toggle\" data-toggle=\"dropdown\">\r\n                            <i class=\"fa fa-bell\" aria-hidden=\"true\"></i>\r\n                            <span class=\"label label-primary\">{{count}}</span>\r\n\r\n                        </a>\r\n                        <ul class=\"dropdown-menu\">\r\n                            <li class=\"head\">\r\n                                <a><div class=\"navbar-content\">\r\n                                    <span>New Company Register</span>\r\n                                    <!-- <p class=\"text-muted\">\r\n                                        Project Name\r\n                                    </p>\r\n                                    <div class=\"alert\">\r\n                                            <a href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\" title=\"close\">×</a>\r\n                                        <strong>Success!</strong> Indicates a successful or positive action.\r\n                                    </div> -->\r\n             \r\n                                </div></a>\r\n                            </li>\r\n                             <div class=\"divider\"> </div>\r\n                             <div *ngFor=\"let item of notif\">\r\n                             <li>\r\n                                    <div class=\"media\" >\r\n                                            \r\n                                    <div class=\"media-body\" >\r\n                                        <div class='exclusaoNotificacao pull-right'><button class='btn btn-danger btn-xs button_exclusao closbtn' id='1'(click)=\"viewstatus(item.id)\" >x</button>\r\n                                         </div>\r\n                                            <h4 class=\"media-heading\"><b>{{item.cmp_name}}</b></h4><p>Registered newely</p>\r\n                                           \r\n                                    </div>\r\n                                </div>\r\n                               \r\n                             </li>\r\n                             <hr>\r\n                            </div> \r\n                            <div *ngIf=\"count == 0\">\r\n                                    \r\n                                         <h5 style=\"color : red; margin-left:20px; \">No Data</h5>\r\n                                         </div>    \r\n                        </ul>\r\n                    </li>\r\n                    <!-- <li class=\"dropdown\">\r\n                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                            <b class=\"caret\"></b></a>\r\n                        <ul class=\"dropdown-menu\">\r\n                            <li>\r\n                                <div class=\"navbar-content\">\r\n                                    <span>JS Krishna</span>\r\n                                    <p class=\"text-muted small\">\r\n                                        me@jskrishna.com\r\n                                    </p>\r\n                                    <div class=\"divider\">\r\n                                    </div>\r\n                                    <a href=\"#\" class=\"view btn-sm active\">View Profile</a> \r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </li> -->\r\n                    <li><a data-toggle=\"modal\" data-target=\"#confirmation\"><i class=\"fa fa-power-off\" aria-hidden=\"true\"></i></a></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n              <!-- --------------------------------------------- logout confirmation ----------------------------------------------------------------- -->\r\n              <div id=\"confirmation\" class=\"modal fade\" role=\"dialog\">\r\n                <div class=\"modal-dialog\">\r\n                    <!-- Modal content-->\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                            <h4 class=\"modal-title\">Logout </h4>\r\n                        </div>\r\n                        <!-- <div class=\"modal-header\"> -->\r\n                        <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n                        <!-- </div> -->\r\n                        <div class=\"modal-body delete-popup\">\r\n                            <i class=\"fa fa-exclamation\"></i>\r\n                            <h4 class=\"textalign\">Are you sure?</h4>\r\n                        </div>\r\n                        <div class=\"modal-footer\" style=\"text-align:center;\">\r\n                            <button type=\"button\" (click)=\"logout()\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Logout</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- --------------------------------------------- logout confirmation  ----------------------------------------------------------------- -->\r\n    </header>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/admin-topbar/admin-topbar.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminTopbarComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_socket_io_client__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var AdminTopbarComponent = (function () {
    function AdminTopbarComponent(companyService, routes, adminService, router, config) {
        this.companyService = companyService;
        this.routes = routes;
        this.adminService = adminService;
        this.router = router;
        this.config = config;
        this.socket = __WEBPACK_IMPORTED_MODULE_5_socket_io_client__(config.siteUrl);
    }
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin  management
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 06-03-2018 
    // Last Modified : 
    // Desc          : Adminnotification
    AdminTopbarComponent.prototype.refresh = function () {
        var _this = this;
        this.adminService.getAdminnotification().subscribe(function (data) {
            _this.notif = data;
            _this.count = data.length;
            console.log(_this.notif);
        });
    };
    AdminTopbarComponent.prototype.ngOnInit = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : Get logged in entity
        // Params        : 
        // Returns       : Get logged in entity
        // Author        : Rinsha
        // Date          : 20-04-2018
        // Last Modified : 20-04-2018, Rinsha
        // Desc          :  
        this.adminService.getLoggedinEntity().subscribe(function (data) {
            if (data == null || data == '') {
                _this.routes.navigate(['/home']);
            }
            if (data.role_id == 2) {
                //super admin
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/home']);
                }
                // this.routes.navigate(['/admin-dashboard']);
            }
            if (data.role_id == 3 || data.role_id == 1) {
                //company admin or pm
                if (data.delete_status == true || data.block_status == true || data.cmp_status == "Not Verified") {
                    _this.routes.navigate(['/company-login']);
                }
                if (data.cmp_status == "Expired") {
                    _this.routes.navigate(['/expired']);
                }
                if (data.is_profile_completed == false) {
                    _this.routes.navigate(['/compay-aditninfo', data.cmp_id]);
                }
                _this.routes.navigate(['/company-dashboard']);
            }
            if (data.role_id == 4) {
                //user
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/company-login']);
                }
                _this.routes.navigate(['/user-dashboard']);
            }
        });
        // -----------------------------------End------------------------------------------
        this.refresh();
        this.socket.on('new company', function (data) {
            _this.refresh();
        });
    };
    // viewstatus admin
    AdminTopbarComponent.prototype.viewstatus = function (id) {
        var _this = this;
        console.log("asf" + id);
        this.adminService.viewstatusadmin(id).subscribe(function (data) {
            //console.log(data);
            if (data.success) {
                _this.refresh();
            }
            else {
            }
        });
    };
    AdminTopbarComponent.prototype.logout = function () {
        this.companyService.logout();
        this.routes.navigate(['/home']);
        return false;
    };
    AdminTopbarComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'admin-topbar',
            template: __webpack_require__("../../../../../src/app/components/admin-topbar/admin-topbar.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/admin-topbar/admin-topbar.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"],
            __WEBPACK_IMPORTED_MODULE_1__services_admin_service__["a" /* AdminService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"],
            __WEBPACK_IMPORTED_MODULE_4__config_config__["a" /* Config */]])
    ], AdminTopbarComponent);
    return AdminTopbarComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/admin-trial/admin-trial.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n\r\n\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/admin-trial/admin-trial.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n  \r\n  <!-- <p>You selected: {{selected}} </p> -->\r\n\r\n  <div class=\"col-md-12\">\r\n    <div class=\"row\">\r\n    <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\" >\r\n        <div class=\"\"  >\r\n            <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n            width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n        <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n          <animateTransform attributeType=\"xml\"\r\n            attributeName=\"transform\"\r\n            type=\"rotate\"\r\n            from=\"0 25 25\"\r\n            to=\"360 25 25\"\r\n            dur=\"0.6s\"\r\n            repeatCount=\"indefinite\"/>\r\n          </path>\r\n        </svg>\r\n    </div>\r\n    </div> -->\r\n    \r\n\r\n    <div class=\"col-md-12\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-10\">\r\n              <div class=\"example-header\">\r\n                  <mat-form-field>\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                  </mat-form-field>\r\n                </div>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n              <div *ngIf=\"all_value\">\r\n              <mat-form-field class=\"filter\"> \r\n                  \r\n                    <mat-select  (change)=\"refresh()\" [(value)]=\"selected\">\r\n                      <!-- <mat-option>None</mat-option> -->\r\n                      <mat-option value=\"all\">All</mat-option>\r\n                      <mat-option value=\"Active\">Active</mat-option>\r\n                      <mat-option value=\"Block\">Block</mat-option>\r\n                      <mat-option value=\"Delete\">Delete </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n<!--    \r\n          <div class=\"example-header\" >\r\n              <mat-form-field>\r\n                <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n              </mat-form-field>\r\n          </div> -->\r\n       \r\n    <div class=\"example-container mat-elevation-z8 \">\r\n  <mat-table [dataSource]=\"dataSource\" matSort>\r\n <!-- Name Column -->\r\n <ng-container matColumnDef=\"slno\">\r\n    <mat-header-cell *matHeaderCellDef >Sl_No </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row;let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}}</mat-cell>\r\n  </ng-container>\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"cmp_name\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>COMPANY NAME </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.cmp_name}} </mat-cell>\r\n    </ng-container>\r\n\r\n <!-- Name Column -->\r\n <ng-container matColumnDef=\"email\">\r\n  <mat-header-cell *matHeaderCellDef mat-sort-header> EMAIL </mat-header-cell>\r\n  <mat-cell *matCellDef=\"let row\"> {{row.tbl_login.email}} </mat-cell>\r\n</ng-container>\r\n  \r\n   <!-- Progress Column -->\r\n   <ng-container matColumnDef=\"contactnumber\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> CONTACT NUMBER </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\"> {{row.contact_no}}</mat-cell>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"companystatus\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> COMPANY STATUS </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\"> {{row.tbl_login.cmp_status}}</mat-cell>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"status\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> STATUS </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">\r\n        <div *ngIf=\"row.tbl_login.block_status==false && row.tbl_login.delete_status==false\"> Active</div>\r\n        <div *ngIf=\"row.tbl_login.block_status==true && row.tbl_login.delete_status==false\"> Blocked</div>\r\n        <div *ngIf=\" row.tbl_login.delete_status==true\"> Deleted</div>\r\n      </mat-cell>\r\n    </ng-container>\r\n  <ng-container matColumnDef=\"action\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\">\r\n        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button *ngIf=\"row.tbl_login.delete_status==false\" (click)=\"getId(row.tbl_login.id)\" data-toggle=\"modal\" data-target=\"#deleteModal\" mat-menu-item >\r\n                <i class=\"material-icons\">delete</i>\r\n              <span>Delete</span>\r\n            </button>\r\n            <button *ngIf=\"row.delete_status==true\" mat-menu-item disabled>\r\n              <i class=\"material-icons\">delete_forever</i>\r\n            <span>Deleted</span>\r\n          </button>\r\n            <button *ngIf=\"row.tbl_login.block_status==false && row.tbl_login.delete_status==false\" (click)=\"blockCompany(row.tbl_login.id)\" mat-menu-item>\r\n                <i class=\"material-icons\">block</i>\r\n              <span>Block</span>\r\n            </button>\r\n            <button *ngIf=\"row.tbl_login.block_status==true && row.tbl_login.delete_status==false\" (click)=\"unblockCompany(row.tbl_login.id)\" mat-menu-item>\r\n                <i class=\"material-icons\">block</i>\r\n              <span>Unblock</span>\r\n            </button>\r\n            <button *ngIf=\"row.tbl_login.delete_status==true\" mat-menu-item disabled>\r\n                <i class=\"material-icons\">delete_forever</i>\r\n              <span>Deleted</span>\r\n            </button>\r\n          </mat-menu>\r\n       \r\n      </mat-cell>\r\n  </ng-container>\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n    </mat-row>\r\n  </mat-table>\r\n  <div class=\"col-md-15 \">\r\n      <!-- <div *ngIf=\"showSpinner\" class=\"deletespinner\">\r\n          <mat-spinner></mat-spinner>\r\n         </div> -->\r\n  </div>\r\n  <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n      <div class=\"col-md-4 col-md-offset-4\">\r\n          <mat-toolbar   class=\"back-color\">No item found!</mat-toolbar>\r\n      </div>\r\n    </div>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n</div>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n<!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n\r\n\r\n<div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n      <!-- Modal content-->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n          <h4 class=\"modal-title\">Delete </h4>\r\n        </div>\r\n        <!-- <div class=\"modal-header\"> -->\r\n        <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n        <!-- </div> -->\r\n        <div class=\"modal-body delete-popup\">\r\n          <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n          <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" (click)=\"deleteCompany(id)\" class=\"btn round-button\" data-dismiss=\"modal\">Delete</button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>"

/***/ }),

/***/ "../../../../../src/app/components/admin-trial/admin-trial.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminTrialComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AdminTrialComponent = (function () {
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin user management
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 06-03-2018
    // Last Modified : 
    // Desc          : All users
    function AdminTrialComponent(adminService, routes, snackBar) {
        this.adminService = adminService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'cmp_name', 'email', 'contactnumber', 'companystatus', 'status', 'action'];
        this.notExist = false;
        this.selected = 'all';
        this.all_value = false;
        this.showSpinner = false;
    }
    AdminTrialComponent.prototype.refresh = function () {
        var _this = this;
        this.showSpinner = true;
        console.log(this.selected);
        var company = [];
        if (this.selected == 'all') {
            this.adminService.getAlltrialcompanies().subscribe(function (data) {
                if (data.length != 0) {
                    _this.all_value = true;
                }
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Active') {
            this.adminService.getAlltrialactivecompanies().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Block') {
            this.adminService.getAlltrialblockcompanies().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Delete') {
            this.adminService.getAlltrialdeletecompanies().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
    };
    AdminTrialComponent.prototype.loadToDataTable = function (data) {
        this.notExist = false;
        if (data.length == 0) {
            this.notExist = true;
        }
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
        // console.log(this.dataSource);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    AdminTrialComponent.prototype.ngOnInit = function () {
        this.refresh();
    };
    AdminTrialComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    AdminTrialComponent.prototype.getId = function (id) {
        // this.showSpinner =false
        // this.showSpinnerDelete =false
        this.id = id;
        //  console.log(this.id)
    };
    //delete company
    AdminTrialComponent.prototype.deleteCompany = function (id) {
        var _this = this;
        this.showSpinner = true;
        this.adminService.deleteCompany(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    //block company
    AdminTrialComponent.prototype.blockCompany = function (id) {
        var _this = this;
        this.adminService.blockCompany(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    //unblock company
    AdminTrialComponent.prototype.unblockCompany = function (id) {
        var _this = this;
        this.adminService.unblockCompany(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], AdminTrialComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], AdminTrialComponent.prototype, "sort", void 0);
    AdminTrialComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'admin-trial',
            template: __webpack_require__("../../../../../src/app/components/admin-trial/admin-trial.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/admin-trial/admin-trial.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_admin_service__["a" /* AdminService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], AdminTrialComponent);
    return AdminTrialComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/buttons/buttons.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ButtonsComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_timer_service__ = __webpack_require__("../../../../../src/app/services/timer.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var ButtonsComponent = (function () {
    function ButtonsComponent(timerService) {
        this.timerService = timerService;
    }
    ButtonsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.playPauseStopUnsubscribe = this.timerService.playPauseStop$.subscribe(function (res) { return _this.setPlay(res); });
    };
    ButtonsComponent.prototype.ngOnDestroy = function () {
        this.playPauseStopUnsubscribe.unsubscribe();
    };
    ButtonsComponent.prototype.setPlay = function (res) {
        (res.play) ? this.play = true : this.play = false;
    };
    ButtonsComponent.prototype.playTimer = function () {
        this.timerService.playTimer();
    };
    ButtonsComponent.prototype.pauseTimer = function () {
        this.timerService.pauseTimer();
    };
    ButtonsComponent.prototype.stopTimer = function () {
        this.timerService.stopTimer();
    };
    ButtonsComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'buttons',
            template: "\n        <div>\n            <button [disabled]=\"play\" (click)=\"playTimer()\">Play</button>\n            <button [disabled]=\"!play\" (click)=\"pauseTimer()\">Pause</button>\n            <button (click)=\"stopTimer()\">Stop</button>\n        </div>\n    ",
            styles: ["\n        div {\n            text-align: center;\n        }\n    "]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_timer_service__["a" /* TimerService */]])
    ], ButtonsComponent);
    return ButtonsComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-activity-log-report/company-activity-log-report.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n \r\n  .mat-form-field {\r\n    /* font-size: 14px; */\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n\r\n  .example-container > * {\r\n    width: 100%;\r\n  }\r\n\r\n.mat-form-field-infix {\r\n  display: block;\r\n  position: relative;\r\n  -ms-flex: auto;\r\n      flex: auto;\r\n  min-width: 0;\r\n  width: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\n  padding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\n  font-family: Roboto, Arial, sans-serif;\r\n  margin: 0;\r\n}\r\n\r\n.basic-container {\r\n  padding: 5px;\r\n}\r\n\r\n.version-info {\r\n  font-size: 8pt;\r\n  float: right;\r\n}\r\n.round-button{\r\n  float:none !important;\r\n}\r\n.center-bt {\r\n    margin: 20px auto 10px auto;\r\n    float: none;\r\n}\r\n\r\n@page { margin: 0; }\r\n@media print {\r\n       @page { margin: 0; }\r\n}\r\n\r\n.back-color{\r\n  color: #757575;\r\n  background-color:#f6f7fa !important;\r\n}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.loader{width:100%;}\r\n.optionz{    background-color: #fff;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  margin: 10px 0;\r\n  padding-top: 10px;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-activity-log-report/company-activity-log-report.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n    <div class=\"container-fluid display-table\">\r\n      <div class=\"row display-table-row\">\r\n        <div class=\"col-md-1 col-xs-2 display-table-cell v-align box\" id=\"navigation\">\r\n          <company-sidebar></company-sidebar>\r\n        </div>\r\n       <company-topbar></company-topbar> \r\n        <br>\r\n        <div class=\"col-md-12 col-xs-9\">\r\n            <div class=\"col-md-12\">\r\n                <h2 _ngcontent-c16=\"\">Activity Log</h2>\r\n                <ul _ngcontent-c16=\"\" class=\"breadcrumb\">\r\n                  <li _ngcontent-c16=\"\">\r\n                    <a _ngcontent-c16=\"\">Report</a>\r\n                  </li>\r\n      \r\n      \r\n                  <li _ngcontent-c16=\"\">Activity Log</li>\r\n                </ul>\r\n              </div>\r\n          <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n          <div class=\"pull-right\" >\r\n        <!--   <a data-toggle=\"tooltip\" title=\"Download\" href=\"../assets/docs/{{project?.requirement_attatchment}}\" class=\"download-link\" download=\"\"> <button class=\"dwnload\"><i class=\"fa fa-download\"></i></button>Download</a><br> -->\r\n        <!--   <a data-toggle=\"tooltip\" title=\"Download\" href=\"../assets/docs/{{project?.requirement_attatchment}}\" class=\"download-link\" download=\"\"><button id=\"create\" class=\"btn round-button\" (click)=\"exportPdf()\">Export Pdf</button></a> -->\r\n          <button id=\"create\" class=\"btn round-button\" (click)=\"exportPdf()\">Export Pdf</button>\r\n          <input type=\"button\" class=\"btn round-button\" (click)=\"tableToExcel('testTable', 'taskit')\" value=\"Export to Excel\">\r\n          <button id=\"create\" class=\"btn round-button\" (click)=\"PrintDiv()\">Print</button> \r\n        </div>\r\n          <div class=\"row\">\r\n              \r\n            <div class=\"col-md-12\">\r\n                <!-- <div class=\"col-md-12\" *ngIf=\"showxData\"> -->\r\n                    <div class=\"col-md-12\">\r\n                    <div class=\"optionz\">\r\n                    <div class=\"col-md-4\">\r\n                        <input type=\"text\" class=\"form-control form-control2\" name=\"daterangeInput\" daterangepicker [options]=\"options\" (selected)=\"selectedStartDate($event, daterange)\" />\r\n                         </div>\r\n                    <div class=\"col-md-4\" >\r\n                        <mat-form-field>\r\n                            <input matInput (keyup)=\"applyFilter()\" [(ngModel)]=\"filters.filterText\" placeholder=\"Filter\">\r\n                          </mat-form-field>\r\n                  </div>\r\n                   <div class=\"col-md-4\" >\r\n                        <mat-form-field>\r\n                            <mat-select placeholder=\"User\" [(ngModel)]=\"filters.selUsers\" (change)=\"getActivityLog()\">\r\n                                <mat-option [value]=\"'All'\" >All</mat-option>\r\n                                <mat-option [value]=\"item.id\" *ngFor=\"let item of users\">\r\n                                    {{item.f_name}}  {{item.l_name}}\r\n                                </mat-option>\r\n                             \r\n                            </mat-select>\r\n                          </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                </div>\r\n                  <div class=\"col-md-12\"> \r\n  \r\n              <div class=\"example-container mat-elevation-z8\">\r\n  \r\n                  <!-- <div class=\"col-md-4\" >\r\n                      <mat-form-field>\r\n                          <mat-select placeholder=\"Projects\" (change)=\"getSelectedProjects()\" [(value)]=\"ProjectSelected\">\r\n                              <mat-option [value]=\"All\" >\r\n                                  All\r\n                              </mat-option>\r\n                              <mat-option [value]=\"item.tbl_project.id\" *ngFor=\"let item of projects\">\r\n                                  {{item.tbl_project.project_name}}\r\n                              </mat-option>\r\n                           \r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                        \r\n                  </div>\r\n  \r\n                  <div class=\"col-md-4\" >\r\n                      <mat-form-field>\r\n                          <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                        </mat-form-field>\r\n                </div>\r\n                  <div class=\"col-md-4\" >\r\n                      <mat-form-field>\r\n                          <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                        </mat-form-field>\r\n                </div> -->\r\n                \r\n                <!-- <div class=\"example-header\">\r\n                  <mat-form-field>\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                  </mat-form-field>\r\n                </div> -->\r\n                <mat-table [dataSource]=\"dataSource\" matSort>\r\n                  <ng-container matColumnDef=\"slno\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> SL NO. </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row; let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"date\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Date</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row?.createdAt |  date: 'yyyy-MM-dd'}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"time\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Time</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row?.createdAt |  date: 'HH:mm a'}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"user\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> User</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row?.tbl_user_profile.f_name}} {{row?.tbl_user_profile.l_name}}</mat-cell>\r\n                  </ng-container>\r\n                  <ng-container matColumnDef=\"action\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Action</mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.action}}</mat-cell>\r\n                  </ng-container>\r\n                  \r\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                  <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                  </mat-row>\r\n                </mat-table>\r\n                <div *ngIf=\"showSpinner\" class=\"spinner\">\r\n                  <app-spinner></app-spinner>\r\n                </div>\r\n                <!-- <div class=\"col-md-15 \"> -->\r\n                <!-- <div *ngIf=\"showSpinnerDelete\" class=\"deletespinner\">\r\n                            <mat-spinner></mat-spinner>\r\n                         </div> -->\r\n  \r\n                <!-- </div> -->\r\n  \r\n                <div class=\"col-md-12 noItemFound\" *ngIf=\"logs.length == 0\">\r\n                  <div class=\"col-md-4 col-md-offset-4\">\r\n                    <mat-toolbar class=\"back-color\">No item found!</mat-toolbar>\r\n                  </div>\r\n                </div>\r\n                <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n              </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n     \r\n  \r\n        <div *ngIf=\"reachMaxPlan\" id=\"addModal\" class=\"modal fade\">\r\n          <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                <h4 class=\"modal-title\">Error..! </h4>\r\n              </div>\r\n              <div class=\"modal-body delete-popup\">\r\n                <i class=\"fa fa-exclamation\"></i>\r\n                <h4 class=\"textalign\">Cant Add, Maximum number of plan reached</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n  \r\n       \r\n  \r\n        <div id=\"dvContents\" style=\"display: none;width:100%\" >\r\n          <table class=\"table\" id=\"testTable\">\r\n            <tr style=\"background-color: #CCC\">\r\n              <th>Sl No.</th>\r\n              <th>Date</th>\r\n              <th>Time</th>\r\n              <th>User</th>\r\n              <th>Action</th>\r\n            </tr>\r\n            <tr *ngFor=\"let row of logs; let i=index\">\r\n              <td>{{i}}</td>\r\n              <td>{{row?.createdAt |  date: 'yyyy-MM-dd'}}</td>\r\n              <td>{{row?.createdAt |  date: 'HH:mm a'}}</td>\r\n              <td> {{row?.tbl_user_profile.f_name}} {{row?.tbl_user_profile.l_name}}</td>\r\n              <td>{{row?.action}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"logs.length == 0\">\r\n                <td colspan=\"5\" style=\"text-align:center\">No item found!</td>\r\n               \r\n              </tr>\r\n            \r\n          </table>\r\n        </div>\r\n  \r\n   </div>\r\n    </div>\r\n    <!-- <footer></footer>  -->\r\n  \r\n  </body>"

/***/ }),

/***/ "../../../../../src/app/components/company-activity-log-report/company-activity-log-report.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyActivityLogReportComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






/* const path = require("path"); */
/* const config = require("./config/config"); */
/* var nodePrd = require('node-prd');
var fs = require('fs') */ ;
var CompanyActivityLogReportComponent = (function () {
    function CompanyActivityLogReportComponent(adminService, companyService, routes, snackBar) {
        this.adminService = adminService;
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'date', 'time', 'user', 'action'];
        this.logs = [];
        this.users = [];
        this.filters = {
            sDate: new Date,
            eDate: new Date,
            filterText: '',
            selUsers: 'All',
            filetype: ''
        };
        this.showSpinner = false;
        this.options = {
            locale: { format: 'DD-MM-YYYY' },
            alwaysShowCalendars: false,
        };
    }
    CompanyActivityLogReportComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.getActivityLog();
        this.companyService.getAllusers().subscribe(function (data) {
            _this.users = data;
            // console.log(data);
        });
    };
    CompanyActivityLogReportComponent.prototype.getActivityLog = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getEstimatedProject
        // Params        : 
        // Returns       : 
        // Author        : Yasir Poongadan
        // Date          : 07-04-2018
        // Last Modified : 07-04-2018, Yasir Poongadan
        // Desc          : get Estimated Project 
        this.adminService.getActivityLog(this.filters).subscribe(function (data) {
            // data.project_name = data.tbl_project.project_name;
            // this.projects = data;
            console.log(data);
            _this.logs = data;
            _this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
            _this.dataSource.paginator = _this.paginator;
            _this.dataSource.sort = _this.sort;
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyActivityLogReportComponent.prototype.applyFilter = function () {
        var filterValue = this.filters.filterText;
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    CompanyActivityLogReportComponent.prototype.selectedStartDate = function (value, datepicker) {
        this.filters.sDate = value.start;
        this.filters.eDate = value.end;
        this.getActivityLog();
    };
    CompanyActivityLogReportComponent.prototype.PrintDiv = function () {
        var mywindow = window.open('', 'PRINT', 'height=400,width=600');
        mywindow.document.write('<html><head><title>' + document.title + '</title>');
        mywindow.document.write('</head><body >');
        mywindow.document.write('<h1>' + document.title + '</h1>');
        mywindow.document.write(document.getElementById('dvContents').innerHTML);
        mywindow.document.write('</body></html>');
        mywindow.document.close(); // necessary for IE >= 10
        mywindow.focus(); // necessary for IE >= 10*/
        // mywindow.print();
        mywindow.close();
        return true;
        // var contents = document.getElementById("dvContents").innerHTML;       
        // var printContents = document.getElementById("dvContents").innerHTML;
        // var originalContents = document.body.innerHTML;
        // document.body.innerHTML = printContents;
        // window.print();
        // document.body.innerHTML = originalContents;
    };
    CompanyActivityLogReportComponent.prototype.exportPdf = function () {
        var _this = this;
        this.showSpinner = true;
        this.filters.filetype = 'pdf';
        this.adminService.logexecuteReportpdf(this.filters).subscribe(function (res) {
            _this.showSpinner = false;
            console.log('start download:', res);
            var url = window.URL.createObjectURL(res.data);
            var a = document.createElement('a');
            document.body.appendChild(a);
            a.setAttribute('style', 'display: none');
            a.href = url;
            a.download = res.filename;
            a.click();
            window.URL.revokeObjectURL(url);
            a.remove(); // remove the element
            /* window.open(url) */
        });
    };
    /* var doc = new jsPDF();
    var col = ['Slno', 'Date Time', 'User', 'Action'];
    var rows = [];
    var members = '';
    this.logs.forEach((data, key) => {
      var temp = [
        key+1,
        data.createdAt,
        data.tbl_user_profile.f_name + ' ' + data.tbl_user_profile.l_name,
        data.action
      ];
      rows.push(temp);
    });

    // console.log(rows);
    doc.autoTable(col, rows,
      {
        margin: { horizontal: 7 },
        overflow : 'linebreak',
    });

    doc.save('Test.pdf'); */
    CompanyActivityLogReportComponent.prototype.tableToExcel = function (table, name) {
        var _this = this;
        this.showSpinner = true;
        this.filters.filetype = 'excel';
        this.adminService.logexecuteReportexcel(this.filters).subscribe(function (res) {
            _this.showSpinner = false;
            console.log('start download:', res);
            var url = window.URL.createObjectURL(res.data);
            var a = document.createElement('a');
            document.body.appendChild(a);
            a.setAttribute('style', 'display: none');
            a.href = url;
            a.download = res.filename;
            a.click();
            window.URL.revokeObjectURL(url);
            a.remove(); // remove the element
            /* window.open(url) */
        });
        /* let uri = 'data:application/vnd.ms-excel;base64,'
            , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--><meta http-equiv="content-type" content="text/plain; charset=UTF-8"/></head><body><table>{table}</table></body></html>'
            , base64 = function(s) { return window.btoa(decodeURIComponent(encodeURIComponent(s))) }
            , format = function(s, c) { return s.replace(/{(\w+)}/g, function(m, p) { return c[p]; }) }
                if (!table.nodeType) table = document.getElementById(table)
                var ctx = {worksheet: name || 'Worksheet', table: table.innerHTML}
                window.location.href = uri + base64(format(template, ctx)) */
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], CompanyActivityLogReportComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], CompanyActivityLogReportComponent.prototype, "sort", void 0);
    CompanyActivityLogReportComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-activity-log-report',
            template: __webpack_require__("../../../../../src/app/components/company-activity-log-report/company-activity-log-report.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-activity-log-report/company-activity-log-report.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_admin_service__["a" /* AdminService */],
            __WEBPACK_IMPORTED_MODULE_3__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], CompanyActivityLogReportComponent);
    return CompanyActivityLogReportComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-activity-log/company-activity-log.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}\r\nul.breadcrumb {\r\n    padding: 10px 0;\r\n    list-style: none;\r\n\r\n    text-align: left;\r\n    color: #d68956;\r\n}\r\nul.breadcrumb li {\r\n    display: inline;\r\n    font-size: 15px;\r\n}\r\nul.breadcrumb li+li:before {\r\n    padding: 8px;\r\n    color: black;\r\n    content: \"/\\A0\";\r\n}\r\nul.breadcrumb li a {\r\n    color: #bbbbbb;\r\n    text-decoration: none;\r\n}\r\nul.breadcrumb li a:hover {\r\n    color: #d68956;\r\n    text-decoration: none;\r\n\r\n}\r\n.breadcrumb{    background-color: #f6f7fa;}\r\n.form-control2{border:none;border-bottom:1px solid #ccc;border-radius:0;box-shadow:none;    margin-top: 12px;}\r\n.mr-top{     padding-top: 20px;\r\n  font-weight: 500;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-activity-log/company-activity-log.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n    <div class=\"container-fluid display-table\">\r\n        <div class=\"row display-table-row\">\r\n      \r\n            <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n                 <!-- sidebar-->\r\n               \r\n                 <company-sidebar></company-sidebar> \r\n                 <!-- end sidebar-->\r\n            </div>\r\n            \r\n            <div class=\"col-md-12 col-xs-12\">\r\n                <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n                <!-- topbar-->\r\n                <company-topbar></company-topbar> \r\n                \r\n                    <!-- end topbar-->\r\n                    <div class=\"user-dashboard\">\r\n                        <h2>Reports </h2>\r\n                        <ul class=\"breadcrumb\">\r\n                          <li><a href=\"#\">Reports</a></li>\r\n                          \r\n                          \r\n                          <li>Activity Log</li>\r\n                        </ul>\r\n                    <div class=\"row\">\r\n  <!-----------------------------------------------------------------table-------------------------------------->\r\n   \r\n  \r\n\r\n\r\n  <div class=\"col-md-12\">\r\n      <div class=\"row\">\r\n      <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\" >\r\n          <div class=\"\"  >\r\n              <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n              width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n          <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n            <animateTransform attributeType=\"xml\"\r\n              attributeName=\"transform\"\r\n              type=\"rotate\"\r\n              from=\"0 25 25\"\r\n              to=\"360 25 25\"\r\n              dur=\"0.6s\"\r\n              repeatCount=\"indefinite\"/>\r\n            </path>\r\n          </svg>\r\n      </div>\r\n      </div> -->\r\n      \r\n  \r\n      <div class=\"col-md-12 optionz\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-4 col-xs-5\">\r\n                <div class=\"example-header\">\r\n                    <mat-form-field>\r\n                      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                    </mat-form-field>\r\n                  </div>\r\n            </div> \r\n            \r\n           \r\n                <div class=\"col-md-5 col-xs-5 col-md-push-3\">\r\n                    <div class=\"row\">\r\n                          <div class=\"col-md-3 col-xs-4\">\r\n                            <label class=\"mr-top\">Date Range Filter</label>\r\n                          </div>\r\n                          <div class=\"col-md-5 col-xs-8\">\r\n                            <input type=\"text\" class=\"form-control form-control2\" name=\"daterangeInput\" daterangepicker [options]=\"options\" (selected)=\"selectedStartDate($event, daterange)\" />\r\n                          </div>\r\n                    </div>\r\n              \r\n           \r\n               </div>\r\n               <div class=\"col-md-2 col-xs-2 pull-right\">\r\n                  <div  class=\"col-md-11 pull-right\">\r\n                  <mat-form-field class=\"filter\"> \r\n                      \r\n                        <mat-select  (change)=\"refresh()\" [(value)]=\"selected\">\r\n                        \r\n                          <mat-option value=\"all\">All</mat-option>\r\n                 \r\n                          <mat-option  *ngFor=\"let item of users\"  value={{item.id}} >{{item.f_name}}</mat-option>\r\n                         \r\n                        </mat-select>\r\n                      </mat-form-field>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        \r\n      </div>\r\n  \r\n  \r\n\r\n         \r\n      <div class=\"example-container mat-elevation-z8 \">\r\n    <mat-table [dataSource]=\"dataSource\" matSort>\r\n   <!-- Name Column -->\r\n   <ng-container matColumnDef=\"slno\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Sl_No </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row;let i = index\"> {{i+1}} </mat-cell>\r\n    </ng-container>\r\n          <!-- Name Column -->\r\n      <ng-container matColumnDef=\"user\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header>NAME </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\">{{row.tbl_user_profile.f_name}}</mat-cell>\r\n      </ng-container>\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"date\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header>DATE </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\">{{row.createdAt | date:'EEE, d MMM,y'}}</mat-cell>\r\n      </ng-container>\r\n           <!-- Name Column -->\r\n      <ng-container matColumnDef=\"time\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header>TIME </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.createdAt | date:'shortTime'}} </mat-cell>\r\n      </ng-container>\r\n           <!-- Name Column -->\r\n      <ng-container matColumnDef=\"action\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header>ACTION </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.action}} </mat-cell>\r\n      </ng-container>\r\n  \r\n  \r\n\r\n  \r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n      </mat-row>\r\n    </mat-table>\r\n    <div class=\"col-md-15 \">\r\n    \r\n    </div>\r\n    <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n        <div class=\"col-md-4 col-md-offset-4\">\r\n            <mat-toolbar   class=\"back-color\">No item found!</mat-toolbar>\r\n        </div>\r\n      </div>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n  </div>\r\n  \r\n  \r\n  </div>\r\n  </div>\r\n  \r\n  \r\n        \r\n       <!-----------------------------------------------------------------end table-------------------------------------->\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n                <!-- footer-->\r\n                <company-footer></company-footer>\r\n       <!-- end footer-->\r\n        </div>\r\n         </div>\r\n        <!-- Modal -->\r\n     </body>"

/***/ }),

/***/ "../../../../../src/app/components/company-activity-log/company-activity-log.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyActivityLogComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CompanyActivityLogComponent = (function () {
    // ---------------------------------Start-------------------------------------------
    // Function      : UserActivitylog
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 16-03-2018
    // Last Modified : 
    // Desc          : UserActivitylog
    function CompanyActivityLogComponent(companyService, routes, snackBar) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'user', 'date', 'time', 'action'];
        this.notExist = false;
        this.selected = 'all';
        // all_value =false;
        // startDate:any='';
        // endDate:any='';
        this.endFrom = '';
        this.endUpto = '';
        this.showSpinner = false;
        this.options = {
            locale: { format: 'DD-MM-YYYY' },
            alwaysShowCalendars: false,
        };
    }
    CompanyActivityLogComponent.prototype.refresh = function () {
        var _this = this;
        this.showSpinner = true;
        var data = { startDate: this.endFrom._d, endDate: this.endUpto._d, user_id: this.selected };
        console.log(data);
        this.companyService.getDatefilterforlog(data).subscribe(function (data) {
            _this.loadToDataTable(data);
            _this.showSpinner = false;
        });
    };
    CompanyActivityLogComponent.prototype.loadToDataTable = function (data) {
        this.notExist = false;
        if (data.length == 0) {
            this.notExist = true;
        }
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
        // console.log(this.dataSource);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    CompanyActivityLogComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.companyService.getAllusers().subscribe(function (res) {
            _this.users = res;
        });
        this.refresh();
    };
    CompanyActivityLogComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    CompanyActivityLogComponent.prototype.selectedStartDate = function (value, datepicker) {
        var _this = this;
        this.endFrom = value.start;
        this.endUpto = value.end;
        var data = { startDate: this.endFrom, endDate: this.endUpto, user_id: this.selected };
        this.companyService.getDatefilterforlog(data).subscribe(function (res) {
            //  console.log(res);
            _this.loadToDataTable(res);
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], CompanyActivityLogComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], CompanyActivityLogComponent.prototype, "sort", void 0);
    CompanyActivityLogComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-activity-log',
            template: __webpack_require__("../../../../../src/app/components/company-activity-log/company-activity-log.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-activity-log/company-activity-log.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], CompanyActivityLogComponent);
    return CompanyActivityLogComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-add-project/company-add-project.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".panel-body {\n    padding: 50px;\n}\n.mrg-top label{padding-top: 20px;}\n.round-button{\n    float:none !important;\n  }\n  .center-bt {\n      margin: 20px auto 10px auto;\n      float: none;\n  }\n  .info-icon{\n    font-size: 19px !important;\n    color: #0c64ae;\n  }", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-add-project/company-add-project.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n      <div class=\"col-md-1 col-xs-2 display-table-cell v-align box\" id=\"navigation\">\r\n        <company-sidebar></company-sidebar>\r\n      </div>\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <company-topbar></company-topbar>\r\n        <br>\r\n        <div class=\"col-md-12\"><h2>Add Project</h2></div>\r\n        <div class=\"col-md-5 col-xs-12\">\r\n          <div class=\"panel panel-default\">\r\n            <div class=\"panel-body mrg-top\">\r\n\r\n              <!-- <h3>Add Project</h3> -->\r\n              <div class=\"row\">\r\n\r\n                <div class=\"col-md-5 col-xs-6\"><label>Project Name *:</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <mat-form-field [formGroup]=\"formGroup\">\r\n                    <input matInput [(ngModel)]=\"project.project_name\" name=\"project_name\" autofocus required formControlName=\"project_nameValidation\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"clearfix\"></div>\r\n\r\n                <div class=\"col-md-5 col-xs-6\"><label>Type *:</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <mat-form-field [formGroup]=\"formGroup\">\r\n                    <mat-select name=\"project_type\" [(ngModel)]=\"project.project_type\" required formControlName=\"project_typeValidation\">\r\n                      <mat-option value=\"Billable\">Billable</mat-option>\r\n                      <mat-option value=\"Non-billable\">Non-billable</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"clearfix\"></div>\r\n\r\n                <div class=\"col-md-5 col-xs-6\"><label>Category *:</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <mat-form-field [formGroup]=\"formGroup\">\r\n                    <mat-select [(ngModel)]=\"project.category_id\" name=\"category_id\" required formControlName=\"category_idValidation\">\r\n                      <mat-option *ngFor=\"let item of categories\" [value]=\"item.id\">\r\n                        {{ item.category_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                  <span *ngIf=\"showPMlist\" matTooltip=\"To add a new category, please go to the Project Category by clicking the master settings on the left corner !\"><i class=\"material-icons info-icon\">info_outline</i></span>\r\n                </div>\r\n                <div class=\"clearfix\"></div>\r\n\r\n                <div class=\"col-md-5 col-xs-6\"><label>Priority *:</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <mat-form-field [formGroup]=\"formGroup\">\r\n                    <mat-select name=\"priority\" [(ngModel)]=\"project.priority\" required formControlName=\"priorityValidation\">\r\n                      <mat-option value=\"Low\">Low</mat-option>\r\n                      <mat-option value=\"Medium\">Medium</mat-option>\r\n                      <mat-option value=\"High\">High</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"clearfix\"></div>\r\n\r\n                <div class=\"col-md-5 col-xs-6\"><label>Description *:</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <mat-form-field [formGroup]=\"formGroup\">\r\n                    <textarea matInput [(ngModel)]=\"project.description\" name=\"description\" required formControlName=\"descriptionValidation\"\r\n                      matTextareaAutosize matAutosizeMinRows=\"3\" matAutosizeMaxRows=\"6\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"clearfix\"></div>\r\n\r\n                <div *ngIf=\"showPMlist\">\r\n                  <div class=\"col-md-5 col-xs-6\"><label>Assigned To :</label></div>\r\n                  <div class=\"col-md-7 col-xs-6\">\r\n                    <mat-form-field [formGroup]=\"formGroup\">\r\n                      <mat-select [(ngModel)]=\"project.pm_id\" name=\"pm_id\" required formControlName=\"pm_idValidation\">\r\n                        <mat-option value=\"Me\">Me</mat-option>\r\n                        <mat-option *ngFor=\"let item of pm\" [value]=\"item.login_id\">\r\n                          {{ item.f_name }} {{ item.l_name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <button type=\"submit\" [disabled]=\"addProjectBtnDisable\" (click)=\"addProject(project)\" class=\"btn round-button center-bt\">Submit</button>\r\n                    <div *ngIf=\"addProjectSpinner\">\r\n                      <app-spinner></app-spinner>\r\n                  </div>\r\n  \r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-add-project/company-add-project.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyAddProjectComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__("../../../forms/esm5/forms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var CompanyAddProjectComponent = (function () {
    function CompanyAddProjectComponent(snackBar, companyService, routes, _formBuilder) {
        this.snackBar = snackBar;
        this.companyService = companyService;
        this.routes = routes;
        this._formBuilder = _formBuilder;
        this.addProjectBtnDisable = false;
        this.addProjectSpinner = false;
        this.showPMlist = false;
        this.project = {
            project_name: '',
            project_type: '',
            priority: '',
            description: '',
            pm_id: '',
            category_id: '',
        };
    }
    CompanyAddProjectComponent.prototype.ngOnInit = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : get logged user details
        // Params        : 
        // Returns       : user details
        // Author        : Rinsha
        // Date          : 16-1-2018
        // Last Modified : 16-1-2018, Rinsha
        // Desc          :
        this.companyService.getLoggedUSerDetails().subscribe(function (info) {
            // console.log(info);
            if (info == null || info == '') {
                _this.routes.navigate(['/home']);
            }
            if (info.role == "user") {
                if (info.delete_status == true || info.block_status == true) {
                    _this.routes.navigate(['/404']);
                }
                _this.routes.navigate(['/survey', info.surveyId]);
            }
            if (info.role == "company") {
                if (info.delete_status == true || info.block_status == true || info.cmp_status == "Not Verified") {
                    _this.routes.navigate(['/clogin']);
                }
                if (info.cmp_status == "Expired") {
                    _this.routes.navigate(['/expired']);
                }
                if (info.is_profile_completed == false) {
                    _this.routes.navigate(['/additnInfo', info._id]);
                }
                _this.routes.navigate(['/dashboard']);
            }
        });
        // ---------------------------------End-------------------------------------------
        // ---------------------------------Start-------------------------------------------
        // Function      : Get logged in entity
        // Params        : 
        // Returns       : Get logged in entity
        // Author        : Rinsha
        // Date          : 08-03-2018
        // Last Modified : 08-03-2018, Rinsha
        // Desc          :  
        this.companyService.getLoggedinEntity().subscribe(function (data) {
            _this.entity = data;
            if (_this.entity.role_id == 1) {
                _this.showPMlist = true;
            }
        });
        // -----------------------------------End------------------------------------------
        this.formGroup = this._formBuilder.group({
            project_nameValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
            project_typeValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
            priorityValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
            descriptionValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
            pm_idValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
            category_idValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
        });
        // ---------------------------------Start-------------------------------------------
        // Function      : Get All pm, project category in a company
        // Params        : 
        // Returns       : All pm, project category in a company
        // Author        : Rinsha
        // Date          : 08-03-2018
        // Last Modified : 08-03-2018, Rinsha
        // Desc          :  
        this.companyService.getAllPm().subscribe(function (res) {
            _this.pm = res;
        });
        this.companyService.getAllProjectCategory().subscribe(function (res) {
            _this.categories = res;
        });
        // -----------------------------------End------------------------------------------
    };
    CompanyAddProjectComponent.prototype.addProject = function (project) {
        var _this = this;
        this.addProjectBtnDisable = true;
        this.addProjectSpinner = true;
        if (this.entity.role_id == 3) {
            this.project.pm_id = this.entity.id;
        }
        if (project.project_name == '' || project.category_id == '' || project.project_type == '' || project.priority == '' || project.description == '') {
            var snackBarRef = this.snackBar.open("All fields are required", '', {
                duration: 2000
            });
            this.addProjectBtnDisable = false;
            this.addProjectSpinner = false;
        }
        else {
            if (project.pm_id == '' || project.pm_id == "Me") {
                if (confirm("Do you select yourself as the Project Manager? ")) {
                    project.pm_id = this.entity.id;
                }
                this.addProjectBtnDisable = false;
                this.addProjectSpinner = false;
            }
            // console.log(project);
            // ---------------------------------Start-------------------------------------------
            // Function      : add project
            // Params        : data from form
            // Returns       : 
            // Author        : Rinsha
            // Date          : 08-03-2018
            // Last Modified : 08-03-2018, Rinsha
            // Desc          :  
            this.companyService.addProject(project).subscribe(function (data) {
                _this.addProjectBtnDisable = false;
                _this.addProjectSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 3000
                });
                if (data.success == true) {
                    if (project.pm_id == _this.entity.id) {
                        _this.routes.navigate(['/assign-project', data.id]);
                    }
                    else {
                        _this.routes.navigate(['/project']);
                    }
                }
            });
            // -----------------------------------End------------------------------------------
        }
    };
    CompanyAddProjectComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-add-project',
            template: __webpack_require__("../../../../../src/app/components/company-add-project/company-add-project.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-add-project/company-add-project.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__angular_material__["z" /* MatSnackBar */], __WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_forms__["FormBuilder"]])
    ], CompanyAddProjectComponent);
    return CompanyAddProjectComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-approve-estimation/company-approve-estimation.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".panel-body {\r\n    padding: 50px;\r\n}\r\n.mrg-top label{padding-top: 20px;}\r\n.round-button{\r\n    float:none !important;\r\n  }\r\n  .center-bt {\r\n      margin: 20px auto 10px auto;\r\n      float: none;\r\n  }\r\n .no-edit{font-weight: 400 !important;}\r\n .line-breaker {\r\n    white-space: pre-line;\r\n  }\r\n  .task{background:#fbf6f1;width:100%;padding:6px 0;display: inline-block;margin-bottom:6px;}\r\n  button, input, optgroup, select, textarea{outline:none !important;}\r\n  .taskedit{border-left:1px solid #ccc;    display: inline-block;width:100%;margin-top: 5px;}\r\n  .task ul li{width:auto;float:left;padding: 8px;}\r\n      a{color:#111;}\r\n  .task h5{padding-top:13px;padding-top: 6px;}\r\n  .hash{background:#f7f6f4;}\r\n  .round-button {\r\n      border-radius: 20px;\r\n      margin: 0;\r\n      float: left;\r\n      background: #f37600;\r\n      color: #fff;\r\n      padding: 7px 15px;\r\n      transition: background 2s;\r\n      margin-bottom:15px;\r\n  }\r\n  .round-button:hover {\r\n      background: #ffaa05;\r\n      color: #fff;\r\n  }\r\n  .dropdown ul.dropdown-menu:before {\r\n      content: \"\";\r\n      border-bottom: 10px solid #fff;\r\n      border-right: 10px solid transparent;\r\n      border-left: 10px solid transparent;\r\n      position: absolute;\r\n      top: -10px;\r\n      right: 16px;\r\n      z-index: 10;\r\n  }\r\n  .round-button:hover, .round-button:focus, .round-button.focus{color:#fff;}\r\n  button, input, optgroup, select, textarea{outline:none;}\r\n  .effect-1 ~ .focus-border{position: absolute; bottom: 0; left: 15px; width: 0; height: 2px;background-color: #bba28b; transition: 0.4s;right:15px;}\r\n  .effect-1:focus ~ .focus-border{width: 95%; transition: 0.4s;}\r\n  .effect-1{border: 0; padding: 7px 0; border-bottom: 1px solid #ccc;width:100%;}\r\n  .style{width:100%;}\r\n  label{font-size:15px;color:#4a4a4a;font-weight:normal;padding:5px 0;}\r\n  .mrg-2{margin-bottom:10px;}\r\n  .dropdown-menu > li > a {\r\n      display: block;\r\n      padding: 3px 20px;\r\n      clear: both;\r\n      font-weight: normal;\r\n      line-height: 25px;\r\n      color: #333333;\r\n      white-space: nowrap;\r\n  }\r\n  .addmodule {\r\n      padding: 20px 10px!important;\r\n      min-width: 357px;\r\n      right: 0px;\r\n      left: inherit;\r\n  }\r\n  .style{border:none;border-bottom: 1px solid #ccc;}\r\n  .white {\r\n      background: #ffffff none repeat scroll 0 0;\r\n      \r\n      display: inline-block;\r\n      padding: 33px 25px;\r\n      width: 100%;\r\n  }\r\n  .btn-file{padding:0;}\r\n  .white {\r\n      background: #ffffff none repeat scroll 0 0;\r\n      \r\n      display: inline-block;\r\n      padding: 33px 25px;\r\n      width: 100%;\r\n      margin-bottom:20px;\r\n  }\r\n  .center-bt{margin:20px auto 10px auto;float:none;}\r\n  @media only screen and (max-width : 767px) {\r\n  .mrg-2 {\r\n      margin-bottom: 37px;\r\n  }\r\n  \r\n  .task ul li{    padding: 2px;}\t\r\n  .addmodule{    min-width: 274px;}\r\n  }\r\n  .round-button{float:inherit !important;}  \r\n  .right-btn{float:right !important;margin-left: 15px;}\r\n\r\n\r\n .dwnload{ background: #f39f00;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  clear: left;\r\n  margin-right: 10px;\r\n}\r\n.mr-top{margin-top:20px;}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.modal{top:0;}\r\n.modal-header {\r\n    padding: 10px 30px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #fe6a07;\r\n  }\r\n  .modal-content{\r\n  box-shadow:none;\r\n  border-radius: 9px;\r\n  overflow: hidden;\r\n  \r\n  }\r\n  .modal-title{color:#fff;}\r\n  .modal-body{    padding:20px 30px;}\r\n  .modal-body input{border:none;}\r\n  .modal-body input{padding: 0;}\r\n  .pad-top{padding-top:20px;}\r\n  .wdth{width:100% !important;}\r\n  .brd{    border: none;\r\n    height: 54px;}\r\n    label{\r\n        font-weight: 700 !important;\r\n    }\r\n    .material-icons{\r\n        margin-top: 37%\r\n    }\r\n    .task label{float:left; font-size: 13px;padding: 4px}\r\n    .task h5{    float: left;\r\n        padding-top: 0px;\r\n        margin-top: 3px;\r\n        padding-left: 6px;\r\n        padding-right: 8px;}\r\n        .task ul{\r\n            padding: 3px !important;\r\n        }\r\n    .paddleft{padding-left:20px;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-approve-estimation/company-approve-estimation.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n      <div class=\"col-md-1 col-xs-2 display-table-cell v-align box\" id=\"navigation\">\r\n        <company-sidebar></company-sidebar>\r\n      </div>\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <company-topbar></company-topbar>\r\n        <br>\r\n        <div class=\"col-md-12\">\r\n          <h2>Project Estimation</h2>\r\n        </div>\r\n        <div class=\"col-md-5 col-xs-12\">\r\n          <div class=\"panel panel-default\">\r\n            <div class=\"panel-body mrg-top\">\r\n\r\n\r\n              <div class=\"row\">\r\n\r\n                <div class=\"col-md-4 col-xs-6\">\r\n                  <label>Project Name :</label>\r\n                </div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\">\r\n                    <label class=\"no-edit\">{{project?.project_name}}</label>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\">\r\n                  <label>Project Code :</label>\r\n                </div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\">\r\n                    <label class=\"no-edit\">{{project?.project_code}}</label>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\">\r\n                  <label>Assignee :</label>\r\n                </div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\">\r\n                    <label class=\"no-edit\">{{assignee}}</label>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\">\r\n                  <label>Category :</label>\r\n                </div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\">\r\n                    <label class=\"no-edit\">{{category?.category_name}}</label>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\">\r\n                  <label>Priority :</label>\r\n                </div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\">\r\n                    <label class=\"no-edit\">{{project?.priority}}</label>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\">\r\n                  <label>Description :</label>\r\n                </div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\">\r\n                    <label class=\"no-edit\">\r\n                      {{project?.description}}\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\">\r\n                  <label>Date :</label>\r\n                </div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\">\r\n                    <label class=\"no-edit\">{{pro_date}}</label>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n              </div>\r\n              <br>\r\n              <div class=\"clearfix\"></div>\r\n              <!-- -----------------------------------------disable buttns-------------------------------------------------- -->\r\n              <div class=\"col-md-1 pull-right\" *ngIf=\"estimations.length == 0\">\r\n                <span class=\"houricon\" matTooltip=\"No estimation found \">\r\n                  <i class=\"material-icons info-icon\">info_outline</i>\r\n                </span>\r\n              </div>\r\n              <button type=\"button\" *ngIf=\"estimations.length == 0\" class=\"btn round-button pull-right right-btn\" data-backdrop=\"static\"\r\n                data-keyboard=\"false\" disabled=\"disabled\">ReSubmit </button>\r\n              <button type=\"button\" *ngIf=\"estimations.length == 0\" class=\"btn round-button pull-right right-btn\" disabled=\"disabled\">Accept </button>\r\n\r\n              <!-- -----------------------------------------disable buttns-------------------------------------------------- -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-7 col-sm-12 col-xs-12 gutter\">\r\n          <div class=\"white text-right\">\r\n            <h4>Total time taken for estimation : {{total_time_tacken_for_estimation}} Hrs</h4>\r\n          </div>\r\n          <div *ngFor=\"let item of estimations\">\r\n\r\n            <div class=\"white\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"col-md-6\">\r\n                  <label>\r\n                    <b>{{item.tbl_project_estimation_team.tbl_team.team_name }} </b>\r\n                  </label>\r\n                  <div class=\"clearfix\"></div>\r\n                  <p class=\"paddleft\">Team Lead : {{item.tbl_project_estimation_team.tbl_user_profile.f_name}} {{item.tbl_project_estimation_team.tbl_user_profile.l_name}}</p>\r\n                </div>\r\n                <div class=\"col-md-6 text-right\">\r\n                  Total Hours : {{item.estimation_hour}} Hrs\r\n                </div>\r\n\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"clearfix\"></div>\r\n                  <p class=\"paddleft\">time taken for estimation: {{item.time_tacken_for_estimation}} Hrs</p>\r\n                </div>\r\n              </div>\r\n              <div class=\"clearfix\"></div>\r\n              <div class=\"col-md-12\">\r\n                <button id=\"expandBtn{{item.id}}\" type=\"button\" (click)=\"expand(item.id)\" class=\"btn round-button pull-right right-btn\"\r\n                  data-toggle=\"collapse\" attr.data-target=\"#demo{{item.id}}\">{{labelToExpand}}</button>\r\n              </div>\r\n              <div class=\"clearfix\"></div>\r\n              <div id=\"demo{{item.id}}\" class=\"collapse\">\r\n\r\n                <div *ngFor=\"let modules of item.tbl_estimation_modules\">\r\n                  <div class=\"col-md-10 col-xs-12 pull-right\">\r\n                    <div class=\"task\">\r\n                      <div class=\"col-md-8 col-xs-7\">\r\n                        <h5>{{modules.module_name}}</h5>\r\n                      </div>\r\n                      <div class=\"col-md-4 col-xs-5\">\r\n                        <ul class=\"taskedit\">\r\n                          <li>{{modules.module_time}} Hr</li>\r\n                          <!-- <li class=\"pull-right\"><a href=\"#\" data-toggle=\"modal\" data-target=\"#deleteModuleModal\" (click)=\"getId(i)\"> <i class=\"fa fa-close\" aria-hidden=\"true\"></i></a></li>\r\n                      <li class=\"pull-right\"><a><i (click)=\"editModules(i)\" class=\"fa fa-pencil\" aria-hidden=\"true\"></i></a></li> -->\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div *ngFor=\"let tasks of modules.tbl_estimation_tasks\">\r\n                    <div class=\"col-md-9 col-xs-12 pull-right\">\r\n                      <div class=\"task hash\">\r\n                        <div class=\"col-md-8 col-xs-7\">\r\n                          <label>Task :</label>\r\n                          <h5>{{tasks.task_name}} </h5>\r\n                          <!-- <label>Planned hour :</label>\r\n                          <h5>{{tasks.planned_hour }} Hr</h5>\r\n                          <label>Buffer hour :</label>\r\n                          <h5>{{ tasks.buffer_hour}} Hr</h5> -->\r\n                          <label>Verification hour :</label>\r\n                          <h5>{{ tasks.verification_hour}} Hr</h5>\r\n                        </div>\r\n                        <div class=\"col-md-4 col-xs-5\">\r\n                          <ul class=\"taskedit\">\r\n                            <label>Total task hour:</label>\r\n                            <li>{{ tasks.planned_hour + tasks.buffer_hour }} Hr</li>\r\n                            <!-- <li class=\"pull-right\"><a href=\"#\" data-toggle=\"modal\" data-target=\"#deleteTaskModal\" (click)=\"getId1(i,j)\"> <i class=\"fa fa-close\" aria-hidden=\"true\"></i></a></li>\r\n                        <li class=\"pull-right\"><a href=\"#\" data-toggle=\"modal\" data-target=\"#editTaskModal\" (click)=\"getId1(i,j)\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></a></li> -->\r\n                          </ul>\r\n                        </div>\r\n                        <div class=\"clearfix\"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"clearfix\"></div>\r\n              </div>\r\n              <br>\r\n              <div class=\"col-md-12\">\r\n                <button type=\"button\" [disabled]=\"resubmitDisable\" (click)=\"getEstIdtoResubmit(item.id, item.tbl_project_estimation_team.tbl_user_profile.login_id)\"\r\n                  data-toggle=\"modal\" data-target=\"#resubmitModal\" class=\"btn round-button pull-right right-btn\" data-backdrop=\"static\"\r\n                  data-keyboard=\"false\">ReSubmit</button>\r\n                <button type=\"button\" *ngIf=\"!acceptButtonHide[item.id]\" [disabled]=\"approveEstimationDisable\" (click)=\"acceptEstimation(item.id)\"\r\n                  class=\"btn round-button pull-right right-btn\">Accept</button>\r\n                <div *ngIf=\"approveestimSpinner\">\r\n                  <app-spinner></app-spinner>\r\n                </div>\r\n\r\n              </div>\r\n              <div class=\"clearfix\"></div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"col-md-12\">\r\n            <button type=\"button\" *ngIf=\"sendApprovalButtonShow\" [disabled]=\"approveEstimationBtn\" (click)=\"sendForApproval()\" class=\"btn round-button pull-right right-btn\">{{sendForApprovalBtn}}</button>\r\n            <button type=\"button\" *ngIf=\"forwardButtonShow\" data-toggle=\"modal\" data-target=\"#forwardModal\" class=\"btn round-button pull-right right-btn\"\r\n              data-backdrop=\"static\" data-keyboard=\"false\">Forward To</button>\r\n            <div *ngIf=\"approveEstimSpinner\">\r\n              <app-spinner></app-spinner>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <!-- --------------------------------------------- resubmit modal ----------------------------------------------------------------- -->\r\n        <div id=\"resubmitModal\" class=\"modal fade\" role=\"dialog\">\r\n          <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn1>&times;</button>\r\n                <h4 class=\"modal-title\">Resubmit</h4>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"resubmit(est_id, team_head_loginId);\" novalidate>\r\n                  <div>\r\n                    <div class=\"clearfix\"></div>\r\n                    <div class=\"col-md-3 col-xs-6\">\r\n                      <label class=\"pad-top\">Reason :</label>\r\n                    </div>\r\n                    <div class=\"col-md-7 col-xs-6\">\r\n                      <mat-form-field class=\"wdth\">\r\n                        <textarea matInput [(ngModel)]=\"reason\" name=\"reason\" required matAutosizeMinRows=\"3\" class=\"brd\" matAutosizeMaxRows=\"6\"></textarea>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <br>\r\n                  </div>\r\n                  <br>\r\n                  <div class=\"\">\r\n                    <div class=\"col-md-12\">\r\n                      <button type=\"submit\" [disabled]=\"btnDisbled\" class=\"btn round-button right-btn\">Submit</button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- ----------------------------------------------------------------------resubmit modal------------------------------------------------------------------ -->\r\n\r\n        <!-- --------------------------------------------- forward modal ----------------------------------------------------------------- -->\r\n        <div id=\"forwardModal\" class=\"modal fade\" role=\"dialog\">\r\n          <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn2>&times;</button>\r\n                <h4 class=\"modal-title\">Forward</h4>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"forward();\" novalidate>\r\n                  <div>\r\n                    <div class=\"clearfix\"></div>\r\n                    <div class=\"col-md-3 col-xs-6\">\r\n                      <label class=\"pad-top\">Forward To *:</label>\r\n                    </div>\r\n                    <div class=\"col-md-7 col-xs-6\">\r\n                      <mat-form-field class=\"wdth\">\r\n                        <mat-select [(ngModel)]=\"forward_to\" name=\"forward_to\" required>\r\n                          <mat-option *ngFor=\"let item of teamheads\" [value]=\"item\">\r\n                            {{ item.tbl_user_profile.f_name}} {{ item.tbl_user_profile.l_name }}\r\n                          </mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <br>\r\n                  </div>\r\n                  <br>\r\n                  <div class=\"\">\r\n                    <div class=\"col-md-12\">\r\n                      <button type=\"submit\" [disabled]=\"forwardDisable\" class=\"btn round-button right-btn\">Submit</button>\r\n                      <div *ngIf=\"forwardSpinner\">\r\n                        <app-spinner></app-spinner>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- ----------------------------------------------------------------------forward modal------------------------------------------------------------------ -->\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-approve-estimation/company-approve-estimation.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyApproveEstimationComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__("../../../forms/esm5/forms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var CompanyApproveEstimationComponent = (function () {
    function CompanyApproveEstimationComponent(userService, route, router, snackBar, companyService, routes, _formBuilder) {
        var _this = this;
        this.userService = userService;
        this.route = route;
        this.router = router;
        this.snackBar = snackBar;
        this.companyService = companyService;
        this.routes = routes;
        this._formBuilder = _formBuilder;
        this.approveEstimationDisable = false;
        this.approveestimSpinner = false;
        this.resubmitDisable = false;
        this.approveEstimationBtn = false;
        this.approveEstimSpinner = false;
        this.forwardDisable = false;
        this.forwardSpinner = false;
        this.team_member = [];
        this.estimations = [];
        this.task_time = 0;
        this.sendApprovalButtonShow = false;
        this.forwardButtonShow = false;
        this.acceptButtonHide = [];
        this.resubmitData = {
            project_id: '',
            to_id: '',
            reason: '',
        };
        this.teamheads = [];
        this.acceptedEstimationCount = 0;
        this.current_estimation_team_ids = [];
        this.forwardCount = 0;
        // override the route reuse strategy
        this.router.routeReuseStrategy.shouldReuseRoute = function () {
            return false;
        };
        this.router.events.subscribe(function (evt) {
            if (evt instanceof __WEBPACK_IMPORTED_MODULE_4__angular_router__["NavigationEnd"]) {
                // trick the Router into believing it's last link wasn't previously loaded
                _this.router.navigated = false;
                // if you need to scroll back to top, here is the right place
                window.scrollTo(0, 0);
            }
        });
    }
    //   constructor(private router: Router){
    //     // override the route reuse strategy
    //     this.router.routeReuseStrategy.shouldReuseRoute = function(){
    //        return false;
    //     }
    //     this.router.events.subscribe((evt) => {
    //        if (evt instanceof NavigationEnd) {
    //           // trick the Router into believing it's last link wasn't previously loaded
    //           this.router.navigated = false;
    //           // if you need to scroll back to top, here is the right place
    //           window.scrollTo(0, 0);
    //        }
    //    });
    // }
    CompanyApproveEstimationComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.labelToExpand = "View More";
        // console.log(this.disabled)
        // ---------------------------------Start-------------------------------------------
        // Function      : Get logged in entity
        // Params        : 
        // Returns       : Get logged in entity
        // Author        : Rinsha
        // Date          : 08-03-2018
        // Last Modified : 08-03-2018, Rinsha
        // Desc          :  
        this.companyService.getLoggedinEntity().subscribe(function (data) {
            _this.entity = data;
            // -----------------------------------End------------------------------------------
            _this.sub = _this.route.params.subscribe(function (params) {
                _this.p_id = params['id'];
                // this.notif_id = params['id2'];
                // ---------------------------------Start-------------------------------------------
                // Function      : get project by id
                // Params        : id
                // Returns       : project
                // Author        : Rinsha
                // Date          : 08-03-2018
                // Last Modified : 08-03-2018, Rinsha
                // Desc          : getProject
                _this.companyService.getProject(_this.p_id).subscribe(function (res1) {
                    _this.project = res1;
                    _this.pro_date = _this.project.createdAt.substring(0, 10);
                    _this.category_id = _this.project.category_id;
                    _this.pm_id = _this.project.pm_id;
                    _this.assignee_id = _this.project.assignee_id;
                    if (_this.assignee_id == _this.pm_id) {
                        _this.sendForApprovalBtn = "Approve";
                    }
                    else {
                        _this.sendForApprovalBtn = "Send for Approval";
                    }
                    if (_this.project.status != "Drafted" || _this.project.pm_id != _this.entity.id || _this.project.is_estimation_completed == true) {
                        var snackBarRef = _this.snackBar.open('Unauthorized Access', '', {
                            duration: 4000
                        });
                        _this.routes.navigate(['/project']);
                    }
                    // ---------------------------------Start-------------------------------------------
                    // Function      : get category by id
                    // Params        : id
                    // Returns       : category
                    // Author        : Rinsha
                    // Date          : 08-03-2018
                    // Last Modified : 08-03-2018, Rinsha
                    // Desc          : getCategoryById
                    _this.companyService.getCategoryById(_this.category_id).subscribe(function (res) {
                        _this.category = res;
                    });
                    // ---------------------------------End-------------------------------------------
                    // ---------------------------------Start-------------------------------------------
                    // Function      : get pm by id
                    // Params        : login id
                    // Returns       : user info
                    // Author        : Rinsha
                    // Date          : 13-03-2018
                    // Last Modified : 13-03-2018, Rinsha
                    // Desc          : getPmByLoginid
                    _this.userService.getPmByLoginid(_this.pm_id).subscribe(function (res) {
                        _this.pm = res;
                    });
                    // ---------------------------------End-------------------------------------------
                    // ---------------------------------Start-------------------------------------------
                    // Function      : get assignee by id
                    // Params        : login id
                    // Returns       : user info
                    // Author        : Rinsha
                    // Date          : 13-03-2018
                    // Last Modified : 13-03-2018, Rinsha
                    // Desc          : getPmByLoginid
                    _this.userService.getPmByLoginid(_this.assignee_id).subscribe(function (res) {
                        _this.assignee = res;
                    });
                    // ---------------------------------End-------------------------------------------
                });
                // ---------------------------------End-------------------------------------------
            });
            _this.getTeamHeadsToEstimate();
            _this.getProjectstimations();
            _this.getTotalEstimations();
            _this.getAcceptedEstimations();
            _this.getforwardStatus();
        });
    };
    CompanyApproveEstimationComponent.prototype.getProjectstimations = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getProjectstimations
        // Params        : project id
        // Returns       : estimations
        // Author        : Rinsha
        // Date          : 15-03-2018
        // Last Modified : 15-03-2018, Rinsha
        // Desc          :
        this.forwardButtonShow = true;
        this.acceptedEstimationCount = 0;
        this.total_time_tacken_for_estimation = 0;
        this.companyService.getProjectstimations(this.p_id).subscribe(function (data) {
            // console.log(data);
            _this.estimations = [];
            _this.estimations = data;
            // console.log(data);
            _this.estimations.forEach(function (element) {
                _this.current_estimation_team_ids.push(element.estimation_team_id);
                _this.total_time_tacken_for_estimation = _this.total_time_tacken_for_estimation + element.time_tacken_for_estimation;
                // if (element.tbl_project_estimation_team.team_id == 1) {
                //   this.team_name = "Developer";
                // }
                // else if (element.tbl_project_estimation_team.team_id == 2) {
                //   this.team_name = "Designer";
                // }
                // else if (element.tbl_project_estimation_team.team_id == 3) {
                //   this.team_name = "QC";
                // }
                // element.team_name = this.team_name;
                element.tbl_estimation_modules.forEach(function (modules) {
                    _this.task_time = 0;
                    modules.tbl_estimation_tasks.forEach(function (tasks) {
                        _this.task_time = _this.task_time + tasks.planned_hour + tasks.buffer_hour;
                    });
                    modules.module_time = _this.task_time;
                });
                if (element.is_accepted == true) {
                    _this.acceptButtonHide[element.id] = true;
                    _this.acceptedEstimationCount = _this.acceptedEstimationCount + 1;
                }
                else {
                    _this.forwardButtonShow = false;
                }
            });
            if (_this.estimations.length == 0) {
                _this.forwardButtonShow = false;
            }
            // if (this.estimations.length == 3) {
            //   this.sendApprovalButtonShow = true;
            // }
            // if (this.acceptedEstimationCount == 3) {
            //   this.sendApprovalButtonShow = true;
            // }
            _this.getTeamHeadsToEstimate();
        });
        // -----------------------------------End------------------------------------------
    };
    CompanyApproveEstimationComponent.prototype.getTotalEstimations = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getTotalEstimations
        // Params        : project id
        // Returns       : estimations
        // Author        : Rinsha
        // Date          : 19-03-2018
        // Last Modified : 19-03-2018, Rinsha
        // Desc          :
        this.companyService.getTotalEstimations(this.p_id).subscribe(function (data) {
            // console.log(this.teamhead_count);
            if (data == _this.teamhead_count) {
                _this.forwardButtonShow = false;
            }
            // console.log(data);
        });
        // -----------------------------------End------------------------------------------
    };
    CompanyApproveEstimationComponent.prototype.getEstIdtoResubmit = function (est_id, team_head_loginId) {
        // console.log(team_head_loginId);
        this.est_id = est_id;
        this.team_head_loginId = team_head_loginId;
    };
    CompanyApproveEstimationComponent.prototype.resubmit = function (est_id, head_id) {
        var _this = this;
        this.approveestimSpinner = true;
        this.resubmitDisable = true;
        // console.log(this.reason);
        this.resubmitData = {
            project_id: this.p_id,
            to_id: head_id,
            reason: this.reason,
        };
        // ---------------------------------Start-------------------------------------------
        // Function      : resubmitEstimation
        // Params        : estimation id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 15-03-2018
        // Last Modified : 15-03-2018, Rinsha
        // Desc          :  
        this.companyService.resubmitEstimation(est_id, this.resubmitData).subscribe(function (data) {
            _this.approveestimSpinner = false;
            _this.resubmitDisable = false;
            var snackBarRef = _this.snackBar.open(data.msg, '', {
                duration: 3000
            });
            if (data.success == true) {
                _this.sendApprovalButtonShow = false;
                _this.getTeamHeadsToEstimate();
                _this.getProjectstimations();
                _this.getTotalEstimations();
                _this.getAcceptedEstimations();
                _this.closeBtn1.nativeElement.click();
                _this.routes.navigate(['/project']);
            }
        });
        // -----------------------------------End------------------------------------------
    };
    CompanyApproveEstimationComponent.prototype.acceptEstimation = function (est_id) {
        var _this = this;
        this.approveEstimationDisable = true;
        this.approveestimSpinner = true;
        // ---------------------------------Start-------------------------------------------
        // Function      : acceptEstimation
        // Params        : estimation id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 15-03-2018
        // Last Modified : 15-03-2018, Rinsha
        // Desc          :  
        this.companyService.acceptEstimation(est_id).subscribe(function (data) {
            var snackBarRef = _this.snackBar.open(data.msg, '', {
                duration: 2000
            });
            if (data.success == true) {
                _this.acceptButtonHide[est_id] = true;
                _this.getProjectstimations();
                _this.getTeamHeadsToEstimate();
                _this.getTotalEstimations();
                _this.getAcceptedEstimations();
            }
            _this.approveEstimationDisable = false;
            _this.approveestimSpinner = false;
        });
        // -----------------------------------End------------------------------------------
    };
    CompanyApproveEstimationComponent.prototype.forward = function () {
        var _this = this;
        this.forwardDisable = true;
        this.forwardSpinner = true;
        // console.log(this.forward_to);
        // ---------------------------------Start-------------------------------------------
        // Function      : forwardEstimationRequest
        // Params        : project id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 16-03-2018
        // Last Modified : 16-03-2018, Rinsha
        // Desc          :  
        // console.log(this.forward_to)
        if (this.forward_to == undefined) {
            var snackBarRef = this.snackBar.open('Please select a Team member', '', {
                duration: 2000
            });
            this.forwardDisable = false;
            this.forwardSpinner = false;
        }
        else {
            this.companyService.forwardEstimationRequest(this.p_id, this.forward_to.tbl_user_profile.login_id).subscribe(function (data) {
                if (data.success == true) {
                    var snackBarRef = _this.snackBar.open(data.msg, '', {
                        duration: 2000
                    });
                    _this.forwardDisable = false;
                    _this.forwardSpinner = false;
                    _this.forwardCount = _this.forwardCount + 1;
                    // if (this.forwardCount == 2) {
                    //   this.forwardButtonShow = false;
                    // }
                    _this.closeBtn2.nativeElement.click();
                    _this.routes.navigate(['/project']);
                }
            });
        }
        // -----------------------------------End------------------------------------------
    };
    CompanyApproveEstimationComponent.prototype.getTeamHeadsToEstimate = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : get team heads of the project who does nt involved in estimations
        // Params        : project id
        // Returns       : team head info
        // Author        : Rinsha
        // Date          : 16-03-2018
        // Last Modified : 16-03-2018, Rinsha
        // Desc          : getTeamHeadsToEstimate
        this.companyService.getTeamHeadsToEstimate(this.p_id).subscribe(function (team_heads) {
            // console.log(team_heads);
            _this.teamheads = [];
            _this.teamhead_count = team_heads.length;
            team_heads.forEach(function (teams) {
                if (_this.current_estimation_team_ids.includes(teams.id) == false) {
                    _this.teamheads.push(teams);
                }
            });
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyApproveEstimationComponent.prototype.sendForApproval = function () {
        var _this = this;
        this.approveEstimationBtn = true;
        this.approveEstimSpinner = true;
        // ---------------------------------Start-------------------------------------------
        // Function      : send request to admin for approval
        // Params        : project id, assignee id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 19-03-2018
        // Last Modified : 19-03-2018, Rinsha
        // Desc          : sendForApproval
        this.companyService.sendForApproval(this.p_id, this.assignee_id).subscribe(function (pro) {
            _this.approveEstimationBtn = false;
            _this.approveEstimSpinner = false;
            if (pro.success == true) {
                var snackBarRef = _this.snackBar.open(pro.msg, '', {
                    duration: 2000
                });
                if (_this.entity.id == _this.assignee_id) {
                    _this.routes.navigate(['/approve-project', _this.p_id]);
                }
                else {
                    _this.routes.navigate(['/project']);
                }
            }
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyApproveEstimationComponent.prototype.getAcceptedEstimations = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getAcceptedEstimations
        // Params        : project id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 20-03-2018
        // Last Modified : 20-03-2018, Rinsha
        // Desc          : 
        this.companyService.getAcceptedEstimations(this.p_id).subscribe(function (pro) {
            _this.acceptedEstimation = pro;
            if (pro == _this.teamhead_count) {
                _this.sendApprovalButtonShow = true;
            }
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyApproveEstimationComponent.prototype.getforwardStatus = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : forwardStatus
        // Params        : project id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 21-03-2018
        // Last Modified : 21-03-2018, Rinsha
        // Desc          : once it is forwarded, then there is no forward button
        this.companyService.getforwardStatus(this.p_id).subscribe(function (info) {
            if (info > 0) {
                _this.forwardButtonShow = false;
            }
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyApproveEstimationComponent.prototype.expand = function (id) {
        // console.log('vishuttan');
        // console.log($('#expandBtn'+id).html());
        if ($('#expandBtn' + id).html() == "View More") {
            $('#expandBtn' + id).html('View Less');
        }
        else {
            $('#expandBtn' + id).html('View More');
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn1'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyApproveEstimationComponent.prototype, "closeBtn1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn2'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyApproveEstimationComponent.prototype, "closeBtn2", void 0);
    CompanyApproveEstimationComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-approve-estimation',
            template: __webpack_require__("../../../../../src/app/components/company-approve-estimation/company-approve-estimation.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-approve-estimation/company-approve-estimation.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__services_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_4__angular_router__["ActivatedRoute"], __WEBPACK_IMPORTED_MODULE_4__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_5__angular_material__["z" /* MatSnackBar */], __WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_4__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_forms__["FormBuilder"]])
    ], CompanyApproveEstimationComponent);
    return CompanyApproveEstimationComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-approve-project-final/company-approve-project-final.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".task {\r\n    \r\n    width: 100%;\r\n    padding: 10px 20px;\r\n    display: inline-block;\r\n    margin-bottom: 6px;\r\n    background-color: rgb(230, 255, 230);\r\n    border-left: 3px solid rgb(111, 169, 59);\r\n}\r\n.task h5 {\r\n\r\n    padding-top: 6px;\r\n}\r\n.taskedit {\r\n    border-left: 1px solid #ccc;\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 5px;\r\n}\r\n.task ul li {\r\n    width: auto;\r\n    float: left;\r\n    padding:4px 5px;\r\n}\r\n.module{\r\n    background: #fbf6f1;\r\n    width: 100%;\r\n    padding: 6px 0;\r\n    display: inline-block;\r\n    margin-bottom: 6px\r\n}\r\n.module ul li {\r\n    width: auto;\r\n    float: left;\r\n    padding: 8px;\r\n}\r\n\r\n.taskedit2 {\r\n    border-left: 1px solid #f5f0f0;\r\n    display: inline-block;\r\n    width: auto;\r\n    float:left;\r\n    margin-top: 0px;\r\n    line-height:15px;\r\n}\r\n.inln{\r\n    display: inline;\r\n}\r\n.pro-lbl{\r\n    min-width: 132px;\r\n    margin-bottom: 15px;\r\n}\r\n.tsk-dt {\r\n    margin: 0;\r\n    padding-top: 0 !important;\r\n}\r\n.tsk-lbl{\r\n    color: #828282;\r\n    font-size: 11px;\r\n    padding-top: 4px;\r\n    float: left;\r\n    white-space: pre;\r\n    padding-right: 6px;\r\n}\r\n.assigned  h5{display: table-cell;\r\npadding-right: 15px;\r\nfloat: left;}\r\n.task-detailz{width:auto;float:left;}\r\n.assigned{background: #e5f3e4;}\r\n.delete-popup .fa-check-circle{\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #92D94F;\r\n    /* border-radius: 50%;\r\n    border: 3px solid; */\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-approve-project-final/company-approve-project-final.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\n  <div class=\"container-fluid display-table\">\n    <div class=\"row display-table-row\">\n\n      <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\n        <!-- sidebar-->\n\n        <company-sidebar></company-sidebar>\n        <!-- end sidebar-->\n      </div>\n\n      <div class=\"col-md-12 col-xs-12\">\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\n        <!-- topbar-->\n        <company-topbar></company-topbar>\n        <!-- end topbar-->\n\n\n        <div class=\"user-dashboard\">\n          <!-- <h1>Hello, JS</h1> -->\n          <div class=\"row\">\n              <ul class=\"breadcrumb text-left\">\n                  <li><a routerLink=\"/project\">Projects</a></li>\n                  <li>Project Details</li>\n                </ul>\n                \n            <div class=\"col-md-12 col-sm-12 col-xs-12 gutter \">\n              <div class=\"white\">\n                  <div class=\"pull-right\">\n                      <button  data-toggle=\"modal\" data-target=\"#confirmAopprovalModal\" class=\"btn round-button \" data-backdrop=\"static\" data-keyboard=\"false\">Approve</button>\n                    </div>\n\n                      <!-- --------------------------------------------- apporal modal ----------------------------------------------------------------- -->\n                      <div id=\"confirmAopprovalModal\" class=\"modal fade\" role=\"dialog\">\n                          <div class=\"modal-dialog\">\n                  \n                            <!-- Modal content-->\n                            <div class=\"modal-content\">\n                              <div class=\"modal-header\">\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                                <h4 class=\"modal-title\">Approval </h4>\n                              </div>\n                              <div class=\"modal-body delete-popup\">\n                                <i class=\"fa fa-check-circle\"></i>\n                  \n                  \n                                <h4 class=\"textalign\">Do You Wish to continue ?</h4>\n                  \n                              </div>\n                  \n                              <div class=\"modal-footer\" style=\"text-align:center;\">\n                                <button type=\"button\" (click)=\"approveProject()\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Approve</button>\n                              </div>\n                            </div>\n                  \n                          </div>\n                        </div>\n                  \n                        <!-- ----------------------------------------------------------------------reject modal-------------------------------------------------------- -->\n  \n                <div class=\"col-md-12\" >\n                 \n                  \n                  <div class=\"col-md-12\">\n                      <label for=\"\" class=\"pro-lbl\">Project Name</label>\n                      <p for=\"\" class=\"inln\">{{projects[0]?.tbl_project?.project_name}}</p>\n                  </div>\n                  <div class=\"col-md-12\">\n                      <label for=\"\" class=\"pro-lbl\">Project Code</label>\n                      <p for=\"\" class=\"inln\">{{projects[0]?.tbl_project?.project_code}}</p>\n                  </div>\n                  <!-- <div class=\"col-md-12\">\n                      <label for=\"\">Team Leader</label>\n                      <p for=\"\">{{project.project_name}}</p>\n                  </div> -->\n                  <!-- <div class=\"col-md-12\">\n                      <label for=\"\" class=\"pro-lbl\">Team Members</label>\n                      <div *ngFor=\"let teammember of project?.tbl_project_member_assocs\">\n                      <p for=\"\" class=\"inln\">{{teammember.tbl_user_profile.f_name}}</p>\n                      </div>\n                  </div> -->\n                  <div class=\"col-md-12\">\n                      <label for=\"\" class=\"pro-lbl\">Start Date</label>\n                      <p for=\"\" class=\"inln\">{{projects[0]?.tbl_project?.planned_start_date| date: 'yyyy-MM-dd HH:mm a'}}</p>\n                  </div>\n                  <div class=\"col-md-12\">\n                      <label for=\"\" class=\"pro-lbl\">End Date</label>\n                      <p for=\"\" class=\"inln\">{{projects[0]?.tbl_project?.planned_end_date| date: 'yyyy-MM-dd HH:mm a'}}</p>\n                  </div>\n                  <div class=\"col-md-12\">\n                      <label for=\"\" class=\"pro-lbl\">Status</label>\n                      <p for=\"\" class=\"inln\">{{projects[0]?.tbl_project?.status}}</p>\n                  </div>\n                  <div class=\"col-md-12\" *ngIf=\"project?.tbl_project?.status == 'Cancelled'\">\n                    <label for=\"\" class=\"pro-lbl\">Cancellation Time:</label>\n                    <p for=\"\" class=\"inln\">{{projects[0]?.tbl_project?.updatedAt | date: 'yyyy-MM-dd HH:mm a'}} </p>\n                </div>\n                  <div class=\"col-md-12\">\n                    <label for=\"\" class=\"pro-lbl\">Project Cost:</label>\n                    <p for=\"\" class=\"inln\">{{projects[0]?.tbl_project?.project_cost}} </p>\n                </div>\n                <div class=\"col-md-12\">\n                  <label for=\"\" class=\"pro-lbl\">Description:</label>\n                  <p for=\"\" class=\"inln\">{{projects[0]?.tbl_project?.description}} </p>\n              </div>\n                \n\n              <div  *ngFor=\"let project of projects;\">\n                <div class=\"col-md-12 col-xs-12 pull-right\">\n                  <ng-container  >\n                      <div class=\"module\">\n                          <div class=\"col-md-9 col-xs-7\">\n                            <h5>{{project?.module_name}}</h5>\n                          </div>\n                          <div class=\"col-md-3 col-xs-5\">\n                            <ul class=\"taskedit\" >\n                              <li>{{project?.totalhour}} Hrs</li>\n                              \n                            </ul>\n                          </div>\n                        </div>\n                        <ng-container *ngFor=\"let i of project.tbl_project_tasks; let i=index\">\n                            <div class=\"col-md-10 pull-right\">\n                              <div class=\"row\">\n                                  <div class=\"task assigned \" >\n                                      <div class=\"task-detailz\">\n                                        <label class=\"tsk-lbl\">Task name:</label>\n                                        <h5 class=\"tsk-dt\">{{i.task_name}}</h5>\n                                      </div>\n                                      <div class=\"task-detailz\">\n                                          <label class=\"tsk-lbl\">Assigned person:</label>\n                                        <h5 class=\"tsk-dt\">{{i.tbl_user_profile.f_name}} {{i.tbl_user_profile.l_name}}</h5>\n                                      </div>\n                                   \n                                      <div class=\"task-detailz\">\n                                          <label class=\"tsk-lbl\">Planned start date:</label>\n                                          <h5 class=\"tsk-dt\">{{i.planned_start_date_time | date: 'yyyy-MM-dd HH:mm a'}} </h5>\n                                      </div>\n                                      <div class=\"task-detailz\">\n                                          <label class=\"tsk-lbl\">Planned end date:</label>\n                                          <h5 class=\"tsk-dt\">{{i.planned_end_date_time | date: 'yyyy-MM-dd HH:mm a'}} </h5>\n                                      </div>\n                                      <div class=\"task-detailz\">\n                                          <label class=\"tsk-lbl\">Planned Hour:</label>\n                                        <ul class=\"taskedit2\">\n                                          <li>{{i.planned_hour+i.buffer_hour}} Hrs </li>\n                                        </ul>\n                                      </div>\n                                      <div class=\"task-detailz\" *ngIf=\"i.actual_hour\">\n                                          <label class=\"tsk-lbl\">Actual Hour:</label>\n                                        <ul class=\"taskedit2\">\n                                          <li>{{i.actual_hour}} Hrs </li>\n                                        </ul>\n                                      </div>\n                                      <div class=\"task-detailz\" >\n                                          <label class=\"tsk-lbl\">Status:</label>\n                                        <ul class=\"taskedit2\">\n                                          <li class=\"text-primary\"><b>{{i.tbl_task_status_assocs[0]?.tbl_task_status.status}} </b> </li>\n                                        </ul>\n                                      </div>\n                                      <div class=\"task-detailz\" *ngIf=\"i.tbl_task_status_assocs[0]?.tbl_task_status.id==2 && i.tbl_task_status_assocs[0]?.reason \">\n                                          <label class=\"tsk-lbl\">Reason to Pause:</label>\n                                        <ul class=\"taskedit2\">\n                                          <li>{{i.tbl_task_status_assocs[0]?.reason}}  </li>\n                                        </ul>\n                                      </div>\n                                      <div class=\"task-detailz\" *ngIf=\"i.tbl_task_status_assocs[0]?.tbl_task_status.id==4 \">\n                                          <label class=\"tsk-lbl\">Reason to Hold:</label>\n                                        <ul class=\"taskedit2\">\n                                          <li>{{i.tbl_task_status_assocs[0]?.reason}}  </li>\n                                        </ul>\n                                      </div>\n\n                                      <div class=\"task-detailz\" *ngIf=\"i.tbl_task_status_assocs[0]?.progress_id\">\n                                          <label class=\"tsk-lbl\">Progress Percentage:</label>\n                                        <ul class=\"taskedit2\">\n                                          <li>{{i.tbl_task_status_assocs[0]?.progress.percentage}}% </li>\n                                        </ul>\n                                      </div>\n                                     \n                                    \n                                   \n                                    </div>\n                              </div>\n                                \n                              </div>\n                        </ng-container>\n                        \n                        \n                  </ng-container>\n                    \n                  </div>\n                </div>\n                \n                <div class=\"text-center\">\n                  <app-spinner *ngIf=\"spinner\"></app-spinner>\n\n                </div>\n                </div>\n              </div>\n              <!--white-->\n            </div>\n\n\n\n          </div>\n\n\n        </div>\n        <!-- footer-->\n        <!-- <admin-footer></admin-footer> -->\n        <!-- end footer-->\n      </div>\n    </div>\n  </div>\n  <!-- Modal -->\n\n\n\n\n  <!--delete modal------>\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-approve-project-final/company-approve-project-final.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyApproveProjectFinalComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var CompanyApproveProjectFinalComponent = (function () {
    function CompanyApproveProjectFinalComponent(companyService, routes, snackBar, _activatedRoute, config) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this._activatedRoute = _activatedRoute;
        this.config = config;
        this.spinner = false;
        this.showData = false;
        this.xShow = false;
        this.socket = __WEBPACK_IMPORTED_MODULE_3_socket_io_client__(config.socketURL);
    }
    CompanyApproveProjectFinalComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.socket.on('inProgress', function () {
            _this.getProjectDetails();
        });
        this.socket.on('paused', function () {
            _this.getProjectDetails();
        });
        this.socket.on('complete', function () {
            _this.getProjectDetails();
        });
        this.socket.on('hold', function () {
            _this.getProjectDetails();
        });
        this.socket.on('completed', function () {
            _this.getProjectDetails();
        });
        this.getProjectDetails();
    };
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Manu Prasad 
    // Desc          : Get Teams from database
    CompanyApproveProjectFinalComponent.prototype.getProjectDetails = function () {
        var _this = this;
        this.spinner = true;
        this._activatedRoute.params.subscribe(function (params) {
            _this.projectId = params['id'];
        });
        // console.log(this.projectId)
        this.companyService.getProjectDetails(this.projectId).subscribe(function (resProjects) {
            console.log(resProjects);
            // this.allProjects.resProjects.
            _this.projects = [];
            _this.projects = resProjects.data;
            _this.projects.forEach(function (module, key) {
                var totalhour = 0;
                module.tbl_project_tasks.forEach(function (task) {
                    totalhour = totalhour + task.buffer_hour + task.planned_hour;
                });
                module.totalhour = totalhour;
            });
            if (resProjects) {
                _this.showData = true;
                _this.spinner = false;
            }
        });
    };
    //  ---------------------------------end-----------------------------------------------
    CompanyApproveProjectFinalComponent.prototype.approveProject = function () {
        var _this = this;
        this.companyService.projectApprove(this.projectId).subscribe(function (res) {
            console.log(res);
            var snackBarRef = _this.snackBar.open(res.msg, '', {
                duration: 4000
            });
            if (res.success == true) {
                _this.routes.navigate(['/view-project', _this.projectId]);
            }
        });
    };
    CompanyApproveProjectFinalComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-approve-project-final',
            template: __webpack_require__("../../../../../src/app/components/company-approve-project-final/company-approve-project-final.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-approve-project-final/company-approve-project-final.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["Router"],
            __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["ActivatedRoute"],
            __WEBPACK_IMPORTED_MODULE_5__config_config__["a" /* Config */]])
    ], CompanyApproveProjectFinalComponent);
    return CompanyApproveProjectFinalComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-approve-project/company-approve-project.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".panel-body {\n    padding: 50px;\n}\n.mrg-top label{padding-top: 20px;}\n.round-button{\n    float:none !important;\n  }\n  .center-bt {\n      margin: 20px auto 10px auto;\n      float: none;\n  }\n .no-edit {font-weight: 400 !important;}\n .line-breaker {\n    white-space: pre-line;\n  }\n\n\n  .task{background:#fbf6f1;width:100%;padding:6px 0;display: inline-block;margin-bottom:6px;}\n  button, input, optgroup, select, textarea{outline:none !important;}\n  .taskedit{border-left:1px solid #ccc;    display: inline-block;width:100%;margin-top: 5px;}\n  .task ul li{width:auto;float:left;padding: 8px;}\n      a{color:#111;}\n  .task h5{padding-top:13px;padding-top: 6px;}\n  .hash{background:#f7f6f4;}\n  .round-button {\n      border-radius: 20px;\n      margin: 0;\n      float: left;\n      background: #f37600;\n      color: #fff;\n      padding: 7px 15px;\n      transition: background 2s;\n      margin-bottom:15px;\n  }\n  .round-button:hover {\n      background: #ffaa05;\n      color: #fff;\n  }\n  .dropdown ul.dropdown-menu:before {\n      content: \"\";\n      border-bottom: 10px solid #fff;\n      border-right: 10px solid transparent;\n      border-left: 10px solid transparent;\n      position: absolute;\n      top: -10px;\n      right: 16px;\n      z-index: 10;\n  }\n  .round-button:hover, .round-button:focus, .round-button.focus{color:#fff;}\n  button, input, optgroup, select, textarea{outline:none;}\n  .effect-1 ~ .focus-border{position: absolute; bottom: 0; left: 15px; width: 0; height: 2px;background-color: #bba28b; transition: 0.4s;right:15px;}\n  .effect-1:focus ~ .focus-border{width: 95%; transition: 0.4s;}\n  .effect-1{border: 0; padding: 7px 0; border-bottom: 1px solid #ccc;width:100%;}\n  .style{width:100%;}\n  label{font-size:15px;\n    color:#4a4a4a;\n    font-weight:bold !important;\n    padding:5px 0;}\n  .mrg-2{margin-bottom:10px;}\n  .dropdown-menu > li > a {\n      display: block;\n      padding: 3px 20px;\n      clear: both;\n      font-weight: normal;\n      line-height: 25px;\n      color: #333333;\n      white-space: nowrap;\n  }\n  .addmodule {\n      padding: 20px 10px!important;\n      min-width: 357px;\n      right: 0px;\n      left: inherit;\n  }\n  .style{border:none;border-bottom: 1px solid #ccc;}\n  .white {\n      background: #ffffff none repeat scroll 0 0;\n      \n      display: inline-block;\n      padding: 33px 25px;\n      width: 100%;\n  }\n  .btn-file{padding:0;}\n  .white {\n      background: #ffffff none repeat scroll 0 0;\n      \n      display: inline-block;\n      padding: 33px 25px;\n      width: 100%;\n      margin-bottom:20px;\n  }\n  .center-bt{margin:20px auto 10px auto;float:none;}\n  @media only screen and (max-width : 767px) {\n  .mrg-2 {\n      margin-bottom: 37px;\n  }\n  \n  .task ul li{    padding: 2px;}\t\n  .addmodule{    min-width: 274px;}\n  }\n  .round-button{float:inherit !important;}  \n  .right-btn{float:right !important;margin-left: 15px;}\n\n\n .dwnload{ background: #f39f00;\n  border: none;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  color: #fff;\n  font-weight: bold;\n  clear: left;\n  margin-right: 10px;\n}\n.mr-top{margin-top:20px;}\n.modal-content{border-radius:0;box-shadow:none;}\n.modal-header {\n    padding: 7px 15px;\n    border-bottom: 1px solid #e5e5e5;\n    background: #da524f;\n}\n.modal-title {\n    margin: 0;\n    line-height: 26px;\n    font-size: 15px;\n    color: #fff;\n}\n.modal{top:0;}\n.modal-header {\n    padding: 10px 30px;\n    border-bottom: 1px solid #e5e5e5;\n    background: #fe6a07;\n  }\n  .modal-content{\n  box-shadow:none;\n  border-radius: 9px;\n  overflow: hidden;\n  \n  }\n  .modal-title{color:#fff;}\n  .modal-body{    padding:20px 30px;}\n  .modal-body input{border:none;}\n  .modal-body input{padding: 0;}\n  .pad-top{padding-top:20px;}\n  .wdth{width:100% !important;}\n  .brd{    border: none;\n    height: 54px;}\n.prepared li{float: \nleft;width:auto;text-align:left;    line-height: 26px;}\n.all-buttons{display: -ms-flexbox;display: flex;}\n.round-button{margin-right: 10px;}\n.line-under{\n    text-decoration: underline;\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-approve-project/company-approve-project.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n      <div class=\"col-md-1 col-xs-2 display-table-cell v-align box\" id=\"navigation\">\r\n        <company-sidebar></company-sidebar>\r\n      </div>\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <company-topbar></company-topbar>\r\n        <br>\r\n        <div class=\"col-md-12\">\r\n          <h2>Project Approval</h2>\r\n        </div>\r\n        <div class=\"col-md-5 col-xs-12\">\r\n          <div class=\"panel panel-default\">\r\n            <div class=\"panel-body mrg-top\">\r\n\r\n\r\n              <div class=\"row\">\r\n\r\n                <div class=\"col-md-4 col-xs-6\"><label>Project Name :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\"><label class=\"no-edit\">{{project?.project_name}}</label></div>\r\n                </div>\r\n                <br>\r\n                \r\n                <div class=\"col-md-4 col-xs-6\"><label>Project Code :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\"><label class=\"no-edit\">{{project?.project_code}}</label></div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\"><label>Assigned to :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\"><label class=\"no-edit\">{{pm}}</label></div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\"><label>Total Estimation Hours :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\"><label class=\"no-edit\">{{estimation_hour}} Hr</label></div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\"><label>Prepared By :</label></div>\r\n                <div class=\"col-md-8 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\"><label class=\"no-edit\">\r\n                  <ul *ngFor=\"let item of team_leaders\" class=\"prepared\">\r\n                    <li>{{item}}</li></ul>  \r\n                  </label></div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\"><label>Project Cost *:</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <mat-form-field>\r\n                    <span matPrefix>₹&nbsp;</span>\r\n                    <input matInput type=\"number\" min=\"1\" autofocus class=\"example-right-align\" name=\"project_cost\" [(ngModel)]=\"project_cost\"\r\n                      required>\r\n                  </mat-form-field>\r\n                </div>\r\n                <br>\r\n\r\n              </div>\r\n\r\n              <br>\r\n              <br>\r\n              <div class=\"row all-buttons\">\r\n                <div class=\"\">\r\n                  <button type=\"submit\" [disabled]=\"rejectBtnDisable\" (click)=\"getCost(project_cost)\" data-toggle=\"modal\" data-target=\"#rejectModal\" class=\"btn round-button\" data-backdrop=\"static\" data-keyboard=\"false\">Reject</button>\r\n                </div>\r\n                <div class=\"\">\r\n                  <button type=\"submit\" [disabled]=\"approveProject\" (click)=\"acceptProject(project_cost)\" class=\"btn round-button\">Accept</button>\r\n                </div>\r\n                <div class=\"\">\r\n                  <button type=\"submit\" (click)=\"getCost(project_cost)\" data-toggle=\"modal\" data-target=\"#resubmitModal\" class=\"btn round-button \" data-backdrop=\"static\" data-keyboard=\"false\">{{resubmitBtn}}</button>\r\n                </div>\r\n                <div *ngIf=\"approveBtnspinner\">\r\n                  <app-spinner></app-spinner>\r\n              </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <!-- --------------------------------------------- reject modal ----------------------------------------------------------------- -->\r\n      <div id=\"rejectModal\" class=\"modal fade\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n              <h4 class=\"modal-title\">Reject </h4>\r\n            </div>\r\n            <div class=\"modal-body delete-popup\">\r\n              <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n              <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n            </div>\r\n\r\n            <div class=\"modal-footer\" style=\"text-align:center;\">\r\n              <button type=\"button\" (click)=\"rejectProject(project_cost)\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Reject</button>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <!-- ----------------------------------------------------------------------reject modal-------------------------------------------------------- -->\r\n\r\n      <!-- --------------------------------------------- Resubmit modal ----------------------------------------------------------------- -->\r\n      <div id=\"resubmitModal\" class=\"modal fade\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n\r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n              <h4 class=\"modal-title\">Resubmit </h4>\r\n            </div>\r\n            <div class=\"modal-body delete-popup\">\r\n              <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n              <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n            </div>\r\n\r\n            <div class=\"modal-footer\" style=\"text-align:center;\">\r\n              <button type=\"button\" (click)=\"resubmitProject(project_cost)\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Resubmit</button>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <!-- ----------------------------------------------------------------------Resubmit modal-------------------------------------------------------- -->\r\n    </div>\r\n  </div>\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-approve-project/company-approve-project.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyApproveProjectComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__("../../../forms/esm5/forms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var CompanyApproveProjectComponent = (function () {
    function CompanyApproveProjectComponent(userService, route, snackBar, companyService, routes, _formBuilder) {
        this.userService = userService;
        this.route = route;
        this.snackBar = snackBar;
        this.companyService = companyService;
        this.routes = routes;
        this._formBuilder = _formBuilder;
        this.approveProject = false;
        this.approveBtnspinner = false;
        this.rejectBtnDisable = false;
        this.estimation_hour = 0;
        this.team_leaders = [];
        this.project_cost = 0;
    }
    CompanyApproveProjectComponent.prototype.ngOnInit = function () {
        var _this = this;
        // console.log(this.disabled)
        // ---------------------------------Start-------------------------------------------
        // Function      : Get logged in entity
        // Params        : 
        // Returns       : Get logged in entity
        // Author        : Rinsha
        // Date          : 08-03-2018
        // Last Modified : 08-03-2018, Rinsha
        // Desc          :  
        this.companyService.getLoggedinEntity().subscribe(function (data) {
            _this.entity = data;
        });
        // -----------------------------------End------------------------------------------
        this.sub = this.route.params.subscribe(function (params) {
            _this.p_id = params['id'];
            // ---------------------------------Start-------------------------------------------
            // Function      : get project by id
            // Params        : id
            // Returns       : project
            // Author        : Rinsha
            // Date          : 08-03-2018
            // Last Modified : 08-03-2018, Rinsha
            // Desc          : getProject
            _this.companyService.getProject(_this.p_id).subscribe(function (res1) {
                _this.project = res1;
                _this.pro_date = _this.project.createdAt.substring(0, 10);
                _this.pm_id = _this.project.pm_id;
                _this.assignee_id = _this.project.assignee_id;
                if (_this.assignee_id == _this.pm_id) {
                    _this.resubmitBtn = "Edit Estimation";
                }
                else {
                    _this.resubmitBtn = "Resubmit";
                }
                if (_this.project.status != "Drafted" || _this.project.assignee_id != _this.entity.id) {
                    var snackBarRef = _this.snackBar.open('Unauthorized Access', '', {
                        duration: 4000
                    });
                    _this.routes.navigate(['/project']);
                }
                // ---------------------------------Start-------------------------------------------
                // Function      : get pm by id
                // Params        : login id
                // Returns       : user info
                // Author        : Rinsha
                // Date          : 13-03-2018
                // Last Modified : 13-03-2018, Rinsha
                // Desc          : getPmByLoginid
                _this.userService.getPmByLoginid(_this.pm_id).subscribe(function (res) {
                    _this.pm = res;
                });
                // ---------------------------------End-------------------------------------------
            });
            // ---------------------------------End-------------------------------------------
            // ---------------------------------Start-------------------------------------------
            // Function      : getProjectstimations
            // Params        : project id
            // Returns       : estimations
            // Author        : Rinsha
            // Date          : 15-03-2018
            // Last Modified : 15-03-2018, Rinsha
            // Desc          :
            _this.companyService.getProjectstimations(_this.p_id).subscribe(function (data1) {
                _this.estimation_hour = 0;
                _this.team_leaders = [];
                data1.forEach(function (element) {
                    _this.estimation_hour = _this.estimation_hour + element.estimation_hour;
                    if (element.tbl_project_estimation_team.team_id == 1) {
                        _this.team_name = "Developer";
                    }
                    else if (element.tbl_project_estimation_team.team_id == 2) {
                        _this.team_name = "Designer";
                    }
                    else if (element.tbl_project_estimation_team.team_id == 3) {
                        _this.team_name = "QC";
                    }
                    _this.team_leaders.push(_this.team_name + " Team head :" + element.tbl_project_estimation_team.tbl_user_profile.f_name + " " + element.tbl_project_estimation_team.tbl_user_profile.l_name);
                });
            });
            // ---------------------------------End-------------------------------------------
        });
    };
    CompanyApproveProjectComponent.prototype.acceptProject = function (project_cost) {
        var _this = this;
        this.approveProject = true;
        this.approveBtnspinner = true;
        this.project_cost = project_cost;
        if (this.project_cost == 0) {
            var snackBarRef = this.snackBar.open('Project Cost is required', '', {
                duration: 4000
            });
            this.approveProject = false;
            this.approveBtnspinner = false;
        }
        else {
            this.project_submit = {
                project_cost: this.project_cost,
                p_id: this.p_id,
                estimation_hour: this.estimation_hour,
                pm_id: this.pm_id
            };
            // ---------------------------------Start-------------------------------------------
            // Function      : accept project
            // Params        : cost, estimated hr, project id, pm id
            // Returns       : 
            // Author        : Rinsha
            // Date          : 20-03-2018
            // Last Modified : 20-03-2018, Rinsha
            // Desc          : acceptProject
            this.companyService.acceptProject(this.project_submit).subscribe(function (pro) {
                var snackBarRef = _this.snackBar.open(pro.msg, '', {
                    duration: 4000
                });
                _this.approveProject = false;
                _this.approveBtnspinner = false;
                if (pro.success == true) {
                    if (_this.pm_id == _this.entity.id) {
                        _this.routes.navigate(['/project-planning', _this.p_id]);
                    }
                    else {
                        _this.routes.navigate(['/project']);
                    }
                }
            });
            // ---------------------------------End-------------------------------------------
        }
    };
    CompanyApproveProjectComponent.prototype.rejectProject = function (project_cost) {
        var _this = this;
        this.rejectBtnDisable = true;
        this.approveBtnspinner = true;
        this.project_cost = project_cost;
        if (this.project_cost == 0) {
            var snackBarRef = this.snackBar.open('Project Cost is required', '', {
                duration: 4000
            });
            this.rejectBtnDisable = false;
            this.approveBtnspinner = false;
        }
        else {
            this.project_submit = {
                project_cost: this.project_cost,
                p_id: this.p_id,
                estimation_hour: this.estimation_hour,
                pm_id: this.pm_id
            };
            // ---------------------------------Start-------------------------------------------
            // Function      : reject project
            // Params        : cost, estimated hr, project id
            // Returns       : 
            // Author        : Rinsha
            // Date          : 20-03-2018
            // Last Modified : 20-03-2018, Rinsha
            // Desc          : rejectProject
            this.companyService.rejectProject(this.project_submit).subscribe(function (pro) {
                var snackBarRef = _this.snackBar.open(pro.msg, '', {
                    duration: 4000
                });
                _this.rejectBtnDisable = false;
                if (pro.success == true) {
                    _this.routes.navigate(['/project']);
                }
            });
            // ---------------------------------End-------------------------------------------
        }
    };
    CompanyApproveProjectComponent.prototype.getCost = function (project_cost) {
        this.project_cost = project_cost;
    };
    CompanyApproveProjectComponent.prototype.resubmitProject = function (project_cost) {
        var _this = this;
        if (this.project_cost == 0) {
            var snackBarRef = this.snackBar.open('Project Cost is required', '', {
                duration: 4000
            });
        }
        else {
            this.project_submit = {
                p_id: this.p_id,
                pm_id: this.pm_id
            };
            // ---------------------------------Start-------------------------------------------
            // Function      : resubmit project
            // Params        : cost, estimated hr, project id, pm id
            // Returns       : 
            // Author        : Rinsha
            // Date          : 20-03-2018
            // Last Modified : 20-03-2018, Rinsha
            // Desc          : resubmitProject
            this.companyService.resubmitProject(this.project_submit).subscribe(function (pro) {
                var snackBarRef = _this.snackBar.open(pro.msg, '', {
                    duration: 4000
                });
                if (pro.success == true) {
                    if (_this.pm_id == _this.entity.id) {
                        _this.routes.navigate(['/approve-estimation', _this.p_id]);
                    }
                    else {
                        _this.routes.navigate(['/project']);
                    }
                }
            });
            // ---------------------------------End-------------------------------------------
        }
    };
    CompanyApproveProjectComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-approve-project',
            template: __webpack_require__("../../../../../src/app/components/company-approve-project/company-approve-project.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-approve-project/company-approve-project.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__services_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_4__angular_router__["ActivatedRoute"], __WEBPACK_IMPORTED_MODULE_5__angular_material__["z" /* MatSnackBar */], __WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_4__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_forms__["FormBuilder"]])
    ], CompanyApproveProjectComponent);
    return CompanyApproveProjectComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-assign-project/company-assign-project.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".panel-body {\n    padding: 50px;\n}\n.mrg-top label{padding-top: 20px;}\n.round-button{\n    float:none !important;\n  }\n  .center-bt {\n      margin: 20px auto 10px auto;\n      float: none;\n  }\n .no-edit{font-weight: 400;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-assign-project/company-assign-project.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n      <div class=\"col-md-1 col-xs-2 display-table-cell v-align box\" id=\"navigation\">\r\n        <company-sidebar></company-sidebar>\r\n      </div>\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <company-topbar></company-topbar>\r\n        <br>\r\n        <div class=\"col-md-12\"><h2>Assign Team Head</h2></div>\r\n        <div class=\"col-md-6 col-xs-12\">\r\n          <div class=\"panel panel-default\">\r\n            <div class=\"panel-body mrg-top\">\r\n\r\n              <!-- <h3>Assign Team Head</h3> -->\r\n              <div class=\"row\">\r\n\r\n                <div class=\"col-md-4 col-xs-6\"><label>Project Name :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\"><label class=\"no-edit\">{{project?.project_name}}</label></div>\r\n                </div>\r\n                <br>\r\n                <div class=\"clearfix\"></div>\r\n\r\n                <div class=\"col-md-4 col-xs-6\"><label>Project Code :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\"><label class=\"no-edit\">{{project?.project_code}}</label></div>\r\n                </div>\r\n                <br>\r\n                <div class=\"clearfix\"></div>\r\n                <!-- <div class=\"col-md-4 col-xs-6\"><label>Assignee</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-4 col-xs-6\"><label class=\"no-edit\">{{project?.assignee_id}}</label></div>\r\n                </div>\r\n                <br> -->\r\n\r\n                <div class=\"col-md-4 col-xs-6\"><label>Category :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\"><label class=\"no-edit\">{{category?.category_name}}</label></div>\r\n                </div>\r\n                <br>\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"col-md-4 col-xs-6\"><label>Priority :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\"><label class=\"no-edit\">{{project?.priority}}</label></div>\r\n                </div>\r\n                <br>\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"col-md-4 col-xs-6\"><label>Description :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\"><label class=\"no-edit\">{{project?.description}}</label></div>\r\n                </div>\r\n                <br>\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"col-md-4 col-xs-6\"><label>Date :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\"><label class=\"no-edit\">{{pro_date}}</label></div>\r\n                </div>\r\n                <br>\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"col-md-12 col-xs-12\"><label>Assigned To* :</label></div>\r\n                <br>\r\n                <div></div>\r\n                <div class=\"col-md-11 pull-right \"*ngFor=\"let item of allteam\">\r\n                  <div class=\"col-md-5 col-xs-6\"><label>{{item?.team_name}} :</label></div>\r\n                  <div class=\"col-md-6 col-xs-6\">\r\n                    <mat-form-field [formGroup]=\"formGroup\">\r\n                      <mat-select name=\"developer_id+(item?.id)\" [(ngModel)]=\"project_assign.assigned_ids[item?.id]\" (change)=\"changeTeam(item)\" \r\n                        formControlName=\"developerValidation\">\r\n                        <mat-option value=\"\">None</mat-option>\r\n                        <mat-option *ngFor=\"let teamassoc of item.tbl_team_assocs\" [value]=\"teamassoc\">\r\n                          {{ teamassoc?.tbl_user_profile?.f_name }} {{ teamassoc?.tbl_user_profile?.l_name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n                <!-- <div class=\"col-md-11 pull-right\">\r\n                  <div class=\"col-md-5 col-xs-6\"><label>Designer Head :</label></div>\r\n                  <div class=\"col-md-6 col-xs-6\">\r\n                    <mat-form-field [formGroup]=\"formGroup\">\r\n                      <mat-select name=\"designer_id\" [(ngModel)]=\"project_assign.designer_id\" (ngModelChange)=\"changeDesigner($event)\" required\r\n                        formControlName=\"designerValidation\">\r\n                        <mat-option value=\"\">None</mat-option>\r\n                        <mat-option *ngFor=\"let item of designerTeam\" [value]=\"item\">\r\n                          {{ item.f_name }} {{ item.l_name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <br> -->\r\n                <!-- <div class=\"col-md-11 pull-right\">\r\n                  <div class=\"col-md-5 col-xs-6\"><label>QC Head :</label></div>\r\n                  <div class=\"col-md-6 col-xs-6\">\r\n                    <mat-form-field [formGroup]=\"formGroup\">\r\n                      <mat-select name=\"qc_id\" (ngModelChange)=\"changeQC($event)\" [(ngModel)]=\"project_assign.qc_id\" required formControlName=\"qcValidation\">\r\n                        <mat-option value=\"\">None</mat-option>\r\n                        <mat-option *ngFor=\"let item of qcTeam\" [value]=\"item\">\r\n                          {{ item.f_name }} {{ item.l_name }}\r\n                        </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div> -->\r\n                <br>\r\n                <br>\r\n                <div class=\"col-md-4 col-xs-6\"><label>Requirement Summary*:</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <mat-form-field [formGroup]=\"formGroup\">\r\n                    <textarea matInput [(ngModel)]=\"project_assign.requirement\" name=\"requirement\" required formControlName=\"reqValidation\"\r\n                      matTextareaAutosize matAutosizeMinRows=\"3\" matAutosizeMaxRows=\"6\"></textarea>\r\n                  </mat-form-field>\r\n                  <input (change)=\"displayDoc($event)\" name=\"file\"  type=\"file\" accept=\".jpeg, .png, .gif,.jar, .pdf\" />\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\"><label>Forward Estimation Request*:</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <mat-form-field [formGroup]=\"formGroup\">\r\n                    <mat-select name=\"forward_to\" [(ngModel)]=\"project_assign.forward_to\" required formControlName=\"forwardValidation\">\r\n                      <mat-option *ngFor=\"let item of teamhead\" [value]=\"item\">\r\n                        {{ item.f_name }} {{ item.l_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <button type=\"submit\" [disabled]=\"assignProjectBtnDisable\" (click)=\"assignProject(project_assign)\" class=\"btn round-button center-bt\">Submit</button>\r\n                    <div *ngIf=\"assignSpinner\">\r\n                      <app-spinner></app-spinner>\r\n                  </div>\r\n  \r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-assign-project/company-assign-project.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyAssignProjectComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__("../../../forms/esm5/forms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var CompanyAssignProjectComponent = (function () {
    function CompanyAssignProjectComponent(route, snackBar, companyService, routes, _formBuilder) {
        this.route = route;
        this.snackBar = snackBar;
        this.companyService = companyService;
        this.routes = routes;
        this._formBuilder = _formBuilder;
        this.assignProjectBtnDisable = false;
        this.assignSpinner = false;
        this.teamhead = [];
        this.project_assign = {
            teamhead: { id: '' },
            project_id: '',
            developer_id: '',
            designer_id: '',
            qc_id: '',
            forward_to: '',
            requirement: '',
            docSrc: '',
            docFile: [],
            assigned_ids: [],
            assignedUsersTeamIdObj: {}
        };
        this.assignedUsersId = [];
        this.isExists = false;
        this.filesToUpload = [];
    }
    CompanyAssignProjectComponent.prototype.ngOnInit = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : Get logged in entity
        // Params        : 
        // Returns       : Get logged in entity
        // Author        : Rinsha
        // Date          : 08-03-2018
        // Last Modified : 08-03-2018, Rinsha
        // Desc          :  
        this.companyService.getLoggedinEntity().subscribe(function (data) {
            _this.entity = data;
            // console.log(data);
        });
        // -----------------------------------End------------------------------------------
        this.sub = this.route.params.subscribe(function (params) {
            _this.p_id = params.id;
            // ---------------------------------Start-------------------------------------------
            // Function      : get project by id
            // Params        : id
            // Returns       : project
            // Author        : Rinsha
            // Date          : 08-03-2018
            // Last Modified : 08-03-2018, Rinsha
            // Desc          : getProject
            _this.companyService.getProject(_this.p_id).subscribe(function (res) {
                _this.project = res;
                if (_this.project.requirement_summary != null || _this.project.pm_id != _this.entity.id) {
                    var snackBarRef = _this.snackBar.open('Unauthorized Access', '', {
                        duration: 4000
                    });
                    _this.routes.navigate(['/project']);
                }
                _this.pro_date = _this.project.createdAt.substring(0, 10);
                _this.category_id = _this.project.category_id;
                // ---------------------------------Start-------------------------------------------
                // Function      : get category by id
                // Params        : id
                // Returns       : category
                // Author        : Rinsha
                // Date          : 08-03-2018
                // Last Modified : 08-03-2018, Rinsha
                // Desc          : getCategoryById
                _this.companyService.getCategoryById(_this.category_id).subscribe(function (res) {
                    _this.category = res;
                });
                // ---------------------------------End-------------------------------------------
            });
            // ---------------------------------End-------------------------------------------
            // ---------------------------------Start-------------------------------------------
            // Function      : get developer team
            // Params        : 
            // Returns       : users in developer team
            // Author        : Rinsha
            // Date          : 09-03-2018
            // Last Modified : 09-03-2018, Rinsha
            // Desc          : getDeveloperTeam
            _this.companyService.getDeveloperTeam().subscribe(function (res) {
                _this.developerTeam = res;
            });
            _this.companyService.getallTeamsforassign().subscribe(function (res) {
                _this.allteam = res;
                console.log(_this.allteam);
            });
            // ---------------------------------End-------------------------------------------
            // ---------------------------------Start-------------------------------------------
            // Function      : get designer team
            // Params        : 
            // Returns       : users in designer team
            // Author        : Rinsha
            // Date          : 09-03-2018
            // Last Modified : 09-03-2018, Rinsha
            // Desc          : getDesignerTeam
            _this.companyService.getDesignerTeam().subscribe(function (res) {
                _this.designerTeam = res;
            });
            // ---------------------------------End-------------------------------------------
            // ---------------------------------Start-------------------------------------------
            // Function      : get qc team
            // Params        : 
            // Returns       : users in qc team
            // Author        : Rinsha
            // Date          : 09-03-2018
            // Last Modified : 09-03-2018, Rinsha
            // Desc          : getQCTeam
            _this.companyService.getQCTeam().subscribe(function (res) {
                _this.qcTeam = res;
            });
            // ---------------------------------End-------------------------------------------
        });
        this.formGroup = this._formBuilder.group({
            developerValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
            designerValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
            qcValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
            forwardValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
            reqValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
        });
    };
    // changeQC(qc) {
    //   this.popElement = '';
    //   this.isExists = false;
    //   this.teamhead.forEach((element, key) => {
    //     if (element.tbl_team_assocs[0].team_id == 3) {
    //       this.isExists = true;
    //       this.popElement = key;
    //     }
    //   });
    //   if (this.isExists == true) {
    //     this.teamhead.splice(this.popElement, 1);
    //   }
    //   if (this.inArray(qc, this.teamhead) == true) {
    //     this.project_assign.qc_id ='';
    //     let snackBarRef = this.snackBar.open("Team heads should be different", '', {
    //       duration: 2000
    //     });
    //   }
    //   else if (qc != '') {
    //     this.teamhead.push(qc);
    //   }
    // }
    CompanyAssignProjectComponent.prototype.changeTeam = function (teamm) {
        console.log(teamm);
        console.log(this.assignedUsersId);
        console.log(this.project_assign.assignedUsersTeamIdObj);
        if (this.project_assign.assigned_ids[teamm.id]) {
            if (this.inArray(this.project_assign.assigned_ids[teamm.id].tbl_user_profile.id, this.assignedUsersId) == true) {
                //console.log(this.project_assign.assigned_ids[teamm.id]);
                // this.project_assign.assigned_ids[teamm.id] = '';
                // console.log(this.project_assign.assigned_ids[teamm.id]);
                // if (index > -1) {
                //   this.project_assign.assigned_ids.splice(index, 1);
                // }
                // let snackBarRef = this.snackBar.open("Team heads should be different", '', {
                //   duration: 2000
                // });
            }
            else if (teamm != '') {
                console.log('vishuttan');
                this.teamhead.push(this.project_assign.assigned_ids[teamm.id].tbl_user_profile);
                this.project_assign.assignedUsersTeamIdObj[teamm.id] = this.project_assign.assigned_ids[teamm.id].tbl_user_profile.id;
                this.assignedUsersId.push(this.project_assign.assigned_ids[teamm.id].tbl_user_profile.id);
            }
        }
        else {
            var index = this.assignedUsersId.indexOf(this.project_assign.assignedUsersTeamIdObj[teamm.id]);
            if (index > -1) {
                this.assignedUsersId.splice(index, 1);
                this.project_assign.assignedUsersTeamIdObj[teamm.id] = 0;
            }
        }
    };
    // changeDesigner(designer) {
    //   this.popElement = '';
    //   this.isExists = false;
    //   this.teamhead.forEach((element, key) => {
    //     if (element.tbl_team_assocs[0].team_id == 2) {
    //       this.isExists = true;
    //       this.popElement = key;
    //     }
    //   });
    //   if (this.isExists == true) {
    //     this.teamhead.splice(this.popElement, 1);
    //   }
    //   if (this.userExists(designer.id) == true) {
    //     this.project_assign.designer_id ='';
    //     let snackBarRef = this.snackBar.open("Team heads should be different", '', {
    //       duration: 2000
    //     });
    //   }
    //   else if (designer != '') {
    //     this.teamhead.push(designer);
    //   }
    // }
    CompanyAssignProjectComponent.prototype.assignProject = function (project) {
        var _this = this;
        // this.assignProjectBtnDisable =true;
        // this.assignSpinner =true;
        this.project_assign.project_id = this.p_id;
        // console.log(project);
        // ---------------------------------Start-------------------------------------------
        // Function      : assign project
        // Params        : form data
        // Returns       : 
        // Author        : Rinsha
        // Date          : 09-03-2018
        // Last Modified : 09-03-2018, Rinsha
        // Desc          : AssignTeamHead
        this.companyService.AssignTeamHead(project).subscribe(function (data) {
            _this.assignProjectBtnDisable = false;
            _this.assignSpinner = false;
            var snackBarRef = _this.snackBar.open(data.msg, '', {
                duration: 4000
            });
            if (data.success == true) {
                _this.routes.navigate(['/project']);
            }
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyAssignProjectComponent.prototype.displayDoc = function (fileInput) {
        var _this = this;
        var ext = fileInput.target.files[0].name.split('.').pop().toLowerCase();
        this.project_assign.docFile = fileInput.target.files[0];
        if (fileInput.target.files && fileInput.target.files[0]) {
            var reader = new FileReader();
            reader.onload = (function (e) {
                _this.project_assign.docSrc = e.target['result'];
            });
            reader.readAsDataURL(fileInput.target.files[0]);
        }
    };
    CompanyAssignProjectComponent.prototype.inArray = function (needle, haystack) {
        var count = haystack.length;
        for (var i = 0; i < count; i++) {
            if (haystack[i] === needle) {
                return true;
            }
        }
        return false;
    };
    CompanyAssignProjectComponent.prototype.userExists = function (id) {
        return this.teamhead.some(function (el) {
            return el.id === id;
        });
    };
    CompanyAssignProjectComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-assign-project',
            template: __webpack_require__("../../../../../src/app/components/company-assign-project/company-assign-project.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-assign-project/company-assign-project.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__angular_router__["ActivatedRoute"], __WEBPACK_IMPORTED_MODULE_4__angular_material__["z" /* MatSnackBar */], __WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_forms__["FormBuilder"]])
    ], CompanyAssignProjectComponent);
    return CompanyAssignProjectComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-bar-graph/company-bar-graph.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-bar-graph/company-bar-graph.component.html":
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "../../../../../src/app/components/company-bar-graph/company-bar-graph.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyBarGraphComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var CompanyBarGraphComponent = (function () {
    function CompanyBarGraphComponent() {
        this.containerId = '';
        this.actual = '';
        this.planning = '';
    }
    CompanyBarGraphComponent.prototype.ngOnInit = function () { };
    CompanyBarGraphComponent.prototype.ngAfterViewInit = function () {
        var offenseNames = [
            "Hours",
        ];
        var years = ["Planned", "Actual"];
        var offensesByYear = [
            {
                "Hours": this.planning,
            },
            { "Hours": this.actual,
            },
        ];
        var generateClassStr = function (str) {
            return str.replace(/\s+/g, '-').toLowerCase();
        };
        var n = offenseNames.length, // number of layers
        m = offensesByYear.length, // number of samples per layer
        stack = d3.stack().keys(offenseNames);
        var layers = stack(offensesByYear); // calculate the stack layout
        layers.forEach(function (d, i) {
            // add keys to every datapoint
            d.forEach(function (dd, j) {
                dd.year = years[j];
                dd.offenseName = offenseNames[i];
                dd.class = generateClassStr(dd.offenseName);
                dd.value = dd.data[dd.offenseName];
            });
        });
        var yStackMax = d3.max(layers, function (layer) {
            return d3.max(layer, function (d) {
                return d[1];
            });
        });
        var margin = { top: 70, right: 15, bottom: 40, left: 50 }, fullChartWidth = 320, fullChartHeight = 200, width = fullChartWidth - margin.left - margin.right, height = fullChartHeight - margin.top - margin.bottom;
        d3.select("#" + this.containerId)
            .style("width", fullChartWidth)
            .style("height", fullChartHeight);
        var x = d3
            .scaleBand()
            .domain(years)
            .rangeRound([0, width])
            .padding(0.08);
        var y = d3
            .scaleLinear()
            .domain([0, yStackMax])
            .range([height, 0]);
        var z = d3
            .scaleBand()
            .domain(offenseNames)
            .rangeRound([0, x.bandwidth()]);
        var color = ["#beaed4", "#7fc97f", "#fdc086"];
        var svg = d3
            .select("#" + this.containerId)
            .append("svg")
            .attr("width", width + margin.left + margin.right + 20)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + (margin.left + 20) + "," + margin.top + ")");
        var mycount = 1;
        var layer = svg
            .selectAll(".layer")
            .data(layers)
            .enter()
            .append("g")
            .attr("class", "layer")
            .style("fill", function (d, i) {
            // mycount++;
            //  alert(mycount);
            // alert(i);
            // if(mycount == 0){
            //   mycount++;
            //   return '#7fc97f';
            // }else{
            //   mycount++;
            //   return  '#279428';
            // }
            //   alert(d);
            //  // alert(i);
            return '#7fc97f';
        });
        var tooltip = d3.select("body")
            .append("div")
            .style("position", "absolute")
            .style("z-index", "10")
            .style("display", "none")
            .style("background", "#96A7B9")
            .text("a simple tooltip");
        var rect = layer
            .selectAll(".bar")
            .data(function (d) {
            return d;
        })
            .enter()
            .append("rect")
            .attr("x", function (d) {
            return x(d.year);
        })
            .attr("y", height)
            .attr("width", x.bandwidth())
            .attr("height", 0)
            .on("mouseover", function (d) {
            tooltip.text("Total " + d.year + " Hour: " + d.data.Hours + " Hr");
            return tooltip.style("display", "block");
        })
            .on("mousemove", function () { return tooltip.style("top", (d3.event.pageY - 10) + "px").style("left", (d3.event.pageX + 10) + "px"); })
            .on("mouseout", function () { return tooltip.style("display", "none"); });
        rect
            .transition()
            .delay(function (d, i) {
            return i * 10;
        })
            .attr("y", function (d) {
            return y(d[1]);
        })
            .attr("height", function (d) {
            return y(d[0]) - y(d[1]);
        });
        svg
            .append("g")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x));
    };
    CompanyBarGraphComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-bar-graph',
            template: __webpack_require__("../../../../../src/app/components/company-bar-graph/company-bar-graph.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-bar-graph/company-bar-graph.component.css")],
            inputs: ['containerId', 'actual', 'planning']
        }),
        __metadata("design:paramtypes", [])
    ], CompanyBarGraphComponent);
    return CompanyBarGraphComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-dashboard/company-dashboard.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".graph-ul li{\r\n    float :left;\r\n    padding: 10px 2px;\r\n    border: 1px solid #ddd;\r\n    margin-top: 10px;\r\n    width: 300px;\r\n    display: table;\r\n    overflow:hidden;\r\n    padding-top: 0px;\r\n    text-align: center;\r\n   \r\n}\r\n.graph-ul li .divModule{\r\n    background:#ccc;\r\n    padding: 20px 5px;\r\n    margin-bottom: 10px;\r\n}\r\n.graph-ul{\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    overflow-x: scroll;\r\n    max-width:1170px;\r\n    float: none;\r\n    margin: 0 auto;\r\n}\r\n.bg-g{background:#17a88f;color:#fff; padding: 10px;min-height: 37px;line-height: 29px;}\r\n.bg-hash{background:#E9E9E9;padding: 10px;}\r\n.bg-hash select{background:none;border:none;width:100%;}\r\n.total{font-weight:700;padding-top: 20px; line-height: 36px;}\r\n.sales{margin-bottom: 25px;border:none;    box-shadow: 4px 7px 31px #e8e8e8;}\r\n.label-bg{background:#ccc;padding:20px;position:relative;margin-bottom: 15px;}\r\n.label-bg .number{width:50px;height:50px;border-radius:50%;background:#fff;left:0;right:0;position:absolute;z-index:10;margin:0 auto;text-align:center;    top: -4px;\r\n    box-shadow: 10px 4px 18px #b1b1b1;\r\n    border: 1px solid #b5b3b3;    font-size: 20px;\r\n    font-weight: bold;\r\n    color: #05b8cc;\r\n    padding-top: 15px;}\r\n\r\n    .graph-ul-hour li .divModule{\r\n        background:#ccc;\r\n        padding: 20px 5px;\r\n        margin-bottom: 10px;\r\n    }\r\n    .graph-ul-hour{\r\n        display: -ms-flexbox;\r\n        display: flex;\r\n        overflow-x: scroll;\r\n        max-width:1170px;\r\n        float: none;\r\n        margin: 0 auto;\r\n    }\r\n\r\n    .firstColumn{\r\n        background: #e4e4e4;\r\n        padding:0 40px;\r\n    }\r\n\r\n    .firstRow{\r\n        \r\n        font-weight:bold;\r\n        font-weight: bold;\r\n        min-height: 135px;\r\n        border-bottom: 1px solid #ccc;\r\n        text-transform:uppercase;\r\n        padding-top: 35%;\r\n    }\r\n    .secondRow{\r\n       \r\n        font-weight:bold;\r\n        min-height: 297px;\r\n        border-bottom: 1px solid #ccc;\r\n        text-transform:uppercase;\r\n        padding-top: 64%;\r\n    }\r\n    .ThirdRow{\r\n        \r\n        font-weight:bold;\r\n        min-height: 224px;\r\n        text-align:uppercase;\r\n        padding-top: 43%;\r\n    }\r\n    .prjtitle1{\r\n        background: #237cbe;\r\n        padding: 10px;\r\n        color:#fff;\r\n    }\r\n    .prjtitle2{\r\n       \r\n        padding: 10px;\r\n    }\r\n    .hash{    background: #f3f3f3;}\r\n    .datelabel{font-weight:bold;padding-bottom: 10px;}\r\n    .user-dashboard h1{text-align:center; font-size: 22px;margin-top:0px;}\r\n    .mr-top{margin-top: 20px;}\r\n\r\n\r\n\r\n\r\n    p {\r\n        font-family: Lato;\r\n      }\r\n      \r\n      .gu-mirror {\r\n        position: fixed !important;\r\n        margin: 0 !important;\r\n        z-index: 9999 !important;\r\n        opacity: 0.8;\r\n        -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\";\r\n        filter: alpha(opacity=80);\r\n      }\r\n      \r\n      .gu-hide {\r\n        display: none !important;\r\n      }\r\n      \r\n      .gu-unselectable {\r\n        -webkit-user-select: none !important;\r\n        -moz-user-select: none !important;\r\n        -ms-user-select: none !important;\r\n        user-select: none !important;\r\n      }\r\n      .gu-transit {\r\n        opacity: 0.2;\r\n        -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=20)\";\r\n        filter: alpha(opacity=20);\r\n      }\r\n      \r\n      .handler, .child-handler{\r\n        padding: 0 5px;\r\n        margin-right: 5px;\r\n        background-color: #e0e0e0;\r\n        cursor: move;\r\n      }\r\n      \r\n      .child-handler{\r\n        background-color: #a0a0a0;\r\n      }\r\n.text-center2{\r\n    text-align: center !important\r\n}\r\n.mdl-sts{\r\n    text-align: center;\r\n    padding: 100px 0;\r\n    font-size: 30px;\r\n    font-weight: 800;\r\n    color: #a2a2a2;\r\n}\r\n.mat-tab-label-active {\r\n   \r\n    font-weight: bold;\r\n} \r\n\r\n.tasklabel{       background: #efefef;\r\n    padding: 25px 30px;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    margin: 10px 0;\r\n    border: 1px solid #ccc;\r\n    font-weight: bold;\r\n    font-size : 12px;\r\n  }\r\n  h1{text-align:center;}\r\n  .bg-g{background:#17a88f;color:#fff; padding: 10px;}\r\n  .bg-hash{background:#E9E9E9;padding: 10px;;}\r\n  .bg-hash select{background:none;border:none;width:100%;}\r\n  .total{font-weight:700;padding-top: 20px; line-height: 36px;}\r\n.textleft{text-align:left !important;}\r\n  h1{padding-left: 6%;}\r\n.sales{margin-top: 25px;}\r\n#stacked-bar-chart-container1{\r\n    padding: 32px 0px;\r\n}\r\n.no-dtx{\r\n    text-align: center;\r\n    padding: 208px 0;\r\n    font-size: 30px;\r\n    font-weight: 800;\r\n    color: #a2a2a2;\r\n}\r\n.graph-ul li{overflow:inherit;}\r\n\r\n\r\n@media only screen and (max-width : 1920px) {\r\n    \r\n    .bg-g{line-height: 15px;}\r\n    \r\n    }\r\n    \r\n    @media only screen and (max-width : 1600px) {\r\n        \r\n    }\r\n    \r\n    \r\n    @media only screen and (max-width : 1366px) {\r\n    \r\n        .graph-ul-hour{max-width: 1040px;}\r\n        .bg-g {\r\n            line-height: 29px;\r\n        }\r\n    }\r\n    \r\n    @media only screen and (max-width : 1280px) {\r\n        .graph-ul-hour{max-width: 1040px;}\r\n        .bg-g {\r\n            line-height: 24px;\r\n        }\r\n    \r\n    }\r\n    \r\n    @media only screen and (max-width : 1024px) {\r\n    \r\n    }\r\n    @media only screen and (max-width : 768px) {\r\n\r\n    }\r\n   \r\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-dashboard/company-dashboard.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n    <div class=\"container-fluid display-table\">\r\n        <div class=\"row display-table-row\">\r\n\r\n            <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n                <!-- sidebar-->\r\n                <company-sidebar></company-sidebar>\r\n                <!-- end sidebar-->\r\n            </div>\r\n\r\n            <div class=\"col-md-12 col-xs-12\">\r\n                <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n                <!-- topbar-->\r\n                <company-topbar></company-topbar>\r\n                <!-- end topbar-->\r\n\r\n\r\n                <div class=\"user-dashboard\">\r\n\r\n                    <mat-tab-group color=\"primary\" (selectedTabChange)=\"onTabLinkClick($event)\">\r\n\r\n                        <mat-tab label=\"Task Vs Status\">\r\n                            <div *ngIf=\"preloader\">\r\n                                <app-spinner></app-spinner>\r\n                            </div>\r\n\r\n                            <company-task-vs-status></company-task-vs-status>\r\n                        </mat-tab>\r\n                        <mat-tab label=\"Resources Vs Task Hours\">\r\n                            <div class=\"sales\">\r\n                                <div *ngIf=\"preloader\">\r\n                                    <app-spinner></app-spinner>\r\n                                </div>\r\n                                <h1><b>Resources Vs Task Hours</b></h1>\r\n                                <div class=\"row\">\r\n                                    <br>\r\n                                    <div class=\"col-md-8 col-sm-8 col-xs-12\">\r\n                                        <div class=\"col-md-10 col-md-offset-1\">\r\n                                            <div class=\"col-md-6 bg-g\">*Select Project</div>\r\n                                            <div class=\"col-md-6 bg-hash\">\r\n                                                <mat-select name=\"projet_id\" required [(ngModel)]=\"project_id\" (ngModelChange)=\"changeProjectResourceVsTaskhour($event)\">\r\n                                                    <mat-option *ngFor=\"let prj of projectsResourceVsTaskhour\" [value]=\"prj.id\">\r\n                                                        {{prj.project_name}}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                            </div>\r\n                                            <div class=\"clearfix\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"clearfix\"></div>\r\n                                    <br>\r\n                                    <div class=\"col-md-12 col-sm-12 col-xs-12\">\r\n                                        <div *ngIf=\"(userExists && proExists) else empty\" class=\"widget\">\r\n                                            <!-- <div id=\"chart\" class=\"chart-container\">\r\n                                      </div> -->\r\n                                            <div class=\"clearfix\"></div>\r\n                                            <div id=\"stacked-bar-chart-container\" style=\"width:1000px;height:400px\">\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"clearfix\"></div>\r\n                                        <ng-template #empty>\r\n                                            <h4 class=\"no-dt\">No data to display!</h4>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </mat-tab>\r\n                        <mat-tab label=\"Project Vs Task Hours\">\r\n                            <!-- <company-project-vs-hour></company-project-vs-hour> -->\r\n                            <div class=\"sales\">\r\n                                <div *ngIf=\"preloader\">\r\n                                    <app-spinner></app-spinner>\r\n                                </div>\r\n                                <h1><b>Project Vs Task Hours</b></h1>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 col-sm-12 col-xs-12\">\r\n                                        <div class=\"widget\">\r\n                                            <!-- <div id=\"chart\" class=\"chart-container\">\r\n                                       \r\n                                           </div> -->\r\n\r\n                                            <div *ngIf=\"exists else empty\" id=\"stacked-bar-chart-container1\">\r\n                                            </div>\r\n                                            <ng-template #empty>\r\n                                                <h4 class=\"no-dtx\">No data to display!</h4>\r\n                                            </ng-template>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </mat-tab>\r\n                        <mat-tab label=\"Project Vs Status\">\r\n                            <!-- <company-project-vs-status></company-project-vs-status> -->\r\n                            <div class=\"sales\">\r\n                                <div *ngIf=\"preloader\">\r\n                                    <app-spinner></app-spinner>\r\n                                </div>\r\n                                <h1><b>Project Vs Status</b></h1>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-6 col-sm-6 col-xs-12\">\r\n                                        <div class=\"col-md-8 col-md-offset-2\">\r\n                                            <div class=\"col-md-6 bg-g\">*Select Project</div>\r\n                                            <div class=\"col-md-6 bg-hash\">\r\n                                                <mat-select name=\"projet_id\" [(ngModel)]=\"project_id\" (ngModelChange)=\"changeProjectVsStatus($event)\" required>\r\n                                                    <mat-option *ngFor=\"let prj of ProjectVsStatus\" [value]=\"prj.id\">\r\n                                                        {{prj.project_name}}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                            </div>\r\n                                            <div class=\"clearfix\"></div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-6\">\r\n                                                    <div class=\"tasklabel\">\r\n                                                        START DATE\r\n                                                        <br> {{start_date | date: 'yyyy-MM-dd HH:mm a'}}\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div class=\"col-md-6\">\r\n                                                    <div class=\"tasklabel\">\r\n                                                        END DATE\r\n                                                        <br> {{end_date | date: 'yyyy-MM-dd HH:mm a'}}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-6\">\r\n                                                    <div class=\"tasklabel\">\r\n                                                        TOTAL TASKS\r\n                                                        <br> {{total_tasks}}\r\n                                                        <br> ({{planned_hour}} Hour)\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div class=\"col-md-6\">\r\n                                                    <div class=\"tasklabel\">\r\n                                                        TASKS COMPLETED\r\n                                                        <br> {{completed_tasks}}\r\n                                                        <br> ({{actual_hour}} Hour)\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-md-6 col-sm-6 col-xs-12\">\r\n                                        <div class=\"widget\">\r\n                                            <div class=\"header\">Task Vs Status</div>\r\n                                            <div id=\"chart2\" class=\"chart-container\">\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </mat-tab>\r\n                        <mat-tab label=\"Module Vs Status\">\r\n\r\n                            <div class=\"col-md-12 col-sm-12 col-xs-12 \">\r\n                                <div class=\"sales\">\r\n                                    <div *ngIf=\"preloader\">\r\n                                        <app-spinner></app-spinner>\r\n                                    </div>\r\n                                    <h1><b>Module Vs Status</b></h1>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-8 col-md-offset-2\">\r\n                                            <div class=\"col-md-3 bg-g\">*Select Project</div>\r\n                                            <div class=\"col-md-3 bg-hash\">\r\n                                                <mat-select name=\"projet_id\" [(ngModel)]=\"project_id\" (ngModelChange)=\"changeProject($event)\" required>\r\n                                                    <mat-option *ngFor=\"let prj of projects\" [value]=\"prj.id\">\r\n                                                        {{prj.project_name}}\r\n                                                    </mat-option>\r\n                                                </mat-select>\r\n                                            </div>\r\n                                            <div class=\"col-md-3\">\r\n                                                <span class=\"total\">Total {{module_count}} Milestone</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <ul class=\"graph-ul\" *ngIf=\"moduleExists else empty1\">\r\n                                        <li *ngFor=\"let module of modules\">\r\n                                            <div class=\"divModule\">{{module?.module_name}}</div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-6\">Planned Hour\r\n                                                    <br>{{module?.planned_hour}}</div>\r\n                                                <div class=\"col-md-6\">Actual Hour\r\n                                                    <br> {{module?.actual_hour}} </div>\r\n                                                <div id=\"module-{{module.id}}-progress\"></div>\r\n                                                <company-progress-graph [containerId]=\"'module-'+ module.id +'-progress'\" [progper]=\"module?.per\"></company-progress-graph>\r\n                                                <div class=\"clearfix\"></div>\r\n                                                <div class=\"col-md-12 label-bg\">\r\n                                                    <div class=\"number\">{{module?.total_tasks}}</div>\r\n                                                </div>\r\n                                                <div id=\"module-{{module.id}}-status\"></div>\r\n                                                <company-status-graph [containerId]=\"'module-'+ module.id +'-status'\" [pieData]=\"module?.pieData\"></company-status-graph>\r\n                                            </div>\r\n                                        </li>\r\n\r\n                                    </ul>\r\n                                    <ng-template #empty1>\r\n                                        <h4 class=\"mdl-sts\">No data to display!</h4>\r\n                                    </ng-template>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </mat-tab>\r\n                        <mat-tab label=\"Planned Vs Actual\">\r\n\r\n                            <div class=\"col-md-12 col-sm-12 col-xs-12 \">\r\n                                <div class=\"sales\">\r\n                                    <div *ngIf=\"preloader\">\r\n                                        <app-spinner></app-spinner>\r\n                                    </div>\r\n                                    <h1><b>Planned Vs Actual</b></h1>\r\n\r\n                                    <ul class=\"graph-ul-hour\" *ngIf=\"statusExists else empty2\">\r\n                                        <li class=\"text-center2\">\r\n                                            <div class=\"firstRow firstColumn\">PROJECTS</div>\r\n                                            <div class=\"secondRow firstColumn\">Progress</div>\r\n                                            <div class=\"ThirdRow firstColumn\">Planned\r\n                                                <br>vs\r\n                                                <br> Actual Hours</div>\r\n                                        </li>\r\n                                        <li class=\"text-center2\" *ngFor=\"let project of projectforProVsStatusGraph;let i = index;\">\r\n                                            <div class=\"prjtitle1\">{{project[0]?.tbl_project?.project_name}}</div>\r\n                                            <div class=\"col-md-8 mr-top\">\r\n                                                <div class=\"datelabel\">Start\r\n                                                    <span class=\"pull-right\">{{project[0]?.tbl_project?.planned_start_date | date: 'yyyy-MM-dd HH:mm\r\n                                                        a'}}\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div class=\"datelabel\">End\r\n                                                    <span class=\"pull-right\">{{project[0]?.tbl_project?.planned_end_date | date: 'yyyy-MM-dd HH:mm\r\n                                                        a'}}\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"clearfix\"></div>\r\n                                            <hr>\r\n                                            <div id=\"projct-{{i}}-progress\"></div>\r\n                                            <company-progress-graph [containerId]=\"'projct-'+ i +'-progress'\" [progper]=\"project.per\"></company-progress-graph>\r\n                                            <label>{{project?.in_progress_tasks}}/{{project?.total_tasks}} tasks is In Progress</label>\r\n                                            <hr>\r\n                                            <div id=\"projct-{{i}}-bar\"></div>\r\n                                            <company-bar-graph [containerId]=\"'projct-'+ i +'-bar'\" [actual]=\"project.actual_hour\" [planning]=\"project.planned_hour\"></company-bar-graph>\r\n                                        </li>\r\n                                    </ul>\r\n                                    <ng-template #empty2>\r\n                                        <h4 class=\"mdl-sts\">No data to display!</h4>\r\n                                    </ng-template>\r\n                                </div>\r\n                            </div>\r\n                        </mat-tab>\r\n                    </mat-tab-group>\r\n                    <!-- \r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12 col-sm-12 col-xs-12 \">\r\n                                <div class=\"sales\">\r\n                                    \r\n                                <company-task-vs-status></company-task-vs-status>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 col-sm-12 col-xs-12 \">\r\n                                <div class=\"sales\">\r\n                                <company-resoure-vs-hour></company-resoure-vs-hour>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 col-sm-12 col-xs-12 \">\r\n                                <div class=\"sales\">\r\n                                <company-project-vs-hour></company-project-vs-hour>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 col-sm-12 col-xs-12 \">\r\n                                  <div class=\"sales\">\r\n                                  <company-project-vs-status></company-project-vs-status>\r\n                                  </div>\r\n                              </div>\r\n                            <div class=\"col-md-12 col-sm-12 col-xs-12 \">\r\n                                  <div class=\"sales\">\r\n                                      <h1>Module Vs Status</h1>\r\n                                      <div class=\"row\">\r\n                                          <div class=\"col-md-8 col-md-push-1\">\r\n                                              <div class=\"col-md-3 bg-g\">*Select Project</div>\r\n                                              <div class=\"col-md-3 bg-hash\">\r\n                                                  <mat-select  name=\"projet_id\" [(ngModel)]=\"project_id\" (ngModelChange)=\"changeProject($event)\" required>\r\n                                                      <mat-option *ngFor=\"let prj of projects\" [value]=\"prj.id\">\r\n                                                        {{prj.project_name}}\r\n                                                      </mat-option>\r\n                                                    </mat-select>\r\n                                              </div> \r\n                                              <div class=\"col-md-3\">\r\n                                                  <span class=\"total\">Total {{module_count}} Milestone</span>\r\n                                              </div>\r\n                                          </div> \r\n                                      </div>\r\n                                      <ul class=\"graph-ul\" *ngIf=\"moduleExists else empty1\">\r\n                                          <li *ngFor=\"let module of modules\" >\r\n                                              <div class=\"divModule\" >{{module?.module_name}}</div>\r\n                                              <div class=\"row\">\r\n                                                  <div class=\"col-md-6\">Planned Hour <br>{{module?.planned_hour}}</div>\r\n                                                  <div class=\"col-md-6\">Actual Hour<br> {{module?.actual_hour}} </div>\r\n                                                  <div id=\"module-{{module.id}}-progress\"></div>\r\n                                                  <company-progress-graph [containerId]=\"'module-'+ module.id +'-progress'\" [progper]=\"module?.per\"></company-progress-graph>\r\n                                                  <div class=\"clearfix\"></div>\r\n                                                  <div class=\"col-md-12 label-bg\">\r\n                                                      <div class=\"number\">{{module?.total_tasks}}</div>\r\n                                                  </div>\r\n                                                  <div id=\"module-{{module.id}}-status\"></div>\r\n                                                  <company-status-graph [containerId]=\"'module-'+ module.id +'-status'\" [pieData]=\"module?.pieData\"></company-status-graph>\r\n                                              </div>\r\n                                          </li>\r\n                                          \r\n                                      </ul>\r\n                                      <ng-template #empty1>\r\n                                              <h4 class=\"mdl-sts\">No data to display!</h4>\r\n                                      </ng-template>\r\n                                  </div>\r\n                                 \r\n                              </div>\r\n      \r\n                              <div class=\"col-md-12 col-sm-12 col-xs-12 \">\r\n                                  <div class=\"sales\">\r\n                                          <h1>Project Vs Status</h1>\r\n      \r\n                                          <ul class=\"graph-ul-hour\" *ngIf=\"statusExists else empty2\">\r\n                                                  <li class=\"text-center2\">\r\n                                                      <div class=\"firstRow firstColumn\">PROJECTS</div>\r\n                                                      <div class=\"secondRow firstColumn\">Progress</div>\r\n                                                      <div class=\"ThirdRow firstColumn\">Planned <br>vs<br> Actual Hours</div>\r\n                                                  </li>\r\n                                                  <li class=\"text-center2\" *ngFor=\"let project of projectforProVsStatusGraph;let i = index;\">\r\n                                                      <div class=\"prjtitle1\">{{project[0]?.tbl_project?.project_name}}</div>\r\n                                                      <div class=\"col-md-8 mr-top\">\r\n                                                      <div class=\"datelabel\">Start <span class=\"pull-right\">{{project[0]?.tbl_project?.planned_start_date | date: 'yyyy-MM-dd HH:mm a'}}</span></div>\r\n                                                      <div class=\"datelabel\">End <span class=\"pull-right\">{{project[0]?.tbl_project?.planned_end_date | date: 'yyyy-MM-dd HH:mm a'}}</span></div>\r\n                                                      </div>\r\n                                                      <div class=\"clearfix\"></div>\r\n                                                      <hr>\r\n                                                      <div id=\"projct-{{i}}-progress\"></div>\r\n                                                      <company-progress-graph [containerId]=\"'projct-'+ i +'-progress'\" [progper]=\"project.per\"></company-progress-graph>\r\n                                                      <label>{{project?.in_progress_tasks}}/{{project?.total_tasks}} tasks is In Progress</label>\r\n                                                      <hr>\r\n                                                      <div id=\"projct-{{i}}-bar\"></div>\r\n                                                      <company-bar-graph [containerId]=\"'projct-'+ i +'-bar'\" [actual]=\"project.actual_hour\" [planning]=\"project.planned_hour\"></company-bar-graph>\r\n                                                  </li>\r\n                                          </ul>   \r\n                                          <ng-template #empty2>\r\n                                                  <h4 class=\"mdl-sts\">No data to display!</h4>\r\n                                          </ng-template>    \r\n                                  </div>\r\n                              </div>\r\n                            \r\n                        </div> -->\r\n                </div>\r\n\r\n            </div>\r\n            <!-- footer-->\r\n            <company-footer></company-footer>\r\n            <!-- end footer-->\r\n        </div>\r\n    </div>\r\n    <!-- Modal -->\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-dashboard/company-dashboard.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyDashboardComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





// ----------------------------------------------------------------End declare d3-------------------------------------------------
var CompanyDashboardComponent = (function () {
    // ----------------------------------------------------------------End Prject vs status-------------------------------------------------
    // categories: any = [
    //   {
    //     id: 1,
    //     name: 'Category 1',
    //     subCategories: [
    //       {
    //         id: 5,
    //         name: 'Sub-category 5',
    //         dragulaName: 'category-1'
    //       },
    //       {
    //         id: 6,
    //         name: 'Sub-category 6',
    //         dragulaName: 'category-1'
    //       },
    //       {
    //         id: 7,
    //         name: 'Sub-category 7',
    //         dragulaName: 'category-1'
    //       },
    //       {
    //         id: 8,
    //         name: 'Sub-category 8',
    //         dragulaName: 'category-1'
    //       }
    //     ]
    //   },
    //   {
    //     id: 2,
    //     name: 'Category 2',
    //     subCategories: []
    //   },
    //   {
    //     id: 3,
    //     name: 'Category3',
    //     subCategories: []
    //   },
    //   {
    //     id: 4,
    //     name: 'Category 4',
    //     subCategories: []
    //   },
    // ];
    function CompanyDashboardComponent(companyService, config) {
        this.companyService = companyService;
        this.config = config;
        this.preloader = false;
        this.projects = [];
        this.users = [];
        this.total_tasks = 0;
        this.new_tasks = 0;
        this.in_progress_tasks = 0;
        this.completed_tasks = 0;
        this.onHold_tasks = 0;
        this.paused_tasks = 0;
        this.planned_hour = 0;
        this.actual_hour = 0;
        this.module_count = 0;
        this.modules = [];
        this.projectforProVsStatusGraph = [];
        this.moduleExists = false;
        this.statusExists = false;
        this.proExists = false;
        this.projectsResourceVsTaskhour = [];
        this.userExists = false;
        // -------------------------------------------------------------  End Resource vs task hour-------------------------------------------------
        // ----------------------------------------------------------------Project vs task hour-------------------------------------------------
        this.projectsVsHour = [];
        this.exists = false;
        this.ProjectVsStatus = [];
        this.socket = __WEBPACK_IMPORTED_MODULE_2_socket_io_client__(config.socketURL);
    }
    CompanyDashboardComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.preloader = true;
        this.socket.on('new', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('paused', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('completed', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('hold', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('inProgress', function (data) {
            _this.getAllProjects();
        });
        this.getAllProjects();
        // this._dragulaService.setOptions('categories', {
        //   moves: function (el, container, handle) {
        //     return handle.className === 'handler';
        //   }
        // });
        // this._dragulaService.drop.asObservable().subscribe((value) => {
        //   console.log(value);
        // });
        /**
         * Used to get the dragged question original position.
         */
        // this._dragulaService.drag.asObservable().subscribe((value) => {
        //   console.log(value);
        // });
        // ----------------------------------------------------------------Resource vs task hour-------------------------------------------------
        console.log("ngAfterViewInit");
        this.socket.on('new', function (data) {
            _this.getAllProjectsResourceVsTaskhour();
        });
        this.socket.on('paused', function (data) {
            _this.getAllProjectsResourceVsTaskhour();
        });
        this.socket.on('completed', function (data) {
            _this.getAllProjectsResourceVsTaskhour();
        });
        this.socket.on('hold', function (data) {
            _this.getAllProjectsResourceVsTaskhour();
        });
        this.socket.on('inProgress', function (data) {
            _this.getAllProjectsResourceVsTaskhour();
        });
        this.socket.on('inProgress', function (data) {
            _this.getAllProjectsResourceVsTaskhour();
        });
        this.getAllProjectsResourceVsTaskhour();
        this.offenseNames = [
            // "Completed",
            // "Fondling",
            // "Statutory Completed",
            // "Sa"
            "New- Yet to Start",
            "In Progress",
            "Completed",
            "On Hold",
            "Paused"
        ];
        // ----------------------------------------------------------------End Resource vs task hour---------------------------------------------------
        // -------------------------------------------------------------------Project Vs Hour ----------------------------------------------------------
        this.getProjectVsHour();
        this.socket.on('new', function (data) {
            _this.getProjectVsHour();
        });
        this.socket.on('paused', function (data) {
            _this.getProjectVsHour();
        });
        this.socket.on('completed', function (data) {
            _this.getProjectVsHour();
        });
        this.socket.on('hold', function (data) {
            _this.getProjectVsHour();
        });
        this.socket.on('inProgress', function (data) {
            _this.getProjectVsHour();
        });
        this.getProjectVsHour();
        this.offenseNamesProjectVsHour = [
            "New- Yet to Start",
            "In Progress",
            "Completed",
            "On Hold",
            "Paused"
        ];
        // -------------------------------------------------------------------End Project Vs Hour ----------------------------------------------------------
        // -------------------------------------------------------------------Project Vs status ------------------------------------------------------------
        this.pieData = [
            { name: 'New - Yet to Start', value: this.new_tasks, color: '#2778a7' },
            { name: 'In Progress', value: this.in_progress_tasks, color: '#99b745' },
            { name: 'Completed', value: this.completed_tasks, color: '#17a88f' },
            { name: 'On Hold', value: this.onHold_tasks, color: '#f2ac37' },
            { name: 'Paused', value: this.paused_tasks, color: '#b74549' },
        ];
        this.bakeDonut(this.pieData);
        this.socket.on('new', function (data) {
            _this.getProjectVsStatus();
        });
        this.socket.on('paused', function (data) {
            _this.getProjectVsStatus();
        });
        this.socket.on('completed', function (data) {
            _this.getProjectVsStatus();
        });
        this.socket.on('hold', function (data) {
            _this.getProjectVsStatus();
        });
        this.socket.on('inProgress', function (data) {
            _this.getProjectVsStatus();
        });
        this.getProjectVsStatus();
        // ------------------------------------------------------------------- End Project Vs status ----------------------------------------------------------
    };
    CompanyDashboardComponent.prototype.onTabLinkClick = function (event) {
        this.preloader = true;
        this.getAllProjects();
        this.getAllProjectsResourceVsTaskhour();
        this.getProjectVsHour();
        this.getProjectVsStatus();
    };
    CompanyDashboardComponent.prototype.getAllProjects = function () {
        var _this = this;
        this.projectforProVsStatusGraph = [];
        this.companyService.getAllProject().subscribe(function (data) {
            _this.preloader = false;
            _this.projects = [];
            data.forEach(function (element) {
                if (element.status == "Planned" || element.status == "Completed" || element.status == "In Progress") {
                    _this.projects.push(element);
                }
            });
            if (_this.projects.length == 0) {
                //no data in charts
            }
            else {
                _this.moduleExists = true;
                _this.project_id = _this.projects[0].id;
                _this.getData(_this.project_id);
                // ---------------------------------Start-------------------------------------------
                // Function      : getdataforProjectVsStatusGraph
                // Params        : projects
                // Returns       : 
                // Author        : Rinsha
                // Date          :  19-04-2018
                // Last Modified : 
                // Desc          : 
                _this.companyService.getdataforProjectVsStatusGraph(_this.projects).subscribe(function (info) {
                    if (info.length > 0) {
                        _this.statusExists = true;
                    }
                    var last_status;
                    var last_status_id = 0;
                    _this.projectforProVsStatusGraph = info;
                    _this.projectforProVsStatusGraph.forEach(function (project, key) {
                        var total_tasks = 0;
                        var planned_hour = 0;
                        var actual_hour = 0;
                        var completed_tasks = 0;
                        var in_progress_tasks = 0;
                        project.forEach(function (module1) {
                            total_tasks = total_tasks + module1.tbl_project_tasks.length;
                            module1.tbl_project_tasks.forEach(function (task) {
                                if (task.planned_hour != null) {
                                    planned_hour = planned_hour + task.planned_hour + task.buffer_hour;
                                }
                                if (task.actual_hour != null) {
                                    actual_hour = actual_hour + task.actual_hour;
                                }
                                last_status_id = 0;
                                last_status = {};
                                task.tbl_task_status_assocs.forEach(function (statuses) {
                                    if (statuses.id > last_status_id) {
                                        last_status_id = statuses.id;
                                        last_status = statuses;
                                    }
                                });
                                if (last_status && last_status.status_id == 5) {
                                    completed_tasks = completed_tasks + 1;
                                }
                                if (last_status && last_status.status_id == 3) {
                                    in_progress_tasks = in_progress_tasks + 1;
                                }
                            });
                        });
                        _this.projectforProVsStatusGraph[key].total_tasks = total_tasks;
                        _this.projectforProVsStatusGraph[key].planned_hour = planned_hour;
                        _this.projectforProVsStatusGraph[key].actual_hour = actual_hour;
                        _this.projectforProVsStatusGraph[key].completed_tasks = completed_tasks;
                        _this.projectforProVsStatusGraph[key].in_progress_tasks = in_progress_tasks;
                        _this.projectforProVsStatusGraph[key].per = completed_tasks / _this.projectforProVsStatusGraph[key].total_tasks * 100;
                    });
                    // -----------------------------------End------------------------------------------
                });
            }
        });
    };
    CompanyDashboardComponent.prototype.changeProject = function (pro_id) {
        this.getData(pro_id);
    };
    CompanyDashboardComponent.prototype.getData = function (pro_id) {
        var _this = this;
        var last_status;
        var last_status_id = 0;
        // this.total_tasks = 0;
        // this.new_tasks = 0;
        // this.in_progress_tasks = 0;
        // this.completed_tasks = 0;
        // this.onHold_tasks = 0;
        // this.paused_tasks = 0;
        // this.planned_hour = 0;
        // this.actual_hour = 0;
        // ---------------------------------Start-------------------------------------------
        // Function      : getTasksByUser
        // Params        : pro_id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 17-04-2018
        // Last Modified : 
        // Desc          : 
        this.companyService.getTasksByProject(pro_id).subscribe(function (data) {
            // console.log(data);
            _this.module_count = 0;
            _this.modules = [];
            _this.module_count = data.length;
            _this.modules = data;
            data.forEach(function (module, key) {
                _this.total_tasks = 0;
                _this.modules[key].total_tasks = module.tbl_project_tasks.length;
                _this.start_date = module.tbl_project.planned_start_date;
                _this.end_date = module.tbl_project.planned_end_date;
                var planned_hour = 0;
                var actual_hour = 0;
                var new_tasks = 0;
                var paused_tasks = 0;
                var in_progress_tasks = 0;
                var onHold_tasks = 0;
                var completed_tasks = 0;
                module.tbl_project_tasks.forEach(function (task) {
                    if (task.planned_hour != null) {
                        planned_hour = planned_hour + task.planned_hour + task.buffer_hour;
                    }
                    if (task.actual_hour != null) {
                        actual_hour = actual_hour + task.actual_hour;
                    }
                    // console.log(task)
                    last_status_id = 0;
                    last_status = {};
                    task.tbl_task_status_assocs.forEach(function (statuses) {
                        if (statuses.id > last_status_id) {
                            last_status_id = statuses.id;
                            last_status = statuses;
                        }
                    });
                    if (last_status && last_status.status_id == 1) {
                        new_tasks = new_tasks + 1;
                    }
                    if (last_status && last_status.status_id == 2) {
                        paused_tasks = paused_tasks + 1;
                    }
                    if (last_status && last_status.status_id == 3) {
                        in_progress_tasks = in_progress_tasks + 1;
                    }
                    if (last_status && last_status.status_id == 4) {
                        onHold_tasks = onHold_tasks + 1;
                    }
                    if (last_status && last_status.status_id == 5) {
                        completed_tasks = completed_tasks + 1;
                    }
                });
                _this.modules[key].planned_hour = planned_hour;
                _this.modules[key].actual_hour = actual_hour;
                // this.modules[key].new_tasks = new_tasks;
                _this.modules[key].paused_tasks = paused_tasks;
                _this.modules[key].in_progress_tasks = in_progress_tasks;
                _this.modules[key].onHold_tasks = onHold_tasks;
                _this.modules[key].completed_tasks = completed_tasks;
                _this.modules[key].per = completed_tasks / (module.tbl_project_tasks.length) * 100;
                _this.modules[key].pieData = [
                    { name: 'New - Yet to Start', value: new_tasks, color: '#2778a7' },
                    { name: 'In Progress', value: in_progress_tasks, color: '#99b745' },
                    { name: 'Completed', value: completed_tasks, color: '#17a88f' },
                    { name: 'On Hold', value: onHold_tasks, color: '#f2ac37' },
                    { name: 'Paused', value: paused_tasks, color: '#b74549' },
                ];
            });
        });
        // -----------------------------------End------------------------------------------
        // ---------------------------------------------------------------- Resource vs task hour-------------------------------------------------
    };
    CompanyDashboardComponent.prototype.getAllProjectsResourceVsTaskhour = function () {
        var _this = this;
        this.companyService.getAllProject().subscribe(function (data) {
            _this.preloader = false;
            _this.projectsResourceVsTaskhour = [];
            data.forEach(function (element) {
                if (element.status == "Planned" || element.status == "Completed" || element.status == "In Progress") {
                    _this.projectsResourceVsTaskhour.push(element);
                }
            });
            if (_this.projectsResourceVsTaskhour.length == 0) {
                _this.users = [];
                _this.proExists = false;
                //no data in charts
            }
            else {
                _this.proExists = true;
                _this.project_id = _this.projectsResourceVsTaskhour[0].id;
                _this.getTeamMembers(_this.projectsResourceVsTaskhour[0].id);
            }
        });
    };
    CompanyDashboardComponent.prototype.changeProjectResourceVsTaskhour = function (pro_id) {
        this.getTeamMembers(pro_id);
    };
    CompanyDashboardComponent.prototype.getTeamMembers = function (projId) {
        var _this = this;
        this.users = [];
        this.companyService.getUsers(projId).subscribe(function (data) {
            _this.users = data;
            if (_this.users.length == 0) {
                _this.userExists = false;
                // no data in charts
            }
            else {
                // this.years = ["Yasir", "Rinsha", "Sudha"];
                _this.userExists = true;
                _this.years = [];
                _this.users.forEach(function (element) {
                    _this.years.push(element.f_name + " " + element.l_name);
                });
                _this.getDataResourceVsTaskhour(projId, _this.users);
            }
        });
    };
    CompanyDashboardComponent.prototype.getDataResourceVsTaskhour = function (projId, users) {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getTasksforResourceGraph
        // Params        : pro_id, users
        // Returns       : 
        // Author        : Rinsha
        // Date          :  18-04-2018
        // Last Modified : 
        // Desc          : 
        this.companyService.getTasksforResourceGraph(projId, users).subscribe(function (data) {
            _this.offensesByYear = data;
            _this.drawGraph(_this.offenseNames, _this.years, _this.offensesByYear);
        });
    };
    CompanyDashboardComponent.prototype.drawGraph = function (offenseNames, years, offensesByYear) {
        d3.select('#stacked-bar-chart-container').selectAll("svg").remove();
        var n = offenseNames.length, // number of layers
        m = offensesByYear.length, // number of samples per layer
        stack = d3.stack().keys(offenseNames);
        var layers = stack(offensesByYear); // calculate the stack layout
        layers.forEach(function (d, i) {
            // add keys to every datapoint
            d.forEach(function (dd, j) {
                dd.year = years[j];
                dd.offenseName = offenseNames[i];
                dd.class = generateClassStr(dd.offenseName);
                dd.value = dd.data[dd.offenseName];
            });
        });
        function generateClassStr(str) {
            return str.replace(/\s+/g, '-').toLowerCase();
        }
        var yStackMax = d3.max(layers, function (layer) {
            return d3.max(layer, function (d) {
                return d[1];
            });
        });
        var margin = { top: 70, right: 15, bottom: 140, left: 50 }, fullChartWidth = 900, fullChartHeight = 350, width = fullChartWidth - margin.left - margin.right, height = fullChartHeight - margin.top - margin.bottom;
        d3.select("#stacked-bar-chart-container")
            .style("width", fullChartWidth)
            .style("height", fullChartHeight);
        var x = d3
            .scaleBand()
            .domain(years)
            .rangeRound([0, width])
            .padding(0.08);
        var y = d3
            .scaleLinear()
            .domain([0, yStackMax])
            .range([height, 0]);
        var z = d3
            .scaleBand()
            .domain(offenseNames)
            .rangeRound([0, x.bandwidth()]);
        var color = {
            'New- Yet to Start': "#2778a7",
            'In Progress': "#99b745",
            'Completed': "#17a88f",
            'On Hold': "#f2ac37",
            'Paused': "#b74549"
        };
        var svg = d3
            .select("#stacked-bar-chart-container")
            .append("svg")
            .attr("width", width + margin.left + margin.right + 20)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + (margin.left + 20) + "," + margin.top + ")");
        var layer = svg
            .selectAll(".layer")
            .data(layers)
            .enter()
            .append("g")
            .attr("class", "layer")
            .style("fill", function (d, i) {
            return color[d.key];
        });
        // Define the div for the tooltip
        var tooltip = d3.select("body").append("div")
            .attr("class", "tooltip")
            .style("opacity", 0);
        // alert(x.bandwidth());
        // alert(m);
        var myLPadd = 270;
        // var myTPadd = 620;
        var myTPadd = 400;
        var rect = layer
            .selectAll(".bar")
            .data(function (d) {
            return d;
        })
            .enter()
            .append("rect")
            .attr("class", function (d) { return generateClassStr(d.offenseName) + " bar"; })
            .attr("x", function (d) {
            return x(d.year);
        })
            .attr("y", height)
            .attr("width", x.bandwidth())
            .attr("height", 0)
            .on("mouseover", function (d) {
            // d3.selectAll(".bar")
            //   .filter(dd => dd.class != d.class)
            //   .style("opacity", 0.6)
        })
            .on("mousemove", function (d) {
            var msgy = (d.data.totalCompletedHr != 0 && d.offenseName == 'Completed') ? ', Actual hour taken : ' + d.data.totalCompletedHr + ' Hr' : '';
            tooltip
                .style("opacity", .9)
                .html("<b>" + d.value + "</b> Hr task is " + d.offenseName + " for " + d.year + msgy)
                .style("left", (d3.mouse(this)[0]) + myLPadd + "px")
                .style("top", (d3.mouse(this)[1]) + myTPadd + "px");
        })
            .on("mouseout", function (d) {
            d3.selectAll(".bar").style("opacity", 1);
            tooltip.style("opacity", 0);
        });
        rect
            .transition()
            .delay(function (d, i) {
            return i * 10;
        })
            .attr("y", function (d) {
            return y(d[1]);
        })
            .attr("height", function (d) {
            return y(d[0]) - y(d[1]);
        });
        // alert(height);
        // height = 10;
        svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x).tickSizeOuter(0))
            .selectAll("text")
            .style("text-anchor", "end")
            .attr("dx", "-.8em")
            .attr("dy", ".15em")
            .attr("transform", "rotate(-65)");
        // .append("g")
        // .attr("class", "x axis")
        // .attr("transform", "translate(0," + height + ")")
        // .call(d3.axisBottom(x).tickSizeOuter(0))
        // .attr("transform", "rotate(-90)");
        // add the Y gridlines
        svg.append("g")
            .attr("class", "grid")
            .call(d3.axisLeft(y)
            .ticks(25)
            .tickFormat(""));
        // Add the y Axis
        svg.append("g")
            .call(d3.axisLeft(y));
        // text label for the y axis
        svg.append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", 0 - margin.left - 30)
            .attr("x", 0 - (height / 2))
            .attr("dy", "3em")
            .style("text-anchor", "middle")
            .text("Total hours");
        var legend = svg
            .selectAll(".legend")
            .data(offenseNames.reverse()) // match stack order
            .enter()
            .append("g")
            .attr("class", "legend")
            .attr("transform", function (d, i) {
            return "translate(0," + i * 15 + ")";
        });
        legend
            .append("rect")
            .attr("x", width - 10)
            .attr("y", -70)
            .attr("width", 10)
            .attr("height", 10)
            .style("fill", function (d, i) {
            return color[d]; // match stack order
        });
        legend
            .append("text")
            .attr("x", width - 24)
            .attr("y", -65)
            .attr("font-size", '10px')
            .attr("dy", ".35em")
            .attr("class", "barGraphLegend")
            .style("text-anchor", "end")
            .text(function (d) {
            return d;
        });
        d3.selectAll("input").on("change", change);
        function change() {
            (this.value === "grouped") ? transitionGrouped() : transitionStacked();
        }
        function transitionGrouped() {
            rect
                .transition()
                .duration(500)
                .delay(function (d, i) {
                return i * 10;
            })
                .attr("x", function (d) {
                return x(d.year) + z(d.offenseName);
            })
                .transition()
                .attr("y", function (d) {
                return y(d.data[d.offenseName]);
            })
                .attr("height", function (d) {
                return height - y(d.data[d.offenseName]);
            });
        }
        function transitionStacked() {
            rect
                .transition()
                .duration(500)
                .delay(function (d, i) {
                return i * 10;
            })
                .attr("y", function (d) {
                return y(d[1]);
            })
                .attr("height", function (d) {
                return y(d[0]) - y(d[1]);
            })
                .transition()
                .attr("x", function (d) {
                return x(d.year);
            });
        }
    };
    // ----------------------------------------------------------------End Resource vs task hour-------------------------------------------------
    // ----------------------------------------------------------------Project Vs Hour-------------------------------------------------
    CompanyDashboardComponent.prototype.getProjectVsHour = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getTasksforResourceGraph
        // Params        : pro_id, users
        // Returns       : 
        // Author        : Rinsha
        // Date          :  18-04-2018
        // Last Modified : 
        // Desc          : 
        this.companyService.getAllProject().subscribe(function (data) {
            _this.preloader = false;
            _this.projectsVsHour = [];
            _this.yearsprojectsVsHour = [];
            data.forEach(function (element) {
                if (element.status == "Planned" || element.status == "Completed" || element.status == "In Progress") {
                    _this.projectsVsHour.push(element);
                    _this.yearsprojectsVsHour.push(element.project_name);
                }
            });
            if (_this.projectsVsHour.length == 0) {
                //no data in charts
            }
            else {
                _this.exists = true;
                _this.companyService.getHoursforResourceGraph(_this.projectsVsHour).subscribe(function (info) {
                    _this.drawGraphprojectsVsHour(_this.offenseNames, _this.yearsprojectsVsHour, info);
                });
            }
            ;
        });
    };
    // -----------------------------------End------------------------------------------
    CompanyDashboardComponent.prototype.drawGraphprojectsVsHour = function (offenseNames, years, offensesByYear) {
        d3.select('#stacked-bar-chart-container1').selectAll("svg").remove();
        var generateClassStr = function (str) {
            return str.replace(/\s+/g, '-').toLowerCase();
        };
        var n = offenseNames.length, // number of layers
        m = offensesByYear.length, // number of samples per layer
        stack = d3.stack().keys(offenseNames);
        var layers = stack(offensesByYear); // calculate the stack layout
        layers.forEach(function (d, i) {
            // add keys to every datapoint
            d.forEach(function (dd, j) {
                dd.year = years[j];
                dd.offenseName = offenseNames[i];
                dd.class = generateClassStr(dd.offenseName);
                dd.value = dd.data[dd.offenseName];
            });
        });
        var yStackMax = d3.max(layers, function (layer) {
            return d3.max(layer, function (d) {
                return d[1];
            });
        });
        var margin = { top: 70, right: 15, bottom: 140, left: 50 }, fullChartWidth = 1000, fullChartHeight = 400, width = fullChartWidth - margin.left - margin.right, height = fullChartHeight - margin.top - margin.bottom;
        d3.select("#stacked-bar-chart-container1")
            .style("width", fullChartWidth)
            .style("height", fullChartHeight);
        var x = d3
            .scaleBand()
            .domain(years)
            .rangeRound([0, width])
            .padding(0.08);
        var y = d3
            .scaleLinear()
            .domain([0, yStackMax])
            .range([height, 0]);
        var z = d3
            .scaleBand()
            .domain(offenseNames)
            .rangeRound([0, x.bandwidth()]);
        // let color = ["#17a88f", "#f2ac37", "#b74549", , "#4d5d6e", , "#2778a7"]
        // let color = ["#2778a7", "#99b745", "#17a88f", , "#f2ac37", , "#b74549"]
        var color = {
            'New- Yet to Start': "#2778a7",
            'In Progress': "#99b745",
            'Completed': "#17a88f",
            'On Hold': "#f2ac37",
            'Paused': "#b74549"
        };
        var svg = d3
            .select("#stacked-bar-chart-container1")
            .append("svg")
            .attr("width", width + margin.left + margin.right + 20)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + (margin.left + 20) + "," + margin.top + ")");
        var layer = svg
            .selectAll(".layer")
            .data(layers)
            .enter()
            .append("g")
            .attr("class", "layer")
            .style("fill", function (d, i) {
            return color[d.key];
        });
        // Define the div for the tooltip
        var tooltip = d3.select("body").append("div")
            .attr("class", "tooltip")
            .style("opacity", 0);
        // alert(x.bandwidth());
        // alert(m);
        var myLPadd = 270;
        var myTPadd = 1420;
        // var myLPadd = 950;
        // var myTPadd = 720;
        var rect = layer
            .selectAll(".bar")
            .data(function (d) {
            return d;
        })
            .enter()
            .append("rect")
            .attr("class", function (d) { return generateClassStr(d.offenseName) + " bar"; })
            .attr("x", function (d) {
            return x(d.year);
        })
            .attr("y", height)
            .attr("width", x.bandwidth())
            .attr("height", 0)
            .on("mouseover", function (d) {
            // d3.selectAll(".bar")
            //   .filter(dd => dd.class != d.class)
            //   .style("opacity", 0.6)
        })
            .on("mousemove", function (d) {
            var msgy = (d.data.totalCompletedHr != 0 && d.offenseName == 'Completed') ? ', Actual hour taken : ' + d.data.totalCompletedHr + ' Hr' : '';
            tooltip
                .style("opacity", .9)
                .html("<b>" + d.value + "</b> Hr task is " + d.offenseName + " for " + d.year + msgy)
                .style("left", (d3.mouse(this)[0]) + myLPadd + "px")
                .style("top", (d3.mouse(this)[1]) + myTPadd + 40 + "px");
        })
            .on("mouseout", function (d) {
            d3.selectAll(".bar").style("opacity", 1);
            tooltip.style("opacity", 0);
        });
        rect
            .transition()
            .delay(function (d, i) {
            return i * 10;
        })
            .attr("y", function (d) {
            return y(d[1]);
        })
            .attr("height", function (d) {
            return y(d[0]) - y(d[1]);
        });
        // alert(height);
        // height = 10;
        svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x).tickSizeOuter(0))
            .selectAll("text")
            .style("text-anchor", "end")
            .attr("dx", "-.8em")
            .attr("dy", ".15em")
            .attr("transform", "rotate(-65)");
        // .append("g")
        // .attr("class", "x axis")
        // .attr("transform", "translate(0," + height + ")")
        // .call(d3.axisBottom(x).tickSizeOuter(0))
        // .attr("transform", "rotate(-90)");
        // add the Y gridlines
        svg.append("g")
            .attr("class", "grid")
            .call(d3.axisLeft(y)
            .ticks(25)
            .tickFormat(""));
        // Add the y Axis
        svg.append("g")
            .call(d3.axisLeft(y));
        // text label for the y axis
        svg.append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", 0 - margin.left - 30)
            .attr("x", 0 - (height / 2))
            .attr("dy", "3em")
            .style("text-anchor", "middle")
            .text("Total hours");
        var legend = svg
            .selectAll(".legend")
            .data(offenseNames.reverse()) // match stack order
            .enter()
            .append("g")
            .attr("class", "legend")
            .attr("transform", function (d, i) {
            return "translate(0," + i * 15 + ")";
        });
        legend
            .append("rect")
            .attr("x", width - 10)
            .attr("y", -70)
            .attr("width", 10)
            .attr("height", 10)
            .style("fill", function (d, i) {
            return color[d]; // match stack order
        });
        legend
            .append("text")
            .attr("x", width - 24)
            .attr("y", -65)
            .attr("font-size", '10px')
            .attr("dy", ".35em")
            .attr("class", "barGraphLegend")
            .style("text-anchor", "end")
            .text(function (d) {
            return d;
        });
        d3.selectAll("input").on("change", change);
        function change() {
            (this.value === "grouped") ? transitionGrouped() : transitionStacked();
        }
        function transitionGrouped() {
            rect
                .transition()
                .duration(500)
                .delay(function (d, i) {
                return i * 10;
            })
                .attr("x", function (d) {
                return x(d.year) + z(d.offenseName);
            })
                .transition()
                .attr("y", function (d) {
                return y(d.data[d.offenseName]);
            })
                .attr("height", function (d) {
                return height - y(d.data[d.offenseName]);
            });
        }
        function transitionStacked() {
            rect
                .transition()
                .duration(500)
                .delay(function (d, i) {
                return i * 10;
            })
                .attr("y", function (d) {
                return y(d[1]);
            })
                .attr("height", function (d) {
                return y(d[0]) - y(d[1]);
            })
                .transition()
                .attr("x", function (d) {
                return x(d.year);
            });
        }
    };
    // -------------------------------------------------------------------End Project Vs Hour-------------------------------------------------
    // ---------------------------------------------------------------Project Vs status-------------------------------------------------
    CompanyDashboardComponent.prototype.getProjectVsStatus = function () {
        var _this = this;
        this.companyService.getAllProject().subscribe(function (data) {
            _this.preloader = false;
            _this.ProjectVsStatus = [];
            data.forEach(function (element) {
                if (element.status == "Planned" || element.status == "Completed" || element.status == "In Progress") {
                    _this.ProjectVsStatus.push(element);
                }
            });
            if (_this.ProjectVsStatus.length == 0) {
            }
            else {
                _this.project_id = _this.ProjectVsStatus[0].id;
                _this.getDataVsStatus(_this.project_id);
            }
        });
    };
    CompanyDashboardComponent.prototype.changeProjectVsStatus = function (pro_id) {
        this.getDataVsStatus(pro_id);
    };
    CompanyDashboardComponent.prototype.getDataVsStatus = function (pro_id) {
        var _this = this;
        var last_status;
        var last_status_id = 0;
        this.total_tasks = 0;
        this.new_tasks = 0;
        this.in_progress_tasks = 0;
        this.completed_tasks = 0;
        this.onHold_tasks = 0;
        this.paused_tasks = 0;
        this.planned_hour = 0;
        this.actual_hour = 0;
        // ---------------------------------Start-------------------------------------------
        // Function      : getTasksByUser
        // Params        : pro_id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 17-04-2018
        // Last Modified : 
        // Desc          : 
        this.companyService.getTasksByProject(pro_id).subscribe(function (data) {
            // console.log(data);
            data.forEach(function (module) {
                _this.total_tasks = _this.total_tasks + module.tbl_project_tasks.length;
                _this.start_date = module.tbl_project.planned_start_date;
                _this.end_date = module.tbl_project.planned_end_date;
                module.tbl_project_tasks.forEach(function (task) {
                    if (task.planned_hour != null) {
                        _this.planned_hour = _this.planned_hour + task.planned_hour + task.buffer_hour;
                    }
                    if (task.actual_hour != null) {
                        _this.actual_hour = _this.actual_hour + task.actual_hour;
                    }
                    // console.log(task)
                    last_status_id = 0;
                    last_status = {};
                    task.tbl_task_status_assocs.forEach(function (statuses) {
                        if (statuses.id > last_status_id) {
                            last_status_id = statuses.id;
                            last_status = statuses;
                        }
                    });
                    if (last_status && last_status.status_id == 1) {
                        _this.new_tasks = _this.new_tasks + 1;
                    }
                    if (last_status && last_status.status_id == 2) {
                        _this.paused_tasks = _this.paused_tasks + 1;
                    }
                    if (last_status && last_status.status_id == 3) {
                        _this.in_progress_tasks = _this.in_progress_tasks + 1;
                    }
                    if (last_status && last_status.status_id == 4) {
                        _this.onHold_tasks = _this.onHold_tasks + 1;
                    }
                    if (last_status && last_status.status_id == 5) {
                        _this.completed_tasks = _this.completed_tasks + 1;
                    }
                });
            });
            _this.pieData = [
                { name: 'New - Yet to Start', value: _this.new_tasks, color: '#2778a7' },
                { name: 'In Progress', value: _this.in_progress_tasks, color: '#99b745' },
                { name: 'Completed', value: _this.completed_tasks, color: '#17a88f' },
                { name: 'On Hold', value: _this.onHold_tasks, color: '#f2ac37' },
                { name: 'Paused', value: _this.paused_tasks, color: '#b74549' },
            ];
            _this.bakeDonut(_this.pieData);
        });
        // -----------------------------------End------------------------------------------
    };
    CompanyDashboardComponent.prototype.bakeDonut = function (d) {
        d3.select('#chart2').selectAll("svg").remove();
        var activeSegment;
        var data = d.sort(function (a, b) { return b['value'] - a['value']; }), viewWidth = 430, viewHeight = 250, svgWidth = viewHeight, svgHeight = viewHeight, thickness = 25, colorArray = data.map(function (k) { return k.color; }), el = d3.select('#chart2'), radius = Math.min(svgWidth, svgHeight) / 2, color = d3.scaleOrdinal()
            .range(colorArray);
        var max = d3.max(data, function (maxData) { return maxData.value; });
        var svg = el.append('svg')
            .attr('viewBox', "0 0 " + (viewWidth + thickness) + " " + (viewHeight + thickness))
            .attr('class', 'pie')
            .attr('width', viewWidth)
            .attr('height', svgHeight);
        var g = svg.append('g')
            .attr('transform', "translate( " + ((svgWidth / 2) + (thickness / 2)) + ", " + ((svgHeight / 2) + (thickness / 2)) + ")");
        var arc = d3.arc()
            .innerRadius(radius - thickness)
            .outerRadius(radius);
        var arcHover = d3.arc()
            .innerRadius(radius - (thickness + 5))
            .outerRadius(radius + 8);
        var pie = d3.pie()
            .value(function (pieData) { return pieData.value; })
            .sort(null);
        var maxAssigned = false;
        var maxArcAssigned = false;
        var path = g.selectAll('path')
            .attr('class', 'data-path')
            .data(pie(data))
            .enter()
            .append('g')
            .attr('class', 'data-group')
            .each(function (pathData, i) {
            var group = d3.select(this);
            group.append('text')
                .text("" + pathData.data.value)
                .attr('class', 'data-text data-text__value')
                .attr('text-anchor', 'middle')
                .attr('dy', '0em');
            group.append('text')
                .text("" + pathData.data.name)
                .attr('class', 'data-text data-text__name')
                .attr('text-anchor', 'middle')
                .attr('dy', '1.5em');
            // Set default active segment
            if (pathData.value === max && !maxAssigned) {
                var textVal = d3.select(this).select('.data-text__value')
                    .classed('data-text--show', true);
                var textName = d3.select(this).select('.data-text__name')
                    .classed('data-text--show', true);
                maxAssigned = true;
            }
        })
            .append('path')
            .attr('d', arc)
            .attr('fill', function (fillData, i) { return color(fillData.data.name); })
            .attr('class', 'data-path')
            .on('mouseover', function () {
            var _thisPath = this, parentNode = _thisPath.parentNode;
            if (_thisPath !== activeSegment) {
                activeSegment = _thisPath;
                var dataTexts = d3.selectAll('#chart2 .data-text')
                    .classed('data-text--show', false);
                var paths = d3.selectAll('#chart2 .data-path')
                    .transition()
                    .duration(250)
                    .attr('d', arc);
                d3.select(_thisPath)
                    .transition()
                    .duration(250)
                    .attr('d', arcHover);
                var thisDataValue = d3.select(parentNode).select('.data-text__value')
                    .classed('data-text--show', true);
                var thisDataText = d3.select(parentNode).select('.data-text__name')
                    .classed('data-text--show', true);
            }
        })
            .each(function (v, i) {
            if (v.value === max && !maxArcAssigned) {
                var maxArc = d3.select(this)
                    .attr('d', arcHover);
                activeSegment = this;
                maxArcAssigned = true;
            }
            this._current = i;
        });
        var legendRectSize = 15;
        var legendSpacing = 10;
        var legend = svg.selectAll('.legend')
            .data(color.domain())
            .enter()
            .append('g')
            .attr('class', 'legend')
            .attr('transform', function (legendData, i) {
            var itemHeight = legendRectSize + legendSpacing;
            var offset = legendRectSize * color.domain().length;
            var horz = svgWidth + 80;
            var vert = (i * itemHeight) + legendRectSize + (svgHeight - offset) / 2;
            return "translate(" + horz + ", " + vert + ")";
        });
        legend.append('circle')
            .attr('r', legendRectSize / 2)
            .style('fill', color);
        legend.append('text')
            .attr('x', legendRectSize + legendSpacing)
            .attr('y', legendRectSize - legendSpacing)
            .attr('class', 'legend-text')
            .text(function (legendData) { return legendData; });
    };
    CompanyDashboardComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-dashboard',
            template: __webpack_require__("../../../../../src/app/components/company-dashboard/company-dashboard.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-dashboard/company-dashboard.component.css")],
            encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_3__config_config__["a" /* Config */]])
    ], CompanyDashboardComponent);
    return CompanyDashboardComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-edit-project/company-edit-project.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".panel-body {\n    padding: 50px;\n}\n.mrg-top label{padding-top: 20px;}\n.round-button{\n    float:none !important;\n  }\n  .center-bt {\n      margin: 20px auto 10px auto;\n      float: none;\n  }", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-edit-project/company-edit-project.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n      <div class=\"col-md-1 col-xs-2 display-table-cell v-align box\" id=\"navigation\">\r\n        <company-sidebar></company-sidebar>\r\n      </div>\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <company-topbar></company-topbar>\r\n        <br>\r\n        <div class=\"col-md-12\"><h2>Edit Project</h2></div>\r\n        <div class=\"col-md-5 col-xs-12\">\r\n          <div class=\"panel panel-default\">\r\n            <div class=\"panel-body mrg-top\">\r\n\r\n              <!-- <h3>Edit Project</h3> -->\r\n              <div class=\"row\">\r\n\r\n                <div class=\"col-md-4 col-xs-6\"><label>Project Name :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <mat-form-field [formGroup]=\"formGroup\">\r\n                    <input matInput [(ngModel)]=\"project.project_name\" name=\"project_name\" autofocus required formControlName=\"project_nameValidation\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <br>\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"col-md-4 col-xs-6\"><label>Type :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <mat-form-field [formGroup]=\"formGroup\">\r\n                    <mat-select name=\"project_type\" [(ngModel)]=\"project.project_type\" required formControlName=\"project_typeValidation\">\r\n                      <mat-option value=\"Billable\">Billable</mat-option>\r\n                      <mat-option value=\"Non-billable\">Non-billable</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <br>\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"col-md-4 col-xs-6\"><label>Category :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <mat-form-field [formGroup]=\"formGroup\">\r\n                    <mat-select [(ngModel)]=\"project.category_id\" name=\"category_id\" required formControlName=\"category_idValidation\">\r\n                      <mat-option *ngFor=\"let item of categories\" [value]=\"item.id\">\r\n                        {{ item.category_name }}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <br>\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"col-md-4 col-xs-6\"><label>Priority :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <mat-form-field [formGroup]=\"formGroup\">\r\n                    <mat-select name=\"priority\" [(ngModel)]=\"project.priority\" required formControlName=\"priorityValidation\">\r\n                      <mat-option value=\"Low\">Low</mat-option>\r\n                      <mat-option value=\"Medium\">Medium</mat-option>\r\n                      <mat-option value=\"High\">High</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <br>\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"col-md-4 col-xs-6\"><label>Description :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <mat-form-field [formGroup]=\"formGroup\">\r\n                    <textarea matInput [(ngModel)]=\"project.description\" name=\"description\" required formControlName=\"descriptionValidation\"\r\n                      matTextareaAutosize matAutosizeMinRows=\"3\" matAutosizeMaxRows=\"6\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n                <br>\r\n                <div class=\"clearfix\"></div>\r\n                <div *ngIf=\"showRequirement\">\r\n                  <div class=\"col-md-4 col-xs-6\"><label>Requirement Summary :</label></div>\r\n                  <div class=\"col-md-7 col-xs-6\">\r\n                    <mat-form-field [formGroup]=\"formGroup\">\r\n                      <textarea matInput [(ngModel)]=\"project.requirement_summary\" name=\"requirement\" required formControlName=\"reqValidation\"\r\n                        matTextareaAutosize matAutosizeMinRows=\"3\" matAutosizeMaxRows=\"6\"></textarea>\r\n                    </mat-form-field>\r\n                    <a data-toggle=\"tooltip\" title=\"Download\" href=\"../assets/docs/{{project?.requirement_attatchment}}\" class=\"download-link\" download=\"\"> <button><i class=\"fa fa-download\"></i></button></a><br>\r\n                    <input (change)=\"displayDoc($event)\" name=\"file\" type=\"file\" />\r\n                  </div>\r\n                  <br>\r\n                </div>\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-4\">\r\n                    <button type=\"submit\" [disabled]=\"btnDisbled\" (click)=\"editProject(project)\" class=\"btn round-button center-bt\">Submit</button>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-edit-project/company-edit-project.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyEditProjectComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__("../../../forms/esm5/forms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var CompanyEditProjectComponent = (function () {
    function CompanyEditProjectComponent(route, snackBar, companyService, routes, _formBuilder) {
        this.route = route;
        this.snackBar = snackBar;
        this.companyService = companyService;
        this.routes = routes;
        this._formBuilder = _formBuilder;
        this.showPMlist = true;
        this.showRequirement = false;
        this.project = {
            project_id: '',
            project_name: '',
            project_type: '',
            priority: '',
            description: '',
            pm_id: '',
            category_id: '',
            requirement_summary: '',
            docSrc: '',
            docFile: [],
        };
    }
    CompanyEditProjectComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.showRequirement = true;
        this.sub = this.route.params.subscribe(function (params) {
            _this.p_id = params.id;
            // ---------------------------------Start-------------------------------------------
            // Function      : Get logged in entity
            // Params        : 
            // Returns       : Get logged in entity
            // Author        : Rinsha
            // Date          : 08-03-2018
            // Last Modified : 08-03-2018, Rinsha
            // Desc          :  
            _this.companyService.getLoggedinEntity().subscribe(function (data) {
                _this.entity = data;
                if (_this.entity.role_id == 3) {
                    _this.showPMlist = false;
                }
            });
            // -----------------------------------End------------------------------------------
            // ---------------------------------Start-------------------------------------------
            // Function      : get project by id
            // Params        : id
            // Returns       : project
            // Author        : Rinsha
            // Date          : 08-03-2018
            // Last Modified : 08-03-2018, Rinsha
            // Desc          : getProject
            _this.companyService.getProject(_this.p_id).subscribe(function (res) {
                _this.project = res;
                _this.pro1 = res;
                // console.log(this.pro1.is_approved);
                if (_this.pro1.is_approved == true || _this.pro1.assignee_id != _this.entity.id) {
                    var snackBarRef = _this.snackBar.open('Unauthorized Access', '', {
                        duration: 4000
                    });
                    // this.routes.navigate(['/project']);
                }
                if (_this.project.requirement_summary == '' || _this.project.requirement_summary == null) {
                    _this.showRequirement = false;
                }
            });
            // ---------------------------------End-------------------------------------------
        });
        this.formGroup = this._formBuilder.group({
            project_nameValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
            project_typeValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
            priorityValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
            descriptionValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
            pm_idValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
            category_idValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
            reqValidation: ['', __WEBPACK_IMPORTED_MODULE_1__angular_forms__["Validators"].required],
        });
        // ---------------------------------Start-------------------------------------------
        // Function      : Get All pm, project category in a company
        // Params        : 
        // Returns       : All pm, project category in a company
        // Author        : Rinsha
        // Date          : 08-03-2018
        // Last Modified : 08-03-2018, Rinsha
        // Desc          :  
        this.companyService.getAllPm().subscribe(function (res) {
            _this.pm = res;
        });
        this.companyService.getAllProjectCategory().subscribe(function (res) {
            _this.categories = res;
        });
        // -----------------------------------End------------------------------------------
    };
    CompanyEditProjectComponent.prototype.editProject = function (project) {
        var _this = this;
        this.project.project_id = this.p_id;
        // console.log(project);
        // ---------------------------------Start-------------------------------------------
        // Function      : edit project
        // Params        : data from form
        // Returns       : 
        // Author        : Rinsha
        // Date          : 09-03-2018
        // Last Modified : 09-03-2018, Rinsha
        // Desc          :  
        this.companyService.editProject(project).subscribe(function (data) {
            var snackBarRef = _this.snackBar.open(data.msg, '', {
                duration: 4000
            });
            if (data.success == true) {
                _this.routes.navigate(['/project']);
            }
        });
        // -----------------------------------End------------------------------------------
    };
    CompanyEditProjectComponent.prototype.displayDoc = function (fileInput) {
        var _this = this;
        var ext = fileInput.target.files[0].name.split('.').pop().toLowerCase();
        this.project.docFile = fileInput.target.files[0];
        if (fileInput.target.files && fileInput.target.files[0]) {
            var reader = new FileReader();
            reader.onload = (function (e) {
                _this.project.docSrc = e.target['result'];
            });
            reader.readAsDataURL(fileInput.target.files[0]);
        }
    };
    CompanyEditProjectComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-edit-project',
            template: __webpack_require__("../../../../../src/app/components/company-edit-project/company-edit-project.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-edit-project/company-edit-project.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__angular_router__["ActivatedRoute"], __WEBPACK_IMPORTED_MODULE_4__angular_material__["z" /* MatSnackBar */], __WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_forms__["FormBuilder"]])
    ], CompanyEditProjectComponent);
    return CompanyEditProjectComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-employee-leaves/company-employee-leaves.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".side-bar-menu{background:#fff;}\r\n.side-bar-menu li{    border-bottom: 1px solid #e4e4e4;}\r\n.side-bar-menu li a{color:#111;text-align:left;padding: 20px 23px;}\r\n.side-bar-menu li a:hover{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:focus{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:active{background-color: #fe6a07;color:#fff;}\r\n\r\nul.breadcrumb {\r\n    padding: 10px 0;\r\n    list-style: none;\r\n\r\n    text-align: left;\r\n    color: #d68956;\r\n}\r\nul.breadcrumb li {\r\n    display: inline;\r\n    font-size: 15px;\r\n}\r\nul.breadcrumb li+li:before {\r\n    padding: 8px;\r\n    color: black;\r\n    content: \"/\\A0\";\r\n}\r\nul.breadcrumb li a {\r\n    color: #bbbbbb;\r\n    text-decoration: none;\r\n}\r\nul.breadcrumb li a:hover {\r\n    color: #d68956;\r\n    text-decoration: none;\r\n\r\n}\r\n.breadcrumb{    background-color: #f6f7fa;}\r\n\r\n\r\n.example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}\r\n.modal-dialog{max-width:900px !important;width:100%;}\r\n.user{width:280px;height:280px;border-radius:50%;margin:0 auto;float:none;overflow:hidden; background: #d45d0e;margin-top: 20%;\r\n    margin-bottom: 20%;text-align:center;}\r\n    .user:hover{opacity:0.6;cursor:pointer;}\r\n.user img{width:120%;max-width: 287px;min-width: 287px;}\r\n\r\n.brdr-left{    width: 1px;\r\n    height: 155px;\r\n    float: left;\r\n    margin-top: 36%;\r\n    display: inherit;\r\n    background: #efecec;\r\n    margin-right: 21px;}\r\n  .user .fa-camera{color:#fff;font-size:50px;text-align:center;background: #d45d0e;padding-top:204%;}\r\n.disply{width:auto; display: -webkit-inline-box;}\r\nlabel{font-weight: 500;}\r\n.paddtop{padding-top:17px;}\r\n.info-icon{padding-top: 13%;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-employee-leaves/company-employee-leaves.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n\r\n      <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n        <!-- sidebar-->\r\n\r\n        <company-sidebar></company-sidebar>\r\n        <!-- end sidebar-->\r\n      </div>\r\n\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n        <!-- topbar-->\r\n        <company-topbar></company-topbar>\r\n\r\n        <!-- end topbar-->\r\n\r\n\r\n        <div class=\"user-dashboard\">\r\n          <h2>Master Settings</h2>\r\n          <ul class=\"breadcrumb\">\r\n            <li>\r\n              <a>Master Settings</a>\r\n            </li>\r\n\r\n\r\n            <li>Employee Leave List </li>\r\n          </ul>\r\n          <div class=\"row\">\r\n            <!-----------------------------------------------------------------table-------------------------------------->\r\n\r\n\r\n            <!-- <p>You selected: {{selected}} </p> -->\r\n\r\n            <div class=\"col-md-12\">\r\n              <div class=\"row\">\r\n                <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\" >\r\n            <div class=\"\"  >\r\n                <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n            <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n              <animateTransform attributeType=\"xml\"\r\n                attributeName=\"transform\"\r\n                type=\"rotate\"\r\n                from=\"0 25 25\"\r\n                to=\"360 25 25\"\r\n                dur=\"0.6s\"\r\n                repeatCount=\"indefinite\"/>\r\n              </path>\r\n            </svg>\r\n        </div>\r\n        </div> -->\r\n\r\n\r\n                <div class=\"col-md-12 optionz\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"example-header\">\r\n                        <mat-form-field>\r\n                          <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <!--    \r\n              <div class=\"example-header\" >\r\n                  <mat-form-field>\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                  </mat-form-field>\r\n              </div> -->\r\n\r\n                <div class=\"example-container mat-elevation-z8 \">\r\n                  <mat-table [dataSource]=\"dataSource\" matSort>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"slno\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header>Sl_No </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row;let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}} </mat-cell>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"name\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> NAME </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.tbl_user_profile.f_name}} </mat-cell>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"leave_start_date\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> Leave Start Date </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.start_date}} </mat-cell>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"start_available_hrs\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> Start Available hrs </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.start_available_hrs}} </mat-cell>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"leave_end_date\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> leave_end_date </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.end_date}} </mat-cell>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"end_available_hrs\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> end_available_hrs </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.end_available_hrs}} </mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"action\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\">\r\n                        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n                          <mat-icon>more_vert</mat-icon>\r\n                        </button>\r\n                        <mat-menu #menu=\"matMenu\">\r\n                          <button (click)=\"getEditId(row.id)\" data-toggle=\"modal\" data-target=\"#editModal\" mat-menu-item>\r\n                            <i class=\"material-icons\">mode_edit</i>\r\n                            <span>Edit</span>\r\n                          </button>\r\n                          <button (click)=\"getId(row.id)\" data-toggle=\"modal\" data-target=\"#deleteModal\" mat-menu-item>\r\n                            <i class=\"material-icons\">delete</i>\r\n                            <span>Delete</span>\r\n                          </button>\r\n\r\n\r\n\r\n                        </mat-menu>\r\n\r\n                      </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                  </mat-table>\r\n                  <div class=\"col-md-15 \">\r\n                    <!-- <div *ngIf=\"showSpinner\" class=\"deletespinner\">\r\n              <mat-spinner></mat-spinner>\r\n             </div> -->\r\n                  </div>\r\n                  <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n                    <div class=\"col-md-4 col-md-offset-4\">\r\n                      <mat-toolbar class=\"back-color\">No item found!</mat-toolbar>\r\n                    </div>\r\n                  </div>\r\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                </div>\r\n\r\n\r\n              </div>\r\n            </div>\r\n            <div class=\"add-button\">\r\n              <button type=\"button\" class=\"add-project\" data-toggle=\"modal\" (click)=\"addNewEmpleave()\" data-target=\"#addModal\" data-backdrop=\"static\">+</button>\r\n            </div>\r\n            <!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n\r\n            <div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">Delete </h4>\r\n                  </div>\r\n                  <!-- <div class=\"modal-header\"> -->\r\n                  <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n                  <!-- </div> -->\r\n                  <div class=\"modal-body delete-popup\">\r\n                    <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n                    <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n                  </div>\r\n\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" (click)=\"deleteEmpleave(id)\" class=\"btn round-button\" data-dismiss=\"modal\">Delete</button>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <!-----------------------------------------------------------------delete modal-------------------------------------->\r\n            <!-----------------------------------------------------------------add modal-------------------------------------->\r\n            <div id=\"addModal\" class=\"modal fade\">\r\n              <div class=\"modal-dialog\">\r\n\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn>&times;</button>\r\n                    <h4 class=\"modal-title\">Add Employee Leave</h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"addEmpleave(newEmpleave);\" novalidate>\r\n                      <div class=\"col-md-11\">\r\n                        <div class=\"col-md-12\">\r\n                          <div class=\"col-md-3 paddtop\">\r\n                            <label>Employee</label>\r\n                          </div>\r\n                          <div class=\"col-md-3\">\r\n                            <mat-form-field>\r\n                              <mat-select placeholder=\"Select employee \" name=\"emp_id\" [(ngModel)]=\"newEmpleave.emp_id\">\r\n                                <mat-option *ngFor=\"let item of companyemployee\" [value]=\"item.id\">{{item.f_name}}</mat-option>\r\n\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"clearfix\"></div>\r\n                        <div class=\"col-md-12\">\r\n                          <hr>\r\n\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                          <div class=\"col-md-3 paddtop\">\r\n                            <label>Leave Start Date</label>\r\n                          </div>\r\n                          <div class=\"col-md-3\">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                              <input matInput [matDatepickerFilter]=\"myFilter\" [matDatepicker]=\"picker1\" name=\"startdate\" [(ngModel)]=\"newEmpleave.startdate\"\r\n                                [min]=\"this.todayDate\" placeholder=\"Choose a date\">\r\n                              <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                              <mat-datepicker #picker1></mat-datepicker>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"col-md-2 paddtop\">\r\n                            <label>Start Available hrs(HH:MM)</label>\r\n                          </div>\r\n                          <div class=\"col-md-4\">\r\n                            <div class=\"row\">\r\n                              <ngb-timepicker name=\"startavlhr\" class=\"col-md-9\" [(ngModel)]=\"newEmpleave.startavlhr\" required></ngb-timepicker>\r\n                              <!-- <div *ngIf=\"ctrl.valid\" class=\"small form-text text-success\">Great choice{{newEmpleave.startavlhr.hour}}</div>\r\n                                <div class=\"small form-text text-danger\" *ngIf=\"!ctrl.valid\">\r\n                                  <div *ngIf=\"ctrl.errors['required']\">Select some time during lunchtime</div>\r\n                                  <div *ngIf=\"ctrl.errors['tooLate']\">Oh no, it's way too late</div>\r\n                                  <div *ngIf=\"ctrl.errors['tooEarly']\">It's a bit too early</div>\r\n                                </div> -->\r\n                                <i  matTooltip=\"Please mention hours, if the employee is available in office during the first day of leave\"\r\n                                class=\"material-icons info-icon nx-tp nx-flt\">info_outline</i>\r\n                            </div>\r\n                            <p class=\"example\"><i>eg: You can mention the working hour, if the employee present half day of the leave start date </i></p>\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"col-md-12\">\r\n                            <hr>\r\n\r\n                          </div>\r\n\r\n                          <div class=\"col-md-3 paddtop\">\r\n                            <label>Leave End Date</label>\r\n                          </div>\r\n                          <div class=\"col-md-3\">\r\n\r\n                            <mat-form-field class=\"example-full-width\">\r\n                              <input matInput [matDatepickerFilter]=\"myFilter\" [matDatepicker]=\"picker2\" name=\"enddate\" [(ngModel)]=\"newEmpleave.enddate\"\r\n                                [min]=\"this.todayDate\" placeholder=\"Choose a date\">\r\n                              <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                              <mat-datepicker #picker2></mat-datepicker>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"col-md-2 paddtop\">\r\n                            <label>End Available hrs(HH:MM)</label>\r\n                          </div>\r\n                          <div class=\"col-md-4\">\r\n                            <div class=\"row\">\r\n                              <ngb-timepicker name=\"endavlhr\" class=\"col-md-9\" [(ngModel)]=\"newEmpleave.endavlhr\" required></ngb-timepicker>\r\n                              <i  matTooltip=\"Please mention hours, if the employee is available in office during the last day of leave \"\r\n                              class=\"material-icons info-icon nx-tp nx-flt\">info_outline</i>\r\n                              <!-- <div *ngIf=\"ctrl1.valid\" class=\"small form-text text-success\">Great choice{{newEmpleave.endavlhr.hour}}</div>\r\n                              <div class=\"small form-text text-danger\" *ngIf=\"!ctrl1.valid\">\r\n                                <div *ngIf=\"ctrl1.errors['required']\">Select some time during lunchtime</div>\r\n                                <div *ngIf=\"ctrl1.errors['tooLate']\">Oh no, it's way too late</div>\r\n                                <div *ngIf=\"ctrl1.errors['tooEarly']\">It's a bit too early</div>\r\n                              </div> -->\r\n                            \r\n                            </div>\r\n                            <p class=\"example\"><i>eg: You can mention the working hour, if the employee present half day of the leave end date </i></p>\r\n                          </div>\r\n\r\n                          <!-- <div class=\"col-md-12\">\r\n                              <div class=\"col-md-3 paddtop\">\r\n                                  <label>Leave Hour</label> \r\n                               </div>\r\n                               <div class=\"col-md-3 paddtop\">\r\n                                  <label>10</label> \r\n                               </div>\r\n                               \r\n                           </div> -->\r\n\r\n                        </div>\r\n\r\n                        <br>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-4\">\r\n                            <button type=\"submit\" [disabled]=\"addLeave\" class=\"btn round-button\">Submit</button>\r\n                            <div *ngIf=\"addSpinner\">\r\n                              <app-spinner></app-spinner>\r\n                          </div>\r\n                          </div>\r\n                          <!-- <div class=\"col-md-8\" *ngIf=\"showSpinner\">\r\n                    <svg class=\"svgclass\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                      x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\"\r\n                      xml:space=\"preserve\">\r\n                      <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                        <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n                        />\r\n                      </path>\r\n                    </svg>\r\n                  </div> -->\r\n\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n\r\n\r\n                    </form>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <!----------------------------------------addModal------------------------------>\r\n            <!-- --------------------------------------------- edit modal ----------------------------------------------------------------- -->\r\n\r\n\r\n            <div id=\"editModal\" class=\"modal fade\">\r\n              <div class=\"modal-dialog\">\r\n\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn1>&times;</button>\r\n                    <h4 class=\"modal-title\">Update Employee Leave</h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"updateEmployeeleave(updateleave);\" novalidate>\r\n\r\n                      <div class=\"col-md-11\">\r\n\r\n\r\n                        <div class=\"form-group\">\r\n                          <div class=\"col-md-12\">\r\n                            <div class=\"col-md-3 paddtop\">\r\n                              <label>Employee</label>\r\n                            </div>\r\n                            <div class=\"col-md-3\">\r\n                              <mat-form-field>\r\n                                <mat-select placeholder=\"Select employee \" name=\"emp_id\" [(ngModel)]=\"updateleave.user_profile_id\" required>\r\n                                  <mat-option *ngFor=\"let item of companyemployee\" [value]=\"item.id\">{{item.f_name}}</mat-option>\r\n                                </mat-select>\r\n                              </mat-form-field>\r\n                            </div>\r\n\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"col-md-12\">\r\n                            <hr>\r\n\r\n                          </div>\r\n                          <div class=\"col-md-3 paddtop\">\r\n                            <label>Leave Start Date</label>\r\n                          </div>\r\n                          <div class=\"col-md-3\">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                              <input matInput [matDatepickerFilter]=\"myFilter\" [matDatepicker]=\"picker3\" name=\"startdate\" [(ngModel)]=\"updateleave.start_date\"\r\n                                [min]=\"this.todayDate\" placeholder=\"Choose a date\">\r\n                              <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\r\n                              <mat-datepicker #picker3></mat-datepicker>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"col-md-2 paddtop\">\r\n                            <label>Start Available hrs(HH:MM)</label>\r\n                          </div>\r\n                          <div class=\"col-md-4\">\r\n                            <div class=\"row\">\r\n                              <ngb-timepicker name=\"startavlhr\" class=\"col-md-9\" [(ngModel)]=\"updateleave.startavlhr\" required></ngb-timepicker>\r\n                              <i  matTooltip=\"Please mention hours, if the employee is available in office during the first day of leave \"\r\n                              class=\"material-icons info-icon nx-tp nx-flt\">info_outline</i>\r\n                              <!-- <div *ngIf=\"ctrl1.valid\" class=\"small form-text text-success\">Great choice{{newEmpleave.endavlhr.hour}}</div>\r\n                                      <div class=\"small form-text text-danger\" *ngIf=\"!ctrl1.valid\">\r\n                                        <div *ngIf=\"ctrl1.errors['required']\">Select some time during lunchtime</div>\r\n                                        <div *ngIf=\"ctrl1.errors['tooLate']\">Oh no, it's way too late</div>\r\n                                        <div *ngIf=\"ctrl1.errors['tooEarly']\">It's a bit too early</div>\r\n                                      </div> -->\r\n\r\n                            </div>\r\n                            <p class=\"example\"><i>eg: you can mention the working hour, if the employee present half day of the leave start date </i></p>\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"col-md-12\">\r\n                            <hr>\r\n\r\n                          </div>\r\n                          <div class=\"col-md-3 paddtop\">\r\n                            <label>Leave End Date</label>\r\n                          </div>\r\n                          <div class=\"col-md-3\">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                              <input matInput [matDatepickerFilter]=\"myFilter\" [matDatepicker]=\"picker4\" name=\"enddate\" [(ngModel)]=\"updateleave.end_date\"\r\n                                [min]=\"this.todayDate\" placeholder=\"Choose a date\">\r\n                              <mat-datepicker-toggle matSuffix [for]=\"picker4\"></mat-datepicker-toggle>\r\n                              <mat-datepicker #picker4></mat-datepicker>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"col-md-2 paddtop\">\r\n                            <label>End Available hrs(HH:MM)</label>\r\n                          </div>\r\n                          <div class=\"col-md-4\">\r\n                            \r\n                            <div class=\"row\">\r\n                              <ngb-timepicker name=\"endavlhr\" class=\"col-md-9\" [(ngModel)]=\"updateleave.endavlhr\" required></ngb-timepicker>\r\n                              <i  matTooltip=\"Please mention hours, if the employee is available in office during the last day of leave \"\r\n                              class=\"material-icons info-icon nx-tp nx-flt\">info_outline</i>\r\n                              <!-- <div *ngIf=\"ctrl1.valid\" class=\"small form-text text-success\">Great choice{{newEmpleave.endavlhr.hour}}</div>\r\n                                        <div class=\"small form-text text-danger\" *ngIf=\"!ctrl1.valid\">\r\n                                          <div *ngIf=\"ctrl1.errors['required']\">Select some time during lunchtime</div>\r\n                                          <div *ngIf=\"ctrl1.errors['tooLate']\">Oh no, it's way too late</div>\r\n                                          <div *ngIf=\"ctrl1.errors['tooEarly']\">It's a bit too early</div>\r\n                                        </div> -->\r\n\r\n                            </div>\r\n                            <p class=\"example\"><i>eg: You can mention the working hour, if the employee present half day of the leave end date </i></p>\r\n                          </div>\r\n\r\n                          <!-- <div class=\"col-md-12\">\r\n                                        <div class=\"col-md-3 paddtop\">\r\n                                            <label>Leave Hour</label> \r\n                                         </div>\r\n                                         <div class=\"col-md-3 paddtop\">\r\n                                            <label>10</label> \r\n                                         </div>\r\n                                         \r\n                                     </div> -->\r\n                        </div>\r\n\r\n                        <br>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-4\">\r\n                            <button type=\"submit\" [disabled]=\"editLeave\" class=\"btn round-button\">Submit</button>\r\n                            <div *ngIf=\"editSpinner\">\r\n                              <app-spinner></app-spinner>\r\n                          </div>\r\n          \r\n                          </div>\r\n                          <!-- <div class=\"col-md-8\" *ngIf=\"showSpinner\">\r\n                              <svg class=\"svgclass\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                                x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\"\r\n                                xml:space=\"preserve\">\r\n                                <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                                  <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n                                  />\r\n                                </path>\r\n                              </svg>\r\n                            </div> -->\r\n\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n\r\n\r\n\r\n                    </form>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <!-----------------------------------------------------------------edit modal-------------------------------------->\r\n\r\n            <!-----------------------------------------------------------------end table-------------------------------------->\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <!-- footer-->\r\n      <company-footer></company-footer>\r\n      <!-- end footer-->\r\n    </div>\r\n  </div>\r\n  <!-- Modal -->\r\n\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-employee-leaves/company-employee-leaves.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyEmployeeLeavesComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



//import {FormControl} from '@angular/forms';

var CompanyEmployeeLeavesComponent = (function () {
    // myFilter = (d: Date): boolean => {
    //   const day = d.getDay();
    //   // Prevent Saturday and Sunday from being selected.
    //   return day !== 0 && day !== 6;
    // }
    // ---------------------------------Start-------------------------------------------
    // Function      : project category master setting
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 12-03-2018
    // Last Modified : 
    // Desc          : All category
    function CompanyEmployeeLeavesComponent(companyService, routes, snackBar) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'name', 'leave_start_date', 'start_available_hrs', 'leave_end_date', 'end_available_hrs', 'action'];
        this.todayDate = new Date();
        this.notExist = false;
        this.all_value = false;
        this.showSpinner = false;
        this.updateleave = {
            start_date: '',
            id: '',
            end_date: '',
            startavlhr: { hour: 0, minute: 0, second: 0 },
            endavlhr: { hour: 0, minute: 0, second: 0 },
            user_profile_id: '',
            leave_hrs: ''
        };
        this.newEmpleave = {
            startdate: '',
            startavlhr: { hour: 0, minute: 0, second: 0 },
            enddate: '',
            endavlhr: { hour: 0, minute: 0, second: 0 },
            emp_id: '',
            leave_hr: ''
        };
        this.time = { hour: 13, minute: 30 };
        this.addLeave = false;
        this.addSpinner = false;
        this.editLeave = false;
        this.editSpinner = false;
        this.deleteLEave = false;
        this.dleteSpinner = false;
    }
    CompanyEmployeeLeavesComponent.prototype.refresh = function () {
        var _this = this;
        // console.log("hj");
        this.showSpinner = true;
        //  console.log(this.selected);
        var company = [];
        this.companyService.getAllemployeeleaves().subscribe(function (data) {
            // console.log(data);
            // console.log(data[0].tbl_user_profile.f_name);
            _this.loadToDataTable(data);
            _this.showSpinner = false;
        });
    };
    CompanyEmployeeLeavesComponent.prototype.loadToDataTable = function (data) {
        this.notExist = false;
        if (data.length == 0) {
            this.notExist = true;
        }
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
        // console.log(this.dataSource);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    CompanyEmployeeLeavesComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.newEmpleave.startavlhr = { hour: 0, minute: 0, second: 0 },
            this.newEmpleave.endavlhr = { hour: 0, minute: 0, second: 0 },
            this.todayDate.setDate(this.todayDate.getDate() + 1);
        this.refresh();
        this.companyService.getAllcompanyemployee().subscribe(function (res) {
            // console.log(res);
            _this.companyemployee = res;
        });
    };
    CompanyEmployeeLeavesComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    //tme validation
    // ctrl = new FormControl('', (control: FormControl) => {
    //   const value = control.value;
    //   if (!value) {
    //     return null;
    //   }
    //   if (value.hour < 12) {
    //     return {tooEarly: true};
    //   }
    //   if (value.hour > 13) {
    //     return {tooLate: true};
    //   }
    //   return null;
    // });
    // ctrl1 = new FormControl('', (control: FormControl) => {
    //   const value1 = control.value;
    //   if (!value1) {
    //     return null;
    //   }
    //   if (value1.hour < 12) {
    //     return {tooEarly: true};
    //   }
    //   if (value1.hour > 13) {
    //     return {tooLate: true};
    //   }
    //   // console.log(value1.hour);
    //   return null;
    // });
    //add empleave
    CompanyEmployeeLeavesComponent.prototype.addNewEmpleave = function () {
        //this.showSpinner =false;
        //this.showSpinnerDelete =false;
        this.newEmpleave = {
            startdate: '',
            startavlhr: { hour: 0, minute: 0, second: 0 },
            enddate: '',
            endavlhr: { hour: 0, minute: 0, second: 0 },
            emp_id: '',
            leave_hr: ''
        };
    };
    CompanyEmployeeLeavesComponent.prototype.getId = function (id) {
        // this.showSpinner =false
        // this.showSpinnerDelete =false
        this.id = id;
        //  console.log(this.id)
    };
    //delete Employee leave
    CompanyEmployeeLeavesComponent.prototype.deleteEmpleave = function (id) {
        var _this = this;
        // console.log(id);
        this.showSpinner = true;
        this.companyService.deleteEmpleave(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    CompanyEmployeeLeavesComponent.prototype.addEmpleave = function (newEmpleave) {
        var _this = this;
        this.addLeave = true;
        this.addSpinner = true;
        console.log(newEmpleave);
        // console.log(newEmpleave);
        this.showSpinner = true;
        // console.log(newCategory);
        this.companyService.addnewEmpleave(newEmpleave).subscribe(function (data) {
            if (!data.success) {
                _this.addLeave = false;
                _this.addSpinner = false;
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else if (data.success) {
                _this.addLeave = false;
                _this.addSpinner = false;
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.closeBtn.nativeElement.click();
                _this.refresh();
            }
        });
    };
    CompanyEmployeeLeavesComponent.prototype.getEditId = function (id) {
        var _this = this;
        //  console.log(id);
        this.showSpinner = false;
        this.start = { hour: 0, minute: 0, second: 0 };
        this.end = { hour: 0, minute: 0, second: 0 };
        this.companyService.getSingleempleave(id).subscribe(function (data) {
            // console.log( data);
            var starthr = data.start_available_hrs.split(':');
            var endhr = data.end_available_hrs.split(':');
            _this.updateleave = data;
            _this.updateleave.startavlhr = { hour: starthr[0], minute: starthr[1], second: starthr[2] };
            _this.updateleave.endavlhr = { hour: endhr[0], minute: endhr[1], second: endhr[2] };
            _this.updateleave.user_profile_id = data.user_profile_id;
            _this.updateleave.start_date = data.start_date;
            _this.updateleave.end_date = data.end_date;
            //  console.log(start[0]);
            // console.log( data.start_available_hrs)
            // data.startavlhr={ hour:start[0],minute:start[1],second:start[2]};
            // data.endavlhr={ hour:end[0],minute:end[1],second:end[2]};
            //this.id = data.id;
            // console.log(this.updateleave);
            if (data.success == false) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
            }
        });
    };
    CompanyEmployeeLeavesComponent.prototype.updateEmployeeleave = function (updateleave) {
        var _this = this;
        this.editLeave = true;
        this.editSpinner = true;
        console.log(updateleave);
        this.showSpinner = true;
        this.companyService.updateEmpleave(this.updateleave).subscribe(function (data) {
            if (!data.success) {
                _this.editLeave = false;
                _this.editSpinner = false;
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
            else if (data.success) {
                _this.editLeave = false;
                _this.editSpinner = false;
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.closeBtn1.nativeElement.click();
                _this.refresh();
            }
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyEmployeeLeavesComponent.prototype, "closeBtn", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn1'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyEmployeeLeavesComponent.prototype, "closeBtn1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], CompanyEmployeeLeavesComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], CompanyEmployeeLeavesComponent.prototype, "sort", void 0);
    CompanyEmployeeLeavesComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-employee-leaves',
            template: __webpack_require__("../../../../../src/app/components/company-employee-leaves/company-employee-leaves.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-employee-leaves/company-employee-leaves.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], CompanyEmployeeLeavesComponent);
    return CompanyEmployeeLeavesComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-expired/company-expired.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "body {\r\n    background: #f7f7f7;\r\n\r\n}\r\n.panel-danger{    border: none;\r\n    margin-top: 20%;}\r\n    .panel-footer{background-color:#fff;}\r\n    .panel-danger>.panel-heading{    border: none;\r\n        color: #fff;\r\n        background-color: #f37600;\r\n        text-align: center;\r\n        font-size: 28px;\r\n        padding: 54px;}\r\n        .panel-body{    padding: 30px;\r\n            font-size: 22px;\r\n            line-height: 31px;\r\n            text-align: center;}\r\n            .panel-footer {\r\n                padding: 28px 15px;text-align:center;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-expired/company-expired.component.html":
/***/ (function(module, exports) {

module.exports = "<br>\r\n<div class=\"container\">\r\n  <div class=\"panel panel-default panel-danger\">\r\n    <div class=\"panel-heading \"><i aria-hidden=\"true\" class=\"fa fa-smile\"></i>Your Free Trial Version has Expired!</div>\r\n    <div class=\"panel-body\">\r\n      Expired Licence Term : <b>30 days </b><br>\r\n      To resume the facilities, Please subscribe.\r\n    </div>\r\n    <div class=\"panel-footer clearfix\">\r\n      <div class=\"\">\r\n          <!-- <button type=\"button\" (click)=\"subscribe()\" class=\"btn btn-danger\">Subscribe</button> -->\r\n          <button type=\"button\" (click)=\"logout()\"  class=\"btn round-button\">Sign Out</button>\r\n      </div>\r\n  </div>\r\n  </div>\r\n  \r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/company-expired/company-expired.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyExpiredComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var CompanyExpiredComponent = (function () {
    function CompanyExpiredComponent(companyService, routes) {
        this.companyService = companyService;
        this.routes = routes;
    }
    CompanyExpiredComponent.prototype.ngOnInit = function () {
    };
    CompanyExpiredComponent.prototype.logout = function () {
        this.companyService.logout();
        this.routes.navigate(['/home']);
        return false;
    };
    CompanyExpiredComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-expired',
            template: __webpack_require__("../../../../../src/app/components/company-expired/company-expired.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-expired/company-expired.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_2__angular_router__["Router"]])
    ], CompanyExpiredComponent);
    return CompanyExpiredComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-footer/company-footer.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-footer/company-footer.component.html":
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "../../../../../src/app/components/company-footer/company-footer.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyFooterComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var CompanyFooterComponent = (function () {
    function CompanyFooterComponent() {
    }
    CompanyFooterComponent.prototype.ngOnInit = function () {
    };
    CompanyFooterComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-footer',
            template: __webpack_require__("../../../../../src/app/components/company-footer/company-footer.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-footer/company-footer.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], CompanyFooterComponent);
    return CompanyFooterComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-leave-request-list/company-leave-request-list.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".side-bar-menu{background:#fff;}\r\n.side-bar-menu li{    border-bottom: 1px solid #e4e4e4;}\r\n.side-bar-menu li a{color:#111;text-align:left;padding: 20px 23px;}\r\n.side-bar-menu li a:hover{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:focus{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:active{background-color: #fe6a07;color:#fff;}\r\n\r\nul.breadcrumb {\r\n    padding: 10px 0;\r\n    list-style: none;\r\n\r\n    text-align: left;\r\n    color: #d68956;\r\n}\r\nul.breadcrumb li {\r\n    display: inline;\r\n    font-size: 15px;\r\n}\r\nul.breadcrumb li+li:before {\r\n    padding: 8px;\r\n    color: black;\r\n    content: \"/\\A0\";\r\n}\r\nul.breadcrumb li a {\r\n    color: #bbbbbb;\r\n    text-decoration: none;\r\n}\r\nul.breadcrumb li a:hover {\r\n    color: #d68956;\r\n    text-decoration: none;\r\n\r\n}\r\n.breadcrumb{    background-color: #f6f7fa;}\r\n\r\n\r\n.example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}\r\n.modal-dialog{max-width:900px !important;width:100%;}\r\n.user{width:280px;height:280px;border-radius:50%;margin:0 auto;float:none;overflow:hidden; background: #d45d0e;margin-top: 20%;\r\n    margin-bottom: 20%;text-align:center;}\r\n    .user:hover{opacity:0.6;cursor:pointer;}\r\n.user img{width:120%;max-width: 287px;min-width: 287px;}\r\n\r\n.brdr-left{    width: 1px;\r\n    height: 155px;\r\n    float: left;\r\n    margin-top: 36%;\r\n    display: inherit;\r\n    background: #efecec;\r\n    margin-right: 21px;}\r\n  .user .fa-camera{color:#fff;font-size:50px;text-align:center;background: #d45d0e;padding-top:204%;}\r\n.disply{width:auto; display: -webkit-inline-box;}\r\nlabel{font-weight: 500;}\r\n.paddtop{padding-top:17px;}\r\n.bt{border-radius:30px;padding:3px 13px;   font-size: 12px;\r\n    margin-top: 9px;color: white;\r\n      background-color: #fe6a07;}    ", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-leave-request-list/company-leave-request-list.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n    <div class=\"container-fluid display-table\">\r\n        <div class=\"row display-table-row\">\r\n      \r\n            <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n                 <!-- sidebar-->\r\n               \r\n                 <company-sidebar></company-sidebar> \r\n                 <!-- end sidebar-->\r\n            </div>\r\n            \r\n            <div class=\"col-md-12 col-xs-12\">\r\n                <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n                <!-- topbar-->\r\n                <company-topbar></company-topbar> \r\n                \r\n                    <!-- end topbar-->\r\n                \r\n                \r\n                <div class=\"user-dashboard\">\r\n                        <h2>Request Management</h2>\r\n                        <ul class=\"breadcrumb\">\r\n                          <li><a >Leave Request Management</a></li>\r\n                                                 \r\n                          <li>Leave Request Management List </li>\r\n                        </ul>\r\n                    <div class=\"row\">\r\n                      <!-----------------------------------------------------------------table-------------------------------------->\r\n                            \r\n  \r\n  <!-- <p>You selected: {{selected}} </p> -->\r\n  \r\n  <div class=\"col-md-12\">\r\n        <div class=\"row\">\r\n        <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\" >\r\n            <div class=\"\"  >\r\n                <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n            <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n              <animateTransform attributeType=\"xml\"\r\n                attributeName=\"transform\"\r\n                type=\"rotate\"\r\n                from=\"0 25 25\"\r\n                to=\"360 25 25\"\r\n                dur=\"0.6s\"\r\n                repeatCount=\"indefinite\"/>\r\n              </path>\r\n            </svg>\r\n        </div>\r\n        </div> -->\r\n        \r\n    \r\n        <div class=\"col-md-12 optionz\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                  <div class=\"example-header\">\r\n                      <mat-form-field>\r\n                        <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                      </mat-form-field>\r\n                    </div>\r\n              </div>\r\n             \r\n          </div>\r\n        </div>\r\n    \r\n    \r\n    <!--    \r\n              <div class=\"example-header\" >\r\n                  <mat-form-field>\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                  </mat-form-field>\r\n              </div> -->\r\n           \r\n        <div class=\"example-container mat-elevation-z8 \">\r\n      <mat-table [dataSource]=\"dataSource\" matSort>\r\n     <!-- Name Column -->\r\n     <ng-container matColumnDef=\"slno\">\r\n        <mat-header-cell *matHeaderCellDef>Sl_No </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row;let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}} </mat-cell>\r\n      </ng-container>\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n          <mat-header-cell *matHeaderCellDef > NAME </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\"> {{row.tbl_user_profile.f_name}} </mat-cell>\r\n        </ng-container>\r\n                <!-- Name Column -->\r\n        <ng-container matColumnDef=\"start_date\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Leave Start Date </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\"> {{row.start_date}} </mat-cell>\r\n        </ng-container>\r\n              <!-- Name Column -->\r\n        <ng-container matColumnDef=\"start_available_hrs\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Start Available hrs </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\"> {{row.start_available_hrs}} </mat-cell>\r\n        </ng-container>  \r\n                <!-- Name Column -->\r\n        <ng-container matColumnDef=\"end_date\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Leave end date </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\"> {{row.end_date}} </mat-cell>\r\n        </ng-container>\r\n                <!-- Name Column -->\r\n        <ng-container matColumnDef=\"end_available_hrs\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header> End available hrs </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\"> {{row.end_available_hrs}} </mat-cell>\r\n        </ng-container>\r\n             <!-- Name Column reject_reason-->\r\n             <ng-container matColumnDef=\"request_status\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let row\" > {{row.request_status}} </mat-cell>\r\n               \r\n              </ng-container>\r\n        <ng-container matColumnDef=\"action\">\r\n            <mat-header-cell *matHeaderCellDef> ACTION </mat-header-cell>\r\n            <mat-cell *matCellDef=\"let row\">\r\n              <a  routerLink=\"/company-user-leave-request/{{row.id}}\" ><button class=\"bt\">view</button></a>\r\n              </mat-cell>\r\n          </ng-container>\r\n\r\n    \r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n        </mat-row>\r\n      </mat-table>\r\n      <div class=\"col-md-15 \">\r\n          <!-- <div *ngIf=\"showSpinner\" class=\"deletespinner\">\r\n              <mat-spinner></mat-spinner>\r\n             </div> -->\r\n      </div>\r\n      <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n          <div class=\"col-md-4 col-md-offset-4\">\r\n              <mat-toolbar   class=\"back-color\">No item found!</mat-toolbar>\r\n          </div>\r\n        </div>\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n    </div>\r\n    \r\n    \r\n    </div>\r\n    </div>\r\n  \r\n   \r\n      \r\n\r\n        \r\n       <!-----------------------------------------------------------------end table-------------------------------------->\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n                <!-- footer-->\r\n                <company-footer></company-footer>\r\n       <!-- end footer-->\r\n        </div>\r\n         </div>\r\n        <!-- Modal -->\r\n     \r\n     </body>"

/***/ }),

/***/ "../../../../../src/app/components/company-leave-request-list/company-leave-request-list.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyLeaveRequestListComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var CompanyLeaveRequestListComponent = (function () {
    // ---------------------------------Start-------------------------------------------
    // Function      : project category master setting
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 12-03-2018
    // Last Modified : 
    // Desc          : All category
    function CompanyLeaveRequestListComponent(companyService, config, routes, snackBar) {
        this.companyService = companyService;
        this.config = config;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'name', 'start_date', 'start_available_hrs', 'end_date', 'end_available_hrs', 'request_status', 'action'];
        this.notExist = false;
        this.all_value = false;
        this.showSpinner = false;
        this.socket = __WEBPACK_IMPORTED_MODULE_3_socket_io_client__(config.siteUrl);
    }
    CompanyLeaveRequestListComponent.prototype.refresh = function () {
        var _this = this;
        // // console.log("hj");
        this.showSpinner = true;
        //  // console.log(this.selected);
        var company = [];
        this.companyService.getAllemppendingleaves().subscribe(function (data) {
            // console.log(data)
            _this.loadToDataTable(data);
            _this.showSpinner = false;
        });
    };
    CompanyLeaveRequestListComponent.prototype.loadToDataTable = function (data) {
        this.notExist = false;
        if (data.length == 0) {
            this.notExist = true;
        }
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
        // // console.log(this.dataSource);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    CompanyLeaveRequestListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.refresh();
        this.socket.on('Leaveaddeduser', function (data) {
            _this.refresh();
        });
        this.socket.on('deleteLeaveuser', function (data) {
            _this.refresh();
        });
        this.socket.on('Rejectedleave', function (data) {
            _this.refresh();
        });
        this.socket.on('Acceptedleave', function (data) {
            _this.refresh();
        });
    };
    CompanyLeaveRequestListComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyLeaveRequestListComponent.prototype, "closeBtn", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn1'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyLeaveRequestListComponent.prototype, "closeBtn1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], CompanyLeaveRequestListComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], CompanyLeaveRequestListComponent.prototype, "sort", void 0);
    CompanyLeaveRequestListComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-leave-request-list',
            template: __webpack_require__("../../../../../src/app/components/company-leave-request-list/company-leave-request-list.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-leave-request-list/company-leave-request-list.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_4__config_config__["a" /* Config */],
            __WEBPACK_IMPORTED_MODULE_5__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], CompanyLeaveRequestListComponent);
    return CompanyLeaveRequestListComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-login/company-login.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\r\n.logn{height:100%;overflow-x:hidden;background:#fff;}\r\n.logn-img{height:100%;width:100%;position:relative;overflow:hidden;}\r\n.paragraph{width:60%;left:10%;bottom:10%;z-index:100;min-height:20px;color:#fff;text-align:left;font-size:14px;position:absolute;}\r\n.social-login{\r\n  position:relative;\r\n  float: none;\r\n  margin:0 auto;\r\n  height:auto;\r\n  padding: 10px 0 15px 0;\r\n  border-bottom: 1px solid #eee;\r\n  display: table;\r\n      width: 79%;\r\n      padding-top: 15%;\r\n}\r\n\r\n.social-login a{\r\n     position: relative;\r\n    float: left;\r\n    width: 48%;\r\n    text-decoration: none;\r\n    color: #fff;\r\n    border: 1px solid rgba(0,0,0,0.05);\r\n    padding: 7px 12px;\r\n    border-radius: 12px;\r\n    font-size: 12px;\r\n   \r\n        margin: 0px 1%;\r\n    text-align: center;\r\n}\r\n.social-login a i{\r\n  position: relative;\r\n  float: left;\r\n  width: 20px;\r\n  top: 2px;\r\n}\r\n.social-login a:first-child{\r\n  background-color: #49639F;\r\n}\r\n.social-login a:last-child{\r\n  background-color: #DF4A32;\r\n}\r\n.email-login,.email-signup{\r\n  position:relative;\r\n  float: left;\r\n  width: 100%;\r\n  height:auto;\r\n  margin-top: 20px;\r\n  text-align:center;\r\n}\r\nbody {\r\n  background: #e9e9e9;\r\n  color: #666666;\r\n  font-family: 'RobotoDraft', 'Roboto', sans-serif;\r\n  font-size: 14px;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n/* Pen Title */\r\n.pen-title {\r\n  padding: 20px 0;\r\n  text-align: center;\r\n  letter-spacing: 2px;\r\n}\r\n.pen-title h1 {\r\n  margin: 0 0 20px;\r\n  font-size: 40px;\r\n  font-weight: 300;\r\n}\r\n.pen-title span {\r\n  font-size: 12px;\r\n}\r\n.pen-title span .fa {\r\n  color: #ed2553;\r\n}\r\n.pen-title span a {\r\n  color: #ed2553;\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n}\r\n\r\n/* Rerun */\r\n.rerun {\r\n  margin: 0 0 30px;\r\n  text-align: center;\r\n}\r\n.rerun a {\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  background: #ed2553;\r\n  border-radius: 3px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  padding: 10px 20px;\r\n  color: #ffffff;\r\n  text-decoration: none;\r\n  transition: 0.3s ease;\r\n}\r\n.rerun a:hover {\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n}\r\n\r\n/* Scroll To Bottom */\r\n#codepen, #portfolio {\r\n  position: fixed;\r\n  bottom: 30px;\r\n  right: 30px;\r\n  background: #ec2652;\r\n  width: 56px;\r\n  height: 56px;\r\n  border-radius: 100%;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  transition: 0.3s ease;\r\n  color: #ffffff;\r\n  text-align: center;\r\n}\r\n#codepen i, #portfolio i {\r\n  line-height: 56px;\r\n}\r\n#codepen:hover, #portfolio:hover {\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n}\r\n\r\n/* CodePen */\r\n#portfolio {\r\n  bottom: 96px;\r\n  right: 36px;\r\n  background: #ec2652;\r\n  width: 44px;\r\n  height: 44px;\r\n  animation: buttonFadeInUp 1s ease;\r\n}\r\n#portfolio i {\r\n  line-height: 44px;\r\n}\r\n\r\n/* Container */\r\n.container {\r\n  position: relative;\r\n  max-width: 460px;\r\n  width: 100%;\r\n  margin: 0 auto 100px;\r\n}\r\n.container.active .card:first-child {\r\n  background: #f2f2f2;\r\n  margin: 0 15px;\r\n}\r\n.container.active .card:nth-child(2) {\r\n  background: #fafafa;\r\n  margin: 0 10px;\r\n}\r\n.container.active .card.alt {\r\n  top: 20px;\r\n  right: 0;\r\n  width: 100%;\r\n  min-width: 100%;\r\n  height: auto;\r\n  border-radius: 5px;\r\n  padding: 60px 0 40px;\r\n  overflow: hidden;\r\n}\r\n.container.active .card.alt .toggle {\r\n  position: absolute;\r\n  top: 40px;\r\n  right: -70px;\r\n  box-shadow: none;\r\n  transform: scale(15);\r\n  transition: transform .5s ease;\r\n}\r\n.container.active .card.alt .toggle:before {\r\n  content: '';\r\n}\r\n.container.active .card.alt .title,\r\n.container.active .card.alt .input-container,\r\n.container.active .card.alt .button-container {\r\n  left: 0;\r\n  opacity: 1;\r\n  visibility: visible;\r\n  transition: .3s ease;\r\n}\r\n.container.active .card.alt .title {\r\n  transition-delay: .3s;\r\n}\r\n.container.active .card.alt .input-container {\r\n  transition-delay: .4s;\r\n}\r\n.container.active .card.alt .input-container:nth-child(2) {\r\n  transition-delay: .5s;\r\n}\r\n.container.active .card.alt .input-container:nth-child(3) {\r\n  transition-delay: .6s;\r\n}\r\n.container.active .card.alt .button-container {\r\n  transition-delay: .7s;\r\n}\r\n\r\n/* Card */\r\n.card {\r\n \r\n}\r\n.card:first-child {\r\n\r\n}\r\n.card .title {\r\n      position: relative;\r\n    z-index: 1;\r\n    /* border-left: 5px solid #ec2652; */\r\n    margin: 0 0 35px;\r\n        padding: 30% 0 6% 0;\r\n    color: #f37501;\r\n    font-size: 32px;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n}\r\ninput:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill{background-color:none !important;}\r\n.card .input-container {\r\n        position: relative;\r\n    margin: 0 60px 34px;\r\n    /* overflow: hidden; */\r\n    display: inline-block;\r\n\t\r\n}\r\n.card .input-container input {\r\n  outline: none;\r\n  z-index: 1;\r\n  position: relative;\r\n  background: none;\r\n  width: 100%;\r\n  height: 54px;\r\n  border: 0;\r\n  color: #212121;\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n}\r\n.card .input-container input:focus ~ label {\r\n  color: #9d9d9d;\r\n  transform: translate(-12%, -50%) scale(0.75);\r\n}\r\n.card .input-container input:focus ~ .bar:before, .card .input-container input:focus ~ .bar:after {\r\n  width: 50%;\r\n}\r\n.card .input-container input:valid ~ label {\r\n  color: #9d9d9d;\r\n  transform: translate(-12%, -50%) scale(0.75);\r\n}\r\n.card .input-container label {\r\n  position: absolute;\r\n  top: 0;\r\n      left: 20px;\r\n  color: #757575;\r\n      font-size: 18px;\r\n  font-weight: 300;\r\n  line-height: 60px;\r\n  transition: 0.2s ease;\r\n}\r\n.card .fa{     padding-top: 19px;\r\n    font-size: 28px;color:#f37600;}\r\n.card .input-container .bar {\r\n  position: absolute;\r\n      left: -4%;\r\n  bottom: 0;\r\n  background: #757575;\r\n  width: 100%;\r\n  height: 1px;\r\n}\r\n.card .input-container .bar:before, .card .input-container .bar:after {\r\n  content: '';\r\n  position: absolute;\r\n      background: #f47453;\r\n  width: 0;\r\n  height: 2px;\r\n  transition: .2s ease;\r\n}\r\n.card .input-container .bar:before {\r\n  left: 50%;\r\n}\r\n.card .input-container .bar:after {\r\n  right: 50%;\r\n}\r\n.card .button-container {\r\n  margin: 0 60px;\r\n  text-align: center;\r\n}\r\n.card .button-container button {\r\n  outline: 0;\r\n  cursor: pointer;\r\n  position: relative;\r\n  display: inline-block;\r\n  background: 0;\r\n  width: 240px;\r\n  border: 2px solid #e3e3e3;\r\n  padding: 20px 0;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  line-height: 1;\r\n  text-transform: uppercase;\r\n  overflow: hidden;\r\n  transition: .3s ease;\r\n}\r\n.card .button-container button span {\r\n  position: relative;\r\n  z-index: 1;\r\n  color: #ddd;\r\n  transition: .3s ease;\r\n}\r\n.card .button-container button:before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  display: block;\r\n  background: #ec2652;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 100%;\r\n  margin: -15px 0 0 -15px;\r\n  opacity: 0;\r\n  transition: .3s ease;\r\n}\r\n.card .button-container button:hover, .card .button-container button:active, .card .button-container button:focus {\r\n  border-color: #ec2652;\r\n}\r\n.card .button-container button:hover span, .card .button-container button:active span, .card .button-container button:focus span {\r\n  color: #ec2652;\r\n}\r\n.card .button-container button:active span, .card .button-container button:focus span {\r\n  color: #ffffff;\r\n}\r\n.card .button-container button:active:before, .card .button-container button:focus:before {\r\n  opacity: 1;\r\n  transform: scale(10);\r\n}\r\n.card .footer {\r\n  margin: 6px 0 9%;\r\n  color: #d3d3d3;\r\n  font-size: 24px;\r\n  font-weight: 300;\r\n  text-align: center;\r\n}\r\n.card .footer a {\r\n      color: inherit;\r\n    text-decoration: none;\r\n    transition: .3s ease;\r\n    font-size: 15px;\r\n    color: #111;\r\n}\r\n.card .footer a:hover {\r\n  color: #bababa;\r\n}\r\n.card.alt {\r\n  position: absolute;\r\n  top: 40px;\r\n  right: -70px;\r\n  z-index: 10;\r\n  width: 100px;\r\n  height: 100px;\r\n  background: none;\r\n  border-radius: 100%;\r\n  box-shadow: none;\r\n  padding: 0;\r\n  transition: .3s ease;\r\n  /* Toggle */\r\n  /* Title */\r\n  /* Input */\r\n  /* Button */\r\n}\r\n.card.alt .toggle {\r\n  position: relative;\r\n  background: #ec2652;\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 100%;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  color: #ffffff;\r\n  font-size: 42px;\r\n  line-height: 100px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n}\r\n.card.alt .toggle:before {\r\n  content: '\\F067';\r\n  display: inline-block;\r\n  font: normal normal normal 14px/1 FontAwesome;\r\n  font-size: inherit;\r\n  text-rendering: auto;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  transform: translate(0, 0);\r\n}\r\n.card.alt .title,\r\n.card.alt .input-container,\r\n.card.alt .button-container {\r\n  left: 100px;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n}\r\n.card.alt .title {\r\n  position: relative;\r\n  border-color: #ffffff;\r\n  color: #ffffff;\r\n}\r\n.card.alt .title .close {\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 60px;\r\n  display: inline;\r\n  color: #ffffff;\r\n  font-size: 58px;\r\n  font-weight: 400;\r\n}\r\n.card.alt .title .close:before {\r\n  content: '\\D7';\r\n}\r\n.card.alt .input-container input {\r\n  color: #ffffff;\r\n}\r\n.card.alt .input-container input:focus ~ label {\r\n  color: #ffffff;\r\n}\r\n.card.alt .input-container input:focus ~ .bar:before, .card.alt .input-container input:focus ~ .bar:after {\r\n  background: #ffffff;\r\n}\r\n.card.alt .input-container input:valid ~ label {\r\n  color: #ffffff;\r\n}\r\n.card.alt .input-container label {\r\n  color: rgba(255, 255, 255, 0.8);\r\n}\r\n.card.alt .input-container .bar {\r\n  background: rgba(255, 255, 255, 0.8);\r\n}\r\n.card.alt .button-container button {\r\n  width: 100%;\r\n  background: #ffffff;\r\n  border-color: #ffffff;\r\n}\r\n.card.alt .button-container button span {\r\n  color: #ec2652;\r\n}\r\n.card.alt .button-container button:hover {\r\n  background: rgba(255, 255, 255, 0.9);\r\n}\r\n.card.alt .button-container button:active:before, .card.alt .button-container button:focus:before {\r\n  display: none;\r\n}\r\n\r\n/* Keyframes */\r\n@keyframes buttonFadeInUp {\r\n  0% {\r\n    bottom: 30px;\r\n    opacity: 0;\r\n  }\r\n}\r\n.g-recaptcha {\r\n    transform:scale(0.89);\r\n    transform-origin:0 0;\r\n}\r\n.round-button{border-radius:20px;margin:0 auto;float:none;background:#f37600;color:#fff;    padding: 10px 32px; /* Safari */\r\n    transition: background 2s;}\r\n.round-button:hover{background:#ffaa05;color:#fff;}\r\n.padd-lft{padding-left:20px;}\r\n@media only screen and (max-width : 768px) {\r\n.logn-img {\r\n    height: 72%;\r\n    width: 98%;\r\n\tmax-height:300px;\r\n}\r\n}\r\n\r\n@media only screen and (max-width : 480px)  { \r\n.card .input-container{    margin: 12px;}\r\n.logn-img{display:none;}\r\nform{text-align:center;}\r\n.logn-img {\r\n    height: 72%;\r\n    width: 98%;\r\n\tmax-height:300px;\r\n}\r\n.logn-img img{width:100%;}\r\n}\r\n@media only screen and (max-width : 320px) { \r\n\t.card .input-container{    width: 74%;\r\n        margin: 24px auto;\r\n    float: none;}\r\n\t.card .input-container .bar{left: 3%;}\r\n\t.container{max-width:100%;}\r\n\tform{text-align:center;}\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-login/company-login.component.html":
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\r\n\r\n<html>\r\n\r\n<!-- <head>\r\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n\t<title>Taskit</title> -->\r\n\t<!-- <link rel=\"stylesheet\" href=\"css/bootstrap.css\">\r\n\t<link href=\"css/login.css\" rel=\"stylesheet\">\r\n\t<link href=\"css/responsive.css\" rel=\"stylesheet\">\r\n\t<!------ Include the above in your HEAD tag ---------->\r\n<!-- \r\n\t<link rel=\"stylesheet\" href=\"css/font-awesome.min.css\">\r\n\t<link rel=\"stylesheet\" href=\"css/line-awesome-font-awesome.min.css\">  -->\r\n\r\n<!-- </head> -->\r\n\r\n<body class=\"logn\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col-md-8\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"logn-img\">\r\n\t\t\t\t\t<img src=\"./assets/images/login.jpg\" style=\"width:100%;\" />\r\n\t\t\t\t\t<!-- <img src=\"img/login.jpg\"/> -->\r\n\t\t\t\t\t<!-- <div class=\"paragraph\">\r\n\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Proin tincidunt bibendum malesuada. Fusce tincidunt nibh quis nisi tristique, sed ultrices lorem aliquam. Nam facilisis posuere vehicula. Integer tempus rhoncus volutpat.\r\n\t\t\t\t\t</div> -->\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"col-md-4\">\r\n\t\t\t<div class=\"row\">\r\n\r\n\t\t\t\t<!-- Mixins-->\r\n\t\t\t\t<!-- Pen Title-->\r\n\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<div class=\"card\"></div>\r\n\t\t\t\t\t<div class=\"card\">\r\n\t\t\t\t\t\t<h1 class=\"title\">Login</h1>\r\n\t\t\t\t\t\t<form role=\"form\" (ngSubmit)=\"login(newLogin)\" novalidate>\r\n\t\t\t\t\t\t\t<div class=\"input-container\">\r\n\t\t\t\t\t\t\t\t<div class=\"col-xs-1\"><i class=\"fa fa-user\" aria-hidden=\"true\"></i></div>\r\n\t\t\t\t\t\t\t\t<div class=\"col-xs-10\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"Username\" name=\"email\" [(ngModel)]=\"newLogin.email\" required/>\r\n\t\t\t\t\t\t\t\t\t<label for=\"Username\">Email</label>\r\n\t\t\t\t\t\t\t\t\t<div class=\"bar\"></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"clearfix\"></div>\r\n\t\t\t\t\t\t\t<div class=\"input-container\">\r\n\t\t\t\t\t\t\t\t<div class=\"col-xs-1\"><i class=\"fa fa-lock\" aria-hidden=\"true\"></i></div>\r\n\t\t\t\t\t\t\t\t<div class=\"col-xs-10\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"password\" id=\"Password\" name=\"password\" [(ngModel)]=\"newLogin.password\" required/>\r\n\t\t\t\t\t\t\t\t\t<label for=\"Password\">Password</label>\r\n\t\t\t\t\t\t\t\t\t<div class=\"bar\"></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"input-container\" *ngIf=\"showCaptcha\">\r\n\t\t\t\t\t\t\t\t\t<re-captcha (captchaResponse)=\"handleCorrectCaptcha($event)\" site_key=\"6LdWoEsUAAAAALf4IQwncQqV0HZPduSL0Ab4QC11\" ></re-captcha>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"clearfix\"></div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"footer\"><a [routerLink]=\"['/forgot-password']\">Forgot your password?</a></div>\r\n\t\t\t\t\t\t\t<div class=\"col-md-12\" style=\"text-align:center;\"><button type=\"submit\" class=\"btn round-button\">Sign in</button></div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<div *ngIf=\"spinner\">\r\n\t\t\t\t\t\t\t\t<app-spinner></app-spinner>\r\n\t\t\t\t\t\t\t<!-- <div class=\"\">\r\n\t\t\t\t\t\t\t\t<svg class=\"svg\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n\t\t\t\t\t\t\t\t width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50; margin-left:25%;\" xml:space=\"preserve\">\r\n\t\t\t\t\t\t\t\t\t<path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n\t\t\t\t\t\t\t\t\t\t<animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</path>\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</div> -->\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"social-login\">\r\n\t\t\t\t<a href=\"/auth/facebook\">\r\n\t\t\t\t<i class=\"fa fa-facebook fa-lg\"></i>\r\n\t\t\t\tSign in with facebook\r\n\t\t\t  </a>\r\n\r\n\r\n\r\n\t\t\t  <!-- <div class=\"col-xs-12 col-sm-12\">\r\n\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-lg btn-block omb_btn-google\" style=\"color:#fff;\">\r\n\t\t\t<i class=\"fa fa-google-plus visible-xs\"></i>\r\n\t\t\t<span class=\"hidden-xs\">Sign In With Google+</span>\r\n\t\t</a>\r\n\t\t\t</div> -->\r\n\r\n\t\t\t\t<a href=\"/auth/google\">\r\n\t\t\t\t<i class=\"fa fa-google-plus fa-lg\"></i>\r\n\t\t\t\tSign in with Google+\r\n\t\t\t  </a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<!-- Modal -->\r\n\t<!-- <script src='https://www.google.com/recaptcha/api.js'></script>\r\n\t<script src=\"http://code.jquery.com/jquery-1.11.1.js\"></script>\r\n\t<script src=\"js/bootstrap.min.js\"></script> -->\r\n\r\n\r\n</body>\r\n\r\n\r\n</html>"

/***/ }),

/***/ "../../../../../src/app/components/company-login/company-login.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyLoginComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_angular2_recaptcha__ = __webpack_require__("../../../../angular2-recaptcha/angular2-recaptcha.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_angular2_recaptcha___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_angular2_recaptcha__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var CompanyLoginComponent = (function () {
    function CompanyLoginComponent(companyService, routes, snackBar) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.newLogin = {
            email: '',
            password: '',
            captcha: ''
        };
        this.spinner = false;
        this.showCaptcha = false;
        this.siteKey = "sitekey"; //example: 6LdEnxQTfkdldc-Wa6iKZSelks823exsdcjX7A-N
        this.theme = "light"; //you can give any google themes light or dark
    }
    CompanyLoginComponent.prototype.setVerified = function (data) {
        // console.log("dfd");
        // console.log(data) // data will return true while successfully verified 
    };
    CompanyLoginComponent.prototype.ngOnInit = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : Get logged in entity
        // Params        : 
        // Returns       : Get logged in entity
        // Author        : Rinsha
        // Date          : 08-03-2018
        // Last Modified : 08-03-2018, Rinsha
        // Desc          :  
        this.companyService.getLoggedinEntity().subscribe(function (data) {
            // if(data == null || data == ''){
            //   this.routes.navigate(['/company-login']); 
            // }
            if (data.role_id == 2) {
                //super admin
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/home']);
                }
                _this.routes.navigate(['/admin-dashboard']);
            }
            if (data.role_id == 3 || data.role_id == 1) {
                //company admin or pm
                if (data.delete_status == true || data.block_status == true || data.cmp_status == "Not Verified") {
                    _this.routes.navigate(['/company-login']);
                }
                if (data.cmp_status == "Expired") {
                    _this.routes.navigate(['/expired']);
                }
                if (data.is_profile_completed == false) {
                    _this.routes.navigate(['/compay-aditninfo', data.cmp_id]);
                }
                _this.routes.navigate(['/company-dashboard']);
            }
            if (data.role_id == 4) {
                //user
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/company-login']);
                }
                _this.routes.navigate(['/user-dashboard']);
            }
        });
        // -----------------------------------End------------------------------------------
        // this.companyService.getLoggedUSerDetails().subscribe(info => {
        //   console.log(info);
        //   if (info == null || info == '') {
        //     this.routes.navigate(['/company-login']);
        //   }
        //   if (info.role_id == 1) {
        //     if (info.delete_status == true || info.block_status == true || info.cmp_status == "Not Verified") {
        //       this.routes.navigate(['/company-login']);
        //     }
        //     if (info.cmp_status == "Expired") {
        //       // this.routes.navigate(['/expired']); expired
        //     }
        //     if (info.is_profile_completed == false) {
        //       // this.routes.navigate(['/additnInfo', info.cmp_id]); additional info
        //     }
        //     this.routes.navigate(['/dashboard']); 
        //   }
        //   if (info.role_id == 3 || info.role_id == 4) {
        //     if (info.delete_status == true || info.block_status == true) {
        //       // this.routes.navigate(['/404']); 404
        //     }
        //     this.routes.navigate(['/dashboard']);  
        //   }
        // });
    };
    CompanyLoginComponent.prototype.handleCorrectCaptcha = function (event) {
        this.token = this.captcha.getResponse();
        // console.log(token);
    };
    CompanyLoginComponent.prototype.login = function (newLogin) {
        var _this = this;
        this.spinner = true;
        if (this.newLogin.email == '' || this.newLogin.password == '') {
            var snackBarRef = this.snackBar.open('Please fill username and password properly!', '', {
                duration: 2000
            });
            this.spinner = false;
        }
        else {
            newLogin.captcha = this.token;
            // console.log(newLogin);
            this.companyService.authenticateCompany(this.newLogin).subscribe(function (data) {
                console.log(data);
                if (data.success) {
                    _this.spinner = false;
                    if (data.login.status == "Expired") {
                        console.log("expired");
                        var json = data.login;
                        var key = "status";
                        delete json[key];
                        _this.companyService.storeUserData(data.token, data.login);
                        _this.routes.navigate(['/expired']);
                    }
                    else {
                        // console.log("esle");
                        _this.spinner = false;
                        var json = data.login;
                        var key = "status";
                        delete json[key];
                        _this.companyService.storeUserData(data.token, data.login);
                        if (_this.captcha) {
                            _this.captcha.reset();
                        }
                        if (data.login.role_id == 4) {
                            _this.routes.navigate(['/user-dashboard']);
                        }
                        else {
                            _this.routes.navigate(['/company-dashboard']);
                        }
                    }
                }
                else if (data.profile_complete == false) {
                    // console.log("profile");
                    _this.routes.navigate(['/compay-aditninfo/' + data.cmp_id]);
                    // var json = data.login;
                    // var key = "profile";
                    // delete json[key];
                    _this.companyService.storeUserData(data.token, data.login);
                }
                else {
                    _this.spinner = false;
                    if (_this.captcha) {
                        _this.captcha.reset();
                    }
                    if (data.caseno != null || data.caseno != '' || data.caseno == []) {
                        if (data.caseno == 1) {
                            // console.log(data.caseno);
                            _this.showCaptcha = true;
                            // console.log(this.showCaptcha);
                        }
                    }
                    _this.msg = data.msg;
                    var snackBarRef = _this.snackBar.open(_this.msg, '', {
                        duration: 2000
                    });
                    if (_this.captcha) {
                        _this.captcha.reset();
                    }
                }
            });
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_4_angular2_recaptcha__["ReCaptchaComponent"]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_4_angular2_recaptcha__["ReCaptchaComponent"])
    ], CompanyLoginComponent.prototype, "captcha", void 0);
    CompanyLoginComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-login',
            template: __webpack_require__("../../../../../src/app/components/company-login/company-login.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-login/company-login.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_1__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_2__angular_material__["z" /* MatSnackBar */]])
    ], CompanyLoginComponent);
    return CompanyLoginComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-manage-access-rights/company-manage-access-rights.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".mat-form-field-underline {\n    position: absolute;\n    height: 1px;\n    width: 96%;\n    top: 48px;\n}\n\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label, .mat-form-field-empty.mat-form-field-label {\n    padding-left: 10px;\n}\n\ninput.mat-input-element{\n    /* border-radius: 50px; */\n}\n.mat-fltr {\n    width: 100%;\n    background-color: #fff;\n    padding: 0 35px;\n}\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-manage-access-rights/company-manage-access-rights.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n\r\n      <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n        <!-- sidebar-->\r\n\r\n        <company-sidebar></company-sidebar>\r\n        <!-- end sidebar-->\r\n      </div>\r\n\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n        <!-- topbar-->\r\n        <company-topbar></company-topbar>\r\n        <!-- end topbar-->\r\n\r\n\r\n        <div class=\"user-dashboard\">\r\n          <!-- <h1>Hello, JS</h1> -->\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <h2>Master Settings</h2>\r\n              <ul class=\"breadcrumb\">\r\n                <li>\r\n                  <a>Master Settings</a>\r\n                </li>\r\n                <!-- <li><a routerLink=\"/company-request-management\">Time Extension Request List</a></li> -->\r\n\r\n                <li>Access Rights</li>\r\n              </ul>\r\n            </div>\r\n            <div class=\"col-md-12 col-sm-5 col-xs-12 gutter ad-tp dash-tbl\">\r\n              <div class=\"col-md-12 spinner-cont\" *ngIf=\"showSpinner\">\r\n                <app-spinner class=\"tbl-spnner\"></app-spinner>\r\n              </div>\r\n\r\n              <div class=\"example-header\">\r\n                <mat-form-field class=\"mat-fltr padd-10\">\r\n                  <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"example-container mat-elevation-z8 \">\r\n                <div *ngIf=\"preloader\">\r\n                  <app-spinner></app-spinner>\r\n                </div>\r\n\r\n\r\n                <mat-table #table [dataSource]=\"dataSource\" matSort>\r\n\r\n                  <!-- ID Column -->\r\n                  <ng-container matColumnDef=\"id\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> SL NO. </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row; let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}} </mat-cell>\r\n                  </ng-container>\r\n\r\n                  <!-- Theme Name -->\r\n                  <ng-container matColumnDef=\"role\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> TEAM NAME </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.role}} </mat-cell>\r\n                  </ng-container>\r\n\r\n\r\n\r\n                  <!-- ID Column -->\r\n                  <ng-container matColumnDef=\"status\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\">\r\n                      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n                        <mat-icon>more_vert</mat-icon>\r\n                      </button>\r\n                      <mat-menu #menu=\"matMenu\">\r\n\r\n                        <button mat-menu-item (click)=\"setRights(row.id, row.role)\">\r\n                          <mat-icon>\r\n                            <i class=\"material-icons mat-assign-icn\">add_box</i>\r\n                          </mat-icon>\r\n                          <span>Assign</span>\r\n                        </button>\r\n                      </mat-menu>\r\n                    </mat-cell>\r\n                  </ng-container>\r\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                  <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                  </mat-row>\r\n\r\n                </mat-table>\r\n                <div class=\"col-md-12 noItemFound\" *ngIf=\"existStatus\">\r\n                  <div class=\"col-md-4 col-md-offset-4\">\r\n                    <mat-toolbar class=\"back-color\">No item found!</mat-toolbar>\r\n                  </div>\r\n                </div>\r\n                <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <!-- footer-->\r\n      <!-- <admin-footer></admin-footer> -->\r\n      <!-- end footer-->\r\n    </div>\r\n  </div>\r\n  <!-- Modal -->\r\n  <div id=\"assignModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n      <!-- Modal content-->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n          <h4 class=\"modal-title\"></h4>\r\n        </div>\r\n        <!-- <div class=\"modal-header\"> -->\r\n        <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n        <!-- </div> -->\r\n        <div class=\"modal-body delete-popup\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"col-md-4\">\r\n                  <label class=\"modal-lft-lbl\">User Group:</label>\r\n                </div>\r\n                <div class=\"col-md-7\">\r\n                  <label id=\"team-nm\" class=\"modal-lft-lbl\">{{teamName}}</label>\r\n\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <div class=\"col-md-4 \">\r\n                  <label class=\"modal-lft-lbl\">Access Rights :</label>\r\n                </div>\r\n                <div class=\"col-md-7 padd-15\">\r\n                  <div class=\"col-md-12\">\r\n                    <div class=\"col-md-12\" *ngFor=\"let item of accessRights\">\r\n                      <mat-checkbox class=\"example-margin\" [(indeterminate)]=\"item.intermediate\" [(ngModel)]=\"item.checked\" name=\"{{i}}\" (ngModelChange)=\"changeMaster(item.id)\">{{item.name}}</mat-checkbox>\r\n                      <div class=\"col-md-10 col-md-offset-1\" *ngFor=\"let rights of item.sub\">\r\n                        <mat-checkbox class=\"example-margin\" [(ngModel)]=\"rights.checked\" name=\"{{i}}\" (ngModelChange)=\"change(item.id)\">{{rights.access_right}}</mat-checkbox>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-12\">\r\n                {{errMessage}}\r\n              </div>\r\n            </div>\r\n            <div class=\"clear-fix\"></div>\r\n            <!-- <ngx-treeview\r\n                      [config]=\"config\"\r\n                      [items]=\"items\" (selectedChange)=\"change($event)\"\r\n                      >\r\n                  </ngx-treeview> -->\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n          <app-spinner *ngIf=\"spinner\"></app-spinner>\r\n          <button *ngIf=\"!spinner\" type=\"button\" [disabled]=\"addAccessBtnDisable\" (click)=\"assignRights()\" class=\"btn round-button\">Assign</button>\r\n          <div *ngIf=\"AddAccessSpinner\">\r\n            <app-spinner></app-spinner>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-manage-access-rights/company-manage-access-rights.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyManageAccessRightsComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_socket_io_client__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var CompanyManageAccessRightsComponent = (function () {
    function CompanyManageAccessRightsComponent(companyService, config, routes, snackBar) {
        this.companyService = companyService;
        this.config = config;
        this.routes = routes;
        this.snackBar = snackBar;
        this.preloader = false;
        this.displayedColumns = ['id', 'role', 'status'];
        this.showErr = false;
        this.existStatus = false;
        this.showSpinner = false;
        this.errMessage = '';
        this.spinner = false;
        this.addAccessBtnDisable = false;
        this.AddAccessSpinner = false;
        this.socket = __WEBPACK_IMPORTED_MODULE_5_socket_io_client__(config.siteUrl);
    }
    CompanyManageAccessRightsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.preloader = true;
        this.socket.on('expiredcompany', function (data) {
            _this.routes.navigate(['/expired']);
            // this.refresh();
        });
        this.getUserGroups();
    };
    CompanyManageAccessRightsComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Manu Prasad 
    // Desc          : Get Teams from database
    CompanyManageAccessRightsComponent.prototype.getUserGroups = function () {
        var _this = this;
        this.showSpinner = true;
        this.companyService.getUserGroups().subscribe(function (userGroups) {
            _this.preloader = false;
            _this.showSpinner = false;
            // console.log(userGroups);
            if (userGroups.length <= 0) {
                // console.log("theme is empty");
                _this.existStatus = true;
            }
            else {
                _this.existStatus = false;
            }
            //  else {
            // console.log(themes);
            // console.log("theme is not empty");
            //  console.log(this.existStatus);
            // this.displatStat = true;
            _this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](userGroups);
            _this.dataSource.paginator = _this.paginator;
            _this.dataSource.sort = _this.sort;
            // }  
        });
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Manu Prasad 
    // Desc          : Get Teams from database
    CompanyManageAccessRightsComponent.prototype.getAccessRights = function (usergroupid) {
        var _this = this;
        this.companyService.getAccessRights(usergroupid).subscribe(function (accessRights) {
            _this.accessRights = accessRights;
            // console.log(accessRights)
        });
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : setRights
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Manu Prasad 
    // Desc          : set access rights in modal 
    CompanyManageAccessRightsComponent.prototype.setRights = function (usergroupid, usergroupName) {
        this.getAccessRights(usergroupid);
        this.userGroupId = usergroupid;
        $('#assignModal .modal-title').text("Assign Access Rights");
        $('#team-nm').text(usergroupName);
        $('#assignModal').modal('show');
    };
    //  ---------------------------------end-----------------------------------------------
    CompanyManageAccessRightsComponent.prototype.change = function (event) {
        console.log(this.accessRights);
        var allChecked = true;
        // async.forEachOf(this.accessRights, (element, key, callback)=>{
        this.accessRights.forEach(function (element) {
            if (element.id == event) {
                element.intermediate = true;
                element.sub.forEach(function (ele) {
                    // console.log(typeof ele.checked);
                    if (ele.checked == false || typeof ele.checked == 'undefined') {
                        // console.log("l");
                        allChecked = false;
                    }
                });
                if (allChecked == true) {
                    element.checked = true;
                    element.intermediate = false;
                }
                else {
                    element.checked = false;
                }
            }
        });
    };
    CompanyManageAccessRightsComponent.prototype.changeMaster = function (event) {
        // console.log(event)
        this.accessRights.forEach(function (element) {
            if (element.id == event) {
                if (element.checked == true) {
                    element.sub.forEach(function (ele) {
                        ele.checked = true;
                    });
                }
                else {
                    element.sub.forEach(function (ele) {
                        ele.checked = false;
                    });
                }
            }
            // console.log(this.accessRights)
        });
        // conso
    };
    CompanyManageAccessRightsComponent.prototype.assignRights = function () {
        var _this = this;
        this.addAccessBtnDisable = true;
        this.AddAccessSpinner = true;
        this.spinner = true;
        this.companyService.assignRights(this.accessRights, this.userGroupId).subscribe(function (res) {
            if (res.status == 1) {
                var snackBarRef = _this.snackBar.open(res.message, '', {
                    duration: 2000
                });
                _this.addAccessBtnDisable = false;
                _this.AddAccessSpinner = false;
                // this.getAccessRights();
                _this.spinner = false;
                $('#assignModal').modal('toggle');
            }
            else {
                var snackBarRef = _this.snackBar.open(res.message, '', {
                    duration: 2000
                });
                _this.addAccessBtnDisable = false;
                _this.AddAccessSpinner = false;
            }
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], CompanyManageAccessRightsComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], CompanyManageAccessRightsComponent.prototype, "sort", void 0);
    CompanyManageAccessRightsComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-manage-access-rights',
            template: __webpack_require__("../../../../../src/app/components/company-manage-access-rights/company-manage-access-rights.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-manage-access-rights/company-manage-access-rights.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_4__config_config__["a" /* Config */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"],
            __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], CompanyManageAccessRightsComponent);
    return CompanyManageAccessRightsComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-manage-designation/company-manage-designation.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".side-bar-menu{background:#fff;}\r\n.side-bar-menu li{    border-bottom: 1px solid #e4e4e4;}\r\n.side-bar-menu li a{color:#111;text-align:left;padding: 20px 23px;}\r\n.side-bar-menu li a:hover{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:focus{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:active{background-color: #fe6a07;color:#fff;}\r\n\r\nul.breadcrumb {\r\n    padding: 10px 0;\r\n    list-style: none;\r\n\r\n    text-align: left;\r\n    color: #d68956;\r\n}\r\nul.breadcrumb li {\r\n    display: inline;\r\n    font-size: 15px;\r\n}\r\nul.breadcrumb li+li:before {\r\n    padding: 8px;\r\n    color: black;\r\n    content: \"/\\A0\";\r\n}\r\nul.breadcrumb li a {\r\n    color: #bbbbbb;\r\n    text-decoration: none;\r\n}\r\nul.breadcrumb li a:hover {\r\n    color: #d68956;\r\n    text-decoration: none;\r\n\r\n}\r\n.breadcrumb{    background-color: #f6f7fa;}\r\n\r\n\r\n.example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}\r\n.modal-dialog{max-width:900px !important;width:100%;}\r\n.user{width:280px;height:280px;border-radius:50%;margin:0 auto;float:none;overflow:hidden; background: #d45d0e;margin-top: 20%;\r\n    margin-bottom: 20%;text-align:center;}\r\n    .user:hover{opacity:0.6;cursor:pointer;}\r\n.user img{width:120%;max-width: 287px;min-width: 287px;}\r\n\r\n.brdr-left{    width: 1px;\r\n    height: 155px;\r\n    float: left;\r\n    margin-top: 36%;\r\n    display: inherit;\r\n    background: #efecec;\r\n    margin-right: 21px;}\r\n  .user .fa-camera{color:#fff;font-size:50px;text-align:center;background: #d45d0e;padding-top:204%;}\r\n    ", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-manage-designation/company-manage-designation.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n      <div class=\"row display-table-row\">\r\n    \r\n          <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n               <!-- sidebar-->\r\n             \r\n               <company-sidebar></company-sidebar> \r\n               <!-- end sidebar-->\r\n          </div>\r\n          \r\n          <div class=\"col-md-12 col-xs-12\">\r\n              <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n              <!-- topbar-->\r\n              <company-topbar></company-topbar> \r\n              \r\n                  <!-- end topbar-->\r\n              \r\n              \r\n              <div class=\"user-dashboard\">\r\n                      <h2>Master Settings</h2>\r\n                      <ul class=\"breadcrumb\">\r\n                        <li><a>Master Settings</a></li>\r\n                        \r\n                        \r\n                        <li>Designations</li>\r\n                      </ul>\r\n                  <div class=\"row\">\r\n                    <!-----------------------------------------------------------------table-------------------------------------->\r\n                          \r\n\r\n<!-- <p>You selected: {{selected}} </p> -->\r\n\r\n<div class=\"col-md-12\">\r\n      <div class=\"row\">\r\n      <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\" >\r\n          <div class=\"\"  >\r\n              <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n              width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n          <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n            <animateTransform attributeType=\"xml\"\r\n              attributeName=\"transform\"\r\n              type=\"rotate\"\r\n              from=\"0 25 25\"\r\n              to=\"360 25 25\"\r\n              dur=\"0.6s\"\r\n              repeatCount=\"indefinite\"/>\r\n            </path>\r\n          </svg>\r\n      </div>\r\n      </div> -->\r\n      \r\n     \r\n      <div class=\"col-md-12 optionz\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"example-header\">\r\n                    <mat-form-field>\r\n                      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                    </mat-form-field>\r\n                  </div>\r\n            </div>\r\n           \r\n        </div>\r\n      </div>\r\n  \r\n  \r\n  <!--    \r\n            <div class=\"example-header\" >\r\n                <mat-form-field>\r\n                  <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                </mat-form-field>\r\n            </div> -->\r\n     \r\n      <div class=\"example-container mat-elevation-z8 \">\r\n    <mat-table [dataSource]=\"dataSource\" matSort>\r\n   <!-- Name Column -->\r\n   <ng-container matColumnDef=\"slno\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Sl_No </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row;let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}}</mat-cell>\r\n    </ng-container>\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Designation </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.team_name}} </mat-cell>\r\n      </ng-container>\r\n  \r\n   \r\n    <ng-container matColumnDef=\"action\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">\r\n          <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\">\r\n                <button  (click)=\"getEditId(row.id)\" data-toggle=\"modal\" data-target=\"#editModal\" mat-menu-item >\r\n                    <i class=\"material-icons\">mode_edit</i>\r\n                  <span>Edit</span>\r\n                </button>\r\n              <button  (click)=\"getId(row.id)\" data-toggle=\"modal\" data-target=\"#deleteModal\" mat-menu-item >\r\n                  <i class=\"material-icons\">delete</i>\r\n                <span>Delete</span>\r\n              </button>\r\n           \r\n             \r\n          \r\n            </mat-menu>\r\n         \r\n        </mat-cell>\r\n    </ng-container>\r\n  \r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n      </mat-row>\r\n    </mat-table>\r\n    <div class=\"col-md-15 \">\r\n        <!-- <div *ngIf=\"showSpinner\" class=\"deletespinner\">\r\n            <mat-spinner></mat-spinner>\r\n           </div> -->\r\n    </div>\r\n    <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n        <div class=\"col-md-4 col-md-offset-4\">\r\n            <mat-toolbar   class=\"back-color\">No item found!</mat-toolbar>\r\n        </div>\r\n      </div>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n  </div>\r\n  \r\n  \r\n  </div>\r\n  </div>\r\n  <div class=\"add-button\">\r\n      <button type=\"button\" class=\"add-project\" data-toggle=\"modal\" (click)=\"addNewCategory()\" data-target=\"#addModal\" data-backdrop=\"static\">+</button>\r\n    </div>\r\n  <!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n  \r\n  <div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\r\n      <div class=\"modal-dialog\">\r\n  \r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n            <h4 class=\"modal-title\">Delete </h4>\r\n          </div>\r\n          <!-- <div class=\"modal-header\"> -->\r\n          <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n          <!-- </div> -->\r\n          <div class=\"modal-body delete-popup\">\r\n            <i class=\"fa fa-exclamation\"></i>\r\n  \r\n  \r\n            <h4 class=\"textalign\">Are you sure?</h4>\r\n  \r\n          </div>\r\n  \r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" (click)=\"deleteDesignation(id)\" class=\"btn round-button\" data-dismiss=\"modal\">Delete</button>\r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n    </div>\r\n    <!-----------------------------------------------------------------delete modal-------------------------------------->\r\n     <!-----------------------------------------------------------------add modal-------------------------------------->\r\n     <div id=\"addModal\" class=\"modal fade\">\r\n      <div class=\"modal-dialog\">\r\n\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn>&times;</button>\r\n            <h4 class=\"modal-title\">Add New Designation Group</h4>\r\n          </div>\r\n         \r\n          <div class=\"modal-body\">\r\n              <form  role=\"form\"  #f=\"ngForm\" (ngSubmit)=\"addDesignation(newDesignation);\" >\r\n            <div class=\"col-md-7\">\r\n           \r\n                      \r\n                <div class=\"form-group\" >\r\n                    <label>Designation group name</label>\r\n                    <div class=\"example-container\">\r\n                      <mat-form-field>\r\n                          <input matInput placeholder=\"eg : Developer \" name =\"name\" [(ngModel)]=\"newDesignation\"  >\r\n                       </mat-form-field>\r\n                       <p >Add designation groups except project manager</p>\r\n                \r\n                    </div>\r\n                        \r\n                  </div>\r\n              <br>\r\n    \r\n              <div class=\"row\">\r\n                <div class=\"col-md-4\">\r\n                  <button type=\"submit\" [disabled]=\"btnDisbled\" class=\"btn round-button\">Submit</button>\r\n\r\n                </div>\r\n                <!-- <div class=\"col-md-8\" *ngIf=\"showSpinner\">\r\n                  <svg class=\"svgclass\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                    x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\"\r\n                    xml:space=\"preserve\">\r\n                    <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                      <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n                      />\r\n                    </path>\r\n                  </svg>\r\n                </div> -->\r\n\r\n              </div>\r\n\r\n           \r\n            </div>\r\n           \r\n          \r\n          </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n     <!----------------------------------------addModal------------------------------>\r\n       <!-- --------------------------------------------- edit modal ----------------------------------------------------------------- -->\r\n  \r\n\r\n    <div id=\"editModal\" class=\"modal fade\">\r\n      <div class=\"modal-dialog\">\r\n\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn1>&times;</button>\r\n            <h4 class=\"modal-title\">Update Designation Group</h4>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n              <form  role=\"form\"  #f=\"ngForm\" (ngSubmit)=\"updateDesignation(designation);\" novalidate>\r\n            <div class=\"col-md-7\">\r\n           \r\n                <div class=\"form-group\" >\r\n                    <div class=\"example-container\">\r\n                      <mat-form-field>\r\n                        <input matInput placeholder=\"Designation\"  name =\"designation\" [(ngModel)]=\"designation.team_name\"  required>\r\n                      </mat-form-field>\r\n                    </div>\r\n                        \r\n                  </div>\r\n              <br>\r\n    \r\n              <div class=\"row\">\r\n                <div class=\"col-md-4\">\r\n                  <button type=\"submit\" [disabled]=\"btnDisbled\" class=\"btn round-button\">Update</button>\r\n\r\n                </div>\r\n                <!-- <div class=\"col-md-8\" *ngIf=\"showSpinner\">\r\n                  <svg class=\"svgclass\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                    x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\"\r\n                    xml:space=\"preserve\">\r\n                    <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                      <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n                      />\r\n                    </path>\r\n                  </svg>\r\n                </div> -->\r\n\r\n              </div>\r\n\r\n           \r\n            </div>\r\n           \r\n          \r\n          </form>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  <!-----------------------------------------------------------------edit modal-------------------------------------->\r\n      \r\n     <!-----------------------------------------------------------------end table-------------------------------------->\r\n                  </div>\r\n              </div>\r\n              \r\n          </div>\r\n              <!-- footer-->\r\n              <company-footer></company-footer>\r\n     <!-- end footer-->\r\n      </div>\r\n       </div>\r\n      <!-- Modal -->\r\n   </body>"

/***/ }),

/***/ "../../../../../src/app/components/company-manage-designation/company-manage-designation.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyManageDesignationComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CompanyManageDesignationComponent = (function () {
    // ---------------------------------Start-------------------------------------------
    // Function      : project category master setting
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 12-03-2018
    // Last Modified : 
    // Desc          : All category
    function CompanyManageDesignationComponent(companyService, routes, snackBar) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'name', 'action'];
        this.notExist = false;
        this.all_value = false;
        this.showSpinner = false;
        this.designation = { designation_name: '', id: '' };
    }
    CompanyManageDesignationComponent.prototype.refresh = function () {
        var _this = this;
        // console.log("hj");
        this.showSpinner = true;
        //  console.log(this.selected);
        // const company = [];
        this.companyService.getAlldesignations().subscribe(function (data) {
            _this.loadToDataTable(data);
            _this.showSpinner = false;
        });
    };
    CompanyManageDesignationComponent.prototype.loadToDataTable = function (data) {
        this.notExist = false;
        if (data.length == 0) {
            this.notExist = true;
        }
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
        // console.log(this.dataSource);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    CompanyManageDesignationComponent.prototype.ngOnInit = function () {
        this.refresh();
    };
    CompanyManageDesignationComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    CompanyManageDesignationComponent.prototype.addNewCategory = function () {
        //this.showSpinner =false;
        //this.showSpinnerDelete =false;
        this.newDesignation = '';
    };
    CompanyManageDesignationComponent.prototype.getId = function (id) {
        // this.showSpinner =false
        // this.showSpinnerDelete =false
        this.id = id;
        //  console.log(this.id)
    };
    //delete Category
    CompanyManageDesignationComponent.prototype.deleteDesignation = function (id) {
        var _this = this;
        this.showSpinner = true;
        this.companyService.deleteDesignation(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    CompanyManageDesignationComponent.prototype.addDesignation = function (newDesignation) {
        var _this = this;
        //console.log(newCategory);
        this.showSpinner = true;
        // console.log(newCategory);
        this.companyService.addDesignation(newDesignation).subscribe(function (designationData) {
            if (!designationData.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(designationData.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else if (designationData.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(designationData.msg, '', {
                    duration: 2000
                });
                _this.closeBtn.nativeElement.click();
                _this.refresh();
            }
        });
    };
    CompanyManageDesignationComponent.prototype.getEditId = function (id) {
        var _this = this;
        this.showSpinner = false;
        this.companyService.getSingledesignation(id).subscribe(function (data) {
            console.log(data);
            _this.designation = data;
            //this.id = data.id;
            if (data.success == false) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
            }
        });
    };
    CompanyManageDesignationComponent.prototype.updateDesignation = function (designation) {
        var _this = this;
        //  console.log(category);
        this.showSpinner = true;
        this.companyService.updateDesignation(this.designation).subscribe(function (data) {
            if (!data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
            else if (data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.closeBtn1.nativeElement.click();
                _this.refresh();
            }
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyManageDesignationComponent.prototype, "closeBtn", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn1'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyManageDesignationComponent.prototype, "closeBtn1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], CompanyManageDesignationComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], CompanyManageDesignationComponent.prototype, "sort", void 0);
    CompanyManageDesignationComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-manage-designation',
            template: __webpack_require__("../../../../../src/app/components/company-manage-designation/company-manage-designation.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-manage-designation/company-manage-designation.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], CompanyManageDesignationComponent);
    return CompanyManageDesignationComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-manage-holidays/company-manage-holidays.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".labl {\r\n    line-height: 24px;\r\n    font-weight: normal;\r\n    font-size: 12px;\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-manage-holidays/company-manage-holidays.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n\r\n      <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n        <!-- sidebar-->\r\n\r\n        <company-sidebar></company-sidebar>\r\n        <!-- end sidebar-->\r\n      </div>\r\n\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n        <!-- topbar-->\r\n        <company-topbar></company-topbar>\r\n        <!-- end topbar-->\r\n\r\n\r\n        <div class=\"user-dashboard\">\r\n          <!-- <h1>Hello, JS</h1> -->\r\n          <div class=\"row\">\r\n\r\n            <div class=\"col-md-12 col-sm-5 col-xs-12 gutter ad-tp dash-tbl\">\r\n              <div class=\"col-md-12 spinner-cont\" *ngIf=\"showSpinner\">\r\n                <app-spinner class=\"tbl-spnner\"></app-spinner>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <div class=\"col-md-9\">\r\n                  <div class=\"example-header\">\r\n                    <mat-form-field class=\"col-md-5\">\r\n                      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-2\">\r\n                  <div>\r\n                    <mat-form-field class=\"filter\" *ngIf=\"noYear\">\r\n\r\n                      <mat-select (change)=\"refresh()\" [(value)]=\"selectedx\">\r\n                        <!-- <mat-option>None</mat-option> -->\r\n                        <mat-option *ngFor=\"let item of years\" [value]=\"item\">{{item}}</mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"example-container mat-elevation-z8 \">\r\n                <mat-table #table [dataSource]=\"dataSource\" matSort>\r\n\r\n                  <!-- ID Column -->\r\n                  <ng-container matColumnDef=\"id\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> SL NO. </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row; let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}} </mat-cell>\r\n                  </ng-container>\r\n\r\n                  <!-- Theme Name -->\r\n                  <ng-container matColumnDef=\"name\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Title </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.title}} </mat-cell>\r\n                  </ng-container>\r\n\r\n\r\n                  <ng-container matColumnDef=\"date\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> Date </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.date}} </mat-cell>\r\n                  </ng-container>\r\n                  <!-- Progress Column -->\r\n                  <!-- ID Column -->\r\n                  <ng-container matColumnDef=\"action\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\">\r\n                      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n                        <mat-icon>more_vert</mat-icon>\r\n                      </button>\r\n                      <mat-menu #menu=\"matMenu\">\r\n\r\n                        <!-- <button mat-menu-item [routerLink]=\"['/edit-theme/',row._id]\">\r\n                              <mat-icon>mode_edit</mat-icon>\r\n                              <span>Edit</span>\r\n                            </button> -->\r\n                        <button *ngIf=\"checkPastDate(row.date)\" mat-menu-item (click)=\"setEdit(row.id, row.title, row.date)\" data-toggle=\"modal\"\r\n                          data-target=\"#myModal3\">\r\n                          <mat-icon class=\"mat-menu-icn\">\r\n                            <i class=\"material-icons mat-assign-icn\">create</i>\r\n                          </mat-icon>\r\n                          <span>Edit</span>\r\n                        </button>\r\n\r\n                        <button mat-menu-item (click)=\"delItem(row.id)\" data-toggle=\"modal\" data-target=\"#myModal3\">\r\n                          <mat-icon class=\"mat-menu-icn\">\r\n                            <i class=\"material-icons mat-assign-icn\">delete</i>\r\n                          </mat-icon>\r\n                          <span>Delete</span>\r\n                        </button>\r\n                      </mat-menu>\r\n                    </mat-cell>\r\n                  </ng-container>\r\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                  <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                  </mat-row>\r\n\r\n                </mat-table>\r\n                <div class=\"col-md-12 noItemFound\" *ngIf=\"existStatus\">\r\n                  <div class=\"col-md-4 col-md-offset-4\">\r\n                    <mat-toolbar class=\"back-color white-imp\">No item found!</mat-toolbar>\r\n                  </div>\r\n                </div>\r\n                <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n              </div>\r\n              <div class=\"col-md-12 padd-btm-20\">\r\n                <button class=\"pull-right plus-btn\" (click)=\"addHoliday()\">+</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <!-- footer-->\r\n      <admin-footer></admin-footer>\r\n      <!-- end footer-->\r\n    </div>\r\n  </div>\r\n  <!-- Modal -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  <div id=\"editModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n      <!-- Modal content-->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close\" (click)=\"editClose()\">&times;</button>\r\n          <h4 class=\"modal-title\">Edit Holiday</h4>\r\n        </div>\r\n        <!-- <div class=\"modal-header\"> -->\r\n        <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n        <!-- </div> -->\r\n        <div class=\"modal-body delete-popup\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"col-md-4\">\r\n                  <label class=\"modal-lft-lbl\">Title:</label>\r\n                </div>\r\n                <div class=\"col-md-7\">\r\n\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Title\" [(ngModel)]=\"currentTitle\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                  <label class=\"modal-lft-lbl\">Date:</label>\r\n                </div>\r\n                <div class=\"col-md-7\">\r\n                  <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\" [(ngModel)]=\"currentDate\" (ngModelChange)=\"editDateChanged()\"\r\n                      [min]=\"todayDate\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-8 col-md-offset-2 \" *ngIf=\"checkboxshow\">\r\n          <p>\r\n            <mat-checkbox [(ngModel)]=\"clickCheckbox\">\r\n              <div class=\"labl\"> This date is includes in project, please check, if you like to continue </div>\r\n            </mat-checkbox>\r\n          </p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <app-spinner *ngIf=\"spinner\"></app-spinner>\r\n          <button *ngIf=\"!spinner\" type=\"button\" [disabled]=\"editholiday\" (click)=\"saveEdit()\" class=\"btn round-button\">Update</button>\r\n          <div *ngIf=\"editSpinner\">\r\n            <app-spinner></app-spinner>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div id=\"addModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n      <!-- Modal content-->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close\" (click)=\"addClose()\">&times;</button>\r\n          <h4 class=\"modal-title\">Add Holiday</h4>\r\n        </div>\r\n        <!-- <div class=\"modal-header\"> -->\r\n        <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n        <!-- </div> -->\r\n        <div class=\"modal-body delete-popup\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"col-md-4\">\r\n                  <label class=\"modal-lft-lbl\">Title:</label>\r\n                </div>\r\n                <div class=\"col-md-7\">\r\n\r\n                  <mat-form-field>\r\n                    <input matInput placeholder=\"Title\" [(ngModel)]=\"newTitle\">\r\n                  </mat-form-field>\r\n\r\n\r\n                </div>\r\n\r\n                <div class=\"col-md-4\">\r\n                  <label class=\"modal-lft-lbl\">Date:</label>\r\n                </div>\r\n                <div class=\"col-md-7\">\r\n\r\n                  <mat-form-field>\r\n                    <input matInput [matDatepicker]=\"pickerx\" placeholder=\"Choose a date\" [(ngModel)]=\"newDate\" (ngModelChange)=\"dateChanged()\"\r\n                      [min]=\"this.todayDate\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"pickerx\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #pickerx></mat-datepicker>\r\n                  </mat-form-field>\r\n\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div class=\"col-md-8 col-md-offset-2 \" *ngIf=\"checkboxshow\">\r\n\r\n          <p>\r\n            <mat-checkbox [(ngModel)]=\"clickCheckbox\">\r\n              <div class=\"labl\"> This date is includes in project, please check, if you like to continue </div>\r\n            </mat-checkbox>\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n          <app-spinner *ngIf=\"spinner\"></app-spinner>\r\n          <button *ngIf=\"!spinner\" type=\"button\" [disabled]=\"addBtnDisable\" (click)=\"saveHoliday()\" class=\"btn round-button\">{{holidayBtn}}</button>\r\n          <div *ngIf=\"addSpinner\">\r\n            <app-spinner></app-spinner>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <!----------------------------------------------- delete modal----------------------------------------------------------------- -->\r\n  <div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n      <!-- Modal content-->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn9>&times;</button>\r\n          <h4 class=\"modal-title\">Delete </h4>\r\n        </div>\r\n        <!-- <div class=\"modal-header\"> -->\r\n        <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n        <!-- </div> -->\r\n        <div class=\"modal-body delete-popup text-center\">\r\n          <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n          <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n        </div>\r\n\r\n        <div class=\"modal-footer\" style=\"text-align:center;\">\r\n          <button type=\"button\" [disabled]=\"deleteBtnDisable\" (click)=\"confirm()\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Delete</button>\r\n          <div *ngIf=\"deleteSpinner\">\r\n            <app-spinner></app-spinner>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <!-------------------------------------------------------------------------delete modal-------------------------------------------------------------->\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-manage-holidays/company-manage-holidays.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyManageHolidaysComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CompanyManageHolidaysComponent = (function () {
    function CompanyManageHolidaysComponent(companyService, routes, snackBar) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['id', 'name', 'date', 'action'];
        this.displatStat = false;
        this.showErr = false;
        this.existStatus = false;
        this.showSpinner = false;
        this.checkboxshow = false;
        this.addBtnDisable = false;
        this.addSpinner = false;
        this.editholiday = false;
        this.editSpinner = false;
        this.deleteBtnDisable = false;
        this.deleteSpinner = false;
        this.errMessage = '';
        this.spinner = false;
        this.noYear = false;
        this.todayDate = new Date();
        this.clickCheckbox = false;
        this.gotoProjectPage = false;
    }
    CompanyManageHolidaysComponent.prototype.ngOnInit = function () {
        this.holidayBtn = 'Add Holiday';
        this.getYears();
        this.todayDate.setDate(this.todayDate.getDate() + 1);
    };
    CompanyManageHolidaysComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    //  ---------------------------------Start-------------------------------------------
    // Function      : getHolidays
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 22-03-2018
    // Last Modified : 22-03-2018, Manu Prasad 
    // Desc          : Get Holidays from database
    CompanyManageHolidaysComponent.prototype.getYears = function () {
        var _this = this;
        this.companyService.getYears().subscribe(function (years) {
            _this.years = years;
            _this.selectedx = years[1];
            // console.log(this.selectedx);
            _this.noYear = true;
            _this.getHolidays(_this.selectedx);
        });
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getHolidays
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 22-03-2018
    // Last Modified : 22-03-2018, Manu Prasad 
    // Desc          : Get Holidays from database
    CompanyManageHolidaysComponent.prototype.refresh = function () {
        this.getHolidays(this.selectedx);
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getHolidays
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 22-03-2018
    // Last Modified : 22-03-2018, Manu Prasad 
    // Desc          : Get Holidays from database
    CompanyManageHolidaysComponent.prototype.getHolidays = function (year) {
        var _this = this;
        this.showSpinner = true;
        this.companyService.getHoliday(this.selectedx).subscribe(function (holidays) {
            _this.showSpinner = false;
            // console.log(holidays.resp);  
            if (holidays.resp.length <= 0) {
                _this.existStatus = true;
            }
            else {
                _this.existStatus = false;
            }
            _this.holidays = holidays;
            _this.displatStat = true;
            _this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](holidays.resp);
            _this.dataSource.paginator = _this.paginator;
            _this.dataSource.sort = _this.sort;
            // }  
        });
    };
    //  ---------------------------------end-----------------------------------------------
    CompanyManageHolidaysComponent.prototype.setEdit = function (id, title, date) {
        this.currentId = id;
        this.currentTitle = title;
        this.currentDate = date;
        $('#editModal').modal('show');
    };
    //  ---------------------------------Start-------------------------------------------
    // Function      : getHolidays
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 22-03-2018
    // Last Modified : 22-03-2018, Manu Prasad 
    // Desc          : Get Holidays from database
    //  ---------------------------------end-----------------------------------------------
    CompanyManageHolidaysComponent.prototype.delItem = function (id) {
        this.currentId = id;
        $('#deleteModal').modal('show');
    };
    CompanyManageHolidaysComponent.prototype.confirm = function () {
        var _this = this;
        this.deleteBtnDisable = true;
        this.deleteSpinner = true;
        this.companyService.deleteHoliday(this.currentId).subscribe(function (resUpdate) {
            _this.deleteBtnDisable = false;
            _this.deleteSpinner = false;
            // console.log(resUpdate);
            _this.spinner = false;
            var snackBarRef = _this.snackBar.open(resUpdate.message, '', {
                duration: 2000
            });
            if (resUpdate.status == 1) {
                _this.getHolidays(_this.selectedx);
                $('#deleteModal').modal('hide');
            }
        });
    };
    CompanyManageHolidaysComponent.prototype.editClose = function () {
        this.spinner = false;
        $('#deleteModal').modal('hide');
    };
    CompanyManageHolidaysComponent.prototype.addHoliday = function () {
        this.checkboxshow = false;
        $('#addModal').modal('show');
    };
    CompanyManageHolidaysComponent.prototype.addClose = function () {
        $('#addModal').modal('hide');
        this.newTitle = '';
        this.newDate = '';
    };
    CompanyManageHolidaysComponent.prototype.dateChanged = function () {
        var _this = this;
        this.clickCheckbox = false;
        this.gotoProjectPage = false;
        this.companyService.isProjectExist(this.newDate).subscribe(function (isProjectExist) {
            if (isProjectExist.success) {
                _this.holidayBtn = 'Continue';
                _this.gotoProjectPage = true;
                _this.checkboxshow = true;
                // this.routes.navigate(['/revise-project']);
            }
            else {
                _this.holidayBtn = 'Add Holiday';
                _this.checkboxshow = false;
                _this.clickCheckbox = true;
            }
        });
    };
    CompanyManageHolidaysComponent.prototype.editDateChanged = function () {
        var _this = this;
        this.gotoProjectPage = false;
        this.clickCheckbox = false;
        this.companyService.isProjectExist(this.currentDate).subscribe(function (isProjectExist) {
            if (isProjectExist.success) {
                _this.holidayBtn = 'Continue';
                _this.gotoProjectPage = true;
                _this.checkboxshow = true;
                // this.routes.navigate(['/revise-project']);
            }
            else {
                _this.holidayBtn = 'Add Holiday';
                _this.checkboxshow = false;
                _this.clickCheckbox = true;
            }
        });
    };
    CompanyManageHolidaysComponent.prototype.saveEdit = function () {
        var _this = this;
        var data = {
            title: this.currentTitle,
            id: this.currentId,
            date: this.currentDate
        };
        if (this.clickCheckbox == true) {
            this.companyService.updateHoliday(data).subscribe(function (resUpdate) {
                _this.editholiday = false;
                _this.editSpinner = false;
                // console.log(resUpdate);
                _this.spinner = false;
                var snackBarRef = _this.snackBar.open(resUpdate.message, '', {
                    duration: 2000
                });
                if (resUpdate.status == 1) {
                    if (_this.gotoProjectPage) {
                        _this.routes.navigate(['/revise-project/' + _this.currentDate]);
                    }
                    _this.getHolidays(_this.selectedx);
                    $('#editModal').modal('hide');
                    _this.companyService.isProjectExist(data.date).subscribe(function (isProjectExist) {
                    });
                }
            });
        }
        else {
            var snackBarRef = this.snackBar.open('Please tick the check box for continue', '', {
                duration: 2000
            });
        }
    };
    CompanyManageHolidaysComponent.prototype.saveHoliday = function () {
        var _this = this;
        if (this.clickCheckbox == true) {
            this.companyService.saveHoliday(this.newDate, this.newTitle).subscribe(function (resSave) {
                _this.spinner = false;
                var snackBarRef = _this.snackBar.open(resSave.message, '', {
                    duration: 2000
                });
                _this.addBtnDisable = false;
                _this.addSpinner = false;
                if (resSave.status == 1) {
                    if (_this.gotoProjectPage) {
                        _this.routes.navigate(['/revise-project/' + _this.newDate]);
                    }
                    _this.getHolidays(_this.selectedx);
                    $('#addModal').modal('hide');
                    _this.newTitle = '';
                    _this.newDate = '';
                }
            });
        }
        else {
            var snackBarRef = this.snackBar.open('Please tick the check box for continue', '', {
                duration: 2000
            });
        }
    };
    CompanyManageHolidaysComponent.prototype.checkPastDate = function (date) {
        // console.log(new Date(date));
        if (new Date(date) > new Date) {
            return true;
        }
        else {
            return false;
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], CompanyManageHolidaysComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], CompanyManageHolidaysComponent.prototype, "sort", void 0);
    CompanyManageHolidaysComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-manage-holidays',
            template: __webpack_require__("../../../../../src/app/components/company-manage-holidays/company-manage-holidays.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-manage-holidays/company-manage-holidays.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"],
            __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], CompanyManageHolidaysComponent);
    return CompanyManageHolidaysComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-manage-team/company-manage-team.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".mat-form-field-underline {\r\n    position: absolute;\r\n    height: 1px;\r\n    width: 96%;\r\n    top: 48px;\r\n}\r\n\r\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label, .mat-form-field-empty.mat-form-field-label {\r\n    padding-left: 10px;\r\n}\r\n\r\ninput.mat-input-element{\r\n    border-radius: 50px;\r\n}\r\n.mat-fltr {\r\n    width: 100%;\r\n    background-color: #fff;\r\n    padding: 0 35px;\r\n}\r\n\r\n/* ---------------------------new change by asif---------------------------------------------- */\r\n\r\n.whitebgs{background:#fff;position:relative;padding:20px 30px;width:100%;text-align:center;margin-bottom: 27px;}\r\n.whitebgs h4{font-size:24px;color: #111;text-transform:uppercase;}\r\n.whitecaption{background:#fff;border-top: 1px solid #e8e8e8;margin-top:0;padding:20px 30px;overflow:hidden;}\r\n.whitebgs h2{font-size:70px;    font-weight: normal;\r\n    color: #adadad;margin-bottom: 0px;text-align:center;}\r\n.whitebgs p{font-size: 21px;}\r\n\r\n/* ---------------------------new change by asif---------------------------------------------- */", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-manage-team/company-manage-team.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n\r\n      <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n        <!-- sidebar-->\r\n\r\n        <company-sidebar></company-sidebar>\r\n        <!-- end sidebar-->\r\n      </div>\r\n\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n        <!-- topbar-->\r\n        <company-topbar></company-topbar>\r\n        <!-- end topbar-->\r\n\r\n        <div class=\"user-dashboard\">\r\n          <!-- <h1>Hello, JS</h1> -->\r\n          <div class=\"col-md-4\">\r\n            \r\n              <h2 _ngcontent-c14=\"\">Team</h2>\r\n              <ul _ngcontent-c14=\"\" class=\"breadcrumb\">\r\n                <li _ngcontent-c14=\"\">\r\n                  <a _ngcontent-c14=\"\" href=\"#\">Dashboard</a>\r\n                </li>\r\n                <li _ngcontent-c14=\"\">Team</li>\r\n              </ul>\r\n           \r\n          </div>\r\n     \r\n\r\n         <!-- <div class=\"col-md-4\" >\r\n              <mat-form-field class=\"example-full-width\">\r\n                  <input matInput placeholder=\"Filter\" >\r\n                </mat-form-field>\r\n          </div>  -->\r\n          <div id=\"custom-search-input\" class=\"col-md-4 pull-right\">\r\n            <br>\r\n              <div class=\"input-group\">\r\n                  <input type=\"text\" class=\"search-query form-control\" placeholder=\"Filter\" value=\"\" [(ngModel)]=\"searchTermTeam\"/>\r\n                  <span class=\"input-group-btn\">\r\n                      <button class=\"btn btn-danger\" type=\"button\">\r\n                          <span class=\" glyphicon glyphicon-search\"></span>\r\n                      </button>\r\n                  </span>\r\n              </div>\r\n          </div>\r\n          <div class=\"clearfix\"></div>\r\n          \r\n          <div class=\"col-md-4\" *ngFor=\"let team of teams | teamfilter:searchTermTeam\">\r\n            <div class=\"whitebgs\" >\r\n              <!-- <div class=\"btn-group btno\">\r\n                    <button type=\"button\" data-toggle=\"dropdown\" class=\"btnz\">\r\n                        <i class=\"fa fa-ellipsis-v\"></i>\r\n                    </button>\r\n                    <ul class=\"dropdown-menu\" role=\"menu\">\r\n                        <li><a href=\"#\">Planned</a></li>\r\n                        <li><a href=\"#\">Completed</a></li>\r\n                        <li><a href=\"#\">In progress</a></li>\r\n                        <li class=\"divider\"></li>\r\n                        <li><a href=\"#\">Edit</a></li>\r\n                        <li><a href=\"#\">Delete</a></li>\r\n                    </ul>\r\n                 \r\n                </div> -->\r\n              <div>\r\n                <div class=\"firstletter\">\r\n                  {{team.firstletter}}\r\n                </div>\r\n                <div class=\"clearfix\"></div>\r\n                <h4>{{team.team_name}}</h4>\r\n                <h2>{{team.count}}</h2>\r\n                    <button class=\"add-project\" (click)=\"setTeam(team.team_id, team.team_name)\" data-toggle=\"modal\"  data-target=\"#myModal3\">Assign Task</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- <div class=\"row\">\r\n\r\n            <div class=\"col-md-12 col-sm-5 col-xs-12 gutter\">\r\n              <div class=\"col-md-12 spinner-cont\" *ngIf=\"showSpinner\">\r\n                <app-spinner class=\"tbl-spnner\"></app-spinner>\r\n              </div>\r\n\r\n              <div class=\"example-header\">\r\n                <mat-form-field class=\"mat-fltr\">\r\n                  <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"example-container mat-elevation-z8 \">\r\n                <div *ngIf=\"preloader\">\r\n                  <app-spinner></app-spinner>\r\n                </div>\r\n\r\n                <div class=\"col-md-4\">\r\n                  <mat-form-field class=\"example-full-width\">\r\n                    <input matInput placeholder=\"Filter\" value=\"\" [(ngModel)]=\"searchTermTeam\">\r\n                  </mat-form-field>\r\n                </div>\r\n\r\n                <mat-table #table [dataSource]=\"dataSource\" matSort >\r\n\r\n                  <ng-container matColumnDef=\"id\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> SL NO. </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row; let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}} </mat-cell>\r\n                  </ng-container>\r\n\r\n              \r\n                  <ng-container matColumnDef=\"name\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> TEAM NAME </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.team_name}} </mat-cell>\r\n                  </ng-container>\r\n\r\n\r\n                  <ng-container matColumnDef=\"strength\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> STRENGTH </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\"> {{row.count}} </mat-cell>\r\n                  </ng-container>\r\n               \r\n                  <ng-container matColumnDef=\"status\">\r\n                    <mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </mat-header-cell>\r\n                    <mat-cell *matCellDef=\"let row\">\r\n                      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n                        <mat-icon>more_vert</mat-icon>\r\n                      </button>\r\n                      <mat-menu #menu=\"matMenu\">\r\n                        <button mat-menu-item (click)=\"setTeam(row.team_id, row.team_name)\" data-toggle=\"modal\" data-target=\"#myModal3\">\r\n                          <mat-icon class=\"mat-menu-icn\">\r\n                            <i class=\"material-icons mat-assign-icn\">add_box</i>\r\n                          </mat-icon>\r\n                          <span>Assign</span>\r\n                        </button>\r\n                      </mat-menu>\r\n                    </mat-cell>\r\n                  </ng-container>\r\n                  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                  <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                  </mat-row>\r\n\r\n                </mat-table>\r\n                <div class=\"col-md-12 noItemFound\" *ngIf=\"existStatus\">\r\n                  <div class=\"col-md-4 col-md-offset-4\">\r\n                    <mat-toolbar class=\"back-color\">No item found!</mat-toolbar>\r\n                  </div>\r\n                </div>\r\n                <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n              </div>\r\n            </div>\r\n          </div> -->\r\n\r\n        </div>\r\n      </div>\r\n      <!-- footer-->\r\n\r\n      <!-- end footer-->\r\n    </div>\r\n  </div>\r\n  <!-- Modal -->\r\n\r\n  <div id=\"assignModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n      <!-- Modal content-->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n          <h4 class=\"modal-title\"></h4>\r\n        </div>\r\n        <!-- <div class=\"modal-header\"> -->\r\n        <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n        <!-- </div> -->\r\n        <div class=\"modal-body delete-popup\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"col-md-4\">\r\n                  <label class=\"modal-lft-lbl\">Team Name:</label>\r\n                </div>\r\n                <div class=\"col-md-7\">\r\n                  <label id=\"team-nm\" class=\"modal-lft-lbl\">{{teamName}}</label>\r\n\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <div class=\"col-md-4 \">\r\n                  <label class=\"modal-lft-lbl\">Team Members :</label>\r\n                </div>\r\n                <div class=\"col-md-7 \">\r\n                  <mat-form-field class=\"inputfileds\">\r\n                    <mat-select name='selected' multiple [(ngModel)]=\"teamMembers\" (ngModelChange)=\"memberSelect($event)\">\r\n                      <mat-option [value]=\"member.id\" *ngFor=\"let member of members; let i=index\">{{member.f_name}} {{member.l_name}}</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-12\">\r\n                <div class=\"col-md-4 \">\r\n                  <label class=\"modal-lft-lbl\">Team Head :</label>\r\n                </div>\r\n                <div class=\"col-md-7 \">\r\n                  <mat-form-field class=\"inputfileds\">\r\n                    <mat-select name='selected2' [(ngModel)]=\"teamHead\" (ngModelChange)=\"headSelect($event)\">\r\n\r\n                      <mat-option *ngFor=\"let member of selectedTeamMembers;\" [value]=\"member.id\">{{member.f_name}} {{member.l_name}}</mat-option>\r\n\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                {{errMessage}}\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n          <!-- <app-spinner *ngIf=\"spinner\"></app-spinner> -->\r\n          <button *ngIf=\"!spinner\" type=\"button\" [disabled]=\"assignBtndisable\" (click)=\"assignTeam()\" class=\"btn round-button\">Assign</button>\r\n          <div *ngIf=\"assignBtnSpinner\">\r\n            <app-spinner></app-spinner>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-manage-team/company-manage-team.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyManageTeamComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CompanyManageTeamComponent = (function () {
    function CompanyManageTeamComponent(companyService, routes, snackBar) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['id', 'name', 'strength', 'status'];
        this.preloader = false;
        this.displatStat = false;
        this.showErr = false;
        this.existStatus = false;
        this.showSpinner = false;
        this.assignBtndisable = false;
        this.assignBtnSpinner = false;
        this.teamMembers = [];
        this.heads = [];
        this.errMessage = '';
        this.spinner = false;
    }
    CompanyManageTeamComponent.prototype.ngOnInit = function () {
        this.preloader = true;
        this.getTeams();
    };
    CompanyManageTeamComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches
        console.log(filterValue);
        console.log(this.teams);
        this.teams.filter = filterValue;
    };
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, Manu Prasad 
    // Desc          : Get Teams from database
    CompanyManageTeamComponent.prototype.getTeams = function () {
        var _this = this;
        this.showSpinner = true;
        this.companyService.getTeams().subscribe(function (teams) {
            _this.preloader = false;
            _this.showSpinner = false;
            // console.log(teams);
            if (teams.length <= 0) {
                // console.log("theme is empty");
                _this.existStatus = true;
            }
            else {
                _this.existStatus = false;
            }
            _this.teams = teams;
            _this.teams.forEach(function (team) {
                team.firstletter = team.team_name.slice(0, 1);
                console.log(team.firstletter);
            });
            //  else {
            // console.log(themes);
            // console.log("theme is not empty");
            //  console.log(this.existStatus);
            // this.displatStat = true;
            // this.dataSource = new MatTableDataSource(teams);
            // this.dataSource.paginator = this.paginator;
            // this.dataSource.sort = this.sort;
            // }  
        });
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : setTeam
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, Manu Prasad 
    // Desc          : set value in modal
    CompanyManageTeamComponent.prototype.setTeam = function (teamId, teamName) {
        var _this = this;
        // this.showSpinner =true
        this.teamId = teamId;
        this.companyService.getTeamMembers(teamId).subscribe(function (members) {
            _this.showSpinner = false;
            console.log(members);
            if (members.length <= 0) {
                // console.log("theme is empty");
                _this.existStatus = true;
            }
            else {
                _this.members = members[0];
                _this.teamMembers = members[2];
                _this.existStatus = false;
                _this.heads = members[2];
                _this.selectedTeamMembers = members[4];
                if (members[3] == null) {
                    _this.teamHead = '';
                }
                else {
                    _this.teamHead = members[3].user_profile_id;
                }
                console.log(_this.teamHead);
            }
            //  else {
            // }  
        });
        $('#assignModal .modal-title').text("Assign Members");
        $('#team-nm').text(teamName);
        $('#assignModal').modal('show');
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : setTeam
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, Manu Prasad 
    // Desc          : set value in modal
    CompanyManageTeamComponent.prototype.assignTeam = function () {
        var _this = this;
        this.assignBtndisable = true;
        this.assignBtnSpinner = true;
        console.log(this.teamMembers);
        // console.log(this.teamMembers);
        // console.log(this.teamHead);
        // console.log(this.teamId);
        this.spinner = true;
        if (this.teamMembers.length == 0 || this.teamHead == '') {
            this.errMessage = "Please select fields!";
            this.spinner = false;
            this.assignBtndisable = false;
            this.assignBtnSpinner = false;
        }
        else {
            this.errMessage = "";
            this.companyService.assignTeam(this.teamMembers, this.teamHead, this.teamId).subscribe(function (res) {
                if (res.status == 1) {
                    var snackBarRef = _this.snackBar.open(res.Message, '', {
                        duration: 2000
                    });
                    _this.assignBtndisable = false;
                    _this.assignBtnSpinner = false;
                    _this.getTeams();
                    _this.spinner = false;
                    $('#assignModal').modal('toggle');
                }
                else {
                    var snackBarRef = _this.snackBar.open(res.Message, '', {
                        duration: 2000
                    });
                    _this.assignBtndisable = false;
                    _this.assignBtnSpinner = false;
                }
            });
        }
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : setTeam
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, Manu Prasad 
    // Desc          : set value in modal
    CompanyManageTeamComponent.prototype.memberSelect = function (member) {
        var _this = this;
        // console.log("here")
        // console.log(member)
        // if(member != ''){
        // this.heads = member;
        this.selectedTeamMembers = [];
        member.forEach(function (element) {
            // console.log(element);
            _this.members.forEach(function (ele) {
                // console.log(ele);
                if (element == ele.id) {
                    _this.selectedTeamMembers.push(ele);
                }
            });
        });
        // console.log(this.selectedTeamMembers)
        // }
        // console.log(member);
        // console.log(this.teamMembers[this.teamMembers.length-1]);
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : setTeam
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, Manu Prasad 
    // Desc          : set value in modal
    CompanyManageTeamComponent.prototype.headSelect = function (head) {
        if (head != '') {
            this.teamHead = head;
        }
        // console.log(head);
        // console.log(this.teamMembers[this.teamMembers.length-1]);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], CompanyManageTeamComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], CompanyManageTeamComponent.prototype, "sort", void 0);
    CompanyManageTeamComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-manage-team',
            template: __webpack_require__("../../../../../src/app/components/company-manage-team/company-manage-team.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-manage-team/company-manage-team.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"],
            __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], CompanyManageTeamComponent);
    return CompanyManageTeamComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-new-task-management/company-new-task-management.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".task{background:#fbf6f1;width:100%;padding:6px 0;display: inline-block;margin-bottom:6px;}\r\nbutton, input, optgroup, select, textarea{outline:none !important;}\r\n.taskedit{border-left:1px solid #ccc;    display: inline-block;width:100%;margin-top: 5px;}\r\n.task ul li{width:auto;float:left;padding: 8px;}\r\n\ta{color:#111;}\r\n.task h5{padding-top:13px;padding-top: 6px;}\r\n.hash{background:#f7f6f4;}\r\n.round-button {\r\n    border-radius: 20px;\r\n    margin: 0;\r\n    float: left;\r\n    background: #f37600;\r\n    color: #fff;\r\n    padding: 7px 15px;\r\n    transition: background 2s;\r\n\tmargin-bottom:15px;\r\n}\r\n.round-button:hover {\r\n    background: #ffaa05;\r\n    color: #fff;\r\n}\r\n.dropdown ul.dropdown-menu:before {\r\n    content: \"\";\r\n    border-bottom: 10px solid #fff;\r\n    border-right: 10px solid transparent;\r\n    border-left: 10px solid transparent;\r\n    position: absolute;\r\n    top: -10px;\r\n    right: 16px;\r\n    z-index: 10;\r\n}\r\n.round-button:hover, .round-button:focus, .round-button.focus{color:#fff;}\r\nbutton, input, optgroup, select, textarea{outline:none;}\r\n.effect-1 ~ .focus-border{position: absolute; bottom: 0; left: 15px; width: 0; height: 2px;background-color: #bba28b; transition: 0.4s;right:15px;}\r\n.effect-1:focus ~ .focus-border{width: 95%; transition: 0.4s;}\r\n.effect-1{border: 0; padding: 7px 0; border-bottom: 1px solid #ccc;width:100%;}\r\n.style{width:100%;}\r\nlabel{font-size:15px;color:#4a4a4a;font-weight:normal;padding:5px 0;}\r\n.mrg-2{margin-bottom:10px;}\r\n.dropdown-menu > li > a {\r\n    display: block;\r\n    padding: 3px 20px;\r\n    clear: both;\r\n    font-weight: normal;\r\n    line-height: 25px;\r\n    color: #333333;\r\n    white-space: nowrap;\r\n}\r\n.addmodule {\r\n    padding: 20px 10px!important;\r\n    min-width: 357px;\r\n    right: 0px;\r\n    left: inherit;\r\n}\r\n.style{border:none;border-bottom: 1px solid #ccc;}\r\n.white {\r\n    background: #ffffff none repeat scroll 0 0;\r\n    \r\n    display: inline-block;\r\n    padding: 33px 25px;\r\n    width: 100%;\r\n}\r\n.btn-file{padding:0;}\r\n.white {\r\n    background: #ffffff none repeat scroll 0 0;\r\n    \r\n    display: inline-block;\r\n    padding: 33px 25px;\r\n    width: 100%;\r\n\tmargin-bottom:20px;\r\n}\r\n.center-bt{margin:20px auto 10px auto;float:none;}\r\n@media only screen and (max-width : 767px) {\r\n.mrg-2 {\r\n    margin-bottom: 37px;\r\n}\r\n\r\n.task ul li{    padding: 2px;}\t\r\n.addmodule{    min-width: 274px;}\r\n}\r\n.highlight{    background: rgb(247, 247, 247);\r\n    box-shadow: -4px 4px 35px #eaeaea;\r\n    border: 2px solid #f1ab7d;}\r\n\r\n\r\n    ul.breadcrumb {\r\n        padding: 10px 0;\r\n        list-style: none;\r\n    \r\n        text-align: left;\r\n        color: #d68956;\r\n    }\r\n    ul.breadcrumb li {\r\n        display: inline;\r\n        font-size: 15px;\r\n    }\r\n    ul.breadcrumb li+li:before {\r\n        padding: 8px;\r\n        color: black;\r\n        content: \"/\\A0\";\r\n    }\r\n    ul.breadcrumb li a {\r\n        color: #bbbbbb;\r\n        text-decoration: none;\r\n    }\r\n    ul.breadcrumb li a:hover {\r\n        color: #d68956;\r\n        text-decoration: none;\r\n    \r\n    }\r\n    .breadcrumb{    background-color: #f6f7fa;}    \r\n    mat-chip {\r\n        max-width: 150px;\r\n      }\r\n      .example-button-row {\r\n        display: -ms-flexbox;\r\n        display: flex;\r\n        -ms-flex-align: center;\r\n            align-items: center;\r\n        -ms-flex-pack: distribute;\r\n            justify-content: space-around;\r\n      }\r\n.bt{border-radius:30px;padding:3px 13px;border:1px solid #f37600;background:none;    font-size: 12px;\r\n    margin-top: 9px;}      \r\n    .modal-content{border-radius:0;box-shadow:none;}\r\n    .modal-header {\r\n        padding: 7px 15px;\r\n        border-bottom: 1px solid #e5e5e5;\r\n        background: #f37600;\r\n    }\r\n    .modal-title {\r\n        margin: 0;\r\n        line-height: 26px;\r\n        font-size: 15px;\r\n        color: #fff;\r\n    }\r\n    .label2{\r\n        display: block;\r\n    }\r\n    .mrgn-0{\r\n        margin-bottom: 0;\r\n    }\r\n    .pad-top{\r\n        padding-top: 12px\r\n    }\r\n    .tsk-lbl {\r\n        \r\n            color: #828282;\r\n            font-size: 11px;\r\n            padding-top: 4px;\r\n            float: left;\r\n            white-space: pre;\r\n        \r\n        }", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-new-task-management/company-new-task-management.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n    <div class=\"container-fluid display-table\">\r\n        <div class=\"row display-table-row\">\r\n      \r\n            <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n                 <!-- sidebar-->\r\n               \r\n                 <company-sidebar></company-sidebar> \r\n                 <!-- end sidebar-->\r\n            </div>\r\n            \r\n            <div class=\"col-md-12 col-xs-12\">\r\n                <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n                <!-- topbar-->\r\n                <company-topbar></company-topbar> \r\n                \r\n                    <!-- end topbar-->\r\n                \r\n                \r\n                <div class=\"user-dashboard\">\r\n                    <h2>Request Management</h2>\r\n                    <ul class=\"breadcrumb\">\r\n                      \r\n                      <li>New Task Request View</li>\r\n                    </ul>\r\n                   \r\n                    <div class=\"row\" *ngIf=\"!existStatus\">\r\n                        \r\n              <div class=\"col-md-5 col-sm-12 col-xs-12 gutter \">\r\n               <div class=\"white\">\r\n                 <div class=\"form-group\">\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Project Name</label></div>\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\">{{projectDetails?.project_name}}</label></div>\r\n                 </div>\r\n                 \r\n                 <div class=\"form-group\">\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Project Code</label></div>\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\">{{projectDetails?.project_code}}</label></div>\r\n                 </div>\r\n                 \r\n                 <div class=\"form-group\">\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Project Start Date</label></div>\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\">{{projectDetails?.planned_start_date}}</label></div>\r\n                 </div>\r\n                 \r\n                 <div class=\"form-group\">\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Team Members</label></div>\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2 mrgn-0\" *ngFor=\"let item of projectDetails?.tbl_project_member_assocs\">\r\n                  {{item.tbl_user_profile.f_name}} {{item.tbl_user_profile.l_name}} </label></div>\r\n                 </div>\r\n                 \r\n                 <div class=\"form-group\">\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Reason</label></div>\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\">{{taskRequest.reason}}</label></div>\r\n                 </div>\r\n<!--                  \r\n                 <div class=\"form-group\">\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Time Taken In Hours For Estimation</label></div>\r\n                   <div class=\"col-md-4 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\"><input class=\"style\" type=\"text\" placeholder=\"44:00 Hr\"></label></div>\r\n                 </div>\r\n                 <div class=\"clearfix\"></div> -->\r\n                 <!-- <div class=\"form-group\">\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Requirment Summery</label></div>\r\n                   <div class=\"col-md-4 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\"></label><textarea class=\"style\" type=\"text\" placeholder=\"\"></textarea></div>\r\n                 </div> -->\r\n                 \r\n                 <!-- <div class=\"form-group\">\r\n                   <div class=\"col-md-6\"><label for=\"\">Upload </label></div>\r\n                   <div class=\"col-md-5\">\r\n                     <span class=\"btn btn-file\">\r\n                       <input type=\"file\">\r\n                     </span>\r\n                   </div>\r\n                 </div> -->\r\n                 \r\n                 <!-- <div class=\"clearfix\"></div>\r\n                 <div class=\"col-md-12 text-center\">\r\n                 <button type=\"button\" class=\"btn round-button center-bt\">Submit</button>\r\n                 </div> -->\r\n                 \r\n               </div>\r\n              </div>\r\n                         <div class=\"col-md-7 col-sm-12 col-xs-12 gutter\">\r\n \r\n                             <div class=\"white\">\r\n                 <div class=\"col-md-12 mrg-2\">\r\n                   <div class=\"col-md-4\">\r\n                     <label>\r\n                       Total Hours\r\n                     </label>\r\n                   </div>\r\n                   <div class=\"col-md-4 col-xs-5\">\r\n                     <!-- <input class=\"effect-1 style\" type=\"text\" placeholder=\"44:00 Hr\"> -->\r\n                     <label>{{totalHours}}Hrs</label>\r\n                   </div>\r\n\r\n                 </div>\r\n                    <ng-container *ngFor=\"let i of projectDetails?.tbl_project_modules\">\r\n                        <div class=\"col-md-12 col-xs-12 pull-right\">\r\n                            <div class=\"task\">\r\n                              <div class=\"col-md-8 col-xs-7\">\r\n                                <h5>{{i.module_name}}</h5>\r\n                              </div>\r\n                              <div class=\"col-md-4 col-xs-5\">\r\n                                <ul class=\"taskedit\">\r\n                                  <li>{{getHours(i.tbl_project_tasks)}}Hrs</li>\r\n                                  <!-- <li class=\"pull-right\"><a href=\"\"><i class=\"fa fa-close\" aria-hidden=\"true\"></i></a></li>\r\n                                  <li class=\"pull-right\"><a href=\"\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></a></li> -->\r\n                                  \r\n                                </ul>\r\n                              </div>\r\n                            </div>\r\n                          </div><!---task end-->\r\n                          \r\n                          <ng-container  *ngFor=\"let x of i.tbl_project_tasks\">\r\n                              <div class=\"col-md-11 col-xs-12 pull-right\">\r\n                                  <div class=\"task hash\">\r\n                                    <div class=\"col-md-3 col-xs-7\">\r\n                                      <h5>{{x.task_name}}</h5>\r\n                                    </div>\r\n                                    <div class=\"col-md-9 col-xs-5\">\r\n                                        <ul class=\"\">\r\n                                            <li><label for=\"\" class=\"tsk-lbl\">Assigned Person: </label><h5 class=\"tsk-dt\">{{x.tbl_user_profile?.f_name}} {{x.tbl_user_profile?.l_name}}</h5></li>\r\n                                            <li><label for=\"\" class=\"tsk-lbl\">Hours: </label><h5 class=\"tsk-dt\">{{x.planned_hour + x.buffer_hour}} hrs</h5></li>\r\n                                            <li><label for=\"\" class=\"tsk-lbl\">Start Date: </label><h5 class=\"tsk-dt\">{{x.planned_start_date_time | date:'EEE, d MMM,y'}}</h5></li>\r\n                                            <li><label for=\"\" class=\"tsk-lbl\">End Date: </label><h5 class=\"tsk-dt\">{{x.planned_end_date_time | date:'EEE, d MMM,y'}}</h5></li>\r\n                                           \r\n                                            \r\n                                          </ul>\r\n                                      <!-- <ul class=\"pull-right\">\r\n                                        <li>{{x.tbl_user_profile?.f_name}} {{x.tbl_user_profile?.l_name}}</li>\r\n                                        <li>{{x.planned_hour + x.buffer_hour}}Hrs</li>\r\n                                        <li>start time: {{x.planned_start_date_time | date:'EEE, d MMM,y'}}</li>\r\n                                        <li>end time: {{x.planned_end_date_time | date:'EEE, d MMM,y'}}</li>\r\n                                      \r\n                                      </ul> -->\r\n                                    </div>\r\n                                    <div class=\"clearfix\"></div>\r\n                                    \r\n                                  </div>\r\n                                </div><!---task end-->\r\n                          </ng-container>\r\n                          <!-- {{taskRequest.request_status}} -->\r\n                          <div *ngIf=\"taskRequest?.project_module_id == i.id\">\r\n                          <ng-container *ngIf=\" taskRequest.request_status == 'Pending' || taskRequest.request_status == 'Approval'\">\r\n                              <div class=\"col-md-11 col-xs-12 pull-right\">\r\n                                  <div class=\"task highlight\">\r\n                                    <div class=\"col-md-3 col-xs-7\">\r\n                                      <h5>{{taskRequest?.task_name}}</h5>\r\n                                    </div>\r\n                                    <!-- <div class=\"col-md-9 col-xs-5\">\r\n                                        <ul>\r\n                                            <li>{{taskRequest?.tbl_user_profile.f_name}} {{taskRequest?.tbl_user_profile.l_name}}</li>\r\n                                            <li>{{taskRequest?.planned_hours+taskRequest.buffer_hours}}Hrs</li>\r\n                                        </ul>\r\n                                        <div class=\"pull-right\">\r\n                                          <button class=\"bt\"  (click)=\"setEdit(taskRequest.id)\" data-toggle=\"modal\" data-target=\"#editModal\">Edit</button>\r\n                                          <button class=\"bt\"  (click)=\"approvePop()\">Approve</button>\r\n                                          <button class=\"bt\" (click)=\"rejectPop()\">Reject</button>\r\n                                          <button class=\"bt\" (click)=\"sendApprovalPop()\" *ngIf=\"role == 3\">Send to admin</button>\r\n                                        </div>  \r\n                                      </div> -->\r\n                                      <div class=\"col-md-9 col-xs-12\">\r\n                                          <ul class=\"\">\r\n                                            <li><label for=\"\" class=\"tsk-lbl\">Assigned Person: </label><h5 class=\"tsk-dt\">{{taskRequest?.tbl_user_profile.f_name}} {{taskRequest?.tbl_user_profile.l_name}}</h5></li>\r\n                                            <li><label for=\"\" class=\"tsk-lbl\">Hours: </label><h5 class=\"tsk-dt\">{{taskRequest?.planned_hours+taskRequest.buffer_hours}}Hrs</h5></li>\r\n                                            <!-- <li><label for=\"\" class=\"tsk-lbl\">Start Date: </label><h5 class=\"tsk-dt\">{{task1?.planned_start_date_time | date:'medium'}}</h5></li>\r\n                                            <li><label for=\"\" class=\"tsk-lbl\">End Date: </label><h5 class=\"tsk-dt\">{{task1?.planned_end_date_time | date:'medium'}}</h5></li> -->\r\n                                          </ul>\r\n                                          <br>\r\n                                          <div class=\"pull-right\">\r\n                                              <button class=\"bt\" (click)=\"setEdit(taskRequest.id)\" data-toggle=\"modal\" data-target=\"#editModal\">Edit</button>\r\n                                              <button class=\"bt\" (click)=\"approvePop()\">Approve</button>\r\n                                              <button class=\"bt\" (click)=\"rejectPop()\">Reject</button>\r\n                                              <button class=\"bt\" (click)=\"sendApprovalPop()\" *ngIf=\"role == 3\">Send to admin</button>\r\n                                            \r\n                                          </div>  \r\n                                        </div>\r\n                                    <div class=\"clearfix\"></div>\r\n                                    \r\n                                  </div>\r\n                                </div>\r\n                               <div class=\"clearfix\"></div>\r\n                          </ng-container>\r\n                        </div>\r\n                    </ng-container>\r\n                    \r\n                 \r\n                 \r\n                 <!-- <div class=\"col-md-12\">\r\n                 <button type=\"button\" class=\"btn round-button pull-right\">Add Task</button>\r\n                 </div> -->\r\n                                 \r\n                             </div>\r\n                         </div>\r\n\r\n\r\n <!-- --------------------------------------------- add task modal ----------------------------------------------------------------- -->\r\n <div id=\"editModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn (click)=\"closeModal()\">&times;</button>\r\n          <h4 class=\"modal-title\">Additional task request </h4>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form role=\"form\" #f=\"ngForm\" >\r\n\r\n            <div class=\"col-md-12\">\r\n              <div class=\"example-container\">\r\n                  <!-- <div class=\"col-md-4 col-xs-6\"><label class=\"pad-top\">Reason:</label></div>\r\n                  <div class=\"col-md-7 col-xs-6\">\r\n                   <label for=\"\">{{taskRequest?.description}}</label>\r\n                  </div>\r\n                  <div class=\"clearfix\"></div> -->\r\n                  \r\n                <div class=\"col-md-4 col-xs-6\"><label class=\"pad-top\">Task Name * :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <mat-form-field>\r\n                    <input matInput name=\"task_name\" [(ngModel)]=\"newTasks.task_name\" autofocus>\r\n                  </mat-form-field>\r\n                </div>\r\n                <br>\r\n                <div class=\"example-container\">\r\n                  <div class=\"col-md-4 col-xs-6\"><label class=\"pad-top\">Assigned person * :</label></div>\r\n                  <div class=\"col-md-7 col-xs-6\" >\r\n                    <label for=\"\">{{taskRequest.tbl_user_profile.f_name}} {{taskRequest.tbl_user_profile.l_name}}</label>\r\n                  </div>\r\n\r\n                  <div class=\"clearfix\"></div>\r\n                  <div class=\"example-container\">\r\n                    <div class=\"col-md-4 col-xs-6\"><label class=\"pad-top\">Complexity :</label></div>\r\n                    <div class=\"col-md-7 col-xs-6\">\r\n                      <mat-form-field class=\"inputfileds\">\r\n\r\n                        <mat-select placeholder=\"Complexity\" name='complexity' #group=\"ngModel\" [(ngModel)]=\"newTasks.complexity\">\r\n                          <mat-option [value]=\"complexity.id\" *ngFor=\"let complexity of complexitys;\">{{complexity.percentage}}</mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"clearfix\"></div>\r\n                    <br>\r\n                    <div class=\"col-md-4 col-xs-6\"><label class=\"pad-top\">Planned Hours *:</label></div>\r\n                    <div class=\"col-md-7 col-xs-6\">\r\n                      <mat-form-field class=\"wdth\">\r\n                        <input type=\"number\" matInput name=\"planned_hour\" min=\"0\" name='planned_hour' [(ngModel)]=\"newTasks.planned_hour\" required>\r\n                      </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-4 col-xs-6\"><label class=\"pad-top\">Buffer Hours :</label></div>\r\n                    <div class=\"col-md-7 col-xs-6\">\r\n\r\n                      <mat-form-field class=\"wdth\">\r\n                        <input type=\"number\" matInput name=\"buffer_time\" min=\"0\" name='buffer_hour' [(ngModel)]=\"newTasks.buffer_hour\" required>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"clearfix\"></div>\r\n                    <br>\r\n                    <!-- <div class=\"col-md-4 col-xs-6\"><label class=\"pad-top\">Start Datetime *:</label></div> -->\r\n                    <!-- <div class=\"col-md-3 col-xs-6\">\r\n                  <mat-form-field>\r\n                    <input matInput [matDatepickerFilter]=\"myFilter\" [matDatepicker]=\"picker\" placeholder=\"Choose a date\" [formControl]=\"date\"\r\n                      name='start_date' [(ngModel)]=\"newTasks.start_date\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker1></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>  -->\r\n\r\n                    <!-- <div class=\"col-md-3 col-xs-6\">\r\n                      <mat-form-field>\r\n                        <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\" name='start_date' [(ngModel)]=\"newTasks.start_date\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker></mat-datepicker>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"clearfix\"></div>\r\n\r\n                    <div class=\"clearfix\"></div>\r\n                    <ngb-timepicker [meridian]=\"meridian\" name=\"start_time\" [(ngModel)]=\"newTasks.start_time\"></ngb-timepicker>\r\n                    <hr>\r\n                    <div class=\"clearfix\"></div>\r\n                    <div class=\"col-md-4 col-xs-6\"><label class=\"pad-top\">End Datetime *:</label></div>\r\n                    <div class=\"col-md-3 col-xs-6\">\r\n                      <mat-form-field>\r\n                        <input matInput [matDatepicker]=\"picker1\" placeholder=\"Choose a date\" name='end_date' [(ngModel)]=\"newTasks.end_date\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker1></mat-datepicker>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <div class=\"clearfix\"></div> -->\r\n\r\n                    <!-- <div class=\"clearfix\"></div>\r\n                    <ngb-timepicker [meridian]=\"meridian\" name=\"end_time\" [(ngModel)]=\"newTasks.end_time\"></ngb-timepicker>\r\n                    <hr>\r\n                    <div class=\"clearfix\"></div> -->\r\n\r\n\r\n                    <div class=\"example-container\">\r\n                      <!-- <div class=\"col-md-4 col-xs-6\"><label class=\"pad-top\">Task type :</label></div>\r\n                      <div class=\"col-md-7 col-xs-6\">\r\n                        <mat-form-field class=\"inputfileds\">\r\n                          <mat-select [(value)]=\"selected1\" name='task_type' #group=\"ngModel\" [(ngModel)]=\"newTasks.task_type\">\r\n                            <!-- <mat-option>None</mat-option> -->\r\n                            <!-- <mat-option value=\"billable\">Billable</mat-option>\r\n                            <mat-option value=\"non billable\">Non Billable</mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </div> --> \r\n                      <div class=\"clearfix\"></div>\r\n                      <div class=\"example-container\">\r\n                        <div class=\"col-md-4 col-xs-6\"><label class=\"pad-top\">Priority :</label></div>\r\n                        <div class=\"col-md-7 col-xs-6\">\r\n                          <mat-form-field class=\"inputfileds\">\r\n                            <mat-select [(value)]=\"selected2\" name='priority' #group=\"ngModel\" [(ngModel)]=\"newTasks.priority\">\r\n                              <!-- <mat-option>None</mat-option> -->\r\n                              <mat-option value=\"high\">High</mat-option>\r\n                              <mat-option value=\"medium\">Medium</mat-option>\r\n                              <mat-option value=\"low\">Low</mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n                        </div>\r\n                        <div class=\"clearfix\"></div>\r\n                        \r\n                        <!-- <div class=\"col-md-4 col-xs-5\"><label class=\"pad-top\">Checklist :</label></div> -->\r\n                          <!-- <div class=\"col-md-7 col-xs-5\">\r\n                            <div *ngFor=\"let item of newTasks.newChecklist; let i = index; trackBy:trackByIndex\">\r\n\r\n                              <mat-form-field class=\"example-form-field\">\r\n                                <input matInput type=\"text\" name=\"checklist{{i}}\" [(ngModel)]=\"newTasks.newChecklist[i].name\" />\r\n                                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\r\n                                <mat-icon>close</mat-icon>\r\n                              </button>\r\n                              </mat-form-field>\r\n                              <input type=\"button\" value=\"X\" (click)=\"closeChecklist(i)\" class=\"close-bt\">\r\n                            </div>\r\n                            <div class=\"col-md-3 col-xs-2\"><input type=\"button\" value=\"Add More\" (click)=\"addMore()\" class=\"round-button padd-bt\"></div>\r\n                            <div class=\"clearfix\"></div>\r\n\r\n                          </div> -->\r\n                        <div class=\"clearfix\"></div>\r\n                        <div class=\"example-container\">\r\n                          <div class=\"col-md-4 col-xs-6\"><label class=\"pad-top\">Description :</label></div>\r\n                          <div class=\"col-md-7 col-xs-6\">\r\n                            <mat-form-field>\r\n                              <textarea matInput placeholder=\"Textarea\" name='description' [(ngModel)]=\"newTasks.description\"></textarea>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <br>\r\n                          <!-- <div class=\"example-container\">\r\n                          <div class=\"col-md-4 col-xs-5\"><label class=\"pad-top\">Checklist :</label></div>\r\n                          <div class=\"col-md-5 col-xs-5\">\r\n                            <div *ngFor=\"let item of newTasks.newChecklist; let i = index; trackBy:trackByIndex\">\r\n\r\n                              <mat-form-field class=\"example-form-field\">\r\n                                <input matInput type=\"text\" name=\"checklist{{i}}\" required [(ngModel)]=\"newTasks.newChecklist[i].name\" />\r\n                                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\r\n                            <mat-icon>close</mat-icon>\r\n                          </button>\r\n                              </mat-form-field>\r\n                              <input type=\"button\" value=\"X\" (click)=\"closeChecklist(i)\" class=\"close-bt\">\r\n                            </div>\r\n                          </div> -->\r\n\r\n                          <!-- <div class=\"col-md-3 col-xs-2\"><input type=\"button\" value=\"Add More\" (click)=\"addMore()\" class=\"round-button padd-bt\"></div> -->\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"example-container\">\r\n                            <div class=\"col-md-3 col-xs-6\"><label class=\"pad-top\">Attachment :</label></div>\r\n                            <div class=\"col-md-7 col-xs-6\">\r\n\r\n                              <input (change)=\"displayDoc($event)\" name=\"file\" type=\"file\" [(ngModel)]=\"newTasks.file\" />\r\n                            </div>\r\n                            <div class=\"clearfix\"></div>\r\n                            <div class=\"center\">\r\n                              <button type=\"submit\" class=\"btn round-button dropdown-toggle mrg-tp\" (click)=\"submit()\" >Submit  </button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- --------------------------------------------- end add modal ----------------------------------------------------------------- -->\r\n                <!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n    \r\n    <div id=\"sureModal\" class=\"modal fade\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n    \r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n              <h4 class=\"modal-title\">Approve </h4>\r\n            </div>\r\n            <!-- <div class=\"modal-header\"> -->\r\n            <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n            <!-- </div> -->\r\n            <div class=\"modal-body delete-popup\">\r\n              <i class=\"fa fa-exclamation\"></i>\r\n    \r\n    \r\n              <h4 class=\"textalign\">Approve task?</h4>\r\n    \r\n            </div>\r\n    \r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" (click)=\"approve()\" class=\"btn round-button pull-right\" data-dismiss=\"modal\">Approve</button>\r\n            </div>\r\n          </div>\r\n    \r\n        </div>\r\n      </div>\r\n      <!-----------------------------------------------------------------delete modal-------------------------------------->  \r\n     <!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n    \r\n    <div id=\"rejectModal\" class=\"modal fade\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n    \r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n              <h4 class=\"modal-title\">Reject </h4>\r\n            </div>\r\n            <!-- <div class=\"modal-header\"> -->\r\n            <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n            <!-- </div> -->\r\n            <div class=\"modal-body delete-popup\">\r\n              <i class=\"fa fa-exclamation\"></i>\r\n    \r\n    \r\n              <h4 class=\"textalign\">Reject task?</h4>\r\n    \r\n            </div>\r\n    \r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" (click)=\"reject(taskRequest.id)\" class=\"btn round-button pull-right\" data-dismiss=\"modal\">Reject</button>\r\n            </div>\r\n          </div>\r\n    \r\n        </div>\r\n      </div>\r\n      <!-----------------------------------------------------------------delete modal-------------------------------------->          \r\n <!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n    \r\n <div id=\"approvalModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n      <!-- Modal content-->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n          <h4 class=\"modal-title\">Sent to Admin </h4>\r\n        </div>\r\n        <!-- <div class=\"modal-header\"> -->\r\n        <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n        <!-- </div> -->\r\n        <div class=\"modal-body delete-popup\">\r\n          <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n          <h4 class=\"textalign\">Send for Approval?</h4>\r\n\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" (click)=\"sendApproval(taskRequest.id)\" class=\"btn round-button pull-right\" data-dismiss=\"modal\">Send</button>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <!-----------------------------------------------------------------delete modal-------------------------------------->          \r\n    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n                <!-- footer-->\r\n              \r\n       <!-- end footer-->\r\n        </div>\r\n         </div>\r\n        <!-- Modal -->\r\n     </body>"

/***/ }),

/***/ "../../../../../src/app/components/company-new-task-management/company-new-task-management.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyNewTaskManagementComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CompanyNewTaskManagementComponent = (function () {
    function CompanyNewTaskManagementComponent(companyService, routes, snackBar, route) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.route = route;
        this.showSpinner = false;
        this.existStatus = true;
        this.newTasks = {
            task_name: '',
            assigned_person: '',
            complexity: 0,
            planned_hour: 0,
            buffer_hour: 0,
            start_date: '',
            start_time: {},
            end_date: '',
            end_time: {},
            task_type: '',
            priority: '',
            assigned: '',
            assigned1: '',
            module_id: '',
            docFile: [],
            docSrc: '',
            file: '',
            team: '',
            time: 0,
            description: '',
            timerequired: '',
            newChecklist: [{ name: '' }],
            status: '',
            tbl_complexity_percentage: { percentage: '' },
            // team_id:0,
            req_id: 0,
            p_start: '',
            p_end: '',
            p_id: 0
        };
        this.data = {};
    }
    CompanyNewTaskManagementComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.params.subscribe(function (params) {
            _this.paramsId = params['id'];
            // //console.log(this.surveyId + "surveyid");
        });
        // //console.log("hd")
        this.checkRole();
        this.companyService.getComplexity().subscribe(function (complexity) {
            _this.complexitys = complexity;
            // //console.log(this.complexitys)
        });
        this.getNewTaskRequests();
    };
    CompanyNewTaskManagementComponent.prototype.checkRole = function () {
        var _this = this;
        this.companyService.checkRole().subscribe(function (role) {
            // //console.log(role);
            _this.role = role;
        });
    };
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, Manu Prasad 
    // Desc          : Get Teams from database
    CompanyNewTaskManagementComponent.prototype.getNewTaskRequests = function () {
        var _this = this;
        this.showSpinner = true;
        this.route.params.subscribe(function (params) {
            _this.id = params['id'];
            // //console.log(this.surveyId + "surveyid");
        });
        this.companyService.getNewTaskRequest(this.id).subscribe(function (requests) {
            _this.requestdetails = requests;
            console.log(requests);
            _this.showSpinner = false;
            if (requests != null) {
                if (requests.length <= 0) {
                    _this.existStatus = true;
                }
                else {
                    _this.newTasks.req_id = requests.id;
                    _this.taskRequest = requests;
                    _this.projectId = requests.tbl_project_module.project_id;
                    // //console.log(this.projectId)
                    _this.companyService.getProjectDetails(_this.projectId).subscribe(function (projectDetails) {
                        // //console.log(projectDetails)
                        _this.projectDetails = projectDetails.data;
                        _this.totalHours = projectDetails.hours;
                        _this.existStatus = false;
                        _this.getLastTaskDetails();
                    });
                }
            }
            if (requests.status == 0) {
                var snackBarRef = _this.snackBar.open(requests.message, '', {
                    duration: 2000
                });
            }
            //  else {
            // //console.log(requests);
            // //console.log("theme is not empty");
            //  //console.log(this.existStatus);
            // }  
        });
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, Manu Prasad 
    // Desc          : Get Teams from database
    CompanyNewTaskManagementComponent.prototype.getHours = function (tasks) {
        var time = 0;
        tasks.forEach(function (element) {
            time = time + element.planned_hour + element.buffer_hour;
        });
        return time;
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, Manu Prasad 
    // Desc          : Get Teams from database
    CompanyNewTaskManagementComponent.prototype.setEdit = function (id) {
        this.newTasks.task_name = this.taskRequest.task_name;
        this.newTasks.complexity = this.taskRequest.complexity_id;
        this.newTasks.planned_hour = this.taskRequest.planned_hours;
        this.newTasks.buffer_hour = this.taskRequest.buffer_hours;
        this.newTasks.module_id = this.taskRequest.tbl_project_module.id;
        this.newTasks.description = this.taskRequest.description;
        this.newTasks.assigned_person = this.taskRequest.tbl_user_profile.id;
        // if(this.taskRequest.team_id != null || this.taskRequest.team_id != 'null'){
        //   this.newTasks.team_id = this.taskRequest.team_id;
        // }
        // let date = this.taskRequest.planned_start_date.split('T');
        // this.newTasks.start_date = date[0];
        // let time = date[1].split(':');
        // this.newTasks.start_time = {hour:parseInt(time[0]), minute: parseInt(time[1])};
        this.newTasks.start_time = { hour: 0, minute: 0 };
        // //console.log(this.newTasks.start_time)
        // this.newTasks.start_date = date[0];
        // date = this.taskRequest.planned_end_date.split('T');
        // this.newTasks.end_date = date[0];
        // time = date[1].split(':');
        // this.newTasks.end_time = {hour:parseInt(time[0]), minute: parseInt(time[1])};
        this.newTasks.end_time = { hour: 0, minute: 0 };
    };
    //  ---------------------------------end-----------------------------------------------
    CompanyNewTaskManagementComponent.prototype.closeChecklist = function (index) {
        if (this.newTasks.newChecklist.length > 1) {
            this.newTasks.newChecklist.splice(index, 1);
        }
        else {
            var snackBarRef = this.snackBar.open('* Atleast one item required!', '', {
                duration: 2000
            });
            return false;
        }
    };
    CompanyNewTaskManagementComponent.prototype.addMore = function () {
        this.newTasks.newChecklist.push({ name: '' });
    };
    CompanyNewTaskManagementComponent.prototype.displayDoc = function (fileInput) {
        var _this = this;
        var ext = fileInput.target.files[0].name.split('.').pop().toLowerCase();
        this.newTasks.docFile = fileInput.target.files[0];
        if (fileInput.target.files && fileInput.target.files[0]) {
            var reader = new FileReader();
            reader.onload = (function (e) {
                _this.newTasks.docSrc = e.target['result'];
            });
            reader.readAsDataURL(fileInput.target.files[0]);
        }
    };
    CompanyNewTaskManagementComponent.prototype.submit = function () {
        var _this = this;
        this.newTasks.p_id = this.paramsId;
        this.companyService.editTask(this.newTasks).subscribe(function (res8) {
            if (res8.success) {
                var snackBarRef = _this.snackBar.open(res8.msg, '', {
                    duration: 2000
                });
                res8.data.forEach(function (element) {
                    _this.taskRequest.complexity_id = element.complexity_id;
                    _this.taskRequest.planned_hours = element.planned_hours;
                    _this.taskRequest.buffer_hours = element.buffer_hours;
                    _this.taskRequest.description = element.description;
                    _this.taskRequest.priority = element.priority;
                    _this.taskRequest.task_name = element.task_name;
                    _this.getNewTaskRequests();
                });
                $('#editModal').modal('hide');
            }
            else {
                var snackBarRef = _this.snackBar.open(res8.msg, '', {
                    duration: 2000
                });
            }
        });
        //console.log(this.newTasks);
    };
    CompanyNewTaskManagementComponent.prototype.closeModal = function () {
        this.newTasks.task_type = '';
        this.newTasks.priority = '';
        this.newTasks.newChecklist = [{ name: '' }];
    };
    CompanyNewTaskManagementComponent.prototype.approve = function () {
        var _this = this;
        this.newTasks.task_name = this.taskRequest.task_name;
        this.newTasks.complexity = this.taskRequest.complexity_id;
        this.newTasks.planned_hour = this.taskRequest.planned_hours;
        this.newTasks.buffer_hour = this.taskRequest.buffer_hours;
        this.newTasks.module_id = this.taskRequest.tbl_project_module.id;
        this.newTasks.description = this.taskRequest.description;
        this.newTasks.assigned_person = this.taskRequest.tbl_user_profile.id;
        // //console.log(this.newTasks);
        // var zero = 0;
        // var end_date_time = this.newTasks.end_date.setHours(end_time.hour,end_time.minute,zero);
        // var start_date_time = this.newTasks.start_date.setHours(start_time.hour,start_time.minute,zero);
        this.taskRequest.assigned_person = {};
        this.taskRequest.assigned_person.id = this.taskRequest.assigned_to_id;
        this.taskRequest.planned_hour = this.taskRequest.planned_hours;
        this.taskRequest.buffer_hour = this.taskRequest.buffer_hours;
        this.taskRequest.tbl_user_profile.start_date = this.lastDate;
        var t = this.lastTime.split(':');
        this.taskRequest.tbl_user_profile.start_time = { hour: t[0], minute: t[1], second: t[2] };
        // let tbl_estimation_tasks = {tbl_estimation_tasks:[this.taskRequest]}
        // let module =[] 
        this.task = { modules: [{ tbl_estimation_tasks: [this.taskRequest] }], teamMembers: [this.taskRequest.tbl_user_profile] };
        // let tbl_estimation_tasks = {tbl_estimation_tasks:[]}
        // this.task.modules[0].tbl_estimation_tasks[0]= this.taskRequest;
        // this.task.modules[0].tbl_estimation_tasks[0].assigned_person = {id:this.taskRequest.assigned_to_id};
        // this.task.teamMembers[0].start_date = [this.lastDate];
        // let t = this.lastTime.split(':')
        // this.task.teamMembers[0].start_time = {hour: t[0], minute: t[1], second: t[2]};
        // //console.log(this.task)
        this.companyService.getUserleavedataplanning(this.task).subscribe(function (data) {
            // //console.log(data)
            var Indexx = 0;
            data.data.forEach(function (element) {
                element.tbl_estimation_tasks.forEach(function (elm_tasks, key1) {
                    // let mdinx = this.tmp[Indexx].modIdnx;
                    // let tskinx = this.tmp[Indexx].keyIdnx;
                    _this.newTasks.p_start = elm_tasks.start_date_time_new;
                    _this.newTasks.p_end = elm_tasks.end_date_time;
                });
            });
            // //console.log(this.task)
            _this.companyService.approveTask(_this.newTasks).subscribe(function (res) {
                // //console.log(res);
                if (res.success == false) {
                    var snackBarRef = _this.snackBar.open(res.msg, '', {
                        duration: 2000
                    });
                }
                if (res.success == true) {
                    var snackBarRef = _this.snackBar.open(res.msg, '', {
                        duration: 2000
                    });
                    _this.getNewTaskRequests();
                    _this.routes.navigate(['/company-task-requests']);
                }
                // this.role = res;
            });
        });
    };
    CompanyNewTaskManagementComponent.prototype.reject = function (taskReqId) {
        var _this = this;
        // //console.log("gg")
        this.companyService.rejectTask(taskReqId).subscribe(function (res) {
            if (res.success == false) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 2000
                });
            }
            if (res.success == true) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 2000
                });
                _this.getNewTaskRequests();
                _this.routes.navigate(['/company-task-requests']);
            }
        });
    };
    CompanyNewTaskManagementComponent.prototype.sendApproval = function (taskReqId) {
        var _this = this;
        // ////console.log("sdsd")
        this.companyService.sendApproval(taskReqId).subscribe(function (res) {
            //console.log(res);
            if (res.success == false) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 2000
                });
            }
            if (res.success == true) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 2000
                });
                _this.getNewTaskRequests();
            }
        });
    };
    CompanyNewTaskManagementComponent.prototype.getLastTaskDetails = function () {
        var _this = this;
        var assignId = this.taskRequest.tbl_user_profile.id;
        // //console.log(this.taskRequest);
        // //console.log(this.projectId);
        this.companyService.getLastTaskDetails(this.projectId, assignId).subscribe(function (res) {
            _this.lastTask = res;
            _this.lastDate = new Date(res[0].tbl_project_tasks[0].planned_end_date_time);
            var time = res[0].tbl_project_tasks[0].planned_end_date_time.split("T");
            var time2 = time[1].split('.');
            _this.lastTime = time2[0];
            // //console.log(time2[0]);
        });
    };
    CompanyNewTaskManagementComponent.prototype.approvePop = function () {
        $('#sureModal').modal('show');
    };
    CompanyNewTaskManagementComponent.prototype.rejectPop = function () {
        $('#rejectModal').modal('show');
    };
    CompanyNewTaskManagementComponent.prototype.sendApprovalPop = function () {
        $('#approvalModal').modal('show');
    };
    CompanyNewTaskManagementComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-new-task-management',
            template: __webpack_require__("../../../../../src/app/components/company-new-task-management/company-new-task-management.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-new-task-management/company-new-task-management.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"],
            __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["ActivatedRoute"]])
    ], CompanyNewTaskManagementComponent);
    return CompanyNewTaskManagementComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-planlist/company-planlist.component.css":
/***/ (function(module, exports, __webpack_require__) {

var escape = __webpack_require__("../../../../css-loader/lib/url/escape.js");
exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "body{overflow-x:inherit;background:#fff ;}\r\n.navbar-nav > li{float:left;}\r\n.navbar-fixed-top{    background: rgba(255, 119, 0, 0.72);}\r\n.banner{ background: url(" + escape(__webpack_require__("../../../../../src/assets/images/banner.jpg")) + ") no-repeat center center fixed;\r\n  background-size: cover;\r\n      width: 100%;\r\n    min-height: 580px;\r\n\tposition:relative;\r\n  }\r\n .navbar-brand {\r\n    float: left;\r\n    padding: 10.5px 15px;\r\n    font-size: 18px;\r\n    line-height: 20px;\r\n    height: 78px;\r\n}\r\n/* ./assets/images/banner.jpg */\r\n.navbar-toggle {\r\n    position: relative;\r\n    float: right;\r\n    margin-right: 15px;\r\n    padding: 9px 10px;\r\n    margin-top: 10.5px;\r\n    margin-bottom: 10.5px;\r\n    background-color: #d06000;\r\n    /* background-image: none; */\r\n    border: 1px solid transparent;\r\n    border-radius: 13px;\r\n}\r\n.about p{    color: #a5a0a0;    line-height: 24px;}\r\n.paddtop{padding-top:4%;}\r\n.navbar-left{      padding-top: 4%;}\r\n.nav > li{margin-left: 9px;}\r\n.btn-login{background:none;border-radius:40px;border:3px solid #fff;color:#fff;font-weight:bold;margin-left:4px;}\r\n.btn-login:hover{color:#fff;opacity:0.6;}\r\n.nav > li > a:hover{\r\n    text-decoration: none;\r\n    background-color: #fdaf00;\r\n    color: #fff;\r\n    border-radius: 40px;\r\n\tpadding-top:10px;\r\n\tpadding-bottom:10px;\r\n}\r\n.nav > li > a:focus{text-decoration: none;\r\n    background-color: #fdaf00;\r\n    color: #fff;\r\n    border-radius: 40px;\r\n\tpadding-top:10px;\r\n\tpadding-bottom:10px;\r\n}\r\n.navbar-nav > li > a {\r\n    padding-top:10px;\r\n    padding-bottom: 10px;\r\n}\r\n  .planz{ background: url(" + escape(__webpack_require__("../../../../../src/assets/images/bg.jpg")) + ") no-repeat center center fixed;\r\n  background-size: cover;\r\n      width: 100%;\r\n   min-height: 327px;\r\n\tposition:relative;\r\n  }\r\n  .carry {\r\n    position: absolute;\r\n    z-index: 100;\r\n    left: 0;\r\n    right: 0;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    width: 100%;\r\n    max-width: 873px;\r\n    top: 46%;\r\n}\r\na {\r\n    color: #ffffff;\r\n    text-decoration: none;\r\n}\r\n\r\n.device{max-width:806px;width:100%;background: url(" + escape(__webpack_require__("../../../../../src/assets/images/device.png")) + ") no-repeat;background-size:100%;min-height:467px;margin:0 auto;    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n       bottom: -15%;}\r\n.left-c{text-align:right;color:#fff;    padding-top: 23%;padding-right: 4%;}\r\n.left-r{text-align:left;color:#fff;    padding-top: 23%;padding-left: 6%;}\r\n.about{padding:11em 0 3em 0;}\r\n.shade {\r\n   box-shadow: 0px -2px 77px 0px rgba(0, 0, 0, 0.09);\r\n\t    padding: 20px;\r\n}\r\n.features h3{    padding-top: 17px;\r\n    font-size: 18px;\r\n    color: #6f300c;\r\n    margin-top: 0;\r\n    font-weight: bold;}\r\n.features p{    \r\n    font-size: 12px;\r\n    color: #989898;\r\n    line-height: 19px;}\r\n.plans {\r\n  width: 836px;\r\n  margin: 50px auto;\r\n  overflow: hidden;\r\n}\r\n\r\n  .plan {\r\n    float: left;\r\n    max-width: 276px;\r\n    margin: 20px 2px;\r\n    padding: 15px 0px;\r\n    text-align: center;\r\n    background: white;\r\n    background-clip: padding-box;\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    box-shadow: 14px 26px 67px #0000002e;\r\n    -webkit-box-shadow: 14px 26px 67px #0000002e;\r\n    -moz-box-shadow: 14px 26px 67px #0000002e;\r\n    margin-right: -8px;\r\n}\r\n.banner h3{font-size: 20px;\r\n    font-weight: normal;\r\n    line-height: 27px;}\r\n.banner p{    color: #fdd3a7;}\r\n.hilight {\r\n  max-width: 309px;\r\n  padding: 28px 0px;\r\n  position: relative;\r\n  z-index: 100;\r\n  left: 0%;\r\n  top: -33px;\r\n}\r\n\r\n.features{padding:2em 0 6em 0;}\r\n.plan-title {\r\n      margin-bottom: 12px;\r\n    font-size: 22px;\r\n    color: #424242;\r\n}\r\n.mr-lft{    margin-left: -8%;}\r\n.plan-price {\r\n  margin-bottom: 20px;\r\n  line-height: 1;\r\n  font-size: 40px;\r\n  font-weight: bold;\r\n    color: #f7752a;\r\n}\r\n\r\n.plan-unit {\r\n  display: block;\r\n  margin-top: 5px;\r\n  font-size: 13px;\r\n  font-weight: normal;\r\n  color: #aaa;\r\n}\r\n\r\n.plan-features {\r\n  width: 100%;\r\n  margin:0 auto;\r\n  padding: 0;\r\n \r\n  text-align: left;\r\n}\r\n\r\n.plan-feature {\r\n    border-top: 1px solid #e5ded6;\r\n    text-align: center;\r\n        padding: 9px 0;\r\n\t    list-style-type: none;\r\n    \r\n}\r\n.plan-feature h4{text-align: center;\r\n    padding: 17px 0;\r\n    list-style-type: none;\r\n    font-size: 32px;\r\n    line-height: 39px;\r\n    font-weight: bold;\r\n    color: #9f9f9f;\r\n\t    padding: 0;\r\n    margin: 0;\r\n}\r\n.hilight h4{    color: #767676 !important;\r\n    font-size: 39px;\r\n    line-height: 47px;}\r\n.hilight .plan-price{font-size:48px;}\r\n\r\n.plan-feature + .plan-feature {\r\n  margin-top: 5px;\r\n}\r\n\r\n.plan-feature-unit {\r\n  margin-left: 2px;\r\n  font-size: 16px;\r\n}\r\n\r\n.plan-feature-name {\r\n  font-size: 13px;\r\n  font-weight: normal;\r\n  color: #aaa;\r\n}\r\n\r\n.plan-button {\r\n  position: relative;\r\n  display: block;\r\n  line-height: 40px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: white;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-shadow: 0 1px rgba(0, 0, 0, 0.1);\r\n  background: #fd935c;\r\n  border-bottom: 2px solid #cf7e3b;\r\n  border-color: rgba(0, 0, 0, 0.15);\r\n  border-radius: 4px;\r\n}\r\n.hilight .plan-feature-name {\r\nfont-size: 15px;}\r\n.planz h2{color:#fff;text-align:center;    padding-top: 4%;}\r\nfooter{width:100%;padding:10px 0;background:#ccc;color:#fff;text-align:left;font-size:13px;    margin-top: 28em;}\r\n\r\n\r\n@media only screen and (max-width :1024px) {\r\n.device{    max-width: 672px;bottom: -20%;}\r\n\r\n}\r\n\r\n@media only screen and (max-width : 768px) {\r\n\t.left-r{display:none;}\r\n\t.banner p{text-align:center;}\r\n\t.device{    max-width: 617px;bottom: -41%;}\r\n\t.banner h3{text-align:center;}\r\n\t.nav > li > a{padding: 10px 6px;}\r\n\t.mr-lft {\r\n    margin-left: -14%;\r\n    }\r\n\t.hilight{left: -7%;}\r\n\t\r\n}\r\n@media only screen and (max-width : 767px) {\r\n.plan { max-width: 253px;}\t\r\n.mr-lft {\r\n    margin-left: -17%;\r\n}\r\n}\r\n\r\n@media only screen and (max-width : 480px) {\r\n\r\n.img-responsive{margin:0 auto;}\r\n.features h3{text-align:center;}\r\n.features p{text-align:center;}\r\n.banner{    min-height: 415px;}\r\n.device {\r\n    max-width: 344px;\r\n    bottom: -82%;\r\n\t    min-height: 427px;\r\n}\r\n.plan{     max-width: 152px;}\r\n.left-c{    padding-top: 31%;}\r\n.mr-lft {\r\n    margin-left: -26%;\r\n}\r\n.hilight {\r\n    left: -13%;\r\n}\r\n}\r\n@media only screen and (max-width : 360px) {\r\n\t\r\n\t.mr-lft {\r\n    margin-left: -30%;\r\n    }\r\n\t.hilight {\r\n    left: -15%;\r\n}\r\n\t\r\n}\r\n\r\n/* @charset \"UTF-8\"; */\r\n\r\n/*!\r\nAnimate.css - http://daneden.me/animate\r\nLicensed under the MIT license - http://opensource.org/licenses/MIT\r\n\r\nCopyright (c) 2015 Daniel Eden\r\n*/\r\n\r\n.animated {\r\n  animation-duration: 1s;\r\n  animation-fill-mode: both;\r\n}\r\n.animated-fast {\r\n  animation-duration: .5s;\r\n  animation-fill-mode: both;\r\n}\r\n\r\n.animated.infinite {\r\n  animation-iteration-count: infinite;\r\n}\r\n\r\n.animated.hinge {\r\n  animation-duration: 2s;\r\n}\r\n\r\n.animated.bounceIn,\r\n.animated.bounceOut {\r\n  animation-duration: .75s;\r\n}\r\n\r\n.animated.flipOutX,\r\n.animated.flipOutY {\r\n  animation-duration: .75s;\r\n}\r\n\r\n@keyframes bounce {\r\n  from, 20%, 53%, 80%, to {\r\n    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\r\n    transform: translate3d(0,0,0);\r\n  }\r\n\r\n  40%, 43% {\r\n    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);\r\n    transform: translate3d(0, -30px, 0);\r\n  }\r\n\r\n  70% {\r\n    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);\r\n    transform: translate3d(0, -15px, 0);\r\n  }\r\n\r\n  90% {\r\n    transform: translate3d(0,-4px,0);\r\n  }\r\n}\r\n\r\n.bounce {\r\n  animation-name: bounce;\r\n  transform-origin: center bottom;\r\n}\r\n\r\n@keyframes flash {\r\n  from, 50%, to {\r\n    opacity: 1;\r\n  }\r\n\r\n  25%, 75% {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.flash {\r\n  animation-name: flash;\r\n}\r\n\r\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\r\n\r\n@keyframes pulse {\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  50% {\r\n    transform: scale3d(1.05, 1.05, 1.05);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n}\r\n\r\n.pulse {\r\n  animation-name: pulse;\r\n}\r\n\r\n@keyframes rubberBand {\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  30% {\r\n    transform: scale3d(1.25, 0.75, 1);\r\n  }\r\n\r\n  40% {\r\n    transform: scale3d(0.75, 1.25, 1);\r\n  }\r\n\r\n  50% {\r\n    transform: scale3d(1.15, 0.85, 1);\r\n  }\r\n\r\n  65% {\r\n    transform: scale3d(.95, 1.05, 1);\r\n  }\r\n\r\n  75% {\r\n    transform: scale3d(1.05, .95, 1);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n}\r\n\r\n.rubberBand {\r\n  animation-name: rubberBand;\r\n}\r\n\r\n@keyframes shake {\r\n  from, to {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n\r\n  10%, 30%, 50%, 70%, 90% {\r\n    transform: translate3d(-10px, 0, 0);\r\n  }\r\n\r\n  20%, 40%, 60%, 80% {\r\n    transform: translate3d(10px, 0, 0);\r\n  }\r\n}\r\n\r\n.shake {\r\n  animation-name: shake;\r\n}\r\n\r\n@keyframes swing {\r\n  20% {\r\n    transform: rotate3d(0, 0, 1, 15deg);\r\n  }\r\n\r\n  40% {\r\n    transform: rotate3d(0, 0, 1, -10deg);\r\n  }\r\n\r\n  60% {\r\n    transform: rotate3d(0, 0, 1, 5deg);\r\n  }\r\n\r\n  80% {\r\n    transform: rotate3d(0, 0, 1, -5deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate3d(0, 0, 1, 0deg);\r\n  }\r\n}\r\n\r\n.swing {\r\n  transform-origin: top center;\r\n  animation-name: swing;\r\n}\r\n\r\n@keyframes tada {\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%, 20% {\r\n    transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  30%, 50%, 70%, 90% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  }\r\n\r\n  40%, 60%, 80% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n}\r\n\r\n.tada {\r\n  animation-name: tada;\r\n}\r\n\r\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\r\n\r\n@keyframes wobble {\r\n  from {\r\n    transform: none;\r\n  }\r\n\r\n  15% {\r\n    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);\r\n  }\r\n\r\n  30% {\r\n    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);\r\n  }\r\n\r\n  45% {\r\n    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  60% {\r\n    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);\r\n  }\r\n\r\n  75% {\r\n    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);\r\n  }\r\n\r\n  to {\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.wobble {\r\n  animation-name: wobble;\r\n}\r\n\r\n@keyframes jello {\r\n  from, 11.1%, to {\r\n    transform: none;\r\n  }\r\n\r\n  22.2% {\r\n    transform: skewX(-12.5deg) skewY(-12.5deg);\r\n  }\r\n\r\n  33.3% {\r\n    transform: skewX(6.25deg) skewY(6.25deg);\r\n  }\r\n\r\n  44.4% {\r\n    transform: skewX(-3.125deg) skewY(-3.125deg);\r\n  }\r\n\r\n  55.5% {\r\n    transform: skewX(1.5625deg) skewY(1.5625deg);\r\n  }\r\n\r\n  66.6% {\r\n    transform: skewX(-0.78125deg) skewY(-0.78125deg);\r\n  }\r\n\r\n  77.7% {\r\n    transform: skewX(0.390625deg) skewY(0.390625deg);\r\n  }\r\n\r\n  88.8% {\r\n    transform: skewX(-0.1953125deg) skewY(-0.1953125deg);\r\n  }\r\n}\r\n\r\n.jello {\r\n  animation-name: jello;\r\n  transform-origin: center;\r\n}\r\n\r\n@keyframes bounceIn {\r\n  from, 20%, 40%, 60%, 80%, to {\r\n    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\r\n  }\r\n\r\n  0% {\r\n    opacity: 0;\r\n    transform: scale3d(.3, .3, .3);\r\n  }\r\n\r\n  20% {\r\n    transform: scale3d(1.1, 1.1, 1.1);\r\n  }\r\n\r\n  40% {\r\n    transform: scale3d(.9, .9, .9);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: scale3d(1.03, 1.03, 1.03);\r\n  }\r\n\r\n  80% {\r\n    transform: scale3d(.97, .97, .97);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n}\r\n\r\n.bounceIn {\r\n  animation-name: bounceIn;\r\n}\r\n\r\n@keyframes bounceInDown {\r\n  from, 60%, 75%, 90%, to {\r\n    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\r\n  }\r\n\r\n  0% {\r\n    opacity: 0;\r\n    transform: translate3d(0, -3000px, 0);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: translate3d(0, 25px, 0);\r\n  }\r\n\r\n  75% {\r\n    transform: translate3d(0, -10px, 0);\r\n  }\r\n\r\n  90% {\r\n    transform: translate3d(0, 5px, 0);\r\n  }\r\n\r\n  to {\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.bounceInDown {\r\n  animation-name: bounceInDown;\r\n}\r\n\r\n@keyframes bounceInLeft {\r\n  from, 60%, 75%, 90%, to {\r\n    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\r\n  }\r\n\r\n  0% {\r\n    opacity: 0;\r\n    transform: translate3d(-3000px, 0, 0);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: translate3d(25px, 0, 0);\r\n  }\r\n\r\n  75% {\r\n    transform: translate3d(-10px, 0, 0);\r\n  }\r\n\r\n  90% {\r\n    transform: translate3d(5px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.bounceInLeft {\r\n  animation-name: bounceInLeft;\r\n}\r\n\r\n@keyframes bounceInRight {\r\n  from, 60%, 75%, 90%, to {\r\n    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\r\n  }\r\n\r\n  from {\r\n    opacity: 0;\r\n    transform: translate3d(3000px, 0, 0);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: translate3d(-25px, 0, 0);\r\n  }\r\n\r\n  75% {\r\n    transform: translate3d(10px, 0, 0);\r\n  }\r\n\r\n  90% {\r\n    transform: translate3d(-5px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.bounceInRight {\r\n  animation-name: bounceInRight;\r\n}\r\n\r\n@keyframes bounceInUp {\r\n  from, 60%, 75%, 90%, to {\r\n    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\r\n  }\r\n\r\n  from {\r\n    opacity: 0;\r\n    transform: translate3d(0, 3000px, 0);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: translate3d(0, -20px, 0);\r\n  }\r\n\r\n  75% {\r\n    transform: translate3d(0, 10px, 0);\r\n  }\r\n\r\n  90% {\r\n    transform: translate3d(0, -5px, 0);\r\n  }\r\n\r\n  to {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n}\r\n\r\n.bounceInUp {\r\n  animation-name: bounceInUp;\r\n}\r\n\r\n@keyframes bounceOut {\r\n  20% {\r\n    transform: scale3d(.9, .9, .9);\r\n  }\r\n\r\n  50%, 55% {\r\n    opacity: 1;\r\n    transform: scale3d(1.1, 1.1, 1.1);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: scale3d(.3, .3, .3);\r\n  }\r\n}\r\n\r\n.bounceOut {\r\n  animation-name: bounceOut;\r\n}\r\n\r\n@keyframes bounceOutDown {\r\n  20% {\r\n    transform: translate3d(0, 10px, 0);\r\n  }\r\n\r\n  40%, 45% {\r\n    opacity: 1;\r\n    transform: translate3d(0, -20px, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(0, 2000px, 0);\r\n  }\r\n}\r\n\r\n.bounceOutDown {\r\n  animation-name: bounceOutDown;\r\n}\r\n\r\n@keyframes bounceOutLeft {\r\n  20% {\r\n    opacity: 1;\r\n    transform: translate3d(20px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(-2000px, 0, 0);\r\n  }\r\n}\r\n\r\n.bounceOutLeft {\r\n  animation-name: bounceOutLeft;\r\n}\r\n\r\n@keyframes bounceOutRight {\r\n  20% {\r\n    opacity: 1;\r\n    transform: translate3d(-20px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(2000px, 0, 0);\r\n  }\r\n}\r\n\r\n.bounceOutRight {\r\n  animation-name: bounceOutRight;\r\n}\r\n\r\n@keyframes bounceOutUp {\r\n  20% {\r\n    transform: translate3d(0, -10px, 0);\r\n  }\r\n\r\n  40%, 45% {\r\n    opacity: 1;\r\n    transform: translate3d(0, 20px, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(0, -2000px, 0);\r\n  }\r\n}\r\n\r\n.bounceOutUp {\r\n  animation-name: bounceOutUp;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale(0.95);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: scale(1.0);\r\n  }\r\n}\r\n\r\n.fadeIn {\r\n  animation-name: fadeIn;\r\n}\r\n\r\n@keyframes fadeInDown {\r\n  from {\r\n    opacity: 0;\r\n    /*-webkit-transform: translate3d(0, -100%, 0);\r\n    transform: translate3d(0, -100%, 0);*/\r\n    transform: translate3d(0, -50px, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInDown {\r\n  animation-name: fadeInDown;\r\n}\r\n\r\n@keyframes fadeInDownBig {\r\n  from {\r\n    opacity: 0;\r\n    transform: translate3d(0, -2000px, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInDownBig {\r\n  animation-name: fadeInDownBig;\r\n}\r\n\r\n@keyframes fadeInLeft {\r\n  from {\r\n    opacity: 0;\r\n    /*-webkit-transform: translate3d(-100%, 0, 0);\r\n    transform: translate3d(-100%, 0, 0);*/\r\n    transform: translate3d(-50px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInLeft {\r\n  animation-name: fadeInLeft;\r\n}\r\n\r\n@keyframes fadeInLeftBig {\r\n  from {\r\n    opacity: 0;\r\n    transform: translate3d(-2000px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInLeftBig {\r\n  animation-name: fadeInLeftBig;\r\n}\r\n\r\n@keyframes fadeInRight {\r\n  from {\r\n    opacity: 0;\r\n    /*-webkit-transform: translate3d(100%, 0, 0);\r\n    transform: translate3d(100%, 0, 0);*/\r\n    transform: translate3d(50px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInRight {\r\n  animation-name: fadeInRight;\r\n}\r\n\r\n@keyframes fadeInRightBig {\r\n  from {\r\n    opacity: 0;\r\n    transform: translate3d(2000px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInRightBig {\r\n  animation-name: fadeInRightBig;\r\n}\r\n\r\n@keyframes fadeInUp {\r\n  from {\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    /*-webkit-transform: translate3d(0, 100%, 0);\r\n    transform: translate3d(0, 100%, 0);*/\r\n    transform: translate3d(0, 40px, 0);\r\n  }\r\n\r\n  to {\r\n    visibility: visible;\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInUp {\r\n  animation-name: fadeInUp;\r\n}\r\n\r\n@keyframes fadeInUpMenu {\r\n  from {\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    /*-webkit-transform: translate3d(0, 100%, 0);\r\n    transform: translate3d(0, 100%, 0);*/\r\n    transform: translate3d(0, 20px, 0);\r\n  }\r\n\r\n  to {\r\n    visibility: visible;\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInUpMenu {\r\n  animation-name: fadeInUpMenu;\r\n}\r\n\r\n@keyframes fadeInUpBig {\r\n  from {\r\n    opacity: 0;\r\n    transform: translate3d(0, 2000px, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInUpBig {\r\n  animation-name: fadeInUpBig;\r\n}\r\n\r\n@keyframes fadeOut {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.fadeOut {\r\n  animation-name: fadeOut;\r\n}\r\n\r\n@keyframes fadeOutDown {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(0, 40px, 0);\r\n  }\r\n}\r\n\r\n.fadeOutDown {\r\n  animation-name: fadeOutDown;\r\n}\r\n\r\n@keyframes fadeOutDownBig {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(0, 2000px, 0);\r\n  }\r\n}\r\n\r\n.fadeOutDownBig {\r\n  animation-name: fadeOutDownBig;\r\n}\r\n\r\n@keyframes fadeOutLeft {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(-100%, 0, 0);\r\n  }\r\n}\r\n\r\n.fadeOutLeft {\r\n  animation-name: fadeOutLeft;\r\n}\r\n\r\n@keyframes fadeOutLeftBig {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(-2000px, 0, 0);\r\n  }\r\n}\r\n\r\n.fadeOutLeftBig {\r\n  animation-name: fadeOutLeftBig;\r\n}\r\n\r\n@keyframes fadeOutRight {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(100%, 0, 0);\r\n  }\r\n}\r\n\r\n.fadeOutRight {\r\n  animation-name: fadeOutRight;\r\n}\r\n\r\n@keyframes fadeOutRightBig {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(2000px, 0, 0);\r\n  }\r\n}\r\n\r\n.fadeOutRightBig {\r\n  animation-name: fadeOutRightBig;\r\n}\r\n\r\n@keyframes fadeOutUp {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(0, -100%, 0);\r\n  }\r\n}\r\n\r\n.fadeOutUp {\r\n  animation-name: fadeOutUp;\r\n}\r\n\r\n@keyframes fadeOutUpBig {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(0, -2000px, 0);\r\n  }\r\n}\r\n\r\n.fadeOutUpBig {\r\n  animation-name: fadeOutUpBig;\r\n}\r\n\r\n@keyframes flip {\r\n  from {\r\n    transform: perspective(400px) rotate3d(0, 1, 0, -360deg);\r\n    animation-timing-function: ease-out;\r\n  }\r\n\r\n  40% {\r\n    transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -190deg);\r\n    animation-timing-function: ease-out;\r\n  }\r\n\r\n  50% {\r\n    transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -170deg);\r\n    animation-timing-function: ease-in;\r\n  }\r\n\r\n  80% {\r\n    transform: perspective(400px) scale3d(.95, .95, .95);\r\n    animation-timing-function: ease-in;\r\n  }\r\n\r\n  to {\r\n    transform: perspective(400px);\r\n    animation-timing-function: ease-in;\r\n  }\r\n}\r\n\r\n.animated.flip {\r\n  -webkit-backface-visibility: visible;\r\n  backface-visibility: visible;\r\n  animation-name: flip;\r\n}\r\n\r\n@keyframes flipInX {\r\n  from {\r\n    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\r\n    animation-timing-function: ease-in;\r\n    opacity: 0;\r\n  }\r\n\r\n  40% {\r\n    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\r\n    animation-timing-function: ease-in;\r\n  }\r\n\r\n  60% {\r\n    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);\r\n    opacity: 1;\r\n  }\r\n\r\n  80% {\r\n    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);\r\n  }\r\n\r\n  to {\r\n    transform: perspective(400px);\r\n  }\r\n}\r\n\r\n.flipInX {\r\n  -webkit-backface-visibility: visible !important;\r\n  backface-visibility: visible !important;\r\n  animation-name: flipInX;\r\n}\r\n\r\n@keyframes flipInY {\r\n  from {\r\n    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\r\n    animation-timing-function: ease-in;\r\n    opacity: 0;\r\n  }\r\n\r\n  40% {\r\n    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);\r\n    animation-timing-function: ease-in;\r\n  }\r\n\r\n  60% {\r\n    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);\r\n    opacity: 1;\r\n  }\r\n\r\n  80% {\r\n    transform: perspective(400px) rotate3d(0, 1, 0, -5deg);\r\n  }\r\n\r\n  to {\r\n    transform: perspective(400px);\r\n  }\r\n}\r\n\r\n.flipInY {\r\n  -webkit-backface-visibility: visible !important;\r\n  backface-visibility: visible !important;\r\n  animation-name: flipInY;\r\n}\r\n\r\n@keyframes flipOutX {\r\n  from {\r\n    transform: perspective(400px);\r\n  }\r\n\r\n  30% {\r\n    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.flipOutX {\r\n  animation-name: flipOutX;\r\n  -webkit-backface-visibility: visible !important;\r\n  backface-visibility: visible !important;\r\n}\r\n\r\n@keyframes flipOutY {\r\n  from {\r\n    transform: perspective(400px);\r\n  }\r\n\r\n  30% {\r\n    transform: perspective(400px) rotate3d(0, 1, 0, -15deg);\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.flipOutY {\r\n  -webkit-backface-visibility: visible !important;\r\n  backface-visibility: visible !important;\r\n  animation-name: flipOutY;\r\n}\r\n\r\n@keyframes lightSpeedIn {\r\n  from {\r\n    transform: translate3d(100%, 0, 0) skewX(-30deg);\r\n    opacity: 0;\r\n  }\r\n\r\n  60% {\r\n    transform: skewX(20deg);\r\n    opacity: 1;\r\n  }\r\n\r\n  80% {\r\n    transform: skewX(-5deg);\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform: none;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.lightSpeedIn {\r\n  animation-name: lightSpeedIn;\r\n  animation-timing-function: ease-out;\r\n}\r\n\r\n@keyframes lightSpeedOut {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform: translate3d(100%, 0, 0) skewX(30deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.lightSpeedOut {\r\n  animation-name: lightSpeedOut;\r\n  animation-timing-function: ease-in;\r\n}\r\n\r\n@keyframes rotateIn {\r\n  from {\r\n    transform-origin: center;\r\n    transform: rotate3d(0, 0, 1, -200deg);\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    transform-origin: center;\r\n    transform: none;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.rotateIn {\r\n  animation-name: rotateIn;\r\n}\r\n\r\n@keyframes rotateInDownLeft {\r\n  from {\r\n    transform-origin: left bottom;\r\n    transform: rotate3d(0, 0, 1, -45deg);\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    transform-origin: left bottom;\r\n    transform: none;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.rotateInDownLeft {\r\n  animation-name: rotateInDownLeft;\r\n}\r\n\r\n@keyframes rotateInDownRight {\r\n  from {\r\n    transform-origin: right bottom;\r\n    transform: rotate3d(0, 0, 1, 45deg);\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    transform-origin: right bottom;\r\n    transform: none;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.rotateInDownRight {\r\n  animation-name: rotateInDownRight;\r\n}\r\n\r\n@keyframes rotateInUpLeft {\r\n  from {\r\n    transform-origin: left bottom;\r\n    transform: rotate3d(0, 0, 1, 45deg);\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    transform-origin: left bottom;\r\n    transform: none;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.rotateInUpLeft {\r\n  animation-name: rotateInUpLeft;\r\n}\r\n\r\n@keyframes rotateInUpRight {\r\n  from {\r\n    transform-origin: right bottom;\r\n    transform: rotate3d(0, 0, 1, -90deg);\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    transform-origin: right bottom;\r\n    transform: none;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.rotateInUpRight {\r\n  animation-name: rotateInUpRight;\r\n}\r\n\r\n@keyframes rotateOut {\r\n  from {\r\n    transform-origin: center;\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform-origin: center;\r\n    transform: rotate3d(0, 0, 1, 200deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.rotateOut {\r\n  animation-name: rotateOut;\r\n}\r\n\r\n@keyframes rotateOutDownLeft {\r\n  from {\r\n    transform-origin: left bottom;\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform-origin: left bottom;\r\n    transform: rotate3d(0, 0, 1, 45deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.rotateOutDownLeft {\r\n  animation-name: rotateOutDownLeft;\r\n}\r\n\r\n@keyframes rotateOutDownRight {\r\n  from {\r\n    transform-origin: right bottom;\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform-origin: right bottom;\r\n    transform: rotate3d(0, 0, 1, -45deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.rotateOutDownRight {\r\n  animation-name: rotateOutDownRight;\r\n}\r\n\r\n@keyframes rotateOutUpLeft {\r\n  from {\r\n    transform-origin: left bottom;\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform-origin: left bottom;\r\n    transform: rotate3d(0, 0, 1, -45deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.rotateOutUpLeft {\r\n  animation-name: rotateOutUpLeft;\r\n}\r\n\r\n@keyframes rotateOutUpRight {\r\n  from {\r\n    transform-origin: right bottom;\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform-origin: right bottom;\r\n    transform: rotate3d(0, 0, 1, 90deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.rotateOutUpRight {\r\n  animation-name: rotateOutUpRight;\r\n}\r\n\r\n@keyframes hinge {\r\n  0% {\r\n    transform-origin: top left;\r\n    animation-timing-function: ease-in-out;\r\n  }\r\n\r\n  20%, 60% {\r\n    transform: rotate3d(0, 0, 1, 80deg);\r\n    transform-origin: top left;\r\n    animation-timing-function: ease-in-out;\r\n  }\r\n\r\n  40%, 80% {\r\n    transform: rotate3d(0, 0, 1, 60deg);\r\n    transform-origin: top left;\r\n    animation-timing-function: ease-in-out;\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform: translate3d(0, 700px, 0);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.hinge {\r\n  animation-name: hinge;\r\n}\r\n\r\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\r\n\r\n@keyframes rollIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.rollIn {\r\n  animation-name: rollIn;\r\n}\r\n\r\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\r\n\r\n@keyframes rollOut {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);\r\n  }\r\n}\r\n\r\n.rollOut {\r\n  animation-name: rollOut;\r\n}\r\n\r\n@keyframes zoomIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale3d(.3, .3, .3);\r\n  }\r\n\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.zoomIn {\r\n  animation-name: zoomIn;\r\n}\r\n\r\n@keyframes zoomInDown {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);\r\n    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);\r\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);\r\n  }\r\n}\r\n\r\n.zoomInDown {\r\n  animation-name: zoomInDown;\r\n}\r\n\r\n@keyframes zoomInLeft {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale3d(.1, .1, .1) translate3d(-1000px, 0, 0);\r\n    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: scale3d(.475, .475, .475) translate3d(10px, 0, 0);\r\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);\r\n  }\r\n}\r\n\r\n.zoomInLeft {\r\n  animation-name: zoomInLeft;\r\n}\r\n\r\n@keyframes zoomInRight {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);\r\n    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);\r\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);\r\n  }\r\n}\r\n\r\n.zoomInRight {\r\n  animation-name: zoomInRight;\r\n}\r\n\r\n@keyframes zoomInUp {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);\r\n    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);\r\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);\r\n  }\r\n}\r\n\r\n.zoomInUp {\r\n  animation-name: zoomInUp;\r\n}\r\n\r\n@keyframes zoomOut {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  50% {\r\n    opacity: 0;\r\n    transform: scale3d(.3, .3, .3);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.zoomOut {\r\n  animation-name: zoomOut;\r\n}\r\n\r\n@keyframes zoomOutDown {\r\n  40% {\r\n    opacity: 1;\r\n    transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);\r\n    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: scale3d(.1, .1, .1) translate3d(0, 2000px, 0);\r\n    transform-origin: center bottom;\r\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);\r\n  }\r\n}\r\n\r\n.zoomOutDown {\r\n  animation-name: zoomOutDown;\r\n}\r\n\r\n@keyframes zoomOutLeft {\r\n  40% {\r\n    opacity: 1;\r\n    transform: scale3d(.475, .475, .475) translate3d(42px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: scale(.1) translate3d(-2000px, 0, 0);\r\n    transform-origin: left center;\r\n  }\r\n}\r\n\r\n.zoomOutLeft {\r\n  animation-name: zoomOutLeft;\r\n}\r\n\r\n@keyframes zoomOutRight {\r\n  40% {\r\n    opacity: 1;\r\n    transform: scale3d(.475, .475, .475) translate3d(-42px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: scale(.1) translate3d(2000px, 0, 0);\r\n    transform-origin: right center;\r\n  }\r\n}\r\n\r\n.zoomOutRight {\r\n  animation-name: zoomOutRight;\r\n}\r\n\r\n@keyframes zoomOutUp {\r\n  40% {\r\n    opacity: 1;\r\n    transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);\r\n    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: scale3d(.1, .1, .1) translate3d(0, -2000px, 0);\r\n    transform-origin: center bottom;\r\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);\r\n  }\r\n}\r\n\r\n.zoomOutUp {\r\n  animation-name: zoomOutUp;\r\n}\r\n\r\n@keyframes slideInDown {\r\n  from {\r\n    transform: translate3d(0, -100%, 0);\r\n    visibility: visible;\r\n  }\r\n\r\n  to {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n}\r\n\r\n.slideInDown {\r\n  animation-name: slideInDown;\r\n}\r\n\r\n@keyframes slideInLeft {\r\n  from {\r\n    transform: translate3d(-100%, 0, 0);\r\n    visibility: visible;\r\n  }\r\n\r\n  to {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n}\r\n\r\n.slideInLeft {\r\n  animation-name: slideInLeft;\r\n}\r\n\r\n@keyframes slideInRight {\r\n  from {\r\n    transform: translate3d(100%, 0, 0);\r\n    visibility: visible;\r\n  }\r\n\r\n  to {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n}\r\n\r\n.slideInRight {\r\n  animation-name: slideInRight;\r\n}\r\n\r\n@keyframes slideInUp {\r\n  from {\r\n    transform: translate3d(0, 100%, 0);\r\n    visibility: visible;\r\n  }\r\n\r\n  to {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n}\r\n\r\n.slideInUp {\r\n  animation-name: slideInUp;\r\n}\r\n\r\n@keyframes slideOutDown {\r\n  from {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n\r\n  to {\r\n    visibility: hidden;\r\n    transform: translate3d(0, 100%, 0);\r\n  }\r\n}\r\n\r\n.slideOutDown {\r\n  animation-name: slideOutDown;\r\n}\r\n\r\n@keyframes slideOutLeft {\r\n  from {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n\r\n  to {\r\n    visibility: hidden;\r\n    transform: translate3d(-100%, 0, 0);\r\n  }\r\n}\r\n\r\n.slideOutLeft {\r\n  animation-name: slideOutLeft;\r\n}\r\n\r\n@keyframes slideOutRight {\r\n  from {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n\r\n  to {\r\n    visibility: hidden;\r\n    transform: translate3d(100%, 0, 0);\r\n  }\r\n}\r\n\r\n.slideOutRight {\r\n  animation-name: slideOutRight;\r\n}\r\n\r\n@keyframes slideOutUp {\r\n  from {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n\r\n  to {\r\n    visibility: hidden;\r\n    transform: translate3d(0, -100%, 0);\r\n  }\r\n}\r\n\r\n.slideOutUp {\r\n  animation-name: slideOutUp;\r\n}\r\n\r\n.round-button{\r\n    float:none !important;\r\n}\r\n\r\n@media only screen and (max-width : 1366px) {\r\n  .wid{width:100%;}\r\n  }\r\n\r\n@media only screen and (max-width : 1280px) {\r\n.wid{width:100%;}\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-planlist/company-planlist.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n      <div class=\"col-md-1 col-xs-2 display-table-cell v-align box\" id=\"navigation\">\r\n        <company-sidebar></company-sidebar>\r\n      </div>\r\n      <company-topbar></company-topbar>\r\n\r\n      <section class=\"planz\" id=\"section3\">\r\n        <div class=\"container wid\">\r\n          <h2>PLANS & PRICE</h2>\r\n          <div class=\"carry\">\r\n            <div class=\"plan wow fadeInRight\" data-wow-delay=\"0.2s\" *ngFor=\"let plan of plans\" [ngClass]=\"{'hilight': plan.is_best_value}\">\r\n              <h3 class=\"plan-title\">{{plan?.plan_name}}</h3>\r\n              <p class=\"plan-price\">&#8377;{{plan?.plan_price}} <span class=\"plan-unit\">per month</span></p>\r\n              <ul class=\"plan-features\">\r\n                <li class=\"plan-feature\">\r\n                  <h4>{{plan?.no_projects}} </h4><span class=\"plan-feature-name\">Projects</span></li>\r\n                <li class=\"plan-feature\">\r\n                  <h4>{{plan?.no_members}} </h4><span class=\"plan-feature-name\">Members</span></li>\r\n                <li class=\"plan-feature\">\r\n                  <h4>{{plan?.no_modules}} </h4><span class=\"plan-feature-name\">Modules</span></li>\r\n                <li class=\"plan-feature\">\r\n                  <h4>{{plan?.no_tasks}} </h4><span class=\"plan-feature-name\">Tasks</span></li>\r\n              </ul>\r\n\r\n              <button type=\"submit\" (click)=\"upgrade(plan.id)\" class=\"btn round-button\">Upgrade</button>\r\n\r\n            </div>\r\n\r\n            <!-- <div class=\"plan hilight\">\r\n            <h3 class=\"plan-title\">Premium</h3>\r\n            <p class=\"plan-price\">&#8377;500 <span class=\"plan-unit\">per month</span></p>\r\n            <ul class=\"plan-features\">\r\n            <li class=\"plan-feature\"><h4>50 </h4><span class=\"plan-feature-name\">Projects</span></li>\r\n            <li class=\"plan-feature\"><h4>50 </h4><span class=\"plan-feature-name\">Members</span></li>\r\n            <li class=\"plan-feature\"><h4>50 </h4><span class=\"plan-feature-name\">Modules</span></li>\r\n            <li class=\"plan-feature\"><h4>100 </h4><span class=\"plan-feature-name\">Tasks</span></li>\r\n            </ul>\r\n            \r\n          </div> -->\r\n\r\n            <!-- <div class=\"plan mr-lft wow fadeInLeft\" data-wow-delay=\"0.4s\">\r\n            <h3 class=\"plan-title\">Ultra</h3>\r\n            <p class=\"plan-price\">&#8377;1000 <span class=\"plan-unit\">per month</span></p>\r\n            <ul class=\"plan-features\">\r\n            <li class=\"plan-feature\"><h4>70 </h4><span class=\"plan-feature-name\">Projects</span></li>\r\n            <li class=\"plan-feature\"><h4>70 </h4><span class=\"plan-feature-name\">Members</span></li>\r\n            <li class=\"plan-feature\"><h4>70 </h4><span class=\"plan-feature-name\">Modules</span></li>\r\n            <li class=\"plan-feature\"><h4>120 </h4><span class=\"plan-feature-name\">Tasks</span></li>\r\n            </ul>\r\n            \r\n          </div> -->\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <br>\r\n      <br>\r\n    </div>\r\n  </div>\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-planlist/company-planlist.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyPlanlistComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var CompanyPlanlistComponent = (function () {
    function CompanyPlanlistComponent(config, adminService, routes) {
        this.config = config;
        this.adminService = adminService;
        this.routes = routes;
        this.socket = __WEBPACK_IMPORTED_MODULE_2_socket_io_client__(config.siteUrl);
    }
    CompanyPlanlistComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.socket.on('addPlan', function (data) {
            _this.getPlans();
        });
        this.socket.on('bestPlan', function (data) {
            _this.getPlans();
        });
        this.socket.on('deletePlan', function (data) {
            _this.getPlans();
        });
        this.socket.on('updatePlan', function (data) {
            _this.getPlans();
        });
        this.getPlans();
    };
    CompanyPlanlistComponent.prototype.getPlans = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : get all plans without default
        // Params        : 
        // Returns       : 
        // Author        : Rinsha
        // Date          : 06-03-2018
        // Last Modified : 06-03-2018, Rinsha
        // Desc          : getAllplans without default
        this.adminService.getPlansWithoutDefault().subscribe(function (res) {
            // console.log(res);
            _this.plans = [];
            res.forEach(function (element) {
                // if(element.is_default_plan == false){
                _this.plans.push(element);
                // }
            });
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyPlanlistComponent.prototype.upgrade = function (id) {
        this.routes.navigate(['/upgrade', id]);
    };
    CompanyPlanlistComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-planlist',
            template: __webpack_require__("../../../../../src/app/components/company-planlist/company-planlist.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-planlist/company-planlist.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__config_config__["a" /* Config */], __WEBPACK_IMPORTED_MODULE_1__services_admin_service__["a" /* AdminService */], __WEBPACK_IMPORTED_MODULE_4__angular_router__["Router"]])
    ], CompanyPlanlistComponent);
    return CompanyPlanlistComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-progress-graph/company-progress-graph.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports
exports.push([module.i, "@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,600,700);", ""]);

// module
exports.push([module.i, "body {\n  background: white;\n}\n\n* {\n  font-family: \"Open Sans\";\n}\n\n#slider {\n  width: 75%;\n  margin: 2em auto 1em;\n}\n\n.svg-container {\n  margin: 3em auto 0;\n  width: 250px;\n  /* height: 250px; */\n}\n\nsvg {\n  width: 100%;\n  height: auto;\n}\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-progress-graph/company-progress-graph.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"svg-container\">\n  </div>"

/***/ }),

/***/ "../../../../../src/app/components/company-progress-graph/company-progress-graph.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyProgressGraphComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var CompanyProgressGraphComponent = (function () {
    function CompanyProgressGraphComponent() {
    }
    CompanyProgressGraphComponent.prototype.ngOnInit = function () { };
    CompanyProgressGraphComponent.prototype.ngAfterViewInit = function () {
        // console.log(this.containerId);
        var colors = {
            'pink': '#E1499A',
            'yellow': '#f0ff08',
            'green': '#47e495',
            'blue': '#4795e4',
        };
        var color = colors.blue;
        var radius = 75;
        var border = 20;
        var padding = 10;
        var startPercent = 0;
        var endPercent = this.progper / 100;
        //var endPercent = 0.85;
        var twoPi = Math.PI * 2;
        var formatPercent = d3.format('.0%');
        var boxSize = (radius + padding) * 2;
        var count = Math.abs((endPercent - startPercent) / 0.01);
        var step = endPercent < startPercent ? -0.01 : 0.01;
        var arc = d3.svg.arc()
            .startAngle(0)
            .innerRadius(radius)
            .outerRadius(radius - border);
        var parent = d3.select('div#' + this.containerId);
        var svg = parent.append('svg')
            .attr('width', boxSize)
            .attr('height', boxSize);
        var defs = svg.append('defs');
        var filter = defs.append('filter')
            .attr('id', 'blur');
        filter.append('feGaussianBlur')
            .attr('in', 'SourceGraphic')
            .attr('stdDeviation', '0');
        var g = svg.append('g')
            .attr('transform', 'translate(' + boxSize / 2 + ',' + boxSize / 2 + ')');
        var meter = g.append('g')
            .attr('class', 'progress-meter');
        meter.append('path')
            .attr('class', 'background')
            .attr('fill', '#ccc')
            .attr('fill-opacity', 0.5)
            .attr('d', arc.endAngle(twoPi));
        var foreground = meter.append('path')
            .attr('class', 'foreground')
            .attr('fill', color)
            .attr('fill-opacity', 1)
            .attr('stroke', color)
            .attr('stroke-width', 5)
            .attr('stroke-opacity', 1)
            .attr('filter', 'url(#blur)');
        var front = meter.append('path')
            .attr('class', 'foreground')
            .attr('fill', color)
            .attr('fill-opacity', 1);
        var numberText = meter.append('text')
            .attr('fill', '#000')
            .attr('text-anchor', 'middle')
            .attr('dy', '.35em');
        function updateProgress(progress) {
            foreground.attr('d', arc.endAngle(twoPi * progress));
            front.attr('d', arc.endAngle(twoPi * progress));
            numberText.text(formatPercent(progress));
        }
        var progress = startPercent;
        (function loops() {
            updateProgress(progress);
            if (count > 0) {
                count--;
                progress += step;
                setTimeout(loops, 50);
            }
        })();
        // var τ = Math.PI; // http://tauday.com/tau-manifesto
        // var arc = d3.svg.arc()
        //     .innerRadius(250)
        //     .outerRadius(0)
        //     .startAngle(0);
        // // Draw the thing!
        // drawBadge("#candidscore");
        // updateScore(60, "#candidscore");
        // // Pass DOM selector to function, set up Canvas size
        // function drawBadge(svgID) {
        //   var width = 500,
        //     height = 500,
        //     aspect = width / height;
        // // Create the SVG container, and apply a transform such that the origin is the
        // // center of the canvas. This way, we don't need to position arcs individually.
        // var svg = d3.select(svgID)
        //     .attr("preserveAspectRatio", "xMidYMid")
        //     .attr("viewBox", "0 0 500 500")
        //     .attr("width", "100%")
        //     .attr("height", "100%")
        //     .append("g")
        //     .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")")
        // // Add the background arc, from 0 to 100% (τ).
        // var background = svg.append("path")
        //     .datum({endAngle: 2*τ})
        //     .style("fill", "#f2f2f2")
        //     .attr("transform", "rotate(-90)")
        //     .attr("d", arc);
        // // Add the top arc in orange
        // var foreground_top = svg.append("path")
        //     .attr("id", "foreground_top")
        //     .datum({endAngle: 0 * τ})
        //     .style("fill", "#fab923")
        //     .attr("d", arc)
        //     .attr("transform", "rotate(-90)");
        // // Add bottom arc in orange
        // var foreground_bottom = svg.append("path")
        //     .attr("id", "foreground_bottom")
        //     .datum({endAngle: 0 * -τ })
        //     .style("fill", "#fab923")
        //     .attr("d", arc)
        //     .attr("transform", "rotate(-90)");
        // var trans_circ = svg.append("circle")
        //     .attr("cx", 0)
        //     .attr("cy", 0)
        //     .attr("r", 210)
        //     .attr("fill", "rgba(255,255,255, .25)");
        // // Create "def" element that will contain our drop shadow filter
        // var defs = svg.append("defs");
        // // Create our filter with an id of "#drop-shadow"
        // var filter = defs.append("filter")
        //   .attr("id", "drop-shadow")
        //   .attr("height", "130%");
        // // Create our Gaussian Blur with a standard deviation of 8
        // filter.append("feGaussianBlur")
        //   .attr("in", "SourceAlpha")
        //   .attr("stdDeviation", 8)
        //   .attr("result", "blur");
        // // Translate the output of Gaussian Blur to (0,0), and store result in var offsetBlur
        // filter.append("feOffset")
        //   .attr("in", "blur")
        //   .attr("dx", 0)
        //   .attr("dy", 0)
        //   .attr("result", "offsetBlur");
        // // Control the opacity of the actual drop shadow with 'feComponentTransfer and SLOPE'
        // var comptransf = filter.append("feComponentTransfer");
        // comptransf.append("feFuncA")
        //   .attr("type", "linear")
        //   .attr("slope", .2);
        // // Overlay original SourceGraphic over translated blurred opacity by using feMerge filter ***ORDER IS IMPORTANT***
        // var feMerge = filter.append("feMerge");
        // feMerge.append("feMergeNode")
        // /*	.attr("in", "offsetBlur")*/
        // feMerge.append("feMergeNode")
        //   .attr("in", "SourceGraphic");
        // var white_circ = svg.append("circle")
        //     .attr("cx", 0)
        //     .attr("cx", 0)
        //     .attr("r", 180)
        //     .attr("id", "white_circ")
        //     .style("filter", "url(#drop-shadow)")
        //     .attr("fill", "white");
        // var stroke_circ = svg.append("circle")
        //     .attr("cx", 0)
        //     .attr("cy", 0)
        //     .attr("r", 160)
        //     .attr("fill", "none")
        //     .attr("stroke", "rgba(0,0,0,.125")
        //     .attr("stroke-width", "1px");
        // var candidlogo = svg.append("g")
        // /*  .attr('transform-origin', '0 0')*/
        //   .attr("transform", "translate(-295,-285), scale(1.75)");
        //   candidlogo.append("path")
        //    .attr("d", "M134.3,233.2L134.3,233.2c0-3.3,2.6-6.2,6-6.2c2.2,0,3.6,1,4.7,2.2l-0.8,0.8c-1-1-2.2-1.9-3.9-1.9c-2.7,0-4.7,2.2-4.7,5v0c0,2.8,2.1,5.1,4.8,5.1c1.7,0,2.9-0.9,3.9-2l0.8,0.7c-1.2,1.4-2.6,2.3-4.8,2.3 C136.9,239.3,134.3,236.5,134.3,233.2z" )
        //      .attr("fill", "#A7A8AD");
        //    candidlogo.append("path")
        //         .attr("d", "M147.3,235.6L147.3,235.6c0-2.5,2.1-3.9,5.1-3.9c1.6,0,2.8,0.2,3.9,0.5v-0.5c0-2.4-1.4-3.6-3.9-3.6 c-1.4,0-2.6,0.4-3.7,0.9l-0.4-1c1.3-0.6,2.6-1,4.2-1c1.6,0,2.8,0.4,3.7,1.3c0.8,0.8,1.2,1.9,1.2,3.3v7.3h-1.1v-2 c-0.8,1.1-2.3,2.2-4.5,2.2C149.6,239.3,147.3,238,147.3,235.6z M156.3,234.6v-1.3c-1-0.3-2.3-0.5-4-0.5c-2.5,0-3.9,1.1-3.9,2.7v0 c0,1.7,1.6,2.7,3.4,2.7C154.2,238.2,156.3,236.8,156.3,234.6z" )
        //        .attr("fill", "#A7A8AD");
        //   candidlogo.append("path")
        //      .attr("d", "M161.4,227.3h1.1v2.2c0.8-1.4,2.1-2.5,4.2-2.5c3,0,4.7,2,4.7,4.8v7.2h-1.1v-7c0-2.4-1.4-4-3.7-4 c-2.3,0-4.1,1.7-4.1,4.2v6.8h-1.1V227.3z")
        //      .attr("fill", "#A7A8AD");
        //   candidlogo.append("path")
        //     .attr("d", "M174.7,233.2L174.7,233.2c0-3.9,2.9-6.2,5.7-6.2c2.3,0,3.9,1.3,4.8,2.8v-7.6h1.1V239h-1.1v-2.6 c-1,1.5-2.5,2.9-4.8,2.9C177.6,239.3,174.7,237,174.7,233.2z M185.3,233.2L185.3,233.2c0-3.1-2.3-5.1-4.8-5.1 c-2.6,0-4.6,1.9-4.6,5v0c0,3.1,2.1,5.1,4.6,5.1C183,238.2,185.3,236.2,185.3,233.2z")
        //     .attr("fill", "#A7A8AD");
        //   candidlogo.append("path")
        //     .attr("d", "M190.7,222.7h1.4v1.5h-1.4V222.7z M190.8,227.3h1.1V239h-1.1V227.3z")
        //     .attr("fill", "#A7A8AD");
        //     candidlogo.append("path")
        //     .attr("d", "M195.6,233.2L195.6,233.2c0-3.9,2.9-6.2,5.7-6.2c2.3,0,3.9,1.3,4.8,2.8v-7.6h1.1V239h-1.1v-2.6 c-1,1.5-2.5,2.9-4.8,2.9C198.5,239.3,195.6,237,195.6,233.2z M206.2,233.2L206.2,233.2c0-3.1-2.3-5.1-4.8-5.1 c-2.6,0-4.6,1.9-4.6,5v0c0,3.1,2.1,5.1,4.6,5.1C203.9,238.2,206.2,236.2,206.2,233.2z")
        //     .attr("fill", "#A7A8AD");
        // var text_score = svg.append("text")
        //   /*.text("50")*/
        //   .attr("id", "scorenum")
        //   .attr("x", 0)
        //   .attr("y", 60)
        //   .attr("font-family", "proxima nova")
        //   .attr("text-anchor", "middle")
        //   .attr("font-weight", "bold")
        //   .attr("font-size", 195)
        //   .attr("fill", "#555555");
        // }
        // function arcTween(transition, newAngle) {
        //   transition.attrTween("d", function(d) {
        //     var interpolate = d3.interpolate(d.endAngle, newAngle);
        //     return function(t) {
        //       d.endAngle = interpolate(t);
        //       return arc(d);
        //     };
        //   });
        // }
        // function updateScore(score, svgID) {
        //   console.log(score);
        //   var decimalized = score / 100.0;
        //   console.log(decimalized);
        //   var our_svg = d3.select(svgID);
        //   var foreground_top = our_svg.select("path#foreground_top");
        //   var scorenum = our_svg.select("text#scorenum");
        //   var foreground_bottom = our_svg.select("path#foreground_bottom");
        //   scorenum.text(score);
        //   foreground_top.transition()
        //       .duration(1500)
        //       .ease("elastic")
        //       .call(arcTween, decimalized * τ );
        //   foreground_bottom.transition()
        //       .duration(1500)
        //       .ease("elastic")
        //       .call(arcTween, decimalized * -τ );
        // }
    };
    CompanyProgressGraphComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-progress-graph',
            template: __webpack_require__("../../../../../src/app/components/company-progress-graph/company-progress-graph.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-progress-graph/company-progress-graph.component.css")],
            inputs: ['containerId', 'progper']
        }),
        __metadata("design:paramtypes", [])
    ], CompanyProgressGraphComponent);
    return CompanyProgressGraphComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-project-category/company-project-category.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".side-bar-menu{background:#fff;}\r\n.side-bar-menu li{    border-bottom: 1px solid #e4e4e4;}\r\n.side-bar-menu li a{color:#111;text-align:left;padding: 20px 23px;}\r\n.side-bar-menu li a:hover{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:focus{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:active{background-color: #fe6a07;color:#fff;}\r\n\r\nul.breadcrumb {\r\n    padding: 10px 0;\r\n    list-style: none;\r\n\r\n    text-align: left;\r\n    color: #d68956;\r\n}\r\nul.breadcrumb li {\r\n    display: inline;\r\n    font-size: 15px;\r\n}\r\nul.breadcrumb li+li:before {\r\n    padding: 8px;\r\n    color: black;\r\n    content: \"/\\A0\";\r\n}\r\nul.breadcrumb li a {\r\n    color: #bbbbbb;\r\n    text-decoration: none;\r\n}\r\nul.breadcrumb li a:hover {\r\n    color: #d68956;\r\n    text-decoration: none;\r\n\r\n}\r\n.breadcrumb{    background-color: #f6f7fa;}\r\n\r\n\r\n.example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}\r\n.modal-dialog{max-width:900px !important;width:100%;}\r\n.user{width:280px;height:280px;border-radius:50%;margin:0 auto;float:none;overflow:hidden; background: #d45d0e;margin-top: 20%;\r\n    margin-bottom: 20%;text-align:center;}\r\n    .user:hover{opacity:0.6;cursor:pointer;}\r\n.user img{width:120%;max-width: 287px;min-width: 287px;}\r\n\r\n.brdr-left{    width: 1px;\r\n    height: 155px;\r\n    float: left;\r\n    margin-top: 36%;\r\n    display: inherit;\r\n    background: #efecec;\r\n    margin-right: 21px;}\r\n  .user .fa-camera{color:#fff;font-size:50px;text-align:center;background: #d45d0e;padding-top:204%;}\r\n    ", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-project-category/company-project-category.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n\r\n      <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n        <!-- sidebar-->\r\n\r\n        <company-sidebar></company-sidebar>\r\n        <!-- end sidebar-->\r\n      </div>\r\n\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n        <!-- topbar-->\r\n        <company-topbar></company-topbar>\r\n\r\n        <!-- end topbar-->\r\n\r\n\r\n        <div class=\"user-dashboard\">\r\n          <h2>Master Settings</h2>\r\n          <ul class=\"breadcrumb\">\r\n            <li><a>Master Settings</a></li>\r\n\r\n\r\n            <li>Project Category </li>\r\n          </ul>\r\n          <div class=\"row\">\r\n            <!-----------------------------------------------------------------table-------------------------------------->\r\n\r\n\r\n            <!-- <p>You selected: {{selected}} </p> -->\r\n\r\n            <div class=\"col-md-12\">\r\n              <div class=\"\">\r\n                <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\" >\r\n          <div class=\"\"  >\r\n              <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n              width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n          <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n            <animateTransform attributeType=\"xml\"\r\n              attributeName=\"transform\"\r\n              type=\"rotate\"\r\n              from=\"0 25 25\"\r\n              to=\"360 25 25\"\r\n              dur=\"0.6s\"\r\n              repeatCount=\"indefinite\"/>\r\n            </path>\r\n          </svg>\r\n      </div>\r\n      </div> -->\r\n\r\n\r\n                <div class=\"col-md-12 optionz\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"example-header\">\r\n                        <mat-form-field>\r\n                          <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <!--    \r\n            <div class=\"example-header\" >\r\n                <mat-form-field>\r\n                  <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                </mat-form-field>\r\n            </div> -->\r\n\r\n                <div class=\"example-container mat-elevation-z8 \">\r\n                  <div *ngIf=\"preloader\">\r\n                    <app-spinner></app-spinner>\r\n                  </div>\r\n\r\n                  <mat-table [dataSource]=\"dataSource\" matSort>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"slno\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header>Sl_No </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row;let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}} </mat-cell>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"name\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header>CATEGORY NAME </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.category_name}} </mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n                    <ng-container matColumnDef=\"action\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\">\r\n                        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n                        <mat-menu #menu=\"matMenu\">\r\n                          <button (click)=\"getEditId(row.id)\" data-toggle=\"modal\" data-target=\"#editModal\" mat-menu-item>\r\n                    <i class=\"material-icons\">mode_edit</i>\r\n                  <span>Edit</span>\r\n                </button>\r\n                          <button (click)=\"getId(row.id)\" data-toggle=\"modal\" data-target=\"#deleteModal\" mat-menu-item>\r\n                  <i class=\"material-icons\">delete</i>\r\n                <span>Delete</span>\r\n              </button>\r\n\r\n\r\n\r\n                        </mat-menu>\r\n\r\n                      </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                  </mat-table>\r\n                  <div class=\"col-md-15 \">\r\n                    <!-- <div *ngIf=\"showSpinner\" class=\"deletespinner\">\r\n            <mat-spinner></mat-spinner>\r\n           </div> -->\r\n                  </div>\r\n                  <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n                    <div class=\"col-md-4 col-md-offset-4\">\r\n                      <mat-toolbar class=\"back-color\">No item found!</mat-toolbar>\r\n                    </div>\r\n                  </div>\r\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                </div>\r\n\r\n\r\n              </div>\r\n            </div>\r\n            <div class=\"add-button\">\r\n              <button type=\"button\" class=\"add-project\" data-toggle=\"modal\" (click)=\"addNewCategory()\" data-target=\"#addModal\" data-backdrop=\"static\">+</button>\r\n            </div>\r\n            <!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n\r\n            <div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn2>&times;</button>\r\n                    <h4 class=\"modal-title\">Delete </h4>\r\n                  </div>\r\n                  <!-- <div class=\"modal-header\"> -->\r\n                  <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n                  <!-- </div> -->\r\n                  <div class=\"modal-body delete-popup\">\r\n                    <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n                    <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n                  </div>\r\n\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" [disabled]=\"deleteBtnDisable\" (click)=\"deleteCategory(id)\" class=\"btn round-button\" data-dismiss=\"modal\">Delete</button>\r\n                    <div *ngIf=\"deleteSpinner\">\r\n                      <app-spinner></app-spinner>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <!-----------------------------------------------------------------delete modal-------------------------------------->\r\n            <!-----------------------------------------------------------------add modal-------------------------------------->\r\n            <div id=\"addModal\" class=\"modal fade\">\r\n              <div class=\"modal-dialog\">\r\n\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn>&times;</button>\r\n                    <h4 class=\"modal-title\">Add New Category</h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"addCategory(newCategory);\" novalidate>\r\n                      <div class=\"col-md-7\">\r\n\r\n\r\n                        <div class=\"form-group\">\r\n                          <div class=\"example-container\">\r\n                            <mat-form-field>\r\n                              <input matInput placeholder=\"Category Name\" name=\"name\" [(ngModel)]=\"newCategory\" required>\r\n\r\n                            </mat-form-field>\r\n\r\n\r\n\r\n                          </div>\r\n\r\n                        </div>\r\n                        <br>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-4\">\r\n                            <button type=\"submit\" [disabled]=\"addCatgBtnDisable\" class=\"btn round-button\">Submit</button>\r\n                            <div *ngIf=\"addCatfSpinner\">\r\n                              <app-spinner></app-spinner>\r\n                            </div>\r\n\r\n                          </div>\r\n                          <!-- <div class=\"col-md-8\" *ngIf=\"showSpinner\">\r\n                  <svg class=\"svgclass\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                    x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\"\r\n                    xml:space=\"preserve\">\r\n                    <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                      <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n                      />\r\n                    </path>\r\n                  </svg>\r\n                </div> -->\r\n\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n\r\n\r\n                    </form>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <!----------------------------------------addModal------------------------------>\r\n            <!-- --------------------------------------------- edit modal ----------------------------------------------------------------- -->\r\n\r\n\r\n            <div id=\"editModal\" class=\"modal fade\">\r\n              <div class=\"modal-dialog\">\r\n\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn1>&times;</button>\r\n                    <h4 class=\"modal-title\">Update Category</h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"updateCategory(category);\" novalidate>\r\n                      <div class=\"col-md-7\">\r\n\r\n\r\n                        <div class=\"form-group\">\r\n                          <div class=\"example-container\">\r\n                            <mat-form-field>\r\n                              <input matInput placeholder=\"category Name\" name=\"category\" [(ngModel)]=\"category.category_name\" required>\r\n                            </mat-form-field>\r\n\r\n\r\n\r\n                          </div>\r\n\r\n                        </div>\r\n                        <br>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-4\">\r\n                            <button type=\"submit\" [disabled]=\"editCatgBtnDisable\" class=\"btn round-button\">Update</button>\r\n                            <div *ngIf=\"editSpinner\">\r\n                              <app-spinner></app-spinner>\r\n                            </div>\r\n\r\n                          </div>\r\n                          <!-- <div class=\"col-md-8\" *ngIf=\"showSpinner\">\r\n                  <svg class=\"svgclass\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                    x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\"\r\n                    xml:space=\"preserve\">\r\n                    <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                      <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n                      />\r\n                    </path>\r\n                  </svg>\r\n                </div> -->\r\n\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n\r\n\r\n                    </form>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <!-----------------------------------------------------------------edit modal-------------------------------------->\r\n\r\n            <!-----------------------------------------------------------------end table-------------------------------------->\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <!-- footer-->\r\n      <company-footer></company-footer>\r\n      <!-- end footer-->\r\n    </div>\r\n  </div>\r\n  <!-- Modal -->\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-project-category/company-project-category.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyProjectCategoryComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CompanyProjectCategoryComponent = (function () {
    // ---------------------------------Start-------------------------------------------
    // Function      : project category master setting
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 12-03-2018
    // Last Modified : 
    // Desc          : All category
    function CompanyProjectCategoryComponent(companyService, routes, snackBar) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'name', 'action'];
        this.notExist = false;
        this.preloader = false;
        this.all_value = false;
        this.showSpinner = false;
        this.addCatgBtnDisable = false;
        this.addCatfSpinner = false;
        this.editCatgBtnDisable = false;
        this.editSpinner = false;
        this.deleteBtnDisable = false;
        this.deleteSpinner = false;
        this.category = { category_name: '', id: '' };
    }
    CompanyProjectCategoryComponent.prototype.refresh = function () {
        var _this = this;
        // console.log("hj");
        this.showSpinner = true;
        //  console.log(this.selected);
        // const company = [];
        this.companyService.getAllprojectcategory().subscribe(function (data) {
            _this.preloader = false;
            _this.loadToDataTable(data);
            _this.showSpinner = false;
        });
    };
    CompanyProjectCategoryComponent.prototype.loadToDataTable = function (data) {
        this.notExist = false;
        if (data.length == 0) {
            this.notExist = true;
        }
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
        // console.log(this.dataSource);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    CompanyProjectCategoryComponent.prototype.ngOnInit = function () {
        this.preloader = true;
        this.refresh();
    };
    CompanyProjectCategoryComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    CompanyProjectCategoryComponent.prototype.addNewCategory = function () {
        //this.showSpinner =false;
        //this.showSpinnerDelete =false;
        this.newCategory = '';
    };
    CompanyProjectCategoryComponent.prototype.getId = function (id) {
        // this.showSpinner =false
        // this.showSpinnerDelete =false
        this.id = id;
        //  console.log(this.id)
    };
    //delete Category
    CompanyProjectCategoryComponent.prototype.deleteCategory = function (id) {
        var _this = this;
        this.deleteBtnDisable = true;
        this.deleteSpinner = true;
        console.log(id);
        this.showSpinner = true;
        this.companyService.deleteCategory(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                _this.deleteBtnDisable = false;
                _this.deleteSpinner = false;
                _this.showSpinner = false;
                _this.closeBtn2.nativeElement.click();
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                _this.deleteBtnDisable = false;
                _this.deleteSpinner = false;
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    CompanyProjectCategoryComponent.prototype.addCategory = function (newCategory) {
        var _this = this;
        //console.log(newCategory);
        this.addCatgBtnDisable = true;
        this.addCatfSpinner = true;
        this.showSpinner = true;
        // console.log(newCategory);
        this.companyService.addCategory(newCategory).subscribe(function (addCategory) {
            if (!addCategory.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(addCategory.msg, '', {
                    duration: 2000
                });
                _this.addCatgBtnDisable = false;
                _this.addCatfSpinner = false;
                _this.refresh();
            }
            else if (addCategory.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(addCategory.msg, '', {
                    duration: 2000
                });
                _this.addCatgBtnDisable = false;
                _this.addCatfSpinner = false;
                _this.closeBtn.nativeElement.click();
                _this.refresh();
            }
        });
    };
    CompanyProjectCategoryComponent.prototype.getEditId = function (id) {
        var _this = this;
        console.log(id);
        this.showSpinner = false;
        this.companyService.getSinglecategory(id).subscribe(function (data) {
            console.log(data);
            _this.category = data;
            //this.id = data.id;
            if (data.success == false) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
            }
        });
    };
    CompanyProjectCategoryComponent.prototype.updateCategory = function (category) {
        var _this = this;
        this.editCatgBtnDisable = true;
        this.editSpinner = true;
        //  console.log(category);
        this.showSpinner = true;
        this.companyService.updateCategory(this.category).subscribe(function (data) {
            if (!data.success) {
                _this.editCatgBtnDisable = false;
                _this.editSpinner = false;
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
            else if (data.success) {
                _this.editCatgBtnDisable = false;
                _this.editSpinner = false;
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.closeBtn1.nativeElement.click();
                _this.refresh();
            }
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyProjectCategoryComponent.prototype, "closeBtn", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn1'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyProjectCategoryComponent.prototype, "closeBtn1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn2'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyProjectCategoryComponent.prototype, "closeBtn2", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], CompanyProjectCategoryComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], CompanyProjectCategoryComponent.prototype, "sort", void 0);
    CompanyProjectCategoryComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-project-category',
            template: __webpack_require__("../../../../../src/app/components/company-project-category/company-project-category.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-project-category/company-project-category.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], CompanyProjectCategoryComponent);
    return CompanyProjectCategoryComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-project-planning/company-project-planning.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".home{position:relative;}\r\n.task{background:#fbf6f1;width:100%;padding:6px 0;display: inline-block;margin-bottom:6px;}\r\nbutton, input, optgroup, select, textarea{outline:none !important;}\r\n.taskedit{border-left:1px solid #ccc;    display: inline-block;width:100%;margin-top: 5px;}\r\n.task ul li{width:auto;float:left;padding: 8px;}\r\n\ta{color:#111;}\r\n.task h5{padding-top:13px;padding-top: 6px;}\r\n.hash{background:#f7f6f4;}\r\n.assigned{background:#f3f8f2;border-left:3px solid #6fa93b;}\r\n.unassigned{background:#fbf1ef;border-left:3px solid #e5553d;}\r\n\r\n.assigned h5 {\r\n    padding-top: 13px;\r\n    padding-top: 6px;\r\n    display: table-cell;\r\n    padding-right: 15px;\r\n    float:left;\r\n}\r\n.assigned ul li{padding: 6px}\r\n.mrg-tp{margin-top:15px !important;}\r\n.round-button {\r\n    border-radius: 20px;\r\n    margin: 0;\r\n    float: left;\r\n    background: #f37600;\r\n    color: #fff;\r\n    padding: 7px 15px;\r\n    transition: background 2s;\r\n\tmargin-bottom:15px;\r\n}\r\n.round-button:hover {\r\n    background: #ffaa05;\r\n    color: #fff;\r\n}\r\n.dropdown ul.dropdown-menu:before {\r\n    content: \"\";\r\n    border-bottom: 10px solid #fff;\r\n    border-right: 10px solid transparent;\r\n    border-left: 10px solid transparent;\r\n    position: absolute;\r\n    top: -10px;\r\n    right: 16px;\r\n    z-index: 10;\r\n}\r\n.round-button:hover, .round-button:focus, .round-button.focus{color:#fff;}\r\nbutton, input, optgroup, select, textarea{outline:none;}\r\n.effect-1 ~ .focus-border{position: absolute; bottom: 0; left: 15px; width: 0; height: 2px;background-color: #bba28b; transition: 0.4s;right:15px;}\r\n.effect-1:focus ~ .focus-border{width: 95%; transition: 0.4s;}\r\n.effect-1{border: 0; padding: 7px 0; border-bottom: 1px solid #ccc;width:100%;}\r\n.style{width:100%;}\r\nlabel{font-size:15px;color:#4a4a4a;font-weight:normal;padding:5px 0;}\r\n.mrg-2{margin-bottom:10px;}\r\n.dropdown-menu > li > a {\r\n    display: block;\r\n    padding: 3px 20px;\r\n    clear: both;\r\n    font-weight: normal;\r\n    line-height: 25px;\r\n    color: #333333;\r\n    white-space: nowrap;\r\n}\r\n.addmodule {\r\n    padding: 20px 10px!important;\r\n    min-width: 357px;\r\n    right: inherit;\r\n    left: 20px;\r\n}\r\n.round{width:14px;height:14px;border-radius:50%;background:#70a93e;float:left;margin-right:7px;}\r\n.round2{background:#e4573c;}\r\n.notice p{font-size:11px;}\r\n.style{border:none;border-bottom: 1px solid #ccc;}\r\n.white {\r\n    background: #ffffff none repeat scroll 0 0;\r\n    \r\n    display: inline-block;\r\n    padding: 33px 25px;\r\n    width: 100%;\r\n}\r\n.btn-file{padding:0;}\r\n.white {\r\n    background: #ffffff none repeat scroll 0 0;\r\n    \r\n    display: inline-block;\r\n    padding: 33px 25px;\r\n    width: 100%;\r\n\tmargin-bottom:20px;\r\n}\r\n.center-bt{margin:20px auto 10px auto;float:none;}\r\n.project-planning .table > thead > tr > th{border:none;font-weight:normal;}\r\n.project-planning .table{margin-bottom:0;}\r\n@media only screen and (max-width : 767px) {\r\n.mrg-2 {\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.task ul li{    padding: 2px;}\t\r\n.addmodule{    min-width: 274px;}\r\n.martop {\r\n    margin-top: 35px;\r\n}\r\n.taskedit {\r\n    border-left: 1px solid #ccc;\r\n    display: inline-block;\r\n    width: 78%;\r\n    margin-top: 5px;\r\n    float: right;\r\n}\r\n.task{padding-bottom: 20px;}\r\n.addmodule .style{    margin-bottom: 18px;}\r\n}\r\n.padd-bt{padding-bottom: 20px;}\r\n.psh-left{padding-left:5% ;}\r\n.psh-left .form-group{margin-bottom:0px;}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.modal{top:0;}\r\n.modal-header {\r\n    padding: 10px 30px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #fe6a07;\r\n  }\r\n  .modal-content{\r\n  box-shadow:none;\r\n  border-radius: 9px;\r\n  overflow: hidden;\r\n  \r\n  }\r\n  .modal-title{color:#fff;}\r\n  .modal-body{    padding:20px 30px;}\r\n  .modal-body input{border:none;}\r\n  .modal-body input{padding: 0;}\r\n  .pad-top{padding-top:20px;}\r\n  .wdth{width:100% !important;}\r\n  .brd{    border: none;\r\n    height: 54px;}\r\n    .material-icons{\r\n        font-size: 20px;\r\n        float: left;\r\n        padding-right: 12px;\r\n        padding-top: 5px;\r\n    }\r\n    .close-bt{    width: 10px;\r\n        background: none;\r\n        float: right;\r\n        margin-top: 31px;\r\n        color: #111;\r\n        font-size: 11px;}\r\n    .padd-bt{    padding: 7px 6px !important;\r\n        font-size: 12px !important;\r\n        margin-top: 24px;}\r\n  .center{text-align: center;}\r\n  .center .round-button{margin:0 auto;float:none ;}\r\n  .editz{min-width: 100px;width: 100%;\r\n    top: 30px;}\r\n    .editz li{padding:0 !important;    width: 100% !important;}\r\n    .editz2 {\r\n        min-width: 522px;\r\n        width: 346%;\r\n        top: 30px;\r\n        left: 0;\r\n        max-width: 492px;\r\n        overflow: hidden;\r\n    }\r\n    .no-brdr{border:none !important;}\r\n    .am{\r\n        float: left;\r\n        background: none;\r\n        border: 2px solid #e6cebe;\r\n        margin-top: 23%;\r\n    }\r\n    .date-time{}\r\n    .assigned{background: rgba(255, 131, 109, 0.3) ;border-left: 3px solid #e5563c;}\r\n    .unassigned{background:#fbf1ef;border-left:3px solid #e5553d;}\r\n    .assigned ul li{padding: 6px}\r\n    .houricon .material-icons{ padding-top: 34px;}\r\n    /* .imageIcon {\r\n        width :25px;\r\n        height: 25px;\r\n    } */\r\n.nx-tp{\r\n    padding-top: 16px;\r\n}\r\n.nx-flt{\r\n    float: left !important;\r\n}\r\n.ngb-tp-hour input {\r\n    padding: 0 0px;\r\n}\r\n.mrg-tp{margin-right: 10px;}\r\n.abst{\r\n    position: absolute;\r\n    right: 4px;\r\n    top: -4px;\r\n}\r\n.relt{\r\n    position: relative;\r\n}\r\n.no-brdr{\r\n    border: none !important;\r\n}\r\n.mrgn-t{\r\n    width: 100%;\r\n    margin-top: 14px;\r\n}\r\n.tsk-dt{\r\n    margin: 0;\r\n    padding-top: 0 !important;\r\n}\r\n.tsk-lbl{\r\n    color: #828282;\r\n    font-size: 11px;\r\n    padding-top: 4px;\r\n    float: left;\r\n    white-space: pre;\r\n}\r\n.pd-1{\r\n    padding-top: 1px;\r\n}\r\n.loader2{display:block;text-align: left;margin-left: 20px;float:left;width: auto;margin-top: 20px;}\r\n\r\n.team-head2{float: left;}\r\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-project-planning/company-project-planning.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n      <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n        <!-- sidebar-->\r\n        <company-sidebar></company-sidebar>\r\n        <!-- end sidebar-->\r\n      </div>\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n        <!-- topbar-->\r\n        <company-topbar></company-topbar>\r\n        <!-- end topbar-->\r\n        <div class=\"user-dashboard\">\r\n          <!-- <h1>Hello, JS</h1> -->\r\n          <div class=\"row\">\r\n            <!-- --------------------------------------------- add task modal ----------------------------------------------------------------- -->\r\n            <div id=\"addTaskModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn>&times;</button>\r\n                    <h4 class=\"modal-title\">Add Task </h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"addTask(index);\">\r\n                      <div>\r\n                        <div class=\"example-container\">\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <label class=\"pad-top\">Task Name * :</label>\r\n                          </div>\r\n                          <div class=\"col-md-7 col-xs-6\">\r\n                            <mat-form-field>\r\n                              <input matInput name=\"task_name\" [(ngModel)]=\"newTasks.task_name\" autofocus>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <br>\r\n                          <div class=\"example-container\">\r\n                            <!-- <div class=\"col-md-4 col-xs-6\">\r\n                              <label class=\"pad-top\">Assigned person * :</label>\r\n                            </div>\r\n                            <div class=\"col-md-7 col-xs-6\">\r\n                              <mat-form-field class=\"inputfileds nx-flt\">\r\n                                <mat-select placeholder=\"Members\" name='assigned_person' #group=\"ngModel\" [(ngModel)]=\"newTasks.assigned_person\" (ngModelChange)=\"getassigned();\">\r\n                                  <mat-option [value]=\"users\" *ngFor=\"let users of projectSelectedTeam;\">{{users.f_name}} {{users.l_name}} </mat-option>\r\n                                </mat-select>\r\n                              </mat-form-field>\r\n                              <i *ngIf=\"assignedPersonEmpty\" matTooltip=\"To select an assigned person, please select atleast one team member from above list !\"\r\n                                class=\"material-icons info-icon nx-tp nx-flt\">info_outline</i>\r\n\r\n                            </div> -->\r\n                            <div class=\"clearfix\"></div>\r\n                            <div class=\"example-container\">\r\n                              <div class=\"col-md-4 col-xs-6\">\r\n                                <label class=\"pad-top\">Complexity :</label>\r\n                              </div>\r\n                              <div class=\"col-md-7 col-xs-6\">\r\n                                <mat-form-field class=\"inputfileds\">\r\n                                  <mat-select placeholder=\"Complexity\" name='complexity' #group=\"ngModel\" [(ngModel)]=\"newTasks.complexity\">\r\n                                    <mat-option [value]=\"complexity.id\" *ngFor=\"let complexity of complexitys;\">{{complexity.percentage}}</mat-option>\r\n                                  </mat-select>\r\n                                </mat-form-field>\r\n                              </div>\r\n                              <div class=\"clearfix\"></div>\r\n                              <br>\r\n                              <div class=\"col-md-4 col-xs-6\">\r\n                                <label class=\"pad-top\">Planned Hours *:</label>\r\n                              </div>\r\n                              <div class=\"col-md-2 col-xs-6\">\r\n                                <mat-form-field class=\"wdth\">\r\n                                  <input type=\"number\" matInput name=\"planned_hour\" min=\"0\" name='planned_hour' [(ngModel)]=\"newTasks.planned_hour\" (keypress)=\"_keyPress($event)\"\r\n                                    required>\r\n                                </mat-form-field>\r\n                              </div>\r\n                              <div class=\"col-md-3 col-xs-6\">\r\n                                <label class=\"pad-top\">Buffer Hours :</label>\r\n                              </div>\r\n                              <div class=\"col-md-2 col-xs-6\">\r\n                                <mat-form-field class=\"wdth\">\r\n                                  <input type=\"number\" matInput name=\"buffer_time\" min=\"0\" name='buffer_hour' [(ngModel)]=\"newTasks.buffer_hour\" (keypress)=\"_keyPress($event)\"\r\n                                    required>\r\n                                </mat-form-field>\r\n                              </div>\r\n                              <div class=\"clearfix\"></div>\r\n                              <br>\r\n\r\n\r\n                              <div class=\"col-md-3 col-xs-6\">\r\n                                <label class=\"pad-top\">Verification Hours *:</label>\r\n                              </div>\r\n                              <div class=\"col-md-2 col-xs-6\">\r\n                                <mat-form-field class=\"wdth\">\r\n                                  <input type=\"number\" matInput  min=\"0\" name='verification_hour' [(ngModel)]=\"newTasks.verification_hour\"\r\n                                    (keypress)=\"_keyPress($event)\" required>\r\n                                </mat-form-field>\r\n                              </div>\r\n                              <div class=\"clearfix\"></div>\r\n\r\n\r\n\r\n                              <div class=\"example-container\">\r\n                                <div class=\"col-md-4 col-xs-6\">\r\n                                  <label class=\"pad-top\">Task type :</label>\r\n                                </div>\r\n                                <div class=\"col-md-7 col-xs-6\">\r\n                                  <mat-form-field class=\"inputfileds\">\r\n                                    <mat-select [(value)]=\"selected1\" name='task_type' #group=\"ngModel\" [(ngModel)]=\"newTasks.task_type\">\r\n                                      <!-- <mat-option>None</mat-option> -->\r\n                                      <mat-option value=\"0\">Billable</mat-option>\r\n                                      <mat-option value=\"1\">Non Billable</mat-option>\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <div class=\"clearfix\"></div>\r\n                                <div class=\"example-container\">\r\n                                  <div class=\"col-md-4 col-xs-6\">\r\n                                    <label class=\"pad-top\">Priority :</label>\r\n                                  </div>\r\n                                  <div class=\"col-md-7 col-xs-6\">\r\n                                    <mat-form-field class=\"inputfileds\">\r\n                                      <mat-select [(value)]=\"selected2\" name='priority' #group=\"ngModel\" [(ngModel)]=\"newTasks.priority\">\r\n                                        <!-- <mat-option>None</mat-option> -->\r\n                                        <mat-option value=\"0\">High</mat-option>\r\n                                        <mat-option value=\"1\">Medium</mat-option>\r\n                                        <mat-option value=\"2\">Low</mat-option>\r\n                                      </mat-select>\r\n                                    </mat-form-field>\r\n                                  </div>\r\n                                  <div class=\"clearfix\"></div>\r\n                                  <div class=\"example-container\">\r\n                                    <!-- <div class=\"col-md-4 col-xs-5\">\r\n                                        <label class=\"pad-top\">Checklist :</label>\r\n                                      </div>\r\n                                      <div class=\"col-md-5 col-xs-5\">\r\n                                        <div *ngFor=\"let item of newTasks.newChecklist; let i = index; trackBy:trackByIndex\">\r\n                                          <mat-form-field class=\"example-form-field\">\r\n                                            <input matInput type=\"text\" name=\"checklist{{i}}\" required [(ngModel)]=\"newTasks.newChecklist[i].name\" />\r\n                                            <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\r\n                                              <mat-icon>close</mat-icon>\r\n                                            </button>\r\n                                          </mat-form-field>\r\n                                          <input type=\"button\" value=\"X\" (click)=\"closeChecklist(i)\" class=\"close-bt\">\r\n                                        </div>\r\n                                      </div> -->\r\n                                    <!-- <div class=\"col-md-3 col-xs-2\">\r\n                                        <input type=\"button\" value=\"Add More\" (click)=\"addMore()\" class=\"round-button padd-bt\">\r\n                                      </div> -->\r\n                                    <div class=\"clearfix\"></div>\r\n                                    <div class=\"example-container\">\r\n                                      <div class=\"col-md-3 col-xs-6\">\r\n                                        <label class=\"pad-top\">Attachment :</label>\r\n                                      </div>\r\n                                      <div class=\"col-md-7 col-xs-6\">\r\n                                        <input (change)=\"displayDoc($event)\" name=\"file\" type=\"file\" accept=\".jpeg, .png, .gif,.jar, .pdf\" />\r\n                                        <!-- <input (change)=\"displayDoc($event)\" name=\"file\" type=\"file\" [(ngModel)]=\"newTasks.file\" /> -->\r\n                                      </div>\r\n                                      <div class=\"clearfix\"></div>\r\n                                      <div class=\"center\">\r\n                                        <button type=\"submit\" class=\"btn round-button dropdown-toggle mrg-tp\">Save</button>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- --------------------------------------------- end add modal ----------------------------------------------------------------- -->\r\n            <!-- --------------------------------------------- delete module modal ----------------------------------------------------------------- -->\r\n            <div id=\"deleteModuleModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">Delete </h4>\r\n                  </div>\r\n                  <!-- <div class=\"modal-header\"> -->\r\n                  <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n                  <!-- </div> -->\r\n                  <div class=\"modal-body delete-popup\">\r\n                    <i class=\"fa fa-exclamation\"></i>\r\n                    <h4 class=\"textalign\">Are you sure?</h4>\r\n                  </div>\r\n                  <div class=\"modal-footer\" style=\"text-align:center;\">\r\n                    <button type=\"button\" (click)=\"deleteModule(index)\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Delete</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- --------------------------------------------- delete task modal ----------------------------------------------------------------- -->\r\n            <div id=\"deleteTaskModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">Delete </h4>\r\n                  </div>\r\n                  <!-- <div class=\"modal-header\"> -->\r\n                  <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n                  <!-- </div> -->\r\n                  <div class=\"modal-body delete-popup\">\r\n                    <i class=\"fa fa-exclamation\"></i>\r\n                    <h4 class=\"textalign\">Are you sure?</h4>\r\n                  </div>\r\n                  <div class=\"modal-footer\" style=\"text-align:center;\">\r\n                    <button type=\"button\" (click)=\"deleteTask(i,j)\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Delete</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- ----------------------------------------------------------------------delete task modal--------------------------------------------------------------------- -->\r\n            <!-- ----------------------------------------------------------------------edit task modal--------------------------------------------------------------------- -->\r\n            <div id=\"editTaskModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button (click)=\"closeEditModal(i,j)\" type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn1>&times;</button>\r\n                    <h4 class=\"modal-title\">Edit Task </h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"editTask(i,j,newTasks);\">\r\n                      <div>\r\n                        <div class=\"example-container\">\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <label class=\"pad-top\">Task Name * :</label>\r\n                          </div>\r\n                          <div class=\"col-md-7 col-xs-6\">\r\n                            <mat-form-field>\r\n                              <input matInput name=\"task_name\" [(ngModel)]=\"newTasks.task_name\" autofocus>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <label class=\"pad-top\">Complexity :</label>\r\n                          </div>\r\n                          <div class=\"col-md-7 col-xs-6\">\r\n                            <mat-form-field class=\"inputfileds\">\r\n                              <mat-select placeholder=\"Complexity\" name='complexity' #group=\"ngModel\" [(ngModel)]=\"newTasks.complexity\">\r\n                                <mat-option [value]=\"complexity.id\" *ngFor=\"let complexity of complexitys;\">{{complexity.percentage}}</mat-option>\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n                          <br>\r\n                          <br>\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <label class=\"pad-top\">Planned Hours *:</label>\r\n                          </div>\r\n                          <div class=\"col-md-2 col-xs-6\">\r\n                            <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput name=\"planned_hour\" min=\"0\" name='planned_hour' [(ngModel)]=\"newTasks.planned_hour\" (keypress)=\"_keyPress($event)\"\r\n                                required>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <label class=\"pad-top\">Buffer Hours :</label>\r\n                          </div>\r\n                          <div class=\"col-md-2 col-xs-6\">\r\n                            <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput name=\"buffer_time\" min=\"0\" name='buffer_hour' [(ngModel)]=\"newTasks.buffer_hour\" (keypress)=\"_keyPress($event)\"\r\n                                required>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <label class=\"pad-top\">Verification Hours *:</label>\r\n                          </div>\r\n                          <div class=\"col-md-2 col-xs-6\">\r\n                            <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput  min=\"0\" name='verification_hour' [(ngModel)]=\"newTasks.verification_hour\"\r\n                                (keypress)=\"_keyPress($event)\" required>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n\r\n                          <div class=\"example-container\">\r\n                            <div class=\"col-md-4 col-xs-6\">\r\n                              <label class=\"pad-top\">Task type :</label>\r\n                            </div>\r\n                            <div class=\"col-md-7 col-xs-6\">\r\n                              <mat-form-field class=\"inputfileds\">\r\n                                <mat-select [(value)]=\"selected1\" name='task_type' #group=\"ngModel\" [(ngModel)]=\"newTasks.task_type\">\r\n                                  <!-- <mat-option>None</mat-option> -->\r\n                                  <mat-option value=\"0\">Billable</mat-option>\r\n                                  <mat-option value=\"1\">Non Billable</mat-option>\r\n                                </mat-select>\r\n                              </mat-form-field>\r\n                            </div>\r\n                            <div class=\"clearfix\"></div>\r\n                            <div class=\"example-container\">\r\n                              <div class=\"col-md-4 col-xs-6\">\r\n                                <label class=\"pad-top\">Priority :</label>\r\n                              </div>\r\n                              <div class=\"col-md-7 col-xs-6\">\r\n                                <mat-form-field class=\"inputfileds\">\r\n                                  <mat-select [(value)]=\"selected2\" name='priority' #group=\"ngModel\" [(ngModel)]=\"newTasks.priority\">\r\n                                    <!-- <mat-option>None</mat-option> -->\r\n                                    <mat-option value=\"0\">High</mat-option>\r\n                                    <mat-option value=\"1\">Medium</mat-option>\r\n                                    <mat-option value=\"2\">Low</mat-option>\r\n                                  </mat-select>\r\n                                </mat-form-field>\r\n                              </div>\r\n                              <div class=\"clearfix\"></div>\r\n                              <div class=\"example-container\">\r\n                                <!-- <div class=\"col-md-4 col-xs-5\">\r\n                                        <label class=\"pad-top\">Checklist :</label>\r\n                                      </div>\r\n                                      <div class=\"col-md-5 col-xs-5\">\r\n                                          <div *ngFor=\"let item of newTasks.newChecklist; let i = index; trackBy:trackByIndex\">\r\n                                            <mat-form-field class=\"example-form-field\">\r\n                                              <input matInput type=\"text\" name=\"checklist_{{i}}\" required [(ngModel)]=\"newTasks.newChecklist[i].name\" ngModel/>\r\n                                              <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value='' \">\r\n                                                <mat-icon>close</mat-icon>\r\n                                              </button>\r\n                                            </mat-form-field>\r\n                                            <input type=\"button\" value=\"X\" (click)=\"closeChecklist(i)\" class=\"close-bt\">\r\n                                          </div>\r\n                                        </div> -->\r\n                                <!-- <div class=\"col-md-5 col-xs-5\">\r\n                                        <div *ngFor=\"let item of newTasks.newChecklist; let i = index; trackBy:trackByIndex\">\r\n                                          <mat-form-field class=\"example-form-field\">\r\n                                            <input matInput type=\"text\" name=\"name\" required value=\"{{item.name}}\" [(ngModel)]=\"item.name\" />\r\n                                            <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\r\n                                              <mat-icon>close</mat-icon>\r\n                                            </button>\r\n                                          </mat-form-field>\r\n                                          <input type=\"button\" value=\"X\" (click)=\"closeChecklist(i)\" class=\"close-bt\">\r\n                                        </div>\r\n                                      \r\n                                      </div> -->\r\n                              </div>\r\n                              <!-- <div class=\"col-md-3 col-xs-2\">\r\n                                      <input type=\"button\" value=\"Add More\" (click)=\"addMoreFromEdit()\" class=\"round-button padd-bt\">\r\n                                    </div> -->\r\n                              <div class=\"clearfix\"></div>\r\n                              <div class=\"example-container\">\r\n                                <div class=\"col-md-3 col-xs-6\">\r\n                                  <label class=\"pad-top\">Attachment :</label>\r\n                                </div>\r\n\r\n                                <div class=\"col-md-7 col-xs-6\">\r\n                                  <input (change)=\"displayDoc($event)\" name=\"file\" type=\"file\" accept=\".jpeg, .png, .gif,.jar, .pdf\" />\r\n                                  <!-- <input (change)=\"displayDoc($event)\" name=\"file\" type=\"file\" [(ngModel)]=\"newTasks.file\" /> -->\r\n                                </div>\r\n                                <div class=\"clearfix\"></div>\r\n                                <div class=\"center\">\r\n                                  <button type=\"submit\" class=\"btn round-button dropdown-toggle mrg-tp\">Save</button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- ----------------------------------------------------------------------edit task modal--------------------------------------------------------------------- -->\r\n\r\n            <!-- ----------------------------------------------------------------------ASSIGN TASK MODAL--------------------------------------------------------------------- -->\r\n            <div id=\"assignTaskModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn3>&times;</button>\r\n                    <h4 class=\"modal-title\">Assign a task </h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"assignTask(i,j,newTasks);\">\r\n                      <div>\r\n                        <div class=\"example-container\">\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <label class=\"pad-top\">Task :</label>\r\n                          </div>\r\n                          <div class=\"col-md-6 col-xs-6 pad-top\">\r\n                            {{newTasks.task_name}}\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"example-container\">\r\n                            <div class=\"col-md-4 col-xs-6\">\r\n                              <label class=\"pad-top\">Assigned person * :</label>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-xs-6\">\r\n                              <mat-form-field class=\"inputfileds nx-flt\">\r\n                                <mat-select name='assigned_person' #group=\"ngModel\" [(ngModel)]=\"newTasks.assigned_person\" (ngModelChange)=\"assignedAuser(newTasks);\"\r\n                                  [disabled]=\"disabled[newTasks.id]\">\r\n                                  <mat-option [value]=\"users\" *ngFor=\"let users of projectSelectedTeam\">{{users.f_name}} {{users.l_name}} - ( {{users.team_name}} )</mat-option>\r\n                                </mat-select>\r\n                              </mat-form-field>\r\n                              <i *ngIf=\"assignedPersonEmpty\" matTooltip=\"To select an assigned person, please select atleast one team member from above list !\"\r\n                                class=\"material-icons info-icon  nx-tp nx-flt\">info_outline</i>\r\n                            </div>\r\n                            <div class=\"clearfix\"></div>\r\n                            <div class=\"center\">\r\n                              <button type=\"submit\" class=\"btn round-button dropdown-toggle mrg-tp\">Save</button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- ----------------------------------------------------------------------ASSIGN TASK MODAL--------------------------------------------------------------------- -->\r\n\r\n            <!-- ----------------------------------------------------------------------PROJECT END DATE MODAL--------------------------------------------------------------------- -->\r\n            <div id=\"projectEndDateModal\" class=\"modal fade\" role=\"dialog\">\r\n                <div class=\"modal-dialog\">\r\n                  <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn4>&times;</button>\r\n                      <h4 class=\"modal-title\">Project End date </h4>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                      <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"assignTask(i,j,newTasks);\">\r\n                        <div>\r\n                          <div class=\"example-container\">\r\n                            <div class=\"col-md-4 col-xs-6\">\r\n                              <label class=\"pad-top\">Project End date :</label>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-xs-6 pad-top\">\r\n                                <b>{{projectEndDate | date:'MMM dd yyyy hh:mm aa'}}</b>\r\n                            </div>\r\n                            <div class=\"clearfix\"></div>\r\n                      \r\n                          </div>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- ----------------------------------------------------------------------PROJECT END DATE  MODAL--------------------------------------------------------------------- -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <div class=\"col-md-6 col-sm-12 col-xs-12 gutter \">\r\n              <div class=\"white project-planning\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"\">\r\n                      <b>Project Name :*</b>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"row\">\r\n                      <label for=\"\" class=\"label2\">\r\n                        <b>{{Projects.name}}</b>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"form-group\">\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"\">\r\n                      <b>Project Code :</b>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"row\">\r\n                      <label for=\"\" class=\"label2\">\r\n                        <b>{{Projects.code}}</b>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"form-group\">\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"\">\r\n                      <b>Project Start Date  :*</b>\r\n                    </label>\r\n                  </div>\r\n                  <mat-form-field>\r\n                    <input style=\"font-weight: bold\" matInput [matDatepicker]=\"picker\" [formControl]=\"date\" [(ngModel)]=\"Projects.start_date\"\r\n                      (ngModelChange)=\"projectStartDateSelect()\" [min]=\"todayDate\">\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                  </mat-form-field>\r\n                  <div class=\"col-md-6 pull-right\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-8\">\r\n                        <div class=\"row\">\r\n                          <ngb-timepicker style=\"font-weight: bold\" id=\"datetimepicker-input\" class=\"no-brdr\" name=\"start_time\" [(ngModel)]=\"Projects.start_time\"\r\n                            [seconds]=\"true\" (ngModelChange)=\"projectStartDateSelect();\"></ngb-timepicker>\r\n\r\n                        </div>\r\n\r\n                      </div>\r\n                      <div class=\"col-md-4\">\r\n                        <span class=\"houricon\" matTooltip=\"Time should be in 24 hour format \">\r\n                          <i class=\"material-icons info-icon\">info_outline</i>\r\n                        </span>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"clearfix\"></div>\r\n                </div>\r\n                <!-- -----------------------------------------hide when not select a project start datetime ----------------------------------- -->\r\n                <div *ngIf=\"Projects.start_date && Projects.start_time\">\r\n                  <div class=\"form-group\">\r\n                    <div class=\"col-md-6 \">\r\n                      <!-- <label for=\"\">\r\n                              <b>Team Head</b>\r\n                            </label> -->\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"clearfix\"></div>\r\n                  <div class=\"col-md-9 psh-left\">\r\n                    <!-- <div class=\"form-group\">\r\n                      <div class=\"col-md-7\">\r\n                        <label for=\"\">\r\n                          <b>Team Head :*</b>\r\n                        </label>\r\n                      </div>\r\n                      <mat-form-field class=\"inputfileds\">\r\n                        <mat-select style=\"font-weight: bold\" placeholder=\"Team head\" name='team_head' [(ngModel)]=\"Projects.teamhead\">\r\n                          <mat-option [value]=\"employee\" *ngFor=\"let employee of companyemployee\">\r\n                            <div class=\"team-head2\"> {{employee?.f_name}} {{employee?.l_name}} </div>\r\n                            <div class=\"team-head2\" *ngIf=\"employee?.tbl_team_assocs[0]?.tbl_team.team_name \"> - ( {{employee?.tbl_team_assocs[0]?.tbl_team.team_name }} ) </div>\r\n                          </mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </div> -->\r\n                  </div>\r\n                  <div class=\"clearfix\"></div>\r\n\r\n                  <div class=\"form-group\">\r\n                    <div class=\"col-md-6 padd-bt\">\r\n                      <label for=\"\">\r\n                        <b>Team Members :*</b>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"clearfix\"></div>\r\n                  <div class=\"col-md-9 psh-left\">\r\n                    <div class=\"form-group\" *ngFor=\"let item of allteam\">\r\n                      <div class=\"col-md-7\">\r\n                        <label for=\"\">\r\n                          <b>{{item?.team_name}} :</b>\r\n                        </label>\r\n                      </div>\r\n                      <mat-form-field class=\"inputfileds\">\r\n                        <mat-select style=\"font-weight: bold\" placeholder=\"{{item?.team_name}}\" name='{{item?.id}}' multiple [(ngModel)]=\"Projects.selctedTeam[item.id]\"\r\n                          (ngModelChange)=\"chooseTeamMember();\">\r\n                          <mat-option [value]=\"teamassoc?.tbl_user_profile\" *ngFor=\"let teamassoc of item.tbl_team_assocs\" [value]=\"teamassoc\">{{teamassoc?.tbl_user_profile?.f_name}} {{teamassoc?.tbl_user_profile?.l_name}} </mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <!-- <div class=\"form-group\">\r\n                        <div class=\"col-md-7\">\r\n                          <label for=\"\">\r\n                            <b>Designers</b>\r\n                          </label>\r\n                        </div>\r\n                        <mat-form-field class=\"inputfileds\">\r\n                          <mat-select style=\"font-weight: bold\" placeholder=\"Designers\" name='selected' multiple [(ngModel)]=\"Projects.designer\" (ngModelChange)=\"chooseTeamMember();\">\r\n                            <mat-option [value]=\"Designer\" *ngFor=\"let Designer of Designers;\">{{Designer.f_name}} {{Designer.l_name}}</mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <div class=\"col-md-7\">\r\n                          <label for=\"\">\r\n                            <b>QC</b>\r\n                          </label>\r\n                        </div>\r\n                        <mat-form-field class=\"inputfileds\">\r\n                          <mat-select style=\"font-weight: bold\" placeholder=\"QC\" name='selected' multiple [(ngModel)]=\"Projects.qc\" (ngModelChange)=\"chooseTeamMember();\">\r\n                            <mat-option [value]=\"QC\" *ngFor=\"let QC of QCs;\">{{QC.f_name}} {{QC.l_name}}</mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </div> -->\r\n                  </div>\r\n                  <div class=\"clearfix\"></div>\r\n                  <form role=\"form\" (ngSubmit)=\"addModule()\" novalidate>\r\n                    <div class=\"form-group\">\r\n                      <div class=\"col-md-4 col-xs-7 mrg-2\">\r\n                        <button type=\"button\" class=\"btn round-button dropdown-toggle mrg-tp\" data-toggle=\"dropdown\" (click)=\"addModuleClear()\">Add Module</button>\r\n                        <br>\r\n                        <ul class=\"dropdown-menu addmodule\" role=\"menu\">\r\n                          <div class=\"col-md-8\">\r\n                            <input class=\"style\" type=\"text\" placeholder=\"Module Name\" name=\"name\" [(ngModel)]=\"module.module_name\">\r\n                          </div>\r\n                          <div class=\"col-md-4\">\r\n                            <button type=\"submit\" class=\"btn round-button pull-right\">Save</button>\r\n                          </div>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                  <br>\r\n                  <div class=\"clearfix\"></div>\r\n                  <div class=\"form-group mrg-2\">\r\n                    <div class=\"col-md-4 col-xs-4\">\r\n                      <label>\r\n                        <b>Total Estimated Hours</b>\r\n                      </label>\r\n                    </div>\r\n                    <div class=\"col-md-4 col-xs-4\">\r\n                      <div>\r\n                        <h5>\r\n                          <b>{{totalEstimatedhr}}</b>\r\n                        </h5>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-4 col-xs-4 notice\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-6 col-xs-6\">\r\n                          <span class=\"round\"></span>\r\n                          <p>Assigned</p>\r\n                        </div>\r\n                        <div class=\"col-md-6 col-xs-6\">\r\n                          <span class=\"round round2\"></span>\r\n                          <p>Unasigned</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div>\r\n                      <div *ngFor=\"let module of modules; let i = index\">\r\n                        <div class=\"col-md-12 col-xs-12 pull-right\">\r\n                          <div class=\"task\">\r\n                            <div class=\"col-md-8 col-xs-7\">\r\n                              <div>\r\n                                <!-- <p>dfd</p> -->\r\n                                <h5>{{module.module_name}}</h5>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-md-4 col-xs-5\">\r\n                              <ul class=\"taskedit\">\r\n                                {{module.time}}\r\n                                <!-- <li>22 Hr</li> -->\r\n                                <li class=\"pull-right\" *ngIf=\"!module.removeBtn\">\r\n                                  <a href=\"#\" data-toggle=\"tooltip\" matTooltip=\"Delete module\" data-toggle=\"modal\" data-target=\"#deleteModuleModal\" (click)=\"getId(i)\">\r\n                                    <i class=\"fa fa-close\" aria-hidden=\"true\"></i>\r\n                                  </a>\r\n                                </li>\r\n                                <!-- <div class=\"col-md-4 col-xs-7 mrg-2\"> -->\r\n                                <li class=\"pull-right\" *ngIf=\"!module.removeBtn\">\r\n                                  <form role=\"form\" #f=\"ngForm\" novalidate>\r\n                                    <a href=\"#\" data-toggle=\"tooltip\" matTooltip=\"Edit module\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" (click)=\"getId(i)\"\r\n                                      class=\"dropdown\">\r\n                                      <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                    </a>\r\n                                    <ul class=\"dropdown-menu addmodule editz\" role=\"menu\">\r\n                                      <div class=\"col-md-8\">\r\n                                        <input class=\"style\" type=\"text\" placeholder=\"Module Name\" name=\"module_name\" [(ngModel)]=\"module.module_name\">\r\n                                      </div>\r\n                                      <div class=\"col-md-4\">\r\n                                        <button type=\"submit\" class=\"btn round-button pull-right\">Close</button>\r\n                                      </div>\r\n                                    </ul>\r\n                                  </form>\r\n                                </li>\r\n                                <!-- </div> -->\r\n                                <li class=\"pull-right\"></li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <div draggable=\"true\" [class]=\"'itemClass'\" *ngFor=\"let task of modules[i].tbl_estimation_tasks; let j = index\">\r\n                            <div class=\"col-md-11 col-xs-12 pull-right\">\r\n                              <div class=\"task assigned relt\" [ngStyle]=\"{'background-color': task?.color, 'border-left': task?.bordercolor}\">\r\n                                <div class=\"col-md-12 col-xs-12 martop\">\r\n                                  <a data-toggle=\"tooltip\" matTooltip=\"Task name\">\r\n                                    <h5 class=\"mrgn-t\">\r\n                                      <span class=\"tsk-lbl pd-1\">Task: </span>{{task.task_name}}</h5>\r\n                                  </a>\r\n                                  <div *ngIf=\"task.assigned_user\">\r\n                                    <a data-toggle=\"tooltip\" matTooltip=\"Assigned user\">\r\n                                      <label for=\"\" class=\"tsk-lbl\">Assigned Person: </label>\r\n                                      <h5 class=\"tsk-dt\">{{task.assigned_user.f_name || assigned_user.f_name }} {{task.assigned_user.l_name\r\n                                        || assigned_user.l_name}}</h5>\r\n                                    </a>\r\n                                  </div>\r\n                                  <a data-toggle=\"tooltip\" matTooltip=\"Total Task hour\">\r\n                                    <label for=\"\" class=\"tsk-lbl\">Hours: </label>\r\n                                    <h5 class=\"tsk-dt\">{{task.planned_hour + task.buffer_hour}} hrs</h5>\r\n                                  </a>\r\n                                  <a data-toggle=\"tooltip\" matTooltip=\"Start Date time\">\r\n                                    <label for=\"\" class=\"tsk-lbl\" *ngIf=\"task?.start_date_time_new\">Start: </label>\r\n                                    <h5 class=\"tsk-dt\">{{task?.start_date_time_new | date:'MMM dd yyyy hh:mm aa'}}</h5>\r\n                                  </a>\r\n                                  <a data-toggle=\"tooltip\" matTooltip=\"End date time\">\r\n                                    <label for=\"\" class=\"tsk-lbl\" *ngIf=\"task?.end_date_time\">End: </label>\r\n                                    <h5 class=\"tsk-dt\">{{task?.end_date_time | date:'MMM dd yyyy hh:mm aa'}}</h5>\r\n                                  </a>\r\n                                </div>\r\n                                <div class=\"abst\">\r\n                                  <ul class=\"taskedit no-brdr\">\r\n                                    <li></li>\r\n                                    <li class=\"pull-right\" *ngIf=\"!task.removeBtn\">\r\n                                      <a href=\"#\" data-toggle=\"tooltip\" matTooltip=\"Delete Task\" data-toggle=\"modal\" data-target=\"#deleteTaskModal\" (click)=\"getId1(i,j)\">\r\n                                        <i class=\"fa fa-close\" aria-hidden=\"true\"></i>\r\n                                      </a>\r\n                                    </li>\r\n                                    <li class=\"pull-right\" *ngIf=\"!task.removeBtn\">\r\n\r\n                                      <a href=\"#\" data-toggle=\"tooltip\" matTooltip=\"Edit task\" data-target=\"#editTaskModal\" data-toggle=\"modal\" (click)=\"getId2(i,j,task)\"\r\n                                        data-backdrop=\"static\" data-keyboard=\"false\">\r\n                                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                      </a>\r\n                                    </li>\r\n                                    <li class=\"pull-right\" *ngIf=\"!task.removeBtn\">\r\n\r\n                                      <a href=\"#\" data-toggle=\"tooltip\" matTooltip=\"Assign team member\" data-target=\"#assignTaskModal\" data-toggle=\"modal\" (click)=\"getId3(i,j,task)\"\r\n                                        data-backdrop=\"static\" data-keyboard=\"false\">\r\n                                        <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                                      </a>\r\n                                    </li>\r\n\r\n                                  </ul>\r\n                                </div>\r\n\r\n                                <div class=\"clearfix\"></div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-12\" *ngIf=\"!module.removeBtn\">\r\n                            <button type=\"button\" (click)=\"getId(i)\" data-toggle=\"modal\" data-target=\"#addTaskModal\" class=\"btn round-button pull-right right-btn\"\r\n                              data-backdrop=\"static\" data-keyboard=\"false\">Add Task</button>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"clearfix\"></div>\r\n                      </div>\r\n\r\n\r\n                      <!-- -------------------------------------------------------Verification module---------------------------------------------- -->\r\n                      <!-- <div>\r\n                        <div class=\"col-md-12 col-xs-12 pull-right\">\r\n                          <div class=\"task\">\r\n                            <div class=\"col-md-8 col-xs-7\">\r\n                              <div>\r\n\r\n                                <h5>Module name</h5>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-md-4 col-xs-5\">\r\n                              <ul class=\"taskedit\">\r\n                                {{total_verification_time}}\r\n                                <li class=\"pull-right\">\r\n                                </li>\r\n                                <li class=\"pull-right\"></li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <div draggable=\"true\" [class]=\"'itemClass'\">\r\n                            <div class=\"col-md-11 col-xs-12 pull-right\">\r\n                              <div class=\"task assigned relt\" [ngStyle]=\"{'background-color': task?.color, 'border-left': task?.bordercolor}\">\r\n                                <div class=\"col-md-12 col-xs-12 martop\">\r\n                                  <a data-toggle=\"tooltip\" matTooltip=\"Task name\">\r\n                                    <h5 class=\"mrgn-t\">\r\n                                      <span class=\"tsk-lbl pd-1\">Task: </span>Task name</h5>\r\n                                  </a>\r\n                                  <div>\r\n                                    <a data-toggle=\"tooltip\" matTooltip=\"Assigned user\">\r\n                                      <label for=\"\" class=\"tsk-lbl\">Assigned Person: </label>\r\n                                      <h5 class=\"tsk-dt\">{{Projects?.teamhead.f_name}} {{Projects?.teamhead.l_name}}</h5>\r\n                                    </a>\r\n                                  </div>\r\n                                  <a data-toggle=\"tooltip\" matTooltip=\"Total Task hour\">\r\n                                    <label for=\"\" class=\"tsk-lbl\">Hours: </label>\r\n                                    <h5 class=\"tsk-dt\"> {{total_verification_time}} hrs</h5>\r\n                                  </a>\r\n                                  <a data-toggle=\"tooltip\" matTooltip=\"Start Date time\">\r\n                                    <label for=\"\" class=\"tsk-lbl\">Start: </label>\r\n                                    <h5 class=\"tsk-dt\">start date time</h5>\r\n                                  </a>\r\n                                  <a data-toggle=\"tooltip\" matTooltip=\"End date time\">\r\n                                    <label for=\"\" class=\"tsk-lbl\" >End: </label>\r\n                                    <h5 class=\"tsk-dt\">End date time</h5>\r\n                                  </a>\r\n                                </div>\r\n                                <div class=\"clearfix\"></div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                        </div>\r\n                        <div class=\"clearfix\"></div>\r\n                      </div> -->\r\n                      <!-- -------------------------------------------------------Verification module---------------------------------------------- -->\r\n                      <div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"clearfix\"></div>\r\n                    <button type=\"button\" class=\"btn round-button dropdown-toggle mrg-tp\" [disabled]=\"disableCalculateBtn\" (click)=\"calculateEnddate()\">\r\n                      Calculate End date</button>\r\n                    <div *ngIf=\"showSpinner\">\r\n                      <app-spinner class=\"loader2\"></app-spinner>\r\n                    </div>\r\n                    <!-- <div *ngIf=\"showSaveBtn\"><button type=\"button\" class=\"btn round-button dropdown-toggle mrg-tp\" (click)=\"savePlanningData()\"> Save </button></div> -->\r\n\r\n\r\n                    <div *ngIf=\"showSaveBtn\">\r\n                      <button type=\"button\" class=\"btn round-button dropdown-toggle mrg-tp pull-right\" [disabled]=\"saveBtnDisable\" (click)=\"savePlanningData()\">\r\n                        Save </button>\r\n                      <div class=\"leftspinner\" *ngIf=\"showSpinnersave\">\r\n                        <app-spinner></app-spinner>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!-- -----------------------------------------hide when not select a project start datetime ----------------------------------- -->\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"white\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"example-header\">\r\n                        <mat-form-field>\r\n                          <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"pull-right\">\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"example-container mat-elevation-z8 \">\r\n                  <mat-table [dataSource]=\"dataSource\" matSort>\r\n                    <ng-container matColumnDef=\"slno\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header>Sl_No </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row;let i = index\"> {{i+1}} </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"user\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> USER </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.f_name}} {{row.l_name}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <!-- <ng-container matColumnDef=\"teamhead\">\r\n                      <mat-header-cell *matHeaderCellDef> </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\">\r\n\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> TEAM HEAD </mat-header-cell>\r\n                        <mat-slide-toggle class=\"example-margin\" name=\"team_head\" [(ngModel)]=\"row.is_team_head\" (change)=\"onTeamHeadChange(row)\"\r\n                          [checked]=\"row.is_team_head\">\r\n                        </mat-slide-toggle>\r\n                      </mat-cell>\r\n                    </ng-container> -->\r\n\r\n\r\n                    <ng-container matColumnDef=\"teamhead\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header> ASSIGN TEAM HEAD </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\"> <mat-slide-toggle class=\"example-margin\" name=\"team_head\" [(ngModel)]=\"row.is_team_head\" (change)=\"onTeamHeadChange(row)\"\r\n                          [checked]=\"row.is_team_head\">\r\n                        </mat-slide-toggle></mat-cell>\r\n                      </ng-container>\r\n\r\n\r\n\r\n                    <ng-container matColumnDef=\"start_date\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header>START DATE</mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row;let i = index\">\r\n                        <input matInput [matDatepicker]=\"picker\" name='start_date1' [(ngModel)]=\"row.start_date\" (ngModelChange)=\"setAvailableDateTimeofUser();\"\r\n                          [min]=\"todayDate1\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker></mat-datepicker>\r\n                      </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"start_time\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> START TIME </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\" class=\"padding3\">\r\n                        <ngb-timepicker class=\"no-brdr new-x\" name=\"start_time\" [(ngModel)]=\"row.start_time\" [seconds]=\"true\" (ngModelChange)=\"setAvailableDateTimeofUser();\"></ngb-timepicker>\r\n                      </mat-cell>\r\n                    </ng-container>\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                  </mat-table>\r\n                  <div class=\"col-md-15 \">\r\n                  </div>\r\n                  <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n                    <div class=\"col-md-4 col-md-offset-4\">\r\n                      <mat-toolbar class=\"back-color\">No item found!</mat-toolbar>\r\n                    </div>\r\n                  </div>\r\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>"

/***/ }),

/***/ "../../../../../src/app/components/company-project-planning/company-project-planning.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyProjectPlanningComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__("../../../forms/esm5/forms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_ng2_dragula_ng2_dragula__ = __webpack_require__("../../../../ng2-dragula/ng2-dragula.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_ng2_dragula_ng2_dragula___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_ng2_dragula_ng2_dragula__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var CompanyProjectPlanningComponent = (function () {
    function CompanyProjectPlanningComponent(route, companyService, snackBar, routes, dragulaService) {
        this.route = route;
        this.companyService = companyService;
        this.snackBar = snackBar;
        this.routes = routes;
        this.dragulaService = dragulaService;
        this.todayDate = new Date();
        this.showSaveBtn = false;
        this.disableCalculateBtn = false;
        this.isSuccess = true;
        this.isSucessCalculate = true;
        this.is_show_verification_module = false;
        this.projectSelectedTeam = [];
        this.datepicker = false;
        this.showstartdate = false;
        this.saveBtnDisable = false;
        this.displayedColumns = ['slno', 'user', 'teamhead', 'start_date', 'start_time'];
        this.selected = '0';
        this.selected1 = '0';
        this.selected2 = '0';
        this.taskNo = 0;
        this.disabled = [];
        this.sum = 0;
        this.sum1 = 0;
        this.arr1 = [];
        this.arr2 = [];
        // ------------------Assigned users--------------
        this.teamMembers = [];
        this.meridain = 'AM';
        this.startDate1 = [];
        this.task_time = 0;
        this.shownewModule = false;
        this.shownewTasks = false;
        this.QcIcon = false;
        this.DeveloperIcon = false;
        this.DesignerIcon = false;
        this.teamheadselect = false;
        this.spinner = false;
        this.assignPerson = [];
        this.userAvailablity = [];
        this.showSpinner = false;
        this.showSpinnersave = false;
        this.endDatetime = {
            start_Date: ''
        };
        this.showUser = [];
        // -----assign task----
        this.assigntask = {
            // start_time: '',
            planned_hour: 0,
            buffer_hour: 0,
            total_hour: 0,
        };
        this.module = {
            module_name: '',
            time: 0,
            tbl_estimation_tasks: [],
            removeBtn: false
        };
        this.Projects = {
            name: '',
            code: '',
            start_date: new Date(),
            developer: [],
            designer: [],
            qc: [],
            selctedTeam: {},
            teamhead: '',
            start_time: { hour: 0, minute: 0, second: 0 }
        };
        this.newTasks = {
            task_name: '',
            assigned_person: '',
            complexity: 0,
            planned_hour: 0,
            buffer_hour: 0,
            verification_hour: 0,
            start_date: '',
            start_time: '',
            end_date: '',
            end_time: '',
            task_type: '',
            priority: '',
            assigned: '',
            assigned1: '',
            docFile: [],
            docSrc: '',
            color: '',
            bordercolor: '',
            file: '',
            newChecklist: [{ name: '' }],
            assigned_user: '',
            is_verif_task: false
        };
        this.newTasks1 = {
            task_name: '',
            assigned_person: '',
            complexity: 0,
            planned_hour: 0,
            buffer_hour: 0,
            verification_hour: 0,
            start_date: '',
            start_time: '',
            end_date: '',
            end_time: '',
            task_type: '',
            priority: '',
            assigned: '',
            assigned1: '',
            docFile: [],
            docSrc: '',
            color: '',
            bordercolor: '',
            file: '',
            newChecklist: [{ name: '' }],
            assigned_user: '',
            removeBtn: false,
            is_verif_task: false,
        };
        this.assignedperdatevariable = {
            id: '',
            date: ''
        };
        this.assignedPersonDateArray = [];
        this.assignedPersonDateArray1 = [];
        this.holidaydata = [];
        this.leavedata = [];
        this.worktime = [];
        this.offday = [];
        this.is_not_planned_start_time = [];
        this.assignedPersonEmpty = false;
        this.date = new __WEBPACK_IMPORTED_MODULE_4__angular_forms__["FormControl"](new Date());
        this.serializedDate = new __WEBPACK_IMPORTED_MODULE_4__angular_forms__["FormControl"]((new Date()).toISOString());
        this.oldDevTeam = '';
    }
    CompanyProjectPlanningComponent.prototype.meridian = function () {
        if (this.meridain == 'AM') {
            this.meridain = 'PM';
        }
        else if (this.meridain == 'PM') {
            this.meridain = 'AM';
        }
    };
    CompanyProjectPlanningComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    CompanyProjectPlanningComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.totalEstimatedhr = 0;
        this.Projects.start_date = new Date();
        var hr = this.Projects.start_date.getHours();
        var mnt = this.Projects.start_date.getMinutes();
        var sec = this.Projects.start_date.getSeconds();
        this.Projects.start_time = { hour: hr, minute: mnt, second: sec };
        this.modules = [];
        this.myArray = [];
        this.myArray1 = [];
        this.myArray3 = [];
        this.holidaydata = [];
        this.assignedPersonDateArray = [];
        this.assignedPersonDateArray1 = [];
        this.offday = [];
        this.assignPerson = [];
        this.worktime = [];
        this.leavedata = [];
        this.is_not_planned_start_time = [];
        this.sub = this.route.params.subscribe(function (params) {
            _this.p_id = params.id;
            _this.companyService.getProjectById(_this.p_id).subscribe(function (resData) {
                _this.Projects.name = resData.project_name;
                _this.Projects.code = resData.project_code;
                _this.totalEstimatedhr = resData.total_estimated_hour;
            });
        });
        this.companyService.getDeveloperUsers().subscribe(function (developerDatas) {
            // console.log(developerDatas);
            _this.Developers = developerDatas;
        });
        this.companyService.getDesignerrUsers().subscribe(function (designerDatas) {
            _this.Designers = designerDatas;
        });
        this.companyService.getQcUsers().subscribe(function (qcDatas) {
            _this.QCs = qcDatas;
        });
        this.companyService.getTasksModules(this.p_id).subscribe(function (data) {
            _this.moduledata = data;
            _this.total_verification_time = 0;
            _this.moduledata.forEach(function (element) {
                _this.modules.push(element);
                _this.task_time = 0;
                _this.arr1.push(element.tbl_estimation.estimation_hour);
                element.tbl_estimation_tasks.forEach(function (elementimation_tasks) {
                    _this.task_time = _this.task_time + elementimation_tasks.planned_hour + elementimation_tasks.buffer_hour;
                    _this.total_verification_time = _this.total_verification_time + elementimation_tasks.verification_hour;
                    elementimation_tasks.newChecklist = [];
                });
                element.time = _this.task_time;
            });
            _this.arr1.forEach(function (element2) {
                _this.sum = _this.sum + element2;
            });
            _this.companyService.getAllUsers().subscribe(function (team) {
                _this.team = team;
                // this.assignPerson = asignedPerson;
            });
            _this.companyService.getComplexity().subscribe(function (complexity) {
                _this.complexitys = complexity;
            });
        });
        this.companyService.getWorkingTime().subscribe(function (getWorkingTime) {
            _this.getWorkingTime = getWorkingTime;
        });
        this.companyService.getallTeamsforassign().subscribe(function (res) {
            _this.allteam = res;
        });
        this.companyService.getAllcompanyemployeeWithTeam().subscribe(function (res) {
            _this.companyemployee = res;
            // console.log(this.companyemployee);
        });
    };
    CompanyProjectPlanningComponent.prototype.chooseTeamMember = function () {
        var _this = this;
        var userOldArr = [];
        userOldArr = this.projectSelectedTeam;
        var OldSelectedUserId = [];
        userOldArr.forEach(function (element) {
            OldSelectedUserId.push(element.id);
        });
        this.projectSelectedTeam = [];
        var selectedUserId = [];
        // console.log(this.Projects.developer);
        this.allteam.forEach(function (element1) {
            if (_this.Projects.selctedTeam[element1.id] && _this.Projects.selctedTeam[element1.id].length > 0) {
                _this.Projects.selctedTeam[element1.id].forEach(function (element) {
                    // console.log(element);
                    element.team_id = element1.id;
                    if (selectedUserId.indexOf(element.id) == -1) {
                        if (OldSelectedUserId.indexOf(element.id) == -1) {
                            element.start_date = _this.Projects.start_date;
                            element.start_time = _this.Projects.start_time;
                            element.team_name = element1.team_name;
                            _this.projectSelectedTeam.push(element);
                        }
                        else {
                            userOldArr.forEach(function (elm) {
                                if (elm.id == element.id) {
                                    element.start_date = elm.start_date;
                                    element.start_time = elm.start_time;
                                    element.team_name = element1.team_name;
                                }
                            });
                            selectedUserId.push(element.id);
                            _this.projectSelectedTeam.push(element);
                            // console.log(this.projectSelectedTeam)
                        }
                    }
                });
            }
        });
        // if (this.Projects.designer && this.Projects.designer.length > 0) {
        //   this.Projects.designer.forEach(element => {
        //     element.team_id = 2;
        //     if (selectedUserId.indexOf(element.id) == -1) {
        //       if (OldSelectedUserId.indexOf(element.id) == -1) {
        //         element.start_date = this.Projects.start_date
        //         element.start_time = this.Projects.start_time;
        //         this.projectSelectedTeam.push(element);
        //       } else {
        //         userOldArr.forEach((elm) => {
        //           if (elm.id == element.id) {
        //             element.start_date = elm.start_date
        //             element.start_time = elm.start_time;
        //           }
        //         });
        //         selectedUserId.push(element.id);
        //         this.projectSelectedTeam.push(element);
        //       }
        //     }
        //   });
        // }
        // if (this.Projects.qc && this.Projects.qc.length > 0) {
        //   this.Projects.qc.forEach(element => {
        //     element.team_id = 3;
        //     if (selectedUserId.indexOf(element.id) == -1) {
        //       if (OldSelectedUserId.indexOf(element.id) == -1) {
        //         element.start_date = this.Projects.start_date
        //         element.start_time = this.Projects.start_time;
        //         this.projectSelectedTeam.push(element);
        //       } else {
        //         userOldArr.forEach((elm) => {
        //           if (elm.id == element.id) {
        //             element.start_date = elm.start_date
        //             element.start_time = elm.start_time;
        //           }
        //         });
        //         selectedUserId.push(element.id);
        //         this.projectSelectedTeam.push(element);
        //       }
        //     }
        //   });
        // }
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](this.projectSelectedTeam);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    CompanyProjectPlanningComponent.prototype.onTeamHeadChange = function (value) {
        console.log(value);
        if (value.is_team_head == true) {
            this.projectSelectedTeam.forEach(function (element) {
                if (element.is_team_head == true && element.id !== value.id) {
                    element.is_team_head = false;
                }
            });
            this.Projects.teamhead = value;
        }
        // if(value.is_team_head == true){
        //   this.Projects.teamhead = value;
        // }
        // ---------------------------------Start-------------------------------------------
        // Function      : best plan
        // Params        : id and value
        // Returns       : 
        // Author        : Rinsha
        // Date          : 07-03-2018
        // Last Modified : 07-03-2018, Rinsha
        // Desc          : to change a plan to best
        // ---------------------------------End-------------------------------------------
    };
    CompanyProjectPlanningComponent.prototype.addMore = function () {
        this.newTasks.newChecklist.push({ name: '' });
    };
    CompanyProjectPlanningComponent.prototype.addMoreFromEdit = function () {
        this.newTasks.newChecklist.push({ name: '' });
    };
    CompanyProjectPlanningComponent.prototype.closeChecklist = function (index) {
        this.newTasks.newChecklist.splice(index, 1);
        // if (this.newTasks.newChecklist.length > 1) {
        //   this.newTasks.newChecklist.splice(index, 1);
        // } else {
        //   let snackBarRef = this.snackBar.open('* Atleast one item required!', '', {
        //     duration: 2000
        //   });
        //   return false;
        // }
    };
    CompanyProjectPlanningComponent.prototype.displayDoc = function (fileInput) {
        var _this = this;
        var ext = fileInput.target.files[0].name.split('.').pop().toLowerCase();
        this.newTasks.docFile = fileInput.target.files[0];
        if (fileInput.target.files && fileInput.target.files[0]) {
            var reader = new FileReader();
            reader.onload = (function (e) {
                _this.newTasks.docSrc = e.target['result'];
            });
            reader.readAsDataURL(fileInput.target.files[0]);
        }
    };
    CompanyProjectPlanningComponent.prototype.modalClear = function () {
        this.newTasks = {
            task_name: '',
            assigned_person: '',
            complexity: 0,
            planned_hour: 0,
            buffer_hour: 0,
            verification_hour: 0,
            start_date: '',
            start_time: '',
            end_date: '',
            end_time: '',
            task_type: '',
            assigned1: '',
            priority: '',
            assigned: '',
            docFile: [],
            docSrc: '',
            color: '',
            bordercolor: '',
            file: '',
            newChecklist: [{ name: '' }],
            assigned_user: '',
            is_verif_task: false
        };
    };
    CompanyProjectPlanningComponent.prototype.addModule = function () {
        if (this.module.module_name == '') {
            var snackBarRef = this.snackBar.open("Module Name cannot be blank", '', {
                duration: 2000
            });
        }
        else {
            if (this.is_show_verification_module == true) {
                this.modules.splice(-1, 1);
                this.is_show_verification_module = false;
            }
            this.modules.push(this.module);
            var snackBarRef = this.snackBar.open("Module added successfully", '', {
                duration: 2000
            });
            this.module = {
                module_name: '',
                time: 0,
                tbl_estimation_tasks: [],
                removeBtn: false
            };
        }
    };
    CompanyProjectPlanningComponent.prototype.addModuleClear = function () {
        this.module = {
            module_name: '',
            time: 0,
            tbl_estimation_tasks: [],
            removeBtn: false
        };
    };
    CompanyProjectPlanningComponent.prototype.getId = function (index) {
        // if(this.Projects.developer == [] || this.Projects.designer == [] || this.Projects.qc == [] ){
        this.index = index;
        this.newTasks = {
            task_name: '',
            assigned_person: '',
            complexity: 0,
            planned_hour: 0,
            buffer_hour: 0,
            verification_hour: 0,
            start_date: '',
            assigned: '',
            start_time: '',
            end_date: '',
            assigned1: '',
            end_time: '',
            task_type: '',
            priority: '',
            docFile: [],
            docSrc: '',
            color: '',
            bordercolor: '',
            file: '',
            newChecklist: [{ name: '' }],
            assigned_user: '',
            is_verif_task: false
        };
    };
    CompanyProjectPlanningComponent.prototype.getassigned = function () {
        var _this = this;
        this.assigned_person = this.newTasks.assigned_person;
        this.assigned_person.tbl_team_assocs.forEach(function (teamId) {
            _this.team_id = teamId.team_id;
        });
        this.assign_id = this.assigned_person.id;
        this.assign_fname = this.assigned_person.f_name;
        this.assign_lname = this.assigned_person.l_name;
    };
    CompanyProjectPlanningComponent.prototype.addTask = function (index) {
        var _this = this;
        this.newTasks.assigned_user = '';
        this.companyService.getDatetime(this.newTasks).subscribe(function (datetime) {
            _this.datetime = datetime;
            if (_this.datetime.success == false) {
                var snackBarRef = _this.snackBar.open(_this.datetime.msg, '', {
                    duration: 2000
                });
            }
            else {
                _this.total_verification_time = _this.total_verification_time + _this.newTasks.verification_hour;
                if (_this.is_show_verification_module == true) {
                    _this.modules[_this.modules.length - 1].time = _this.total_verification_time;
                    _this.modules[_this.modules.length - 1].tbl_estimation_tasks[0].planned_hour = _this.total_verification_time;
                }
                // this.total_verification_time = this.total_verification_time + this.newTasks.verification_hour;
                // this.module.time = this.total_verification_time;
                //  this.newTasks1.planned_hour = this.total_verification_time;
                if (_this.newTasks.assigned_person) {
                    _this.newTasks.color = '#e6ffe6';
                    _this.newTasks.bordercolor = '3px solid #6fa93b';
                    _this.newTasks.assigned_user = _this.newTasks.assigned_person;
                    // this.assigned_user  = this.newTasks.assigned_person
                    // this.modules[this.moduleIndex].tbl_estimation_tasks[this.taskIndex].assigned_user = this.newTasks.assigned_person;
                }
                _this.modules[index].tbl_estimation_tasks.push(_this.newTasks);
                _this.modules[index].time = _this.modules[index].time + _this.newTasks.planned_hour + _this.newTasks.buffer_hour;
                _this.sum = _this.sum + _this.newTasks.planned_hour + _this.newTasks.buffer_hour;
                _this.closeBtn.nativeElement.click();
                var snackBarRef = _this.snackBar.open(' Task added succesfully', '', {
                    duration: 2000
                });
                // console.log(this.modules);
                _this.newTasks = {
                    task_name: '',
                    assigned_person: '',
                    complexity: 0,
                    planned_hour: 0,
                    buffer_hour: 0,
                    verification_hour: 0,
                    start_date: '',
                    start_time: '',
                    end_date: '',
                    end_time: '',
                    assigned: '',
                    assigned1: '',
                    task_type: '',
                    priority: '',
                    color: '',
                    bordercolor: '',
                    docFile: [],
                    docSrc: '',
                    file: '',
                    newChecklist: [{ name: '' }],
                    assigned_user: '',
                    is_verif_task: false
                };
            }
        });
    };
    CompanyProjectPlanningComponent.prototype.deleteModule = function (i) {
        var _this = this;
        this.moduleVerifTime = 0;
        this.modules[i].tbl_estimation_tasks.forEach(function (element) {
            _this.moduleVerifTime = _this.moduleVerifTime + element.verification_hour;
        });
        this.total_verification_time = this.total_verification_time - this.moduleVerifTime;
        if (this.is_show_verification_module == true) {
            this.modules[this.modules.length - 1].time = this.total_verification_time;
            this.modules[this.modules.length - 1].tbl_estimation_tasks[0].planned_hour = this.total_verification_time;
        }
        this.sum = this.sum - this.modules[i].time;
        this.modules.splice(i, 1);
    };
    CompanyProjectPlanningComponent.prototype.editModules = function (i, module) {
        this.modules.splice(i, 1);
        this.modules.push(module);
        this.modules.forEach(function (element) {
        });
    };
    CompanyProjectPlanningComponent.prototype.getId1 = function (i, j) {
        this.i = i;
        this.j = j;
    };
    CompanyProjectPlanningComponent.prototype.getId2 = function (i, j, task) {
        if (typeof this.Projects.developer.length !== 'undefined' && this.Projects.developer.length == 0 && typeof this.Projects.designer.length !== 'undefined' && this.Projects.designer.length == 0 && typeof this.Projects.qc.length !== 'undefined' && this.Projects.qc.length == 0) {
            this.assignedPersonEmpty = true;
        }
        else {
            this.assignedPersonEmpty = false;
        }
        this.i = i;
        this.j = j;
        this.newTasks = task;
        this.modules[i].tbl_estimation_tasks[j] = this.newTasks;
        this.sum = this.sum - this.modules[i].tbl_estimation_tasks[j].planned_hour - this.modules[i].tbl_estimation_tasks[j].buffer_hour;
        this.modules[i].time = this.modules[i].time - this.modules[i].tbl_estimation_tasks[j].planned_hour - this.modules[i].tbl_estimation_tasks[j].buffer_hour;
        // this.newTasks.assigned_person = '';
        this.newTasks.start_date = '';
        this.newTasks.start_time = '';
        this.meridain = '';
        this.total_verification_time = this.total_verification_time - this.modules[i].tbl_estimation_tasks[j].verification_hour;
        // if (this.is_show_verification_module == true) {
        //   this.modules[this.modules.length - 1].time = this.total_verification_time;
        //   this.modules[this.modules.length - 1].tbl_estimation_tasks[0].planned_hour = this.total_verification_time;
        // }
    };
    CompanyProjectPlanningComponent.prototype.getId3 = function (i, j, task) {
        if (typeof this.projectSelectedTeam !== 'undefined' && this.projectSelectedTeam.length == 0) {
            this.assignedPersonEmpty = true;
        }
        else {
            this.assignedPersonEmpty = false;
        }
        this.i = i;
        this.j = j;
        this.newTasks = task;
        this.modules[i].tbl_estimation_tasks[j] = this.newTasks;
        // this.newTasks.assigned_person = '';
    };
    CompanyProjectPlanningComponent.prototype.deleteTask = function (i, j) {
        this.total_verification_time = this.total_verification_time - this.modules[i].tbl_estimation_tasks[j].verification_hour;
        if (this.is_show_verification_module == true) {
            this.modules[this.modules.length - 1].time = this.total_verification_time;
            this.modules[this.modules.length - 1].tbl_estimation_tasks[0].planned_hour = this.total_verification_time;
        }
        this.modules[i].time = this.modules[i].time - this.modules[i].tbl_estimation_tasks[j].planned_hour - this.modules[i].tbl_estimation_tasks[j].buffer_hour;
        this.sum = this.sum - this.modules[i].tbl_estimation_tasks[j].planned_hour - this.modules[i].tbl_estimation_tasks[j].buffer_hour;
        this.modules[i].tbl_estimation_tasks.splice(this.j, 1);
    };
    CompanyProjectPlanningComponent.prototype.editTask = function (i, j, users) {
        var _this = this;
        this.companyService.editTaskValidation(this.newTasks).subscribe(function (editTaskValidation) {
            if (!editTaskValidation.success) {
                var snackBarRef = _this.snackBar.open(editTaskValidation.msg, '', {
                    duration: 2000
                });
            }
            else {
                console.log(_this.total_verification_time);
                _this.total_verification_time = _this.total_verification_time - _this.modules[i].tbl_estimation_tasks[j].verification_hour;
                _this.total_verification_time = _this.total_verification_time + _this.newTasks.verification_hour;
                console.log(_this.total_verification_time);
                if (_this.is_show_verification_module == true) {
                    _this.modules[_this.modules.length - 1].time = _this.total_verification_time;
                    _this.modules[_this.modules.length - 1].tbl_estimation_tasks[0].planned_hour = _this.total_verification_time;
                }
                // if(this.is_show_verification_module == true){
                //   this.modules.splice(-1,1)
                //   this.is_show_verification_module = false;
                // }
                // if (this.newTasks.assigned_person) {
                //   this.modules[i].tbl_estimation_tasks[j].assigned_user = this.newTasks.assigned_person;
                //   this.modules[i].tbl_estimation_tasks[j].color = '#e6ffe6';
                //   this.modules[i].tbl_estimation_tasks[j].bordercolor = '3px solid #6fa93b';
                // }
                _this.modules[i].time = _this.modules[i].time - _this.modules[i].tbl_estimation_tasks[j].planned_hour - _this.modules[i].tbl_estimation_tasks[j].buffer_hour;
                _this.modules[i].time = _this.modules[i].time + _this.newTasks.planned_hour + _this.newTasks.buffer_hour;
                _this.sum = _this.sum + _this.newTasks.planned_hour + _this.newTasks.buffer_hour;
                _this.closeBtn1.nativeElement.click();
                var snackBarRef = _this.snackBar.open(' Task updated succesfully', '', {
                    duration: 2000
                });
            }
        });
    };
    CompanyProjectPlanningComponent.prototype.assignTask = function (i, j, users) {
        if (this.newTasks.assigned_person == '') {
            var snackBarRef = this.snackBar.open(' Please select a person to assign the task', '', {
                duration: 2000
            });
        }
        if (this.newTasks.assigned_person) {
            this.modules[i].tbl_estimation_tasks[j].assigned_user = this.newTasks.assigned_person;
            this.modules[i].tbl_estimation_tasks[j].color = '#e6ffe6';
            this.modules[i].tbl_estimation_tasks[j].bordercolor = '3px solid #6fa93b';
            this.closeBtn3.nativeElement.click();
            var snackBarRef = this.snackBar.open(' Assigned Successfully', '', {
                duration: 2000
            });
        }
    };
    CompanyProjectPlanningComponent.prototype.inArray = function (needle, haystack) {
        var count = haystack.length;
        for (var i = 0; i < count; i++) {
            if (haystack[i] === needle) {
                return true;
            }
        }
        return false;
    };
    // getEnddatetime() {
    //   const users: any[] = [];
    //   this.startdate = '';
    //   this.starttime = '';
    //   this.endtime = '';
    //   this.startdate = this.assignstart_date;
    //   this.starttime = this.assignstart_time;
    //   this.endtime = this.assignstart_time
    //   this.teamMembers = [];
    //   if (this.inArray(this.assign_id, this.teamMembers) == false) {
    //     this.modules.forEach(modules => {
    //       modules.tbl_estimation_tasks.forEach(tasks => {
    //         tasks.start_date = this.assignstart_date;
    //         tasks.start_time = this.assignstart_time;
    //       });
    //     });
    //     this.assignstart_date.setHours(this.assignstart_time.hour, this.assignstart_time.minute, this.assignstart_time.second);
    //     this.teamMembers.push({ assign_person_id: this.assign_id, start_date: this.assignstart_date, start_time: this.assignstart_time, assigned_person_fname: this.assign_fname, assigned_person_lname: this.assign_lname, hour: this.newTasks.planned_hour + this.newTasks.buffer_hour, no_task: this.taskNo = this.taskNo + 1, team_id: this.team_id });
    //     this.startdatetime = this.assignstart_date
    //     this.assignend_date = this.startdate;
    //     this.teamMembers.forEach((item, index) => {
    //       users.push({
    //         userfname: item.assigned_person_fname,
    //         userlname: item.assigned_person_lname,
    //         id: item.assign_person_id,
    //         start_date: this.assignstart_date,
    //         end_date: '',
    //         hour: 0,
    //         no_task: 0
    //       });
    //     });
    //     this.dataSource = new MatTableDataSource(users);
    //     this.dataSource.paginator = this.paginator;
    //     this.dataSource.sort = this.sort;
    //   }
    // }
    // getTableData() {
    //   const users: any[] = [];
    //   if (this.selected == '1') {
    //     if (this.teamMembers == [] || this.teamMembers == null) {
    //     }
    //     else {
    //       this.teamMembers.forEach(item => {
    //         ;
    //         if (item.team_id == 1) {
    //           users.push({
    //             userfname: item.assigned_person_fname,
    //             userlname: item.assigned_person_lname,
    //             id: item.assign_person_id,
    //             start_date: item.start_date,
    //             end_date: item.end_date,
    //             hour: item.hour,
    //             no_task: item.no_task
    //           });
    //           this.dataSource = new MatTableDataSource(users);
    //           this.dataSource.paginator = this.paginator;
    //           this.dataSource.sort = this.sort;
    //         } else {
    //           let snackBarRef = this.snackBar.open('* No data found!', '', {
    //             duration: 2000
    //           });
    //         }
    //       });
    //     }
    //     this.loadToDataTable(this.Developers);
    //   }
    //   if (this.selected == '2') {
    //     this.loadToDataTable(this.Designers);
    //   }
    //   if (this.selected == '3') {
    //     this.loadToDataTable(this.QCs);
    //   }
    // }
    // loadToDataTable(data) {
    //   this.dataSource = new MatTableDataSource(data);
    //   this.dataSource.paginator = this.paginator;
    //   this.dataSource.sort = this.sort;
    // }
    CompanyProjectPlanningComponent.prototype.showDatepicker = function () {
        this.datepicker = true;
        this.showstartdate = false;
    };
    CompanyProjectPlanningComponent.prototype.showDate = function () {
        this.showstartdate = true;
        this.datepicker = false;
    };
    CompanyProjectPlanningComponent.prototype.finish = function () {
    };
    CompanyProjectPlanningComponent.prototype.assignedAuser = function (users) {
        //not need now
    };
    CompanyProjectPlanningComponent.prototype.calculateEnddate = function () {
        var _this = this;
        this.isSucessCalculate = true;
        this.disableCalculateBtn = true;
        var startDateOfProject = this.Projects.start_date.setHours(this.Projects.start_time.hour, this.Projects.start_time.minute, this.Projects.start_time.second);
        this.projectSelectedTeam.forEach(function (eachMemeber) {
            if (eachMemeber.is_team_head) {
                _this.teamheadselect = true;
            }
        });
        if (this.teamheadselect) {
            if (this.Projects.start_date < new Date()) {
                var snackBarRef = this.snackBar.open('Failed! Please select a valid project start date', '', {
                    duration: 2000
                });
                this.disableCalculateBtn = false;
                this.isSucessCalculate = false;
            }
            else {
                this.projectSelectedTeam.forEach(function (eachMemeber) {
                    eachMemeber.start_date.setHours(eachMemeber.start_time.hour, eachMemeber.start_time.minute, eachMemeber.start_time.second);
                    if (eachMemeber.is_team_head) {
                        _this.teamheadselect = true;
                        // let snackBarRef = this.snackBar.open('Failed! Please select a team head ', '', {
                        //   duration: 2000
                        // });
                    }
                    if (eachMemeber.start_date < new Date()) {
                        var snackBarRef = _this.snackBar.open('Failed! Please select a valid start date for the team member ' + eachMemeber.f_name + ' ' + eachMemeber.l_name + '', '', {
                            duration: 2000
                        });
                        _this.disableCalculateBtn = false;
                        _this.isSucessCalculate = false;
                    }
                    else {
                        if ((new Date(startDateOfProject)) > eachMemeber.start_date) {
                            var snackBarRef = _this.snackBar.open('Failed! Please select a date after project start date for team member ' + eachMemeber.f_name + ' ' + eachMemeber.l_name + '', '', {
                                duration: 2000
                            });
                            _this.disableCalculateBtn = false;
                            _this.isSucessCalculate = false;
                        }
                        else {
                            _this.modules.forEach(function (eachModule) {
                                if (typeof eachModule.tbl_estimation_tasks.length !== 'undefined' && eachModule.tbl_estimation_tasks.length == 0) {
                                    var snackBarRef = _this.snackBar.open('Failed! Each module should contain atleast one task', '', {
                                        duration: 2000
                                    });
                                    _this.disableCalculateBtn = false;
                                    _this.isSucessCalculate = false;
                                }
                                else {
                                    eachModule.tbl_estimation_tasks.forEach(function (task) {
                                        if (!task.assigned_person) {
                                            var snackBarRef = _this.snackBar.open('Failed! Each task should be assigned to a team member', '', {
                                                duration: 2000
                                            });
                                            _this.disableCalculateBtn = false;
                                            _this.isSucessCalculate = false;
                                        }
                                    });
                                }
                            });
                        }
                    }
                });
            }
            if (this.isSucessCalculate) {
                if (this.is_show_verification_module == false) {
                    this.module.module_name = "verification";
                    this.module.time = this.total_verification_time;
                    this.module.removeBtn = true;
                    this.newTasks1.task_name = "Verify all tasks in Project : " + this.Projects.name + " ";
                    this.newTasks1.assigned_person = this.Projects.teamhead;
                    this.newTasks1.assigned_user = this.Projects.teamhead;
                    this.newTasks1.planned_hour = this.total_verification_time;
                    this.newTasks1.color = '#e6ffe6';
                    this.newTasks1.removeBtn = true;
                    this.newTasks1.is_verif_task = true;
                    this.newTasks1.bordercolor = '3px solid #6fa93b';
                    this.module.tbl_estimation_tasks.push(this.newTasks1);
                    this.modules.push(this.module);
                    // this.modules.splice(-1,1)
                }
                this.is_show_verification_module = true;
                this.showSpinner = true;
                var data = { modules: this.modules, teamMembers: this.projectSelectedTeam };
                this.companyService.getUserleavedataplanning(data).subscribe(function (data) {
                    _this.showSpinner = false;
                    var tmp = data;
                    data.data.projectStartDate = new Date(_this.Projects.start_date);
                    data.data.projectStartDate.setHours(_this.Projects.start_time.hour, _this.Projects.start_time.minute, _this.Projects.start_time.second);
                    data.data.project_team_head = _this.Projects.teamhead;
                    _this.projectEndDate = new Date(data.data.projectEndDate);
                    console.log(_this.projectEndDate);
                    $('#projectEndDateModal').modal('show');
                    data.data.project_id = _this.p_id;
                    _this.modules = data.data;
                    _this.showSaveBtn = true;
                    _this.disableCalculateBtn = false;
                });
            }
        }
        if (!this.teamheadselect) {
            var snackBarRef = this.snackBar.open('Failed! Please select a Team head', '', {
                duration: 2000
            });
            this.disableCalculateBtn = false;
            this.isSucessCalculate = false;
        }
    };
    CompanyProjectPlanningComponent.prototype.savePlanningData = function () {
        var _this = this;
        this.saveBtnDisable = true;
        this.isSuccess = true;
        this.disableCalculateBtn = true;
        this.showSpinnersave = true;
        var startDateOfProject = this.Projects.start_date.setHours(this.Projects.start_time.hour, this.Projects.start_time.minute, this.Projects.start_time.second);
        if (this.Projects.start_date < new Date()) {
            var snackBarRef = this.snackBar.open('Failed! Please select a valid project start date', '', {
                duration: 2000
            });
            this.disableCalculateBtn = false;
            this.saveBtnDisable = false;
            this.isSuccess = false;
            this.showSpinnersave = false;
        }
        else {
            this.projectSelectedTeam.forEach(function (eachMemeber) {
                eachMemeber.start_date.setHours(eachMemeber.start_time.hour, eachMemeber.start_time.minute, eachMemeber.start_time.second);
                if (eachMemeber.start_date < new Date()) {
                    var snackBarRef = _this.snackBar.open('Failed! Please select a valid start date for the team member ' + eachMemeber.f_name + ' ' + eachMemeber.l_name + '', '', {
                        duration: 2000
                    });
                    _this.disableCalculateBtn = false;
                    _this.saveBtnDisable = false;
                    _this.isSuccess = false;
                    _this.showSpinnersave = false;
                }
                else {
                    if ((new Date(startDateOfProject)) > eachMemeber.start_date) {
                        var snackBarRef = _this.snackBar.open('Failed! Please select a date after project start date for team member ' + eachMemeber.f_name + ' ' + eachMemeber.l_name + '', '', {
                            duration: 2000
                        });
                        _this.disableCalculateBtn = false;
                        _this.saveBtnDisable = false;
                        _this.isSuccess = false;
                        _this.showSpinnersave = false;
                    }
                    else {
                        _this.modules.forEach(function (eachModule) {
                            if (typeof eachModule.tbl_estimation_tasks.length !== 'undefined' && eachModule.tbl_estimation_tasks.length == 0) {
                                var snackBarRef = _this.snackBar.open('Failed! Each module should contain atleast one task', '', {
                                    duration: 2000
                                });
                                _this.disableCalculateBtn = false;
                                _this.saveBtnDisable = false;
                                _this.isSuccess = false;
                                _this.showSpinnersave = false;
                            }
                            else {
                                eachModule.tbl_estimation_tasks.forEach(function (task) {
                                    if (!task.assigned_person) {
                                        var snackBarRef = _this.snackBar.open('Failed! Each task should be assigned to a team member', '', {
                                            duration: 2000
                                        });
                                        _this.disableCalculateBtn = false;
                                        _this.saveBtnDisable = false;
                                        _this.isSuccess = false;
                                        _this.showSpinnersave = false;
                                    }
                                });
                            }
                        });
                    }
                }
            });
        }
        if (this.isSuccess) {
            this.saveBtnDisable = false;
            this.companyService.savecompanyPlanning(this.modules, this.Projects.teamhead).subscribe(function (data) {
                _this.showSpinnersave = false;
                if (data.success) {
                    _this.routes.navigate(['/project']);
                    var snackBarRef = _this.snackBar.open(data.msg, '', {
                        duration: 2000
                    });
                }
                else {
                    var snackBarRef = _this.snackBar.open(data.msg, '', {
                        duration: 2000
                    });
                }
            });
        }
    };
    CompanyProjectPlanningComponent.prototype.projectStartDateSelect = function () {
        var _this = this;
        this.assignstart_date = this.Projects.start_date;
        this.assignstart_time = this.Projects.start_time;
        this.modules.forEach(function (modules) {
            modules.tbl_estimation_tasks.forEach(function (tasks) {
                tasks.start_date = _this.Projects.start_date;
                tasks.start_time = _this.Projects.start_time;
            });
        });
        this.projectSelectedTeam.forEach(function (element) {
            if (element.start_date < _this.Projects.start_date) {
                element.start_date = _this.Projects.start_date;
                element.start_time = _this.Projects.start_time;
            }
            else if (element.start_date == _this.Projects.start_date) {
                var newstartTimeofUser = _this.changeTimepikcerFormat(element.start_time.hour, element.start_time.minute, element.start_time.second);
                var newstartTimeofProject = _this.changeTimepikcerFormat(_this.Projects.start_time.hour, _this.Projects.start_time.minute, _this.Projects.start_time.second);
                if (_this.timeToSec(newstartTimeofUser) < _this.timeToSec(newstartTimeofProject)) {
                    element.start_time = _this.Projects.start_time;
                }
            }
        });
        this.todayDate1 = this.Projects.start_date;
    };
    CompanyProjectPlanningComponent.prototype.setAvailableDateTimeofUser = function (date, time) {
        var _this = this;
        this.projectSelectedTeam.forEach(function (element, key) {
            if (element.start_date == _this.Projects.start_date) {
                var newstartTimeofUser = _this.changeTimepikcerFormat(element.start_time.hour, element.start_time.minute, element.start_time.second);
                var newstartTimeofProject = _this.changeTimepikcerFormat(_this.Projects.start_time.hour, _this.Projects.start_time.minute, _this.Projects.start_time.second);
                // if ((this.timeToSec(newstartTimeofUser)) < (this.timeToSec(newstartTimeofProject))) {
                //   this.projectSelectedTeam[key].start_time = this.Projects.start_time;
                // }
            }
        });
        // this.dataSource = new MatTableDataSource(this.projectSelectedTeam);
        // this.dataSource.paginator = this.paginator;
        // this.dataSource.sort = this.sort;
        // this.availstartDate = date
        // this.availstarTime = this.changeTimepikcerFormat(time.hour,time.minute,time.second)
        // let startTimeOfProject = this.changeTimepikcerFormat(this.Projects.start_time.hour,this.Projects.start_time.minute,this.Projects.start_time.second)
        // if(date = this.Projects.start_date){
        //   if(this.timeToSec(this.availstarTime) < this.timeToSec(startTimeOfProject)){
        //     time = this.Projects.start_time;
        //   }
        // }
    };
    CompanyProjectPlanningComponent.prototype.timeToSec = function (time) {
        var a = time.split(':'); // split it at the colons\
        // minutes are worth 60 seconds. Hours are worth 60 minutes.
        return this.seconds = (+a[0]) * 60 * 60 + (+a[1]) * 60 + (+a[2]);
    };
    CompanyProjectPlanningComponent.prototype.changeTimepikcerFormat = function (hour, minute, second) {
        var hh = hour;
        var mm = minute;
        var ss = second;
        if (hh < 10) {
            hh = "0" + hh;
        }
        if (mm < 10) {
            mm = "0" + mm;
        }
        if (ss < 10) {
            ss = "0" + ss;
        }
        // This formats your string to HH:MM:SS
        var splittedTime = hh + ":" + mm + ":" + ss;
        return splittedTime;
    };
    CompanyProjectPlanningComponent.prototype.closeEditModal = function (i, j) {
        this.modules[i].time = this.modules[i].time + this.newTasks.planned_hour + this.newTasks.buffer_hour;
        this.total_verification_time = this.total_verification_time + this.modules[i].tbl_estimation_tasks[j].verification_hour;
        if (this.is_show_verification_module == true) {
            this.modules[this.modules.length - 1].time = this.total_verification_time;
            this.modules[this.modules.length - 1].tbl_estimation_tasks[0].planned_hour = this.total_verification_time;
        }
    };
    CompanyProjectPlanningComponent.prototype._keyPress = function (event) {
        var pattern = /[0-9/ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (!pattern.test(inputChar) && event.charCode != 0) {
            // invalid character, prevent input
            event.preventDefault();
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyProjectPlanningComponent.prototype, "closeBtn", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn1'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyProjectPlanningComponent.prototype, "closeBtn1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn3'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyProjectPlanningComponent.prototype, "closeBtn3", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn4'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyProjectPlanningComponent.prototype, "closeBtn4", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('projectEndDateModal'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyProjectPlanningComponent.prototype, "projectEndDateModal", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], CompanyProjectPlanningComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], CompanyProjectPlanningComponent.prototype, "sort", void 0);
    CompanyProjectPlanningComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'project-planning',
            template: __webpack_require__("../../../../../src/app/components/company-project-planning/company-project-planning.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-project-planning/company-project-planning.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__angular_router__["ActivatedRoute"], __WEBPACK_IMPORTED_MODULE_3__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */], __WEBPACK_IMPORTED_MODULE_2__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_5_ng2_dragula_ng2_dragula__["DragulaService"]])
    ], CompanyProjectPlanningComponent);
    return CompanyProjectPlanningComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-project-vs-hour/company-project-vs-hour.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "h1{padding-left: 6%;}\r\n.sales{margin-top: 25px;}\r\n#stacked-bar-chart-container1{\r\n    padding: 32px 0px;\r\n}\r\n.no-dtx{\r\n    text-align: center;\r\n    padding: 208px 0;\r\n    font-size: 30px;\r\n    font-weight: 800;\r\n    color: #a2a2a2;\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-project-vs-hour/company-project-vs-hour.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\r\n    <h1>Project Vs Task Hours</h1>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 col-sm-12 col-xs-12\">\r\n            <div class=\"widget\">\r\n                <!-- <div id=\"chart\" class=\"chart-container\">\r\n            \r\n                </div> -->\r\n               \r\n                  <div *ngIf=\"exists else empty\" id=\"stacked-bar-chart-container1\">\r\n                    </div>\r\n                    <ng-template #empty>\r\n                            <h4 class=\"no-dtx\">No data to display!</h4>\r\n                    </ng-template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    "

/***/ }),

/***/ "../../../../../src/app/components/company-project-vs-hour/company-project-vs-hour.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyProjectVsHourComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CompanyProjectVsHourComponent = (function () {
    function CompanyProjectVsHourComponent(companyService, config) {
        this.companyService = companyService;
        this.config = config;
        this.exists = false;
        this.socket = __WEBPACK_IMPORTED_MODULE_2_socket_io_client__(config.socketURL);
    }
    CompanyProjectVsHourComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.getHoursforResourceGraph();
        this.socket.on('new', function (data) {
            _this.getHoursforResourceGraph();
        });
        this.socket.on('paused', function (data) {
            _this.getHoursforResourceGraph();
        });
        this.socket.on('completed', function (data) {
            _this.getHoursforResourceGraph();
        });
        this.socket.on('hold', function (data) {
            _this.getHoursforResourceGraph();
        });
        this.socket.on('inProgress', function (data) {
            _this.getHoursforResourceGraph();
        });
        this.getHoursforResourceGraph();
        this.offenseNames = [
            "New- Yet to Start",
            "In Progress",
            "Completed",
            "On Hold",
            "Paused"
        ];
    };
    CompanyProjectVsHourComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.socket.on('new', function (data) {
            _this.getHoursforResourceGraph();
        });
        this.socket.on('paused', function (data) {
            _this.getHoursforResourceGraph();
        });
        this.socket.on('completed', function (data) {
            _this.getHoursforResourceGraph();
        });
        this.socket.on('hold', function (data) {
            _this.getHoursforResourceGraph();
        });
        this.socket.on('inProgress', function (data) {
            _this.getHoursforResourceGraph();
        });
        this.getHoursforResourceGraph();
        this.offenseNames = [
            "New- Yet to Start",
            "In Progress",
            "Completed",
            "On Hold",
            "Paused"
        ];
    };
    CompanyProjectVsHourComponent.prototype.getHoursforResourceGraph = function () {
        var _this = this;
        console.log("getHoursforResourceGraph");
        // ---------------------------------Start-------------------------------------------
        // Function      : getTasksforResourceGraph
        // Params        : pro_id, users
        // Returns       : 
        // Author        : Rinsha
        // Date          :  18-04-2018
        // Last Modified : 
        // Desc          : 
        this.companyService.getAllProject().subscribe(function (data) {
            // console.log(data);
            _this.projects = [];
            _this.years = [];
            data.forEach(function (element) {
                if (element.status == "Planned" || element.status == "Completed" || element.status == "In Progress") {
                    _this.projects.push(element);
                    _this.years.push(element.project_name);
                }
            });
            if (_this.projects.length == 0) {
                //no data in charts
            }
            else {
                _this.exists = true;
                _this.companyService.getHoursforResourceGraph(_this.projects).subscribe(function (info) {
                    // console.log(info)s
                    _this.drawGraph(_this.offenseNames, _this.years, info);
                });
            }
            ;
        });
        // -----------------------------------End------------------------------------------
    };
    CompanyProjectVsHourComponent.prototype.drawGraph = function (offenseNames, years, offensesByYear) {
        d3.select('#stacked-bar-chart-container1').selectAll("svg").remove();
        var generateClassStr = function (str) {
            return str.replace(/\s+/g, '-').toLowerCase();
        };
        var n = offenseNames.length, // number of layers
        m = offensesByYear.length, // number of samples per layer
        stack = d3.stack().keys(offenseNames);
        var layers = stack(offensesByYear); // calculate the stack layout
        layers.forEach(function (d, i) {
            // add keys to every datapoint
            d.forEach(function (dd, j) {
                dd.year = years[j];
                dd.offenseName = offenseNames[i];
                dd.class = generateClassStr(dd.offenseName);
                dd.value = dd.data[dd.offenseName];
            });
        });
        var yStackMax = d3.max(layers, function (layer) {
            return d3.max(layer, function (d) {
                return d[1];
            });
        });
        var margin = { top: 70, right: 15, bottom: 140, left: 50 }, fullChartWidth = 1000, fullChartHeight = 400, width = fullChartWidth - margin.left - margin.right, height = fullChartHeight - margin.top - margin.bottom;
        d3.select("#stacked-bar-chart-container1")
            .style("width", fullChartWidth)
            .style("height", fullChartHeight);
        var x = d3
            .scaleBand()
            .domain(years)
            .rangeRound([0, width])
            .padding(0.08);
        var y = d3
            .scaleLinear()
            .domain([0, yStackMax])
            .range([height, 0]);
        var z = d3
            .scaleBand()
            .domain(offenseNames)
            .rangeRound([0, x.bandwidth()]);
        // let color = ["#17a88f", "#f2ac37", "#b74549", , "#4d5d6e", , "#2778a7"]
        var color = ["#2778a7", "#99b745", "#17a88f", , "#f2ac37", , "#b74549"];
        var svg = d3
            .select("#stacked-bar-chart-container1")
            .append("svg")
            .attr("width", width + margin.left + margin.right + 20)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + (margin.left + 20) + "," + margin.top + ")");
        var layer = svg
            .selectAll(".layer")
            .data(layers)
            .enter()
            .append("g")
            .attr("class", "layer")
            .style("fill", function (d, i) {
            return color[i];
        });
        // Define the div for the tooltip
        var tooltip = d3.select("body").append("div")
            .attr("class", "tooltip")
            .style("opacity", 0);
        // alert(x.bandwidth());
        // alert(m);
        var myLPadd = 270;
        var myTPadd = 1420;
        // var myLPadd = 950;
        // var myTPadd = 720;
        var rect = layer
            .selectAll(".bar")
            .data(function (d) {
            return d;
        })
            .enter()
            .append("rect")
            .attr("class", function (d) { return generateClassStr(d.offenseName) + " bar"; })
            .attr("x", function (d) {
            return x(d.year);
        })
            .attr("y", height)
            .attr("width", x.bandwidth())
            .attr("height", 0)
            .on("mouseover", function (d) {
            // d3.selectAll(".bar")
            //   .filter(dd => dd.class != d.class)
            //   .style("opacity", 0.6)
        })
            .on("mousemove", function (d) {
            var msgy = (d.data.totalCompletedHr != 0 && d.offenseName == 'Completed') ? ', Actual hour taken : ' + d.data.totalCompletedHr + ' Hr' : '';
            tooltip
                .style("opacity", .9)
                .html("<b>" + d.value + "</b> Hr task is " + d.offenseName + " for " + d.year + msgy)
                .style("left", (d3.mouse(this)[0]) + myLPadd + "px")
                .style("top", (d3.mouse(this)[1]) + myTPadd + 40 + "px");
        })
            .on("mouseout", function (d) {
            d3.selectAll(".bar").style("opacity", 1);
            tooltip.style("opacity", 0);
        });
        rect
            .transition()
            .delay(function (d, i) {
            return i * 10;
        })
            .attr("y", function (d) {
            return y(d[1]);
        })
            .attr("height", function (d) {
            return y(d[0]) - y(d[1]);
        });
        // alert(height);
        // height = 10;
        svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x).tickSizeOuter(0))
            .selectAll("text")
            .style("text-anchor", "end")
            .attr("dx", "-.8em")
            .attr("dy", ".15em")
            .attr("transform", "rotate(-65)");
        // .append("g")
        // .attr("class", "x axis")
        // .attr("transform", "translate(0," + height + ")")
        // .call(d3.axisBottom(x).tickSizeOuter(0))
        // .attr("transform", "rotate(-90)");
        // add the Y gridlines
        svg.append("g")
            .attr("class", "grid")
            .call(d3.axisLeft(y)
            .ticks(25)
            .tickFormat(""));
        // Add the y Axis
        svg.append("g")
            .call(d3.axisLeft(y));
        // text label for the y axis
        svg.append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", 0 - margin.left - 30)
            .attr("x", 0 - (height / 2))
            .attr("dy", "3em")
            .style("text-anchor", "middle")
            .text("Total hours");
        var legend = svg
            .selectAll(".legend")
            .data(offenseNames.reverse()) // match stack order
            .enter()
            .append("g")
            .attr("class", "legend")
            .attr("transform", function (d, i) {
            return "translate(0," + i * 15 + ")";
        });
        legend
            .append("rect")
            .attr("x", width - 10)
            .attr("y", -70)
            .attr("width", 10)
            .attr("height", 10)
            .style("fill", function (d, i) {
            return color[offenseNames.length - 1 - i]; // match stack order
        });
        legend
            .append("text")
            .attr("x", width - 24)
            .attr("y", -65)
            .attr("font-size", '10px')
            .attr("dy", ".35em")
            .attr("class", "barGraphLegend")
            .style("text-anchor", "end")
            .text(function (d) {
            return d;
        });
        d3.selectAll("input").on("change", change);
        function change() {
            (this.value === "grouped") ? transitionGrouped() : transitionStacked();
        }
        function transitionGrouped() {
            rect
                .transition()
                .duration(500)
                .delay(function (d, i) {
                return i * 10;
            })
                .attr("x", function (d) {
                return x(d.year) + z(d.offenseName);
            })
                .transition()
                .attr("y", function (d) {
                return y(d.data[d.offenseName]);
            })
                .attr("height", function (d) {
                return height - y(d.data[d.offenseName]);
            });
        }
        function transitionStacked() {
            rect
                .transition()
                .duration(500)
                .delay(function (d, i) {
                return i * 10;
            })
                .attr("y", function (d) {
                return y(d[1]);
            })
                .attr("height", function (d) {
                return y(d[0]) - y(d[1]);
            })
                .transition()
                .attr("x", function (d) {
                return x(d.year);
            });
        }
    };
    CompanyProjectVsHourComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-project-vs-hour',
            template: __webpack_require__("../../../../../src/app/components/company-project-vs-hour/company-project-vs-hour.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-project-vs-hour/company-project-vs-hour.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_3__config_config__["a" /* Config */]])
    ], CompanyProjectVsHourComponent);
    return CompanyProjectVsHourComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-project-vs-status/company-project-vs-status.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n.tasklabel{       background: #efefef;\n    padding: 25px 30px;\n    text-align: center;\n    text-transform: uppercase;\n    margin: 10px 0;\n    border: 1px solid #ccc;\n    font-weight: bold;\n    font-size : 12px;\n  }\n  h1{text-align:center;}\n  .bg-g{background:#17a88f;color:#fff; padding: 10px;}\n  .bg-hash{background:#E9E9E9;padding: 10px;;}\n  .bg-hash select{background:none;border:none;width:100%;}\n  .total{font-weight:700;padding-top: 20px; line-height: 36px;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-project-vs-status/company-project-vs-status.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\r\n    <h1>Project Vs Status</h1>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6 col-sm-6 col-xs-12\">\r\n          <div class=\"col-md-8 col-md-offset-2\">\r\n          <div class=\"col-md-6 bg-g\">*Select Project</div>\r\n          <div class=\"col-md-6 bg-hash\">\r\n              <mat-select  name=\"projet_id\" [(ngModel)]=\"project_id\" (ngModelChange)=\"changeProject($event)\" required>\r\n                  <mat-option *ngFor=\"let prj of projects\" [value]=\"prj.id\">\r\n                    {{prj.project_name}}\r\n                  </mat-option>\r\n                </mat-select>\r\n          </div> \r\n          <div class=\"clearfix\"></div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"tasklabel\">\r\n              START DATE \r\n              <br>\r\n              {{start_date | date: 'yyyy-MM-dd HH:mm a'}}\r\n            </div>\r\n            </div>\r\n    \r\n            <div class=\"col-md-6\">\r\n                <div class=\"tasklabel\">\r\n                END DATE\r\n                <br>\r\n                {{end_date | date: 'yyyy-MM-dd HH:mm a'}}\r\n               </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"tasklabel\">\r\n              TOTAL TASKS \r\n              <br>\r\n              {{total_tasks}}\r\n              <br>\r\n              ({{planned_hour}} Hour)\r\n            </div>\r\n            </div>\r\n    \r\n            <div class=\"col-md-6\">\r\n                <div class=\"tasklabel\">\r\n                TASKS COMPLETED\r\n                <br>\r\n                {{completed_tasks}}\r\n                <br>\r\n                ({{actual_hour}} Hour)\r\n               </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n    \r\n        <div class=\"col-md-6 col-sm-6 col-xs-12\">\r\n            <div class=\"widget\">\r\n                <div class=\"header\">Task Vs Status</div>\r\n                <div id=\"chart2\" class=\"chart-container\">\r\n            \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    "

/***/ }),

/***/ "../../../../../src/app/components/company-project-vs-status/company-project-vs-status.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyProjectVsStatusComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CompanyProjectVsStatusComponent = (function () {
    function CompanyProjectVsStatusComponent(companyService, config) {
        this.companyService = companyService;
        this.config = config;
        this.total_tasks = 0;
        this.new_tasks = 0;
        this.in_progress_tasks = 0;
        this.completed_tasks = 0;
        this.onHold_tasks = 0;
        this.paused_tasks = 0;
        this.planned_hour = 0;
        this.actual_hour = 0;
        this.socket = __WEBPACK_IMPORTED_MODULE_2_socket_io_client__(config.socketURL);
    }
    CompanyProjectVsStatusComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.pieData = [
            { name: 'New - Yet to Start', value: this.new_tasks, color: '#2778a7' },
            { name: 'In Progress', value: this.in_progress_tasks, color: '#99b745' },
            { name: 'Completed', value: this.completed_tasks, color: '#17a88f' },
            { name: 'On Hold', value: this.onHold_tasks, color: '#f2ac37' },
            { name: 'Paused', value: this.paused_tasks, color: '#b74549' },
        ];
        this.bakeDonut(this.pieData);
        this.socket.on('new', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('paused', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('completed', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('hold', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('inProgress', function (data) {
            _this.getAllProjects();
        });
        this.getAllProjects();
    };
    CompanyProjectVsStatusComponent.prototype.getAllProjects = function () {
        var _this = this;
        this.companyService.getAllProject().subscribe(function (data) {
            _this.projects = [];
            data.forEach(function (element) {
                if (element.status == "Planned" || element.status == "Completed" || element.status == "In Progress") {
                    _this.projects.push(element);
                }
            });
            if (_this.projects.length == 0) {
            }
            else {
                _this.project_id = _this.projects[0].id;
                _this.getData(_this.project_id);
            }
        });
    };
    CompanyProjectVsStatusComponent.prototype.changeProject = function (pro_id) {
        this.getData(pro_id);
    };
    CompanyProjectVsStatusComponent.prototype.getData = function (pro_id) {
        var _this = this;
        var last_status;
        var last_status_id = 0;
        this.total_tasks = 0;
        this.new_tasks = 0;
        this.in_progress_tasks = 0;
        this.completed_tasks = 0;
        this.onHold_tasks = 0;
        this.paused_tasks = 0;
        this.planned_hour = 0;
        this.actual_hour = 0;
        // ---------------------------------Start-------------------------------------------
        // Function      : getTasksByUser
        // Params        : pro_id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 17-04-2018
        // Last Modified : 
        // Desc          : 
        this.companyService.getTasksByProject(pro_id).subscribe(function (data) {
            // console.log(data);
            data.forEach(function (module) {
                _this.total_tasks = _this.total_tasks + module.tbl_project_tasks.length;
                _this.start_date = module.tbl_project.planned_start_date;
                _this.end_date = module.tbl_project.planned_end_date;
                module.tbl_project_tasks.forEach(function (task) {
                    if (task.planned_hour != null) {
                        _this.planned_hour = _this.planned_hour + task.planned_hour + task.buffer_hour;
                    }
                    if (task.actual_hour != null) {
                        _this.actual_hour = _this.actual_hour + task.actual_hour;
                    }
                    // console.log(task)
                    last_status_id = 0;
                    last_status = {};
                    task.tbl_task_status_assocs.forEach(function (statuses) {
                        if (statuses.id > last_status_id) {
                            last_status_id = statuses.id;
                            last_status = statuses;
                        }
                    });
                    if (last_status && last_status.status_id == 1) {
                        _this.new_tasks = _this.new_tasks + 1;
                    }
                    if (last_status && last_status.status_id == 2) {
                        _this.paused_tasks = _this.paused_tasks + 1;
                    }
                    if (last_status && last_status.status_id == 3) {
                        _this.in_progress_tasks = _this.in_progress_tasks + 1;
                    }
                    if (last_status && last_status.status_id == 4) {
                        _this.onHold_tasks = _this.onHold_tasks + 1;
                    }
                    if (last_status && last_status.status_id == 5) {
                        _this.completed_tasks = _this.completed_tasks + 1;
                    }
                });
            });
            _this.pieData = [
                { name: 'New - Yet to Start', value: _this.new_tasks, color: '#2778a7' },
                { name: 'In Progress', value: _this.in_progress_tasks, color: '#99b745' },
                { name: 'Completed', value: _this.completed_tasks, color: '#17a88f' },
                { name: 'On Hold', value: _this.onHold_tasks, color: '#f2ac37' },
                { name: 'Paused', value: _this.paused_tasks, color: '#b74549' },
            ];
            _this.bakeDonut(_this.pieData);
        });
        // -----------------------------------End------------------------------------------
    };
    CompanyProjectVsStatusComponent.prototype.bakeDonut = function (d) {
        d3.select('#chart2').selectAll("svg").remove();
        var activeSegment;
        var data = d.sort(function (a, b) { return b['value'] - a['value']; }), viewWidth = 500, viewHeight = 300, svgWidth = viewHeight, svgHeight = viewHeight, thickness = 40, colorArray = data.map(function (k) { return k.color; }), el = d3.select('#chart2'), radius = Math.min(svgWidth, svgHeight) / 2, color = d3.scaleOrdinal()
            .range(colorArray);
        var max = d3.max(data, function (maxData) { return maxData.value; });
        var svg = el.append('svg')
            .attr('viewBox', "0 0 " + (viewWidth + thickness) + " " + (viewHeight + thickness))
            .attr('class', 'pie')
            .attr('width', viewWidth)
            .attr('height', svgHeight);
        var g = svg.append('g')
            .attr('transform', "translate( " + ((svgWidth / 2) + (thickness / 2)) + ", " + ((svgHeight / 2) + (thickness / 2)) + ")");
        var arc = d3.arc()
            .innerRadius(radius - thickness)
            .outerRadius(radius);
        var arcHover = d3.arc()
            .innerRadius(radius - (thickness + 5))
            .outerRadius(radius + 8);
        var pie = d3.pie()
            .value(function (pieData) { return pieData.value; })
            .sort(null);
        var maxAssigned = false;
        var maxArcAssigned = false;
        var path = g.selectAll('path')
            .attr('class', 'data-path')
            .data(pie(data))
            .enter()
            .append('g')
            .attr('class', 'data-group')
            .each(function (pathData, i) {
            var group = d3.select(this);
            group.append('text')
                .text("" + pathData.data.value)
                .attr('class', 'data-text data-text__value')
                .attr('text-anchor', 'middle')
                .attr('dy', '0em');
            group.append('text')
                .text("" + pathData.data.name)
                .attr('class', 'data-text data-text__name')
                .attr('text-anchor', 'middle')
                .attr('dy', '1.5em');
            // Set default active segment
            if (pathData.value === max && !maxAssigned) {
                var textVal = d3.select(this).select('.data-text__value')
                    .classed('data-text--show', true);
                var textName = d3.select(this).select('.data-text__name')
                    .classed('data-text--show', true);
                maxAssigned = true;
            }
        })
            .append('path')
            .attr('d', arc)
            .attr('fill', function (fillData, i) { return color(fillData.data.name); })
            .attr('class', 'data-path')
            .on('mouseover', function () {
            var _thisPath = this, parentNode = _thisPath.parentNode;
            if (_thisPath !== activeSegment) {
                activeSegment = _thisPath;
                var dataTexts = d3.selectAll('#chart2 .data-text')
                    .classed('data-text--show', false);
                var paths = d3.selectAll('#chart2 .data-path')
                    .transition()
                    .duration(250)
                    .attr('d', arc);
                d3.select(_thisPath)
                    .transition()
                    .duration(250)
                    .attr('d', arcHover);
                var thisDataValue = d3.select(parentNode).select('.data-text__value')
                    .classed('data-text--show', true);
                var thisDataText = d3.select(parentNode).select('.data-text__name')
                    .classed('data-text--show', true);
            }
        })
            .each(function (v, i) {
            if (v.value === max && !maxArcAssigned) {
                var maxArc = d3.select(this)
                    .attr('d', arcHover);
                activeSegment = this;
                maxArcAssigned = true;
            }
            this._current = i;
        });
        var legendRectSize = 15;
        var legendSpacing = 10;
        var legend = svg.selectAll('.legend')
            .data(color.domain())
            .enter()
            .append('g')
            .attr('class', 'legend')
            .attr('transform', function (legendData, i) {
            var itemHeight = legendRectSize + legendSpacing;
            var offset = legendRectSize * color.domain().length;
            var horz = svgWidth + 80;
            var vert = (i * itemHeight) + legendRectSize + (svgHeight - offset) / 2;
            return "translate(" + horz + ", " + vert + ")";
        });
        legend.append('circle')
            .attr('r', legendRectSize / 2)
            .style('fill', color);
        legend.append('text')
            .attr('x', legendRectSize + legendSpacing)
            .attr('y', legendRectSize - legendSpacing)
            .attr('class', 'legend-text')
            .text(function (legendData) { return legendData; });
    };
    CompanyProjectVsStatusComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-project-vs-status',
            template: __webpack_require__("../../../../../src/app/components/company-project-vs-status/company-project-vs-status.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-project-vs-status/company-project-vs-status.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_3__config_config__["a" /* Config */]])
    ], CompanyProjectVsStatusComponent);
    return CompanyProjectVsStatusComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-project/company-project.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".side-bar-menu{background:#fff;}\r\n.side-bar-menu li{    border-bottom: 1px solid #e4e4e4;}\r\n.side-bar-menu li a{color:#111;text-align:left;padding: 20px 23px;}\r\n.side-bar-menu li a:hover{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:focus{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:active{background-color: #fe6a07;color:#fff;}\r\n\r\nul.breadcrumb {\r\n    padding: 10px 0;\r\n    list-style: none;\r\n\r\n    text-align: left;\r\n    color: #d68956;\r\n}\r\nul.breadcrumb li {\r\n    display: inline;\r\n    font-size: 15px;\r\n}\r\nul.breadcrumb li+li:before {\r\n    padding: 8px;\r\n    color: black;\r\n    content: \"/\\A0\";\r\n}\r\nul.breadcrumb li a {\r\n    color: #bbbbbb;\r\n    text-decoration: none;\r\n}\r\nul.breadcrumb li a:hover {\r\n    color: #d68956;\r\n    text-decoration: none;\r\n\r\n}\r\n.breadcrumb{    background-color: #f6f7fa;}\r\n\r\n\r\n.example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}\r\nbutton.mat-menu-item{\r\n  font-size: 14px !important;\r\n}\r\n.whitebgs{background:#fff;position:relative;padding:20px 30px;width:100%;text-align:center;}\r\n.whitebgs h4{font-size:24px;color: #111;}\r\n.whitecaption{background:#fff;border-top: 1px solid #e8e8e8;margin-top:0;padding:20px 30px;overflow:hidden;margin-bottom: 30px;}\r\n.dropdown-menu li a{cursor: pointer;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-project/company-project.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n      <div class=\"col-md-1 col-xs-2 display-table-cell v-align box\" id=\"navigation\">\r\n        <company-sidebar></company-sidebar>\r\n      </div>\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <!-- topbar-->\r\n        <company-topbar></company-topbar>\r\n\r\n        <!-- end topbar-->\r\n        <div class=\"user-dashboard\">\r\n          <div class=\"\">\r\n            <!-----------------------------------------------------------------table-------------------------------------->\r\n            <div class=\"col-md-4\">\r\n              <h2>Projects</h2>\r\n              <ul class=\"breadcrumb\">\r\n                <li>\r\n                  <a>Master Settings</a>\r\n                </li>\r\n                <!-- <li><a routerLink=\"/company-request-management\">Time Extension Request List</a></li> -->\r\n\r\n                <li>Projects</li>\r\n              </ul>\r\n            </div>\r\n            <div id=\"custom-search-input\" class=\"col-md-4 pull-right\">\r\n              <br>\r\n              <div class=\"input-group\">\r\n                <input type=\"text\" class=\"search-query form-control\" placeholder=\"Filter\" value=\"\" [(ngModel)]=\"searchTerm\" />\r\n                <span class=\"input-group-btn\">\r\n                  <button class=\"btn btn-danger\" type=\"button\">\r\n                    <span class=\" glyphicon glyphicon-search\"></span>\r\n                </button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-3 optionz pull-right\">\r\n              <div class=\"\">\r\n                <!-- <div class=\"col-md-6\">\r\n                  <div class=\"example-header\">\r\n                    <mat-form-field>\r\n                      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div> -->\r\n                <div class=\"col-md-12\">\r\n                  <div>\r\n                    <mat-form-field class=\"filter\">\r\n                      <mat-select (change)=\"getProject()\" [(value)]=\"selected\">\r\n                        <mat-option value=\"all\">All</mat-option>\r\n                        <mat-option value=\"Drafted\">Drafted</mat-option>\r\n                        <mat-option value=\"In Progress\">In Progress</mat-option>\r\n                        <mat-option value=\"Planned\">Planned</mat-option>\r\n                        <mat-option value=\"Completed\">Completed</mat-option>\r\n                        <mat-option value=\"Cancelled\">Cancelled</mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- <ul class=\"breadcrumb\"> -->\r\n            <!-- <li><a routerLink=\"/\">Request Management</a></li> -->\r\n            <!-- <li><a routerLink=\"/company-request-management\">Time Extension Request List</a></li> -->\r\n\r\n            <!-- <li>Projects</li>\r\n              </ul> -->\r\n              <div class=\"add-button\">\r\n                <button type=\"button\" class=\"add-project\" (click)=\"open()\" data-backdrop=\"static\">+</button>\r\n              </div>\r\n            <div class=\"col-md-12\">\r\n              <div class=\"\">\r\n                <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\">\r\n                    <div class=\"\">\r\n                      <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                        width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n                        <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                          <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n                          />\r\n                        </path>\r\n                      </svg>\r\n                    </div>\r\n                  </div> -->\r\n               \r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"col-md-4\" *ngFor=\"let item of data | project:searchTerm\">\r\n                  <div class=\"whitebgs\">\r\n                    <div class=\"btn-group btno\">\r\n                      <button type=\"button\" data-toggle=\"dropdown\" class=\"btnz\">\r\n                        <i class=\"fa fa-ellipsis-v\"></i>\r\n                      </button>\r\n                      <ul class=\"dropdown-menu\" role=\"menu\">\r\n\r\n                        <li>\r\n                          <a *ngIf=\"item.requirement_summary !== null && item.is_approved == false && item.is_estimation_completed == false && item.pm_id == loggedin_id \"\r\n                          (click)=\"approve(item.id)\"><span>Approve Estimation</span></a>\r\n                        </li>\r\n                        <li>\r\n                          <a  *ngIf=\"item.requirement_summary !== null &&  item.is_approved == false && item.is_estimation_completed == true && item.project_cost == null && item.assignee_id == loggedin_id \"\r\n                          (click)=\"approveProject(item.id)\"><span>Approve Project</span></a>\r\n                        </li>\r\n                        <li>\r\n                          <a  *ngIf=\"item.requirement_summary !== null && item.is_approved == true && item.status == 'Drafted' && item.project_cost !== null && item.pm_id == loggedin_id\"\r\n                          (click)=\"planProject(item.id)\"><span>Plan Project</span></a>\r\n                        </li>\r\n                       \r\n                        <li>\r\n                          <a  *ngIf=\"item.is_approved == false && item.assignee_id == loggedin_id && item.status == 'Drafted' \" (click)=\"edit(item.id)\"><span>Edit</span></a>\r\n                        </li>\r\n                        <li>\r\n                          <a *ngIf=\"item.requirement_summary == null && item.is_approved == false && item.assignee_id == loggedin_id\"\r\n                          (click)=\"getId(item.id)\" data-toggle=\"modal\" data-target=\"#deleteModal\" data-backdrop=\"static\" data-keyboard=\"false\"><span>Delete</span></a>\r\n                        </li>\r\n                        <li>\r\n                          <a (click)=\"viewProject(item.id)\" *ngIf=\"(item.status == 'Planned' || item.status == 'Completed' || item.status == 'In Progress'  )&& (item.assignee_id == loggedin_id || item.pm_id == loggedin_id)\"><span>View Project</span></a>\r\n                        </li>\r\n                        <li>\r\n                          <a  (click)=\"revisedExecution(item.id)\" *ngIf=\"(item.status == 'Planned' || item.status == 'In Progress'  )&& (item.assignee_id == loggedin_id || item.pm_id == loggedin_id)\"><span>Revised Execution Planning</span></a>\r\n                        </li>\r\n                        <li>\r\n                          <a  *ngIf=\"item.requirement_summary == null && item.pm_id == loggedin_id\" (click)=\"assign(item.id)\"><span>Assign Team Head</span></a>\r\n                        </li>\r\n                      \r\n                      </ul>\r\n                    </div>\r\n\r\n                    <div class=\"firstletter\">\r\n                      {{item.firstletter}}\r\n                    </div>\r\n                    <div class=\"clearfix\"></div>\r\n                    <h4>{{item.project_name}}</h4>\r\n                    <p>{{item.description}}</p>\r\n                  </div>\r\n                  <div class=\"whitecaption\">\r\n                    <div class=\"timebox\">\r\n                      <i class=\"fa fa-clock-o\"></i>\r\n                      <div class=\"timedate\">\r\n                        <p>\r\n                          <span class=\"xx\">{{item.planned_start_date |date:'yyyy-MM-dd' }}</span>\r\n                        </p>\r\n                        <h5 *ngIf=\"item.planned_start_date\">{{item.starttime }}</h5>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"topborder\"></div>\r\n                    <div class=\"timebox\">\r\n                      <div class=\"timedate\">\r\n                        <p>\r\n                          <span class=\"xx\">{{item.planned_end_date |date:'yyyy-MM-dd ' }}</span>\r\n                        </p>\r\n                        <h5 *ngIf=\"item.planned_end_date\">{{item.endtime }}</h5>\r\n                        <!-- <h5>{{item.planned_end_date}}</span></h5> -->\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"pull-right amounts\">\r\n                      <h4>₹{{item.project_cost}}</h4>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- <div class=\"example-container mat-elevation-z8\">\r\n                  <mat-table [dataSource]=\"dataSource\" matSort>\r\n                    <ng-container matColumnDef=\"slno\">\r\n                      <mat-header-cell *matHeaderCellDef> SL NO. </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row; let i = index\"> {{i+1}} </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"project_name\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> PROJECT</mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.project_name}}</mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"startdate\">\r\n                      <mat-header-cell *matHeaderCellDef> ACTUAL/PLANNED START DATE</mat-header-cell>\r\n                   \r\n                      <mat-cell *matCellDef=\"let row\"> {{row.actual_start_date == null ? row.planned_start_date == null ? '-' : (row.planned_start_date| date:\r\n                        'yyyy-MM-dd HH:mm a') : (row.actual_start_date| date: 'yyyy-MM-dd HH:mm a')}}</mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"enddate\">\r\n                      <mat-header-cell *matHeaderCellDef> ACTUAL/PLANNED END DATE</mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.actual_end_date == null ? row.planned_end_date == null ? '-' : (row.planned_end_date| date: 'yyyy-MM-dd\r\n                        HH:mm a') :(row.actual_end_date| date: 'yyyy-MM-dd HH:mm a')}}\r\n                      </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"project_cost\">\r\n                      <mat-header-cell *matHeaderCellDef> PROJECT COST</mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.project_cost}}\r\n                      </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"description\">\r\n                      <mat-header-cell *matHeaderCellDef> DESCRIPTION</mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.description}}\r\n                      </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"action\">\r\n                      <mat-header-cell *matHeaderCellDef> ACTION</mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\">\r\n                        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n                          <mat-icon>more_vert</mat-icon>\r\n                        </button>\r\n                        <mat-menu #menu=\"matMenu\" class=\"matdropdown\">\r\n                          <button mat-menu-item *ngIf=\"row.requirement_summary == null && row.pm_id == loggedin_id\" (click)=\"assign(row.id)\">\r\n                            <mat-icon>\r\n                              <i class=\"material-icons\">group</i>\r\n                            </mat-icon>\r\n                            <span>Assign Team Head</span>\r\n                          </button>\r\n                          <button mat-menu-item *ngIf=\"row.requirement_summary !== null && row.is_approved == false && row.is_estimation_completed == false && row.pm_id == loggedin_id \"\r\n                            (click)=\"approve(row.id)\">\r\n                            <mat-icon>\r\n                              <i class=\"material-icons\">assignment_turned_in</i>\r\n                            </mat-icon>\r\n                            <span>Approve Estimation</span>\r\n                          </button>\r\n                          <button mat-menu-item *ngIf=\"row.requirement_summary !== null &&  row.is_approved == false && row.is_estimation_completed == true && row.project_cost == null && row.assignee_id == loggedin_id \"\r\n                            (click)=\"approveProject(row.id)\">\r\n                            <mat-icon>\r\n                              <i class=\"material-icons\">assignment_turned_in</i>\r\n                            </mat-icon>\r\n                            <span>Approve Project</span>\r\n                          </button>\r\n                          <button mat-menu-item *ngIf=\"row.requirement_summary !== null && row.is_approved == true && row.status == 'Drafted' && row.project_cost !== null && row.pm_id == loggedin_id\"\r\n                            (click)=\"planProject(row.id)\">\r\n                            <mat-icon>\r\n                              <i class=\"material-icons\">event_available</i>\r\n                            </mat-icon>\r\n                            <span>Plan Project</span>\r\n                          </button>\r\n                          <button mat-menu-item *ngIf=\"row.is_approved == false && row.assignee_id == loggedin_id && row.status == 'Drafted' \" (click)=\"edit(row.id)\">\r\n                            <mat-icon>\r\n                              <i class=\"material-icons\">mode_edit</i>\r\n                            </mat-icon>\r\n                            <span>Edit</span>\r\n                          </button>\r\n                          <button mat-menu-item *ngIf=\"row.requirement_summary == null && row.is_approved == false && row.assignee_id == loggedin_id\"\r\n                            (click)=\"getId(row.id)\" data-toggle=\"modal\" data-target=\"#deleteModal\" data-backdrop=\"static\" data-keyboard=\"false\">\r\n                            <mat-icon>\r\n                              <i class=\"material-icons\">delete</i>\r\n                            </mat-icon>\r\n                            <span>Delete</span>\r\n                          </button>\r\n                          <button mat-menu-item (click)=\"viewProject(row.id)\" *ngIf=\"(row.status == 'Planned' || row.status == 'Completed' || row.status == 'In Progress'  )&& (row.assignee_id == loggedin_id || row.pm_id == loggedin_id)\">\r\n                            <mat-icon>\r\n                              <i class=\"material-icons\">description</i>\r\n                            </mat-icon>\r\n                            <span>View Project</span>\r\n                          </button>\r\n                          <button mat-menu-item (click)=\"revisedExecution(row.id)\" *ngIf=\"(row.status == 'Planned' || row.status == 'In Progress'  )&& (row.assignee_id == loggedin_id || row.pm_id == loggedin_id)\">\r\n                            <mat-icon>\r\n                              <i class=\"material-icons\">description</i>\r\n                            </mat-icon>\r\n                            <span>Revised Execution Planning</span>\r\n                          </button>\r\n                        </mat-menu>\r\n                      </mat-cell>\r\n                    </ng-container>\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n                  </mat-table>\r\n                  <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n                    <div class=\"col-md-4 col-md-offset-4\">\r\n                      <mat-toolbar class=\"back-color\">No item found!</mat-toolbar>\r\n                    </div>\r\n                  </div>\r\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                </div> -->\r\n              </div>\r\n            </div>\r\n           \r\n\r\n            <!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n            <div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">Delete </h4>\r\n                  </div>\r\n                  <!-- <div class=\"modal-header\"> -->\r\n                  <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n                  <!-- </div> -->\r\n                  <div class=\"modal-body delete-popup\">\r\n                    <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n                    <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n                  </div>\r\n\r\n                  <div class=\"modal-footer\" style=\"text-align:center;\">\r\n                    <button type=\"button\" (click)=\"deleteProject(Pid)\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Delete</button>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <!-- ----------------------------------------------------------------------delete modal------------------------------------------------------------------\r\n            \r\n              <!-----------------------------------------------------------------end table-------------------------------------->\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <!-- footer-->\r\n      <!-- <company-footer></company-footer> -->\r\n      <!-- end footer-->\r\n    </div>\r\n  </div>\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-project/company-project.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyProjectComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var CompanyProjectComponent = (function () {
    function CompanyProjectComponent(companyService, routes, snackBar) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'project_name', 'startdate', 'enddate', 'project_cost', 'description', 'action'];
        this.notExist = false;
    }
    CompanyProjectComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.selected = "all";
        // ---------------------------------Start-------------------------------------------
        // Function      : Get logged in entity
        // Params        : 
        // Returns       : Get logged in entity
        // Author        : Rinsha
        // Date          : 08-03-2018
        // Last Modified : 08-03-2018, Rinsha
        // Desc          :  
        this.companyService.getLoggedinEntity().subscribe(function (data) {
            _this.entity = data;
            _this.loggedin_id = _this.entity.id;
            if (data == null || data == '') {
                _this.routes.navigate(['/home']);
            }
            if (data.role_id == 2) {
                //super admin
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/home']);
                }
            }
            if (data.role_id == 1) {
                //company admin
                if (data.delete_status == true || data.block_status == true || data.cmp_status == "Not Verified") {
                    _this.routes.navigate(['/company-login']);
                }
                if (data.cmp_status == "Expired") {
                    _this.routes.navigate(['/expired']);
                }
                if (data.is_profile_completed == false) {
                    _this.routes.navigate(['/compay-aditninfo', data.cmp_id]);
                }
            }
            if (data.role_id == 3 || data.role_id == 4) {
                //company admin
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/company-login']);
                }
            }
        });
        // -----------------------------------End------------------------------------------
        this.getProject();
    };
    CompanyProjectComponent.prototype.ngAfterViewInit = function () {
        // this.dataSource.sort = this.sort;
        // this.dataSource.paginator = this.paginator;
    };
    CompanyProjectComponent.prototype.getProject = function () {
        var _this = this;
        // console.log(this.selected);
        this.notExist = false;
        // ---------------------------------Start-------------------------------------------
        // Function      : get all projects by status
        // Params        : 
        // Returns       : 
        // Author        : Rinsha
        // Date          : 12-03-2018
        // Last Modified : 12-03-2018, Rinsha
        // Desc          : getAllProjectByStatus 
        this.companyService.getAllProjectByStatus(this.selected).subscribe(function (data) {
            // console.log(data);
            if (data.length == 0) {
                _this.notExist = true;
            }
            _this.data = data;
            data.forEach(function (element) {
                element.starttime = '';
                element.endtime = '';
                element.firstletter = element.project_name.slice(0, 1);
                var d = new Date(element.planned_start_date);
                var e = new Date(element.planned_end_date);
                element.starttime = d.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });
                element.endtime = e.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });
            });
            _this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
            // console.log(this.dataSource);
            _this.dataSource.paginator = _this.paginator;
            _this.dataSource.sort = _this.sort;
        });
        // ---------------------------------End-------------------------------------------
        // // ---------------------------------Start-------------------------------------------
        // // Function      : get all projects
        // // Params        : 
        // // Returns       : 
        // // Author        : Rinsha
        // // Date          : 07-03-2018
        // // Last Modified : 07-03-2018, Rinsha
        // // Desc          : getAllProjects 
        // this.companyService.getAllProject().subscribe(data => {
        //   // console.log(data);
        //   if (data.length == 0) {
        //     this.notExist = true;
        //   }
        //   this.dataSource = new MatTableDataSource(data);
        //   // console.log(this.dataSource);
        //   this.dataSource.paginator = this.paginator;
        //   this.dataSource.sort = this.sort;
        // });
        // // ---------------------------------End-------------------------------------------
    };
    CompanyProjectComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    CompanyProjectComponent.prototype.open = function () {
        this.routes.navigate(['/add-project']);
    };
    CompanyProjectComponent.prototype.assign = function (id) {
        this.routes.navigate(['/assign-project', id]);
    };
    CompanyProjectComponent.prototype.edit = function (id) {
        this.routes.navigate(['/edit-project', id]);
    };
    CompanyProjectComponent.prototype.approve = function (id) {
        this.routes.navigate(['/approve-estimation', id]);
    };
    CompanyProjectComponent.prototype.approveProject = function (id) {
        this.routes.navigate(['/approve-project', id]);
    };
    CompanyProjectComponent.prototype.planProject = function (id) {
        this.routes.navigate(['//project-planning', id]);
    };
    CompanyProjectComponent.prototype.revisedExecution = function (id) {
        this.routes.navigate(['/revised-execution-planning', id]);
    };
    CompanyProjectComponent.prototype.deleteProject = function (id) {
        var _this = this;
        // console.log(id);
        // ---------------------------------Start-------------------------------------------
        // Function      : delete project
        // Params        : id 
        // Returns       : 
        // Author        : Rinsha
        // Date          : 12-03-2018
        // Last Modified : 12-03-2018, Rinsha
        // Desc          : to delete a project
        this.companyService.deleteProject(id).subscribe(function (data2) {
            if (data2.success == true) {
                var snackBarRef = _this.snackBar.open(data2.msg, '', {
                    duration: 2000
                });
                _this.getProject();
            }
            else {
                var snackBarRef = _this.snackBar.open(data2.msg, '', {
                    duration: 2000
                });
            }
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyProjectComponent.prototype.getId = function (id) {
        this.Pid = id;
    };
    CompanyProjectComponent.prototype.viewProject = function (id) {
        this.routes.navigate(['/view-project', id]);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], CompanyProjectComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], CompanyProjectComponent.prototype, "sort", void 0);
    CompanyProjectComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-project',
            template: __webpack_require__("../../../../../src/app/components/company-project/company-project.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-project/company-project.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], CompanyProjectComponent);
    return CompanyProjectComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-request-management/company-request-management.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}\r\nul.breadcrumb {\r\n    padding: 10px 0;\r\n    list-style: none;\r\n\r\n    text-align: left;\r\n    color: #d68956;\r\n}\r\nul.breadcrumb li {\r\n    display: inline;\r\n    font-size: 15px;\r\n}\r\nul.breadcrumb li+li:before {\r\n    padding: 8px;\r\n    color: black;\r\n    content: \"/\\A0\";\r\n}\r\nul.breadcrumb li a {\r\n    color: #bbbbbb;\r\n    text-decoration: none;\r\n}\r\nul.breadcrumb li a:hover {\r\n    color: #d68956;\r\n    text-decoration: none;\r\n\r\n}\r\n.breadcrumb{    background-color: #f6f7fa;}\r\n.user{\r\n  width: 55px;\r\n  height: 55px;\r\n  border-radius: 50%;\r\n  margin:10px 0;\r\n  float: left;\r\n  overflow: hidden;\r\n  background: #d45d0e;\r\n\r\n  text-align: center;\r\n}\r\n.user .fa-user{padding-top: 14px;color:#fff;font-size: 21px;}\r\n.bt{border-radius:30px;padding:3px 13px;   font-size: 12px;\r\n  margin-top: 9px;color: white;\r\n    background-color: #fe6a07;} \r\n    .user img{width:100%;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-request-management/company-request-management.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n    <div class=\"container-fluid display-table\">\r\n        <div class=\"row display-table-row\">\r\n      \r\n            <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n                 <!-- sidebar-->\r\n               \r\n                 <company-sidebar></company-sidebar> \r\n                 <!-- end sidebar-->\r\n            </div>\r\n            \r\n            <div class=\"col-md-12 col-xs-12\">\r\n                <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n                <!-- topbar-->\r\n                <company-topbar></company-topbar> \r\n                \r\n                    <!-- end topbar-->\r\n                \r\n                \r\n                <div class=\"user-dashboard\">\r\n                        <h2>Request Management</h2>\r\n                        <ul class=\"breadcrumb\">\r\n                          <li><a >Request Management</a></li>\r\n                          \r\n                          \r\n                          <li>Time Extension Request list </li>\r\n                        </ul>\r\n                    <div class=\"row\">\r\n                      <!-----------------------------------------------------------------table-------------------------------------->\r\n   \r\n  \r\n  <!-- <p>You selected: {{selected}} </p> -->\r\n\r\n  <div class=\"col-md-12\">\r\n      <div class=\"row\">\r\n      <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\" >\r\n          <div class=\"\"  >\r\n              <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n              width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n          <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n            <animateTransform attributeType=\"xml\"\r\n              attributeName=\"transform\"\r\n              type=\"rotate\"\r\n              from=\"0 25 25\"\r\n              to=\"360 25 25\"\r\n              dur=\"0.6s\"\r\n              repeatCount=\"indefinite\"/>\r\n            </path>\r\n          </svg>\r\n      </div>\r\n      </div> -->\r\n      \r\n  \r\n      <div class=\"col-md-12 optionz\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"example-header\">\r\n                    <mat-form-field>\r\n                      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                    </mat-form-field>\r\n                  </div>\r\n            </div>\r\n            <!-- <div class=\"col-md-2 pull-right\">\r\n                <div *ngIf=\"all_value\">\r\n                <mat-form-field class=\"filter\"> \r\n                    \r\n                      <mat-select  (change)=\"refresh()\" [(value)]=\"selected\">\r\n                    \r\n                        <mat-option value=\"all\">All</mat-option>\r\n                        <mat-option value=\"Active\">Active</mat-option>\r\n                        <mat-option value=\"Block\">Block</mat-option>\r\n                        <mat-option value=\"Delete\">Delete </mat-option>\r\n                      </mat-select>\r\n                    </mat-form-field>\r\n            </div>\r\n          </div> -->\r\n        </div>\r\n      </div>\r\n  \r\n  \r\n  <!--    \r\n            <div class=\"example-header\" >\r\n                <mat-form-field>\r\n                  <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                </mat-form-field>\r\n            </div> -->\r\n         \r\n      <div class=\"example-container mat-elevation-z8 \">\r\n    <mat-table [dataSource]=\"dataSource\" matSort>\r\n   <!-- Name Column -->\r\n   <!-- <ng-container matColumnDef=\"profile\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header></mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">\r\n        <div class=\"user\" *ngIf=\"row.tbl_project_task.tbl_user_profile.tbl_login.profile_image == ''\"><i class=\"fa fa-user\"></i></div>\r\n        <div class=\"user\" *ngIf=\"row.tbl_project_task.tbl_user_profile.tbl_login.profile_image != ''\"><img src=\"../assets/profile_upload/{{row.tbl_project_task.tbl_user_profile.tbl_login.profile_image}}\"></div>\r\n      </mat-cell>\r\n    </ng-container> -->\r\n    <ng-container matColumnDef=\"slno\">\r\n      <mat-header-cell *matHeaderCellDef> SL NO. </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row; let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}} </mat-cell>\r\n    </ng-container>\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header>NAME </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.tbl_project_task.tbl_user_profile.f_name}} </mat-cell>\r\n      </ng-container>\r\n  \r\n   <!-- Name Column -->\r\n   <ng-container matColumnDef=\"projectname\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> PROJECT NAME </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\">{{row.tbl_project_task.tbl_project_module.tbl_project.project_name}} </mat-cell>\r\n  </ng-container>\r\n    \r\n     <!-- Progress Column -->\r\n     <ng-container matColumnDef=\"taskname\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> TASK NAME </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.tbl_project_task.task_name}}</mat-cell>\r\n    </ng-container>\r\n       <!-- Progress Column -->\r\n       <ng-container matColumnDef=\"status\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header> STATUS</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\"> {{row.req_status}}</mat-cell>\r\n        </ng-container>\r\n   \r\n\r\n    <ng-container matColumnDef=\"action\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">\r\n        <a  routerLink=\"/company-time-extension-request/{{row.id}}/{{row.tbl_project_task.tbl_project_module.tbl_project.id}}\" ><button class=\"bt\">view</button></a>\r\n          <!-- <button class=\"bt\">Basic</button> -->\r\n          <!-- <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\">\r\n              <button *ngIf=\"row.tbl_login.delete_status==false\" (click)=\"getId(row.tbl_login.id)\" data-toggle=\"modal\" data-target=\"#deleteModal\" mat-menu-item >\r\n                  <i class=\"material-icons\">delete</i>\r\n                <span>Delete</span>\r\n              </button>\r\n              <button *ngIf=\"row.tbl_login.delete_status==true\" mat-menu-item disabled>\r\n                <i class=\"material-icons\">delete_forever</i>\r\n              <span>Deleted</span>\r\n            </button>\r\n              <button *ngIf=\"row.tbl_login.block_status==false && row.tbl_login.delete_status==false\" (click)=\"blockCompany(row.tbl_login.id)\" mat-menu-item>\r\n                  <i class=\"material-icons\">block</i>\r\n                <span>Block</span>\r\n              </button>\r\n              <button *ngIf=\"row.tbl_login.block_status==true && row.tbl_login.delete_status==false\" (click)=\"unblockCompany(row.tbl_login.id)\" mat-menu-item>\r\n                  <i class=\"material-icons\">block</i>\r\n                <span>Unblock</span>\r\n              </button>\r\n            </mat-menu>  -->\r\n         \r\n        </mat-cell>\r\n    </ng-container>\r\n  \r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n      </mat-row>\r\n    </mat-table>\r\n    <div class=\"col-md-15 \">\r\n        <!-- <div *ngIf=\"showSpinner\" class=\"deletespinner\">\r\n            <mat-spinner></mat-spinner>\r\n           </div> -->\r\n    </div>\r\n    <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n        <div class=\"col-md-4 col-md-offset-4\">\r\n            <mat-toolbar   class=\"back-color\">No item found!</mat-toolbar>\r\n        </div>\r\n      </div>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n  </div>\r\n  \r\n  \r\n  </div>\r\n  </div>\r\n  \r\n  <!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n  \r\n  <div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\r\n      <div class=\"modal-dialog\">\r\n  \r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n            <h4 class=\"modal-title\">Delete </h4>\r\n          </div>\r\n          <!-- <div class=\"modal-header\"> -->\r\n          <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n          <!-- </div> -->\r\n          <div class=\"modal-body delete-popup\">\r\n            <i class=\"fa fa-exclamation\"></i>\r\n  \r\n  \r\n            <h4 class=\"textalign\">Are you sure?</h4>\r\n  \r\n          </div>\r\n  \r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" (click)=\"deleteCompany(id)\" class=\"btn round-button\" data-dismiss=\"modal\">Delete</button>\r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n    </div>\r\n        \r\n       <!-----------------------------------------------------------------end table-------------------------------------->\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n                <!-- footer-->\r\n                <company-footer></company-footer>\r\n       <!-- end footer-->\r\n        </div>\r\n         </div>\r\n        <!-- Modal -->\r\n     </body>"

/***/ }),

/***/ "../../../../../src/app/components/company-request-management/company-request-management.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyRequestManagementComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var CompanyRequestManagementComponent = (function () {
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin user management
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 06-03-2018
    // Last Modified : 
    // Desc          : All users
    function CompanyRequestManagementComponent(companyService, config, routes, snackBar) {
        this.companyService = companyService;
        this.config = config;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'name', 'projectname', 'taskname', 'status', 'action'];
        this.notExist = false;
        this.selected = 'all';
        this.all_value = false;
        this.showSpinner = false;
        this.socket = __WEBPACK_IMPORTED_MODULE_4_socket_io_client__(config.siteUrl);
    }
    CompanyRequestManagementComponent.prototype.refresh = function () {
        var _this = this;
        this.showSpinner = true;
        var company = [];
        this.companyService.getAlltimeextensionrequest().subscribe(function (data) {
            // console.log(data);
            if (data.length != 0) {
                _this.all_value = true;
            }
            _this.loadToDataTable(data);
            _this.showSpinner = false;
        });
    };
    CompanyRequestManagementComponent.prototype.loadToDataTable = function (data) {
        this.notExist = false;
        if (data.length == 0) {
            this.notExist = true;
        }
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
        // console.log(this.dataSource);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    CompanyRequestManagementComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.refresh();
        this.socket.on('timeextention', function (data) {
            _this.refresh();
        });
        this.socket.on('Rejectedtimeext', function (data) {
            _this.refresh();
        });
        this.socket.on('sendtoadmin', function (data) {
            _this.refresh();
        });
    };
    CompanyRequestManagementComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    CompanyRequestManagementComponent.prototype.getId = function (id) {
        // this.showSpinner =false
        // this.showSpinnerDelete =false
        this.id = id;
        //  console.log(this.id)
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], CompanyRequestManagementComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], CompanyRequestManagementComponent.prototype, "sort", void 0);
    CompanyRequestManagementComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-request-management',
            template: __webpack_require__("../../../../../src/app/components/company-request-management/company-request-management.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-request-management/company-request-management.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_5__config_config__["a" /* Config */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], CompanyRequestManagementComponent);
    return CompanyRequestManagementComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-resoure-vs-hour/company-resoure-vs-hour.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "body {\r\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\r\n    margin: auto;\r\n    position: relative;\r\n  }\r\n  \r\n  text {\r\n    font: 15px sans-serif;\r\n  }\r\n  \r\n  .axis path,\r\n  .axis line {\r\n    fill: none;\r\n    stroke: #000;\r\n    shape-rendering: crispEdges;\r\n  }\r\n  \r\n  #stacked-bar-chart-container {\r\n    /* position: relative;\r\n    border: 2px solid black; */\r\n    width: 510px;\r\n  }\r\n  \r\n  form {\r\n    position: absolute;\r\n    left: 20px;\r\n    top: 20px;\r\n  }\r\n  \r\n  div.tooltip { \r\n    position: absolute;     \r\n    min-width: 60px;          \r\n    padding: 4px;       \r\n    font: 12px sans-serif;    \r\n    background: lightsteelblue; \r\n    border: 0px;    \r\n    border-radius: 8px;     \r\n    pointer-events: none;     \r\n  }\r\n  \r\n  .grid line {\r\n    stroke: white;\r\n    stroke-opacity: 0.7;\r\n    shape-rendering: crispEdges;\r\n  }\r\n  \r\n  g.grid {\r\n    stroke-opacity: 0;\r\n  }\r\n\r\n\r\n\r\n\r\n  svg {\r\n    font: 10px sans-serif;\r\n    shape-rendering: crispEdges;\r\n  }\r\n\r\n  .axis path,\r\n  .axis line {\r\n    fill: none;\r\n    stroke: #000;\r\n  }\r\n \r\n  path.domain {\r\n    stroke: none;\r\n  }\r\n \r\n  .y .tick line {\r\n    stroke: #ddd;\r\n  }\r\n  h1{padding-left: 6%;}\r\n  .sales{margin-top: 25px;}\r\n  .bg-g{\r\n    background: #17a88f;\r\n    color: #fff;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n}\r\n.bg-hash{\r\n  background: #E9E9E9;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n.no-dt{\r\n  text-align: center;\r\n  padding: 176px 0;\r\n  font-size: 30px;\r\n  font-weight: 800;\r\n  color: #a2a2a2;\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-resoure-vs-hour/company-resoure-vs-hour.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\r\n  <h1>Resources Vs Task Hours</h1>\r\n  <div class=\"row\">\r\n    <br>\r\n    <div class=\"col-md-8 col-sm-8 col-xs-12\">\r\n      <div class=\"col-md-10 col-md-offset-1\">\r\n        <div class=\"col-md-6 bg-g\">*Select Project</div>\r\n        <div class=\"col-md-6 bg-hash\">\r\n          <mat-select name=\"projet_id\" required [(ngModel)]=\"project_id\" (ngModelChange)=\"changeProject($event)\">\r\n            <mat-option *ngFor=\"let prj of projects\" [value]=\"prj.id\">\r\n              {{prj.project_name}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </div>\r\n\r\n        <div class=\"clearfix\"></div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <div class=\"col-md-12 col-sm-12 col-xs-12\" >\r\n      <div *ngIf=\"(userExists && proExists) else empty\" class=\"widget\">\r\n        <!-- <div id=\"chart\" class=\"chart-container\">\r\n\r\n        </div> -->\r\n\r\n        <div id=\"stacked-bar-chart-container\" style=\"width:1000px;height:400px\">\r\n        </div>\r\n        \r\n      </div>\r\n      <ng-template #empty>\r\n          <h4 class=\"no-dt\">No data to display!</h4>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</div>\r\n"

/***/ }),

/***/ "../../../../../src/app/components/company-resoure-vs-hour/company-resoure-vs-hour.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyResoureVsHourComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CompanyResoureVsHourComponent = (function () {
    function CompanyResoureVsHourComponent(companyService, config) {
        this.companyService = companyService;
        this.config = config;
        this.total_tasks = 0;
        this.new_tasks = 0;
        this.in_progress_tasks = 0;
        this.completed_tasks = 0;
        this.onHold_tasks = 0;
        this.paused_tasks = 0;
        this.count = 0;
        this.user_count = 0;
        this.proExists = false;
        this.userExists = false;
        this.socket = __WEBPACK_IMPORTED_MODULE_2_socket_io_client__(config.socketURL);
    }
    CompanyResoureVsHourComponent.prototype.ngOnInit = function () {
        this.getAllProjects();
        console.log("ngOnInit");
    };
    CompanyResoureVsHourComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        console.log("ngAfterViewInit");
        this.socket.on('new', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('paused', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('completed', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('hold', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('inProgress', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('inProgress', function (data) {
            _this.getAllProjects();
        });
        this.getAllProjects();
        this.offenseNames = [
            // "Completed",
            // "Fondling",
            // "Statutory Completed",
            // "Sa"
            "New- Yet to Start",
            "In Progress",
            "Completed",
            "On Hold",
            "Paused"
        ];
        // this.years = ["Yasir", "Rinsha", "Sudha"];
    };
    CompanyResoureVsHourComponent.prototype.getAllProjects = function () {
        var _this = this;
        console.log("getprojects");
        this.companyService.getAllProject().subscribe(function (data) {
            _this.projects = [];
            data.forEach(function (element) {
                if (element.status == "Planned" || element.status == "Completed" || element.status == "In Progress") {
                    _this.projects.push(element);
                }
            });
            if (_this.projects.length == 0) {
                _this.users = [];
                _this.proExists = false;
                //no data in charts
            }
            else {
                _this.proExists = true;
                console.log("yasir" + _this.projects[0].id);
                _this.project_id = _this.projects[0].id;
                _this.getTeamMembers(_this.projects[0].id);
            }
        });
    };
    CompanyResoureVsHourComponent.prototype.changeProject = function (pro_id) {
        this.getTeamMembers(pro_id);
    };
    CompanyResoureVsHourComponent.prototype.getTeamMembers = function (projId) {
        var _this = this;
        this.users = [];
        this.companyService.getUsers(projId).subscribe(function (data) {
            _this.users = data;
            // console.log(data)
            if (_this.users.length == 0) {
                _this.userExists = false;
                // no data in charts
            }
            else {
                // this.years = ["Yasir", "Rinsha", "Sudha"];
                _this.userExists = true;
                // console.log(this.userExists)         
                _this.years = [];
                // console.log(this.users)
                _this.users.forEach(function (element) {
                    _this.years.push(element.f_name + " " + element.l_name);
                });
                _this.getData(projId, _this.users);
            }
        });
    };
    CompanyResoureVsHourComponent.prototype.getData = function (projId, users) {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getTasksforResourceGraph
        // Params        : pro_id, users
        // Returns       : 
        // Author        : Rinsha
        // Date          :  18-04-2018
        // Last Modified : 
        // Desc          : 
        this.companyService.getTasksforResourceGraph(projId, users).subscribe(function (data) {
            // console.log("data")
            // console.log(data)
            _this.offensesByYear = data;
            _this.drawGraph(_this.offenseNames, _this.years, _this.offensesByYear);
        });
    };
    // -----------------------------------End------------------------------------------
    // this.offensesByYear = [];
    // this.user_count = 0;
    // this.count = 0;
    // this.user_count = this.users.length;
    // users.forEach(user => {
    //   let last_status: any;
    //   let last_status_id = 0;
    //   this.total_tasks = 0;
    //   this.new_tasks = 0;
    //   this.in_progress_tasks = 0;
    //   this.completed_tasks = 0;
    //   this.onHold_tasks = 0;
    //   this.paused_tasks = 0;
    //   // ---------------------------------Start-------------------------------------------
    //   // Function      : getTasksByUser
    //   // Params        : pro_id, user_id
    //   // Returns       : 
    //   // Author        : Rinsha
    //   // Date          :  17-04-2018
    //   // Last Modified : 
    //   // Desc          : 
    //   this.companyService.getTasksByUser(projId, user.id).subscribe(data => {
    //     // console.log(data);
    //     data.forEach(module => {
    //       this.total_tasks = this.total_tasks + module.tbl_project_tasks.length;
    //       module.tbl_project_tasks.forEach(task => {
    //         last_status_id = 0;
    //         last_status = {};
    //         task.tbl_task_status_assocs.forEach(statuses => {
    //           if (statuses.id > last_status_id) {
    //             last_status_id = statuses.id;
    //             last_status = statuses;
    //           }
    //         });
    //         if (last_status && last_status.status_id == 1) {
    //           this.new_tasks = this.new_tasks + 1;
    //         }
    //         if (last_status && last_status.status_id == 2) {
    //           this.paused_tasks = this.paused_tasks + 1;
    //         }
    //         if (last_status && last_status.status_id == 3) {
    //           this.in_progress_tasks = this.in_progress_tasks + 1;
    //         }
    //         if (last_status && last_status.status_id == 4) {
    //           this.onHold_tasks = this.onHold_tasks + 1;
    //         }
    //         if (last_status && last_status.status_id == 5) {
    //           this.completed_tasks = this.completed_tasks + 1;
    //         }
    //       });
    //     });
    //     // console.log("total task:" + this.total_tasks);
    //     // console.log("new task:" + this.new_tasks);
    //     // console.log("in pro task:" + this.in_progress_tasks);
    //     // console.log("completed task:" + this.completed_tasks);
    //     // console.log("onhold task:" + this.onHold_tasks);
    //     // console.log("paused task:" + this.paused_tasks);
    //     this.offensesByYear.push(
    //       {
    //         "New- Yet to Start": this.new_tasks,
    //         "In Progress": this.in_progress_tasks,
    //         "Completed": this.completed_tasks,
    //         "On Hold": this.onHold_tasks,
    //         "Paused": this.paused_tasks
    //       });
    //     this.count = this.count + 1;
    //   });
    // });
    // //  console.log(this.offensesByYear)
    // if (this.count == this.user_count) { 
    //   console.log(this.offensesByYear)
    //   this.drawGraph(this.offenseNames, this.years, this.offensesByYear);
    // }
    // // -----------------------------------End------------------------------------------
    CompanyResoureVsHourComponent.prototype.drawGraph = function (offenseNames, years, offensesByYear) {
        console.log("new yasir");
        d3.select('#stacked-bar-chart-container').selectAll("svg").remove();
        var n = offenseNames.length, // number of layers
        m = offensesByYear.length, // number of samples per layer
        stack = d3.stack().keys(offenseNames);
        var layers = stack(offensesByYear); // calculate the stack layout
        layers.forEach(function (d, i) {
            // add keys to every datapoint
            d.forEach(function (dd, j) {
                // console.log(dd);
                dd.year = years[j];
                dd.offenseName = offenseNames[i];
                dd.class = generateClassStr(dd.offenseName);
                dd.value = dd.data[dd.offenseName];
            });
        });
        function generateClassStr(str) {
            return str.replace(/\s+/g, '-').toLowerCase();
        }
        var yStackMax = d3.max(layers, function (layer) {
            return d3.max(layer, function (d) {
                return d[1];
            });
        });
        var margin = { top: 70, right: 15, bottom: 140, left: 50 }, fullChartWidth = 1000, fullChartHeight = 400, width = fullChartWidth - margin.left - margin.right, height = fullChartHeight - margin.top - margin.bottom;
        d3.select("#stacked-bar-chart-container")
            .style("width", fullChartWidth)
            .style("height", fullChartHeight);
        var x = d3
            .scaleBand()
            .domain(years)
            .rangeRound([0, width])
            .padding(0.08);
        var y = d3
            .scaleLinear()
            .domain([0, yStackMax])
            .range([height, 0]);
        var z = d3
            .scaleBand()
            .domain(offenseNames)
            .rangeRound([0, x.bandwidth()]);
        var color = ["#2778a7", "#99b745", "#17a88f", , "#f2ac37", , "#b74549"];
        var svg = d3
            .select("#stacked-bar-chart-container")
            .append("svg")
            .attr("width", width + margin.left + margin.right + 20)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + (margin.left + 20) + "," + margin.top + ")");
        var layer = svg
            .selectAll(".layer")
            .data(layers)
            .enter()
            .append("g")
            .attr("class", "layer")
            .style("fill", function (d, i) {
            return color[i];
        });
        // Define the div for the tooltip
        var tooltip = d3.select("body").append("div")
            .attr("class", "tooltip")
            .style("opacity", 0);
        // alert(x.bandwidth());
        // alert(m);
        var myLPadd = 270;
        // var myTPadd = 620;
        var myTPadd = 860;
        var rect = layer
            .selectAll(".bar")
            .data(function (d) {
            return d;
        })
            .enter()
            .append("rect")
            .attr("class", function (d) { return generateClassStr(d.offenseName) + " bar"; })
            .attr("x", function (d) {
            return x(d.year);
        })
            .attr("y", height)
            .attr("width", x.bandwidth())
            .attr("height", 0)
            .on("mouseover", function (d) {
            // d3.selectAll(".bar")
            //   .filter(dd => dd.class != d.class)
            //   .style("opacity", 0.6)
        })
            .on("mousemove", function (d) {
            // console.log(d);
            var msgy = (d.data.totalCompletedHr != 0 && d.offenseName == 'Completed') ? ', Actual hour taken : ' + d.data.totalCompletedHr + ' Hr' : '';
            tooltip
                .style("opacity", .9)
                .html("<b>" + d.value + "</b> Hr task is " + d.offenseName + " for " + d.year + msgy)
                .style("left", (d3.mouse(this)[0]) + myLPadd + "px")
                .style("top", (d3.mouse(this)[1]) + myTPadd + "px");
        })
            .on("mouseout", function (d) {
            d3.selectAll(".bar").style("opacity", 1);
            tooltip.style("opacity", 0);
        });
        rect
            .transition()
            .delay(function (d, i) {
            return i * 10;
        })
            .attr("y", function (d) {
            return y(d[1]);
        })
            .attr("height", function (d) {
            return y(d[0]) - y(d[1]);
        });
        // alert(height);
        // height = 10;
        svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x).tickSizeOuter(0))
            .selectAll("text")
            .style("text-anchor", "end")
            .attr("dx", "-.8em")
            .attr("dy", ".15em")
            .attr("transform", "rotate(-65)");
        // .append("g")
        // .attr("class", "x axis")
        // .attr("transform", "translate(0," + height + ")")
        // .call(d3.axisBottom(x).tickSizeOuter(0))
        // .attr("transform", "rotate(-90)");
        // add the Y gridlines
        svg.append("g")
            .attr("class", "grid")
            .call(d3.axisLeft(y)
            .ticks(25)
            .tickFormat(""));
        // Add the y Axis
        svg.append("g")
            .call(d3.axisLeft(y));
        // text label for the y axis
        svg.append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", 0 - margin.left - 30)
            .attr("x", 0 - (height / 2))
            .attr("dy", "3em")
            .style("text-anchor", "middle")
            .text("Total hours");
        var legend = svg
            .selectAll(".legend")
            .data(offenseNames.reverse()) // match stack order
            .enter()
            .append("g")
            .attr("class", "legend")
            .attr("transform", function (d, i) {
            return "translate(0," + i * 15 + ")";
        });
        legend
            .append("rect")
            .attr("x", width - 10)
            .attr("y", -70)
            .attr("width", 10)
            .attr("height", 10)
            .style("fill", function (d, i) {
            return color[offenseNames.length - 1 - i]; // match stack order
        });
        legend
            .append("text")
            .attr("x", width - 24)
            .attr("y", -65)
            .attr("font-size", '10px')
            .attr("dy", ".35em")
            .attr("class", "barGraphLegend")
            .style("text-anchor", "end")
            .text(function (d) {
            return d;
        });
        d3.selectAll("input").on("change", change);
        function change() {
            (this.value === "grouped") ? transitionGrouped() : transitionStacked();
        }
        function transitionGrouped() {
            rect
                .transition()
                .duration(500)
                .delay(function (d, i) {
                return i * 10;
            })
                .attr("x", function (d) {
                return x(d.year) + z(d.offenseName);
            })
                .transition()
                .attr("y", function (d) {
                return y(d.data[d.offenseName]);
            })
                .attr("height", function (d) {
                return height - y(d.data[d.offenseName]);
            });
        }
        function transitionStacked() {
            rect
                .transition()
                .duration(500)
                .delay(function (d, i) {
                return i * 10;
            })
                .attr("y", function (d) {
                return y(d[1]);
            })
                .attr("height", function (d) {
                return y(d[0]) - y(d[1]);
            })
                .transition()
                .attr("x", function (d) {
                return x(d.year);
            });
        }
    };
    CompanyResoureVsHourComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-resoure-vs-hour',
            template: __webpack_require__("../../../../../src/app/components/company-resoure-vs-hour/company-resoure-vs-hour.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-resoure-vs-hour/company-resoure-vs-hour.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_3__config_config__["a" /* Config */]])
    ], CompanyResoureVsHourComponent);
    return CompanyResoureVsHourComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-revised-execution-plan/company-revised-execution-plan.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".home{position:relative;}\r\n.task{background:#fbf6f1;width:100%;padding:6px 0;display: inline-block;margin-bottom:6px;}\r\nbutton, input, optgroup, select, textarea{outline:none !important;}\r\n.taskedit{border-left:1px solid #ccc;    display: inline-block;width:100%;margin-top: 5px;}\r\n.task ul li{width:auto;float:left;padding: 8px;}\r\n\ta{color:#111;}\r\n.task h5{padding-top:13px;padding-top: 6px;}\r\n.hash{background:#f7f6f4;}\r\n.assigned{background:#f3f8f2;border-left:3px solid #6fa93b;}\r\n.unassigned{background:#fbf1ef;border-left:3px solid #e5553d;}\r\n\r\n.assigned h5 {\r\n    padding-top: 13px;\r\n    padding-top: 6px;\r\n    display: table-cell;\r\n    padding-right: 15px;\r\n    float:left;\r\n}\r\n.assigned ul li{padding: 6px}\r\n.mrg-tp{margin-top:15px !important;}\r\n.round-button {\r\n    border-radius: 20px;\r\n    margin: 0;\r\n    float: left;\r\n    background: #f37600;\r\n    color: #fff;\r\n    padding: 7px 15px;\r\n    transition: background 2s;\r\n\tmargin-bottom:15px;\r\n}\r\n.round-button:hover {\r\n    background: #ffaa05;\r\n    color: #fff;\r\n}\r\n.dropdown ul.dropdown-menu:before {\r\n    content: \"\";\r\n    border-bottom: 10px solid #fff;\r\n    border-right: 10px solid transparent;\r\n    border-left: 10px solid transparent;\r\n    position: absolute;\r\n    top: -10px;\r\n    right: 16px;\r\n    z-index: 10;\r\n}\r\n.round-button:hover, .round-button:focus, .round-button.focus{color:#fff;}\r\nbutton, input, optgroup, select, textarea{outline:none;}\r\n.effect-1 ~ .focus-border{position: absolute; bottom: 0; left: 15px; width: 0; height: 2px;background-color: #bba28b; transition: 0.4s;right:15px;}\r\n.effect-1:focus ~ .focus-border{width: 95%; transition: 0.4s;}\r\n.effect-1{border: 0; padding: 7px 0; border-bottom: 1px solid #ccc;width:100%;}\r\n.style{width:100%;}\r\nlabel{font-size:15px;color:#4a4a4a;font-weight:normal;padding:5px 0;}\r\n.mrg-2{margin-bottom:10px;}\r\n.dropdown-menu > li > a {\r\n    display: block;\r\n    padding: 3px 20px;\r\n    clear: both;\r\n    font-weight: normal;\r\n    line-height: 25px;\r\n    color: #333333;\r\n    white-space: nowrap;\r\n}\r\n.addmodule {\r\n    padding: 20px 10px!important;\r\n    min-width: 357px;\r\n    right: inherit;\r\n    left: 20px;\r\n}\r\n.round{width:14px;height:14px;border-radius:50%;background:#70a93e;float:left;margin-right:7px;}\r\n.round2{background:#e4573c;}\r\n.notice p{font-size:11px;}\r\n.style{border:none;border-bottom: 1px solid #ccc;}\r\n.white {\r\n    background: #ffffff none repeat scroll 0 0;\r\n    \r\n    display: inline-block;\r\n    padding: 33px 25px;\r\n    width: 100%;\r\n}\r\n.btn-file{padding:0;}\r\n.white {\r\n    background: #ffffff none repeat scroll 0 0;\r\n    \r\n    display: inline-block;\r\n    padding: 33px 25px;\r\n    width: 100%;\r\n\tmargin-bottom:20px;\r\n}\r\n.center-bt{margin:20px auto 10px auto;float:none;}\r\n.project-planning .table > thead > tr > th{border:none;font-weight:normal;}\r\n.project-planning .table{margin-bottom:0;}\r\n@media only screen and (max-width : 767px) {\r\n.mrg-2 {\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.task ul li{    padding: 2px;}\t\r\n.addmodule{    min-width: 274px;}\r\n.martop {\r\n    margin-top: 35px;\r\n}\r\n.taskedit {\r\n    border-left: 1px solid #ccc;\r\n    display: inline-block;\r\n    width: 78%;\r\n    margin-top: 5px;\r\n    float: right;\r\n}\r\n.task{padding-bottom: 20px;}\r\n.addmodule .style{    margin-bottom: 18px;}\r\n}\r\n.padd-bt{padding-bottom: 20px;}\r\n.psh-left{padding-left:5% ;}\r\n.psh-left .form-group{margin-bottom:0px;}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.modal{top:0;}\r\n.modal-header {\r\n    padding: 10px 30px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #fe6a07;\r\n  }\r\n  .modal-content{\r\n  box-shadow:none;\r\n  border-radius: 9px;\r\n  overflow: hidden;\r\n  \r\n  }\r\n  .modal-title{color:#fff;}\r\n  .modal-body{    padding:20px 30px;}\r\n  .modal-body input{border:none;}\r\n  .modal-body input{padding: 0;}\r\n  .pad-top{padding-top:20px;}\r\n  .wdth{width:100% !important;}\r\n  .brd{    border: none;\r\n    height: 54px;}\r\n    .material-icons{\r\n        font-size: 20px;\r\n        float: left;\r\n        padding-right: 12px;\r\n        padding-top: 5px;\r\n    }\r\n    .close-bt{    width: 10px;\r\n        background: none;\r\n        float: right;\r\n        margin-top: 31px;\r\n        color: #111;\r\n        font-size: 11px;}\r\n    .padd-bt{    padding: 7px 6px !important;\r\n        font-size: 12px !important;\r\n        margin-top: 24px;}\r\n  .center{text-align: center;}\r\n  .center .round-button{margin:0 auto;float:none ;}\r\n  .editz{min-width: 100px;width: 100%;\r\n    top: 30px;}\r\n    .editz li{padding:0 !important;    width: 100% !important;}\r\n    .editz2 {\r\n        min-width: 522px;\r\n        width: 346%;\r\n        top: 30px;\r\n        left: 0;\r\n        max-width: 492px;\r\n        overflow: hidden;\r\n    }\r\n    .no-brdr{border:none !important;}\r\n    .am{\r\n        float: left;\r\n        background: none;\r\n        border: 2px solid #e6cebe;\r\n        margin-top: 23%;\r\n    }\r\n    .date-time{}\r\n    .assigned{background: rgba(255, 131, 109, 0.3) ;border-left: 3px solid #e5563c;}\r\n    .unassigned{background:#fbf1ef;border-left:3px solid #e5553d;}\r\n    .assigned ul li{padding: 6px}\r\n    .houricon .material-icons{ padding-top: 34px;}\r\n    /* .imageIcon {\r\n        width :25px;\r\n        height: 25px;\r\n    } */\r\n.nx-tp{\r\n    padding-top: 16px;\r\n}\r\n.nx-flt{\r\n    float: left !important;\r\n}\r\n.ngb-tp-hour input {\r\n    padding: 0 0px;\r\n}\r\n.mrg-tp{margin-right: 10px;}\r\n.abst{\r\n    position: absolute;\r\n    right: 4px;\r\n    top: -4px;\r\n}\r\n.relt{\r\n    position: relative;\r\n}\r\n.no-brdr{\r\n    border: none !important;\r\n}\r\n.mrgn-t{\r\n    width: 100%;\r\n    margin-top: 14px;\r\n}\r\n.tsk-dt{\r\n    margin: 0;\r\n    padding-top: 0 !important;\r\n}\r\n.tsk-lbl{\r\n    color: #828282;\r\n    font-size: 11px;\r\n    padding-top: 4px;\r\n    float: left;\r\n    white-space: pre;\r\n}\r\n.pd-1{\r\n    padding-top: 1px;\r\n}\r\n.loader2{display:block;text-align: left;margin-left: 20px;float:left;width: auto;margin-top: 20px;}\r\n\r\n.team-head2{float: left;}\r\n.textall{float:left;}\r\n.textall2{float:left;width:100%;}\r\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-revised-execution-plan/company-revised-execution-plan.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n      <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n        <!-- sidebar-->\r\n        <company-sidebar></company-sidebar>\r\n        <!-- end sidebar-->\r\n      </div>\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n        <!-- topbar-->\r\n        <company-topbar></company-topbar>\r\n        <!-- end topbar-->\r\n        <div class=\"user-dashboard\">\r\n          <!-- <h1>Hello, JS</h1> -->\r\n          <div class=\"row\">\r\n            <!-- --------------------------------------------- add task modal ----------------------------------------------------------------- -->\r\n            <div id=\"addTaskModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn>&times;</button>\r\n                    <h4 class=\"modal-title\">Add Task </h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"addTask(index);\">\r\n                      <div>\r\n                        <div class=\"example-container\">\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <label class=\"pad-top\">Task Name * :</label>\r\n                          </div>\r\n                          <div class=\"col-md-7 col-xs-6\">\r\n                            <mat-form-field>\r\n                              <input matInput name=\"task_name\" [(ngModel)]=\"newTasks.task_name\" autofocus>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <br>\r\n                          <div class=\"example-container\">\r\n                            <!-- <div class=\"col-md-4 col-xs-6\">\r\n                                <label class=\"pad-top\">Assigned person * :</label>\r\n                              </div>\r\n                              <div class=\"col-md-7 col-xs-6\">\r\n                                <mat-form-field class=\"inputfileds nx-flt\">\r\n                                  <mat-select placeholder=\"Members\" name='assigned_person' #group=\"ngModel\" [(ngModel)]=\"newTasks.assigned_person\" (ngModelChange)=\"getassigned();\">\r\n                                    <mat-option [value]=\"users\" *ngFor=\"let users of projectSelectedTeam;\">{{users.f_name}} {{users.l_name}} </mat-option>\r\n                                  </mat-select>\r\n                                </mat-form-field>\r\n                                <i *ngIf=\"assignedPersonEmpty\" matTooltip=\"To select an assigned person, please select atleast one team member from above list !\"\r\n                                  class=\"material-icons info-icon nx-tp nx-flt\">info_outline</i>\r\n  \r\n                              </div> -->\r\n                            <div class=\"clearfix\"></div>\r\n                            <div class=\"example-container\">\r\n                              <div class=\"col-md-4 col-xs-6\">\r\n                                <label class=\"pad-top\">Complexity :</label>\r\n                              </div>\r\n                              <div class=\"col-md-7 col-xs-6\">\r\n                                <mat-form-field class=\"inputfileds\">\r\n                                  <mat-select placeholder=\"Complexity\" name='complexity' #group=\"ngModel\" [(ngModel)]=\"newTasks.complexity\">\r\n                                    <mat-option [value]=\"complexity.id\" *ngFor=\"let complexity of complexitys;\">{{complexity.percentage}}</mat-option>\r\n                                  </mat-select>\r\n                                </mat-form-field>\r\n                              </div>\r\n                              <div class=\"clearfix\"></div>\r\n                              <br>\r\n                              <div class=\"col-md-4 col-xs-6\">\r\n                                <label class=\"pad-top\">Planned Hours *:</label>\r\n                              </div>\r\n                              <div class=\"col-md-2 col-xs-6\">\r\n                                <mat-form-field class=\"wdth\">\r\n                                  <input type=\"number\" matInput name=\"planned_hour\" min=\"0\" name='planned_hour' [(ngModel)]=\"newTasks.planned_hour\" (keypress)=\"_keyPress($event)\"\r\n                                    required>\r\n                                </mat-form-field>\r\n                              </div>\r\n                              <div class=\"col-md-3 col-xs-6\">\r\n                                <label class=\"pad-top\">Buffer Hours :</label>\r\n                              </div>\r\n                              <div class=\"col-md-2 col-xs-6\">\r\n                                <mat-form-field class=\"wdth\">\r\n                                  <input type=\"number\" matInput name=\"buffer_time\" min=\"0\" name='buffer_hour' [(ngModel)]=\"newTasks.buffer_hour\" (keypress)=\"_keyPress($event)\"\r\n                                    required>\r\n                                </mat-form-field>\r\n                              </div>\r\n                              <div class=\"clearfix\"></div>\r\n                              <br>\r\n\r\n                              <div class=\"col-md-3 col-xs-6\">\r\n                                <label class=\"pad-top\">Verification Hours *:</label>\r\n                              </div>\r\n                              <div class=\"col-md-2 col-xs-6\">\r\n                                <mat-form-field class=\"wdth\">\r\n                                  <input type=\"number\" matInput min=\"0\" name='verification_hour' [(ngModel)]=\"newTasks.verification_hour\" (keypress)=\"_keyPress($event)\"\r\n                                    required>\r\n                                </mat-form-field>\r\n                              </div>\r\n                              <div class=\"clearfix\"></div>\r\n\r\n                              <div class=\"example-container\">\r\n                                <div class=\"col-md-4 col-xs-6\">\r\n                                  <label class=\"pad-top\">Task type :</label>\r\n                                </div>\r\n                                <div class=\"col-md-7 col-xs-6\">\r\n                                  <mat-form-field class=\"inputfileds\">\r\n                                    <mat-select [(value)]=\"selected1\" name='task_type' #group=\"ngModel\" [(ngModel)]=\"newTasks.task_type\">\r\n                                      <!-- <mat-option>None</mat-option> -->\r\n                                      <mat-option value=\"0\">Billable</mat-option>\r\n                                      <mat-option value=\"1\">Non Billable</mat-option>\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <div class=\"clearfix\"></div>\r\n                                <div class=\"example-container\">\r\n                                  <div class=\"col-md-4 col-xs-6\">\r\n                                    <label class=\"pad-top\">Priority :</label>\r\n                                  </div>\r\n                                  <div class=\"col-md-7 col-xs-6\">\r\n                                    <mat-form-field class=\"inputfileds\">\r\n                                      <mat-select [(value)]=\"selected2\" name='priority' #group=\"ngModel\" [(ngModel)]=\"newTasks.priority\">\r\n                                        <!-- <mat-option>None</mat-option> -->\r\n                                        <mat-option value=\"0\">High</mat-option>\r\n                                        <mat-option value=\"1\">Medium</mat-option>\r\n                                        <mat-option value=\"2\">Low</mat-option>\r\n                                      </mat-select>\r\n                                    </mat-form-field>\r\n                                  </div>\r\n                                  <div class=\"clearfix\"></div>\r\n                                  <div class=\"example-container\">\r\n                                    <!-- <div class=\"col-md-4 col-xs-5\">\r\n                                          <label class=\"pad-top\">Checklist :</label>\r\n                                        </div>\r\n                                        <div class=\"col-md-5 col-xs-5\">\r\n                                          <div *ngFor=\"let item of newTasks.newChecklist; let i = index; trackBy:trackByIndex\">\r\n                                            <mat-form-field class=\"example-form-field\">\r\n                                              <input matInput type=\"text\" name=\"checklist{{i}}\" required [(ngModel)]=\"newTasks.newChecklist[i].name\" />\r\n                                              <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\r\n                                                <mat-icon>close</mat-icon>\r\n                                              </button>\r\n                                            </mat-form-field>\r\n                                            <input type=\"button\" value=\"X\" (click)=\"closeChecklist(i)\" class=\"close-bt\">\r\n                                          </div>\r\n                                        </div> -->\r\n                                    <!-- <div class=\"col-md-3 col-xs-2\">\r\n                                          <input type=\"button\" value=\"Add More\" (click)=\"addMore()\" class=\"round-button padd-bt\">\r\n                                        </div> -->\r\n                                    <div class=\"clearfix\"></div>\r\n                                    <div class=\"example-container\">\r\n                                      <div class=\"col-md-3 col-xs-6\">\r\n                                        <label class=\"pad-top\">Attachment :</label>\r\n                                      </div>\r\n                                      <div class=\"col-md-7 col-xs-6\">\r\n                                        <input (change)=\"displayDoc($event)\" name=\"file\" type=\"file\" accept=\".jpeg, .png, .gif,.jar, .pdf\" />\r\n                                        <!-- <input (change)=\"displayDoc($event)\" name=\"file\" type=\"file\" [(ngModel)]=\"newTasks.file\" /> -->\r\n                                      </div>\r\n                                      <div class=\"clearfix\"></div>\r\n                                      <div class=\"center\">\r\n                                        <button type=\"submit\" class=\"btn round-button dropdown-toggle mrg-tp\">Save</button>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- --------------------------------------------- end add modal ----------------------------------------------------------------- -->\r\n            <!-- --------------------------------------------- delete module modal ----------------------------------------------------------------- -->\r\n            <div id=\"deleteModuleModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">Delete </h4>\r\n                  </div>\r\n                  <!-- <div class=\"modal-header\"> -->\r\n                  <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n                  <!-- </div> -->\r\n                  <div class=\"modal-body delete-popup\">\r\n                    <i class=\"fa fa-exclamation\"></i>\r\n                    <h4 class=\"textalign\">Are you sure?</h4>\r\n                  </div>\r\n                  <div class=\"modal-footer\" style=\"text-align:center;\">\r\n                    <button type=\"button\" (click)=\"deleteModule(index)\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Delete</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- --------------------------------------------- delete task modal ----------------------------------------------------------------- -->\r\n            <div id=\"deleteTaskModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">Delete </h4>\r\n                  </div>\r\n                  <!-- <div class=\"modal-header\"> -->\r\n                  <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n                  <!-- </div> -->\r\n                  <div class=\"modal-body delete-popup\">\r\n                    <i class=\"fa fa-exclamation\"></i>\r\n                    <h4 class=\"textalign\">Are you sure?</h4>\r\n                  </div>\r\n                  <div class=\"modal-footer\" style=\"text-align:center;\">\r\n                    <button type=\"button\" (click)=\"deleteTask(i,j)\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Delete</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- ----------------------------------------------------------------------delete task modal--------------------------------------------------------------------- -->\r\n            <!-- ----------------------------------------------------------------------edit task modal--------------------------------------------------------------------- -->\r\n            <div id=\"editTaskModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button (click)=\"closeEditModal(i,j)\" type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn1>&times;</button>\r\n                    <h4 class=\"modal-title\">Edit Task </h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"editTask(i,j,newTasks);\">\r\n                      <div>\r\n                        <div class=\"example-container\">\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <label class=\"pad-top\">Task Name * :</label>\r\n                          </div>\r\n                          <div class=\"col-md-7 col-xs-6\">\r\n                            <mat-form-field>\r\n                              <input matInput name=\"task_name\" [(ngModel)]=\"newTasks.task_name\" autofocus>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n                          <!-- <div class=\"col-md-4 col-xs-6\">\r\n                              <label class=\"pad-top\">Complexity :</label>\r\n                            </div>\r\n                            <div class=\"col-md-7 col-xs-6\">\r\n                              <mat-form-field class=\"inputfileds\">\r\n                                <mat-select placeholder=\"Complexity\" name='complexity' #group=\"ngModel\" [(ngModel)]=\"newTasks.complexity\">\r\n                                  <mat-option [value]=\"complexity.id\" *ngFor=\"let complexity of complexitys;\">{{complexity.percentage}}</mat-option>\r\n                                </mat-select>\r\n                              </mat-form-field>\r\n                            </div> -->\r\n                          <div class=\"clearfix\"></div>\r\n                          <br>\r\n                          <br>\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <label class=\"pad-top\">Planned Hours *:</label>\r\n                          </div>\r\n                          <div class=\"col-md-2 col-xs-6\">\r\n                            <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput name=\"planned_hour\" min=\"0\" name='planned_hour' [(ngModel)]=\"newTasks.planned_hour\" (keypress)=\"_keyPress($event)\"\r\n                                required>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <label class=\"pad-top\">Buffer Hours :</label>\r\n                          </div>\r\n                          <div class=\"col-md-2 col-xs-6\">\r\n                            <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput name=\"buffer_time\" min=\"0\" name='buffer_hour' [(ngModel)]=\"newTasks.buffer_hour\" (keypress)=\"_keyPress($event)\"\r\n                                required>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <label class=\"pad-top\">Verification Hours *:</label>\r\n                          </div>\r\n                          <div class=\"col-md-2 col-xs-6\">\r\n                            <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput min=\"0\" name='verification_hour' [(ngModel)]=\"newTasks.verification_hour\" (keypress)=\"_keyPress($event)\"\r\n                                required>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n\r\n                          <div class=\"example-container\">\r\n                            <!-- <div class=\"col-md-4 col-xs-6\">\r\n                                <label class=\"pad-top\">Task type :</label>\r\n                              </div>\r\n                              <div class=\"col-md-7 col-xs-6\">\r\n                                <mat-form-field class=\"inputfileds\">\r\n                                  <mat-select [(value)]=\"selected1\" name='task_type' #group=\"ngModel\" [(ngModel)]=\"newTasks.task_type\">\r\n                                    <mat-option value=\"0\">Billable</mat-option>\r\n                                    <mat-option value=\"1\">Non Billable</mat-option>\r\n                                  </mat-select>\r\n                                </mat-form-field>\r\n                              </div> -->\r\n                            <div class=\"clearfix\"></div>\r\n                            <div class=\"example-container\">\r\n                              <!-- <div class=\"col-md-4 col-xs-6\">\r\n                                  <label class=\"pad-top\">Priority :</label>\r\n                                </div>\r\n                                <div class=\"col-md-7 col-xs-6\">\r\n                                  <mat-form-field class=\"inputfileds\">\r\n                                    <mat-select [(value)]=\"selected2\" name='priority' #group=\"ngModel\" [(ngModel)]=\"newTasks.priority\">\r\n                                      <mat-option value=\"0\">High</mat-option>\r\n                                      <mat-option value=\"1\">Medium</mat-option>\r\n                                      <mat-option value=\"2\">Low</mat-option>\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </div> -->\r\n                              <!-- <div class=\"clearfix\"></div> -->\r\n                              <div class=\"example-container\">\r\n                                <!-- <div class=\"col-md-4 col-xs-5\">\r\n                                          <label class=\"pad-top\">Checklist :</label>\r\n                                        </div>\r\n                                        <div class=\"col-md-5 col-xs-5\">\r\n                                            <div *ngFor=\"let item of newTasks.newChecklist; let i = index; trackBy:trackByIndex\">\r\n                                              <mat-form-field class=\"example-form-field\">\r\n                                                <input matInput type=\"text\" name=\"checklist_{{i}}\" required [(ngModel)]=\"newTasks.newChecklist[i].name\" ngModel/>\r\n                                                <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value='' \">\r\n                                                  <mat-icon>close</mat-icon>\r\n                                                </button>\r\n                                              </mat-form-field>\r\n                                              <input type=\"button\" value=\"X\" (click)=\"closeChecklist(i)\" class=\"close-bt\">\r\n                                            </div>\r\n                                          </div> -->\r\n                                <!-- <div class=\"col-md-5 col-xs-5\">\r\n                                          <div *ngFor=\"let item of newTasks.newChecklist; let i = index; trackBy:trackByIndex\">\r\n                                            <mat-form-field class=\"example-form-field\">\r\n                                              <input matInput type=\"text\" name=\"name\" required value=\"{{item.name}}\" [(ngModel)]=\"item.name\" />\r\n                                              <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\r\n                                                <mat-icon>close</mat-icon>\r\n                                              </button>\r\n                                            </mat-form-field>\r\n                                            <input type=\"button\" value=\"X\" (click)=\"closeChecklist(i)\" class=\"close-bt\">\r\n                                          </div>\r\n                                        \r\n                                        </div> -->\r\n                              </div>\r\n                              <!-- <div class=\"col-md-3 col-xs-2\">\r\n                                        <input type=\"button\" value=\"Add More\" (click)=\"addMoreFromEdit()\" class=\"round-button padd-bt\">\r\n                                      </div> -->\r\n                              <div class=\"clearfix\"></div>\r\n                              <div class=\"example-container\">\r\n                                <!-- <div class=\"col-md-3 col-xs-6\">\r\n                                    <label class=\"pad-top\">Attachment :</label>\r\n                                  </div>\r\n  \r\n                                  <div class=\"col-md-7 col-xs-6\">\r\n                                    <input (change)=\"displayDoc($event)\" name=\"file\" type=\"file\" accept=\".jpeg, .png, .gif,.jar, .pdf\" />\r\n                                  </div> -->\r\n                                <div class=\"clearfix\"></div>\r\n                                <div class=\"center\">\r\n                                  <button type=\"submit\" class=\"btn round-button dropdown-toggle mrg-tp\">Save</button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- ----------------------------------------------------------------------edit task modal--------------------------------------------------------------------- -->\r\n\r\n            <!-- ----------------------------------------------------------------------ASSIGN TASK MODAL--------------------------------------------------------------------- -->\r\n            <div id=\"assignTaskModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn3>&times;</button>\r\n                    <h4 class=\"modal-title\">Assign a task </h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"assignTask(i,j,newTasks);\">\r\n                      <div>\r\n                        <div class=\"example-container\">\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <label class=\"pad-top\">Task :</label>\r\n                          </div>\r\n                          <div class=\"col-md-6 col-xs-6 pad-top\">\r\n                            {{newTasks.task_name}}\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"example-container\">\r\n                            <div class=\"col-md-4 col-xs-6\">\r\n                              <label class=\"pad-top\">Assigned person * :</label>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-xs-6\">\r\n                              <mat-form-field class=\"inputfileds nx-flt\">\r\n                                <mat-select name='assigned_person' #group=\"ngModel\" [compareWith]=\"compareObjects\" [(ngModel)]=\"newTasks.assigned_person\"\r\n                                  (ngModelChange)=\"assignedAuser(newTasks);\" [disabled]=\"disabled[newTasks.id]\">\r\n                                  <mat-option class=\"textall2\" [value]=\"users\" *ngFor=\"let users of projectSelectedTeam\">\r\n                                    <div class=\"textall\">{{users.f_name}} {{users.l_name}} </div>\r\n                                    <div class=\"textall\" *ngIf=\"users.team_name\">- ( {{users.team_name}} )</div>\r\n                                  </mat-option>\r\n                                </mat-select>\r\n                              </mat-form-field>\r\n                              <!-- <i *ngIf=\"assignedPersonEmpty\" matTooltip=\"To select an assigned person, please select atleast one team member from above list !\"\r\n                                  class=\"material-icons info-icon  nx-tp nx-flt\">info_outline</i> -->\r\n                            </div>\r\n                            <div class=\"clearfix\"></div>\r\n                            <div class=\"center\">\r\n                              <button type=\"submit\" class=\"btn round-button dropdown-toggle mrg-tp\">Save</button>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- ----------------------------------------------------------------------ASSIGN TASK MODAL--------------------------------------------------------------------- -->\r\n\r\n            <!-- ----------------------------------------------------------------------PROJECT END DATE MODAL--------------------------------------------------------------------- -->\r\n            <div id=\"projectEndDateModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn4>&times;</button>\r\n                    <h4 class=\"modal-title\">Project End date </h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"assignTask(i,j,newTasks);\">\r\n                      <div>\r\n                        <div class=\"example-container\">\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <label class=\"pad-top\">Project End date :</label>\r\n                          </div>\r\n                          <div class=\"col-md-6 col-xs-6 pad-top\">\r\n                            <b>{{projectEndDate | date:'MMM dd yyyy hh:mm aa'}}</b>\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- ----------------------------------------------------------------------PROJECT END DATE  MODAL--------------------------------------------------------------------- -->\r\n\r\n            <div class=\"col-md-6 col-sm-12 col-xs-12 gutter \">\r\n              <div class=\"white project-planning\">\r\n                <div class=\"form-group\">\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"\">\r\n                      <b>Project Name :*</b>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"row\">\r\n                      <label for=\"\" class=\"label2\">\r\n                        <b>{{Projects?.name}}</b>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"form-group\">\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"\">\r\n                      <b>Project Code :</b>\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"row\">\r\n                      <label for=\"\" class=\"label2\">\r\n                        <b>{{Projects?.code}}</b>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"form-group\">\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"\">\r\n                      <b>Project Start Date :*</b>\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6 pull-right\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-6\">\r\n                        <div class=\"row\">\r\n                          <label for=\"\" class=\"label2\">\r\n                            <b>{{Projects?.planned_start_date | date:'MMM dd yyyy hh:mm aa'}}</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"clearfix\"></div>\r\n                </div>\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"form-group\" *ngIf=\"Projects?.planned_end_date\">\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"\">\r\n                      <b>Existing Planned End Date :*</b>\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6 pull-right\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-6\">\r\n                        <div class=\"row\">\r\n                          <label for=\"\" class=\"label2\">\r\n                            <b>{{Projects?.planned_end_date | date:'MMM dd yyyy hh:mm aa'}}</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"clearfix\"></div>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group\">\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"\">\r\n                      <b>Team head :*</b>\r\n                    </label>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6 pull-right\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-6\">\r\n                        <div class=\"row\">\r\n                          <label for=\"\" class=\"label2\">\r\n                            <b>{{Projects?.team_head_id?.f_name }} {{Projects?.team_head_id?.l_name }}</b>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"clearfix\"></div>\r\n                </div>\r\n                <!-- -----------------------------------------hide when not select a project start datetime ----------------------------------- -->\r\n                <div>\r\n                  <div class=\"form-group\">\r\n                    <div class=\"col-md-6 \">\r\n                      <!-- <label for=\"\">\r\n                                <b>Team Head</b>\r\n                              </label> -->\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"clearfix\"></div>\r\n                  <div class=\"col-md-9 psh-left\">\r\n                    <!-- <div class=\"form-group\">\r\n                        <div class=\"col-md-7\">\r\n                          <label for=\"\">\r\n                            <b>Team Head :*</b>\r\n                          </label>\r\n                        </div>\r\n                        <mat-form-field class=\"inputfileds\">\r\n                          <mat-select style=\"font-weight: bold\" placeholder=\"Team head\" name='team_head' [(ngModel)]=\"Projects.teamhead\">\r\n                            <mat-option [value]=\"employee\" *ngFor=\"let employee of companyemployee\">\r\n                              <div class=\"team-head2\"> {{employee?.f_name}} {{employee?.l_name}} </div>\r\n                              <div class=\"team-head2\" *ngIf=\"employee?.tbl_team_assocs[0]?.tbl_team.team_name \"> - ( {{employee?.tbl_team_assocs[0]?.tbl_team.team_name }} ) </div>\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </div> -->\r\n                  </div>\r\n                  <div class=\"clearfix\"></div>\r\n\r\n                  <div class=\"form-group\">\r\n                    <div class=\"col-md-6 padd-bt\">\r\n                      <label for=\"\">\r\n                        <b>Team Members :*</b>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"clearfix\"></div>\r\n                  <div class=\"col-md-9 psh-left\">\r\n                    <div class=\"form-group\" *ngFor=\"let item of allteam\">\r\n                      <div class=\"col-md-7\">\r\n                        <label for=\"\">\r\n                          <b>{{item?.team_name}} :</b>\r\n                        </label>\r\n                      </div>\r\n\r\n                      <!-- <mat-form-field>\r\n                          <mat-select [compareWith]=\"compareFn\" name=\"users\" [(ngModel)]=\"users\" multiple>\r\n                              <mat-option *ngFor=\"let person of people\" [value]=\"person\">\r\n                                 {{ person.username }}\r\n                              </mat-option>\r\n                         </mat-select>\r\n                      </mat-form-field> -->\r\n\r\n\r\n\r\n                      <mat-form-field class=\"inputfileds\">\r\n                        <mat-select style=\"font-weight: bold\" placeholder=\"{{item?.team_name}}\" name='{{item?.id}}' multiple [compareWith]=\"compareObjects\"\r\n                          [(ngModel)]=\"Projects.selctedTeam[item.id]\" (ngModelChange)=\"chooseTeamMember();\">\r\n                          <mat-option [value]=\"teamassoc?.tbl_user_profile\" *ngFor=\"let teamassoc of item.tbl_team_assocs\" [value]=\"teamassoc\">{{teamassoc?.tbl_user_profile?.f_name}} {{teamassoc?.tbl_user_profile?.l_name}} </mat-option>\r\n                        </mat-select>\r\n                      </mat-form-field>\r\n                    </div>\r\n                    <!-- <div class=\"form-group\">\r\n                          <div class=\"col-md-7\">\r\n                            <label for=\"\">\r\n                              <b>Designers</b>\r\n                            </label>\r\n                          </div>\r\n                          <mat-form-field class=\"inputfileds\">\r\n                            <mat-select style=\"font-weight: bold\" placeholder=\"Designers\" name='selected' multiple [(ngModel)]=\"Projects.designer\" (ngModelChange)=\"chooseTeamMember();\">\r\n                              <mat-option [value]=\"Designer\" *ngFor=\"let Designer of Designers;\">{{Designer.f_name}} {{Designer.l_name}}</mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                          <div class=\"col-md-7\">\r\n                            <label for=\"\">\r\n                              <b>QC</b>\r\n                            </label>\r\n                          </div>\r\n                          <mat-form-field class=\"inputfileds\">\r\n                            <mat-select style=\"font-weight: bold\" placeholder=\"QC\" name='selected' multiple [(ngModel)]=\"Projects.qc\" (ngModelChange)=\"chooseTeamMember();\">\r\n                              <mat-option [value]=\"QC\" *ngFor=\"let QC of QCs;\">{{QC.f_name}} {{QC.l_name}}</mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n                        </div> -->\r\n                  </div>\r\n                  <div class=\"clearfix\"></div>\r\n                  <form role=\"form\" (ngSubmit)=\"addModule()\" novalidate>\r\n                    <div class=\"form-group\">\r\n                      <div class=\"col-md-4 col-xs-7 mrg-2\">\r\n                        <button type=\"button\" class=\"btn round-button dropdown-toggle mrg-tp\" data-toggle=\"dropdown\" (click)=\"addModuleClear()\">Add Module</button>\r\n                        <br>\r\n                        <ul class=\"dropdown-menu addmodule\" role=\"menu\">\r\n                          <div class=\"col-md-8\">\r\n                            <input class=\"style\" type=\"text\" placeholder=\"Module Name\" name=\"name\" [(ngModel)]=\"module.module_name\">\r\n                          </div>\r\n                          <div class=\"col-md-4\">\r\n                            <button type=\"submit\" class=\"btn round-button pull-right\">Save</button>\r\n                          </div>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                  <br>\r\n                  <div class=\"clearfix\"></div>\r\n                  <div class=\"form-group mrg-2\">\r\n                    <div class=\"col-md-4 col-xs-4\">\r\n                      <label>\r\n                        <b>Total Estimated Hours</b>\r\n                      </label>\r\n                    </div>\r\n                    <div class=\"col-md-4 col-xs-4\">\r\n                      <div>\r\n                        <h5>\r\n                          <b>{{totalEstimatedhr}}</b>\r\n                        </h5>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-4 col-xs-4 notice\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-6 col-xs-6\">\r\n                          <span class=\"round\"></span>\r\n                          <p>Assigned</p>\r\n                        </div>\r\n                        <div class=\"col-md-6 col-xs-6\">\r\n                          <span class=\"round round2\"></span>\r\n                          <p>Unasigned</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <div>\r\n                      <div *ngFor=\"let module of modules; let i = index\">\r\n                        <div class=\"col-md-12 col-xs-12 pull-right\">\r\n                          <div class=\"task\">\r\n                            <div class=\"col-md-8 col-xs-7\">\r\n                              <div>\r\n                                <!-- <p>dfd</p> -->\r\n                                <h5>{{module.module_name}}</h5>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-md-4 col-xs-5\">\r\n                              <ul class=\"taskedit\">\r\n                                <!-- {{module.time}} -->\r\n                                <!-- <li>22 Hr</li> -->\r\n                                <li class=\"pull-right\" *ngIf=\"!module.removeBtn\">\r\n                                  <a href=\"#\" data-toggle=\"tooltip\" matTooltip=\"Delete module\" data-toggle=\"modal\" data-target=\"#deleteModuleModal\" (click)=\"getId(i)\">\r\n                                    <i class=\"fa fa-close\" aria-hidden=\"true\"></i>\r\n                                  </a>\r\n                                </li>\r\n                                <!-- <div class=\"col-md-4 col-xs-7 mrg-2\"> -->\r\n                                <li class=\"pull-right\" *ngIf=\"!module.removeBtn\">\r\n                                  <form role=\"form\" #f=\"ngForm\" novalidate>\r\n                                    <a href=\"#\" data-toggle=\"tooltip\" matTooltip=\"Edit module\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" (click)=\"getId(i)\"\r\n                                      class=\"dropdown\">\r\n                                      <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                    </a>\r\n                                    <ul class=\"dropdown-menu addmodule editz\" role=\"menu\">\r\n                                      <div class=\"col-md-8\">\r\n                                        <input class=\"style\" type=\"text\" placeholder=\"Module Name\" name=\"module_name\" [(ngModel)]=\"module.module_name\">\r\n                                      </div>\r\n                                      <div class=\"col-md-4\">\r\n                                        <button type=\"submit\" class=\"btn round-button pull-right\">Close</button>\r\n                                      </div>\r\n                                    </ul>\r\n                                  </form>\r\n                                </li>\r\n                                <!-- </div> -->\r\n                                <li class=\"pull-right\"></li>\r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <div draggable=\"true\" [class]=\"'itemClass'\" *ngFor=\"let task of modules[i]?.tbl_estimation_tasks; let j = index\">\r\n                            <div class=\"col-md-11 col-xs-12 pull-right\">\r\n                              <div class=\"task assigned relt\" [ngStyle]=\"{'background-color': task?.color, 'border-left': task?.bordercolor}\">\r\n                                <div class=\"col-md-12 col-xs-12 martop\">\r\n                                  <a data-toggle=\"tooltip\" matTooltip=\"Task name\">\r\n                                    <h5 class=\"mrgn-t\">\r\n                                      <span class=\"tsk-lbl pd-1\">Task: </span>{{task?.task_name}}</h5>\r\n                                  </a>\r\n                                  <div>\r\n                                    <a data-toggle=\"tooltip\" matTooltip=\"Assigned user\">\r\n                                      <label for=\"\" class=\"tsk-lbl\">Assigned Person: </label>\r\n                                      <h5 class=\"tsk-dt\">{{task?.assigned_user?.f_name }} {{task?.assigned_user?.l_name}}</h5>\r\n                                    </a>\r\n                                  </div>\r\n                                  <a data-toggle=\"tooltip\" matTooltip=\"Total Task hour\">\r\n                                    <label for=\"\" class=\"tsk-lbl\">Hours: </label>\r\n                                    <h5 class=\"tsk-dt\">{{task?.planned_hour + task?.buffer_hour}} hrs</h5>\r\n                                  </a>\r\n                                  <a data-toggle=\"tooltip\" matTooltip=\"Start Date time\">\r\n                                    <label for=\"\" class=\"tsk-lbl\" *ngIf=\"task?.start_date_time_new\">Start: </label>\r\n                                    <h5 class=\"tsk-dt\">{{task?.start_date_time_new | date:'MMM dd yyyy hh:mm aa'}}</h5>\r\n                                  </a>\r\n                                  <a data-toggle=\"tooltip\" matTooltip=\"End date time\">\r\n                                    <label for=\"\" class=\"tsk-lbl\" *ngIf=\"task?.end_date_time\">End: </label>\r\n                                    <h5 class=\"tsk-dt\">{{task?.end_date_time | date:'MMM dd yyyy hh:mm aa'}}</h5>\r\n                                  </a>\r\n                                  <!-- <a data-toggle=\"tooltip\" matTooltip=\"Task status\">\r\n                                      <label for=\"\" class=\"tsk-lbl\" >Task Status: </label>\r\n                                      <h5 class=\"tsk-dt\">{{task?.tbl_task_status_assocs[0]?.tbl_task_status?.status}}</h5>\r\n                                    </a> -->\r\n                                </div>\r\n                                <div class=\"abst\">\r\n                                  <ul class=\"taskedit no-brdr\">\r\n                                    <li></li>\r\n                                    <li class=\"pull-right\" *ngIf=\"!task?.removeBtn\">\r\n                                      <a href=\"#\" data-toggle=\"tooltip\" matTooltip=\"Delete Task\" data-toggle=\"modal\" data-target=\"#deleteTaskModal\" (click)=\"getId1(i,j)\">\r\n                                        <i class=\"fa fa-close\" aria-hidden=\"true\"></i>\r\n                                      </a>\r\n                                    </li>\r\n                                    <li class=\"pull-right\" *ngIf=\"!task?.removeBtn\">\r\n\r\n                                      <a href=\"#\" data-toggle=\"tooltip\" matTooltip=\"Edit task\" data-target=\"#editTaskModal\" data-toggle=\"modal\" (click)=\"getId2(i,j,task)\"\r\n                                        data-backdrop=\"static\" data-keyboard=\"false\">\r\n                                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                                      </a>\r\n                                    </li>\r\n                                    <li class=\"pull-right\" *ngIf=\"!task.removeBtn\">\r\n\r\n                                      <a href=\"#\" data-toggle=\"tooltip\" matTooltip=\"Assign team member\" data-target=\"#assignTaskModal\" data-toggle=\"modal\" (click)=\"getId3(i,j,task)\"\r\n                                        data-backdrop=\"static\" data-keyboard=\"false\">\r\n                                        <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                                      </a>\r\n                                    </li>\r\n\r\n                                  </ul>\r\n                                </div>\r\n\r\n                                <div class=\"clearfix\"></div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-md-12\" *ngIf=\"!module.removeBtn\">\r\n                            <button type=\"button\" (click)=\"getId(i)\" data-toggle=\"modal\" data-target=\"#addTaskModal\" class=\"btn round-button pull-right right-btn\"\r\n                              data-backdrop=\"static\" data-keyboard=\"false\">Add Task</button>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"clearfix\"></div>\r\n                      </div>\r\n\r\n\r\n                      <!-- -------------------------------------------------------Verification module---------------------------------------------- -->\r\n                      <!-- <div>\r\n                          <div class=\"col-md-12 col-xs-12 pull-right\">\r\n                            <div class=\"task\">\r\n                              <div class=\"col-md-8 col-xs-7\">\r\n                                <div>\r\n  \r\n                                  <h5>Module name</h5>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"col-md-4 col-xs-5\">\r\n                                <ul class=\"taskedit\">\r\n                                  {{total_verification_time}}\r\n                                  <li class=\"pull-right\">\r\n                                  </li>\r\n                                  <li class=\"pull-right\"></li>\r\n                                </ul>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div draggable=\"true\" [class]=\"'itemClass'\">\r\n                              <div class=\"col-md-11 col-xs-12 pull-right\">\r\n                                <div class=\"task assigned relt\" [ngStyle]=\"{'background-color': task?.color, 'border-left': task?.bordercolor}\">\r\n                                  <div class=\"col-md-12 col-xs-12 martop\">\r\n                                    <a data-toggle=\"tooltip\" matTooltip=\"Task name\">\r\n                                      <h5 class=\"mrgn-t\">\r\n                                        <span class=\"tsk-lbl pd-1\">Task: </span>Task name</h5>\r\n                                    </a>\r\n                                    <div>\r\n                                      <a data-toggle=\"tooltip\" matTooltip=\"Assigned user\">\r\n                                        <label for=\"\" class=\"tsk-lbl\">Assigned Person: </label>\r\n                                        <h5 class=\"tsk-dt\">{{Projects?.teamhead.f_name}} {{Projects?.teamhead.l_name}}</h5>\r\n                                      </a>\r\n                                    </div>\r\n                                    <a data-toggle=\"tooltip\" matTooltip=\"Total Task hour\">\r\n                                      <label for=\"\" class=\"tsk-lbl\">Hours: </label>\r\n                                      <h5 class=\"tsk-dt\"> {{total_verification_time}} hrs</h5>\r\n                                    </a>\r\n                                    <a data-toggle=\"tooltip\" matTooltip=\"Start Date time\">\r\n                                      <label for=\"\" class=\"tsk-lbl\">Start: </label>\r\n                                      <h5 class=\"tsk-dt\">start date time</h5>\r\n                                    </a>\r\n                                    <a data-toggle=\"tooltip\" matTooltip=\"End date time\">\r\n                                      <label for=\"\" class=\"tsk-lbl\" >End: </label>\r\n                                      <h5 class=\"tsk-dt\">End date time</h5>\r\n                                    </a>\r\n                                  </div>\r\n                                  <div class=\"clearfix\"></div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n  \r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n                        </div> -->\r\n                      <!-- -------------------------------------------------------Verification module---------------------------------------------- -->\r\n                      <div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"clearfix\"></div>\r\n                    <button type=\"button\" class=\"btn round-button dropdown-toggle mrg-tp\" [disabled]=\"disableCalculateBtn\" (click)=\"calculateEnddate()\">\r\n                      Calculate End date</button>\r\n                    <div *ngIf=\"showSpinner\">\r\n                      <app-spinner class=\"loader2\"></app-spinner>\r\n                    </div>\r\n                    <!-- <div *ngIf=\"showSaveBtn\"><button type=\"button\" class=\"btn round-button dropdown-toggle mrg-tp\" (click)=\"savePlanningData()\"> Save </button></div> -->\r\n\r\n\r\n                    <div *ngIf=\"showSaveBtn\">\r\n                      <button type=\"button\" class=\"btn round-button dropdown-toggle mrg-tp pull-right\" [disabled]=\"saveBtnDisable\" (click)=\"savePlanningData()\">\r\n                        Save </button>\r\n                      <div class=\"leftspinner\" *ngIf=\"showSpinnersave\">\r\n                        <app-spinner></app-spinner>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!-- -----------------------------------------hide when not select a project start datetime ----------------------------------- -->\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"white\">\r\n                <div class=\"col-md-12\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"example-header\">\r\n                        <mat-form-field>\r\n                          <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"pull-right\">\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"example-container mat-elevation-z8 \">\r\n                  <mat-table [dataSource]=\"dataSource\" matSort>\r\n                    <ng-container matColumnDef=\"slno\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header>Sl_No </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row;let i = index\"> {{i+1}} </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"user\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> USER </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.f_name}} {{row.l_name}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <!-- <ng-container matColumnDef=\"teamhead\">\r\n                        <mat-header-cell *matHeaderCellDef> </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">\r\n  \r\n                          <mat-header-cell *matHeaderCellDef mat-sort-header> TEAM HEAD </mat-header-cell>\r\n                          <mat-slide-toggle class=\"example-margin\" name=\"team_head\" [(ngModel)]=\"row.is_team_head\" (change)=\"onTeamHeadChange(row)\"\r\n                            [checked]=\"row.is_team_head\">\r\n                          </mat-slide-toggle>\r\n                        </mat-cell>\r\n                      </ng-container> -->\r\n\r\n\r\n                    <!-- <ng-container matColumnDef=\"teamhead\">\r\n                          <mat-header-cell *matHeaderCellDef mat-sort-header> ASSIGN TEAM HEAD </mat-header-cell>\r\n                          <mat-cell *matCellDef=\"let row\"> <mat-slide-toggle class=\"example-margin\" name=\"team_head\" [(ngModel)]=\"row.is_team_head\" (change)=\"onTeamHeadChange(row)\"\r\n                            [checked]=\"row.is_team_head\">\r\n                          </mat-slide-toggle></mat-cell>\r\n                        </ng-container>\r\n   -->\r\n\r\n\r\n                    <ng-container matColumnDef=\"start_date\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header>START DATE</mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row;let i = index\">\r\n                        <input matInput [matDatepicker]=\"picker\" name='start_date1' [(ngModel)]=\"row.start_date\" (ngModelChange)=\"setAvailableDateTimeofUser();\"\r\n                          [min]=\"todayDate1\">\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker></mat-datepicker>\r\n                      </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"start_time\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> START TIME </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\" class=\"padding3\">\r\n                        <ngb-timepicker class=\"no-brdr new-x\" name=\"start_time\" [(ngModel)]=\"row.start_time\" [seconds]=\"true\" (ngModelChange)=\"setAvailableDateTimeofUser();\"></ngb-timepicker>\r\n                      </mat-cell>\r\n                    </ng-container>\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                  </mat-table>\r\n                  <div class=\"col-md-15 \">\r\n                  </div>\r\n                  <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n                    <div class=\"col-md-4 col-md-offset-4\">\r\n                      <mat-toolbar class=\"back-color\">No item found!</mat-toolbar>\r\n                    </div>\r\n                  </div>\r\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>"

/***/ }),

/***/ "../../../../../src/app/components/company-revised-execution-plan/company-revised-execution-plan.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyRevisedExecutionPlanComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_forms__ = __webpack_require__("../../../forms/esm5/forms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_ng2_dragula_ng2_dragula__ = __webpack_require__("../../../../ng2-dragula/ng2-dragula.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_ng2_dragula_ng2_dragula___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_ng2_dragula_ng2_dragula__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var CompanyRevisedExecutionPlanComponent = (function () {
    function CompanyRevisedExecutionPlanComponent(route, companyService, snackBar, routes, dragulaService) {
        this.route = route;
        this.companyService = companyService;
        this.snackBar = snackBar;
        this.routes = routes;
        this.dragulaService = dragulaService;
        this.todayDate = new Date();
        this.showSaveBtn = false;
        this.disableCalculateBtn = false;
        this.isSuccess = true;
        this.isSucessCalculate = true;
        this.is_show_verification_module = false;
        this.projectSelectedTeam = [];
        this.datepicker = false;
        this.showstartdate = false;
        this.saveBtnDisable = false;
        this.displayedColumns = ['slno', 'user', 'start_date', 'start_time'];
        this.selected = '0';
        this.selected1 = '0';
        this.selected2 = '0';
        this.taskNo = 0;
        this.disabled = [];
        this.sum = 0;
        this.sum1 = 0;
        this.arr1 = [];
        this.arr2 = [];
        // ------------------Assigned users--------------
        this.teamMembers = [];
        this.meridain = 'AM';
        this.startDate1 = [];
        this.task_time = 0;
        this.shownewModule = false;
        this.shownewTasks = false;
        this.QcIcon = false;
        this.DeveloperIcon = false;
        this.DesignerIcon = false;
        this.teamheadselect = false;
        this.spinner = false;
        this.assignPerson = [];
        this.userAvailablity = [];
        this.showSpinner = false;
        this.showSpinnersave = false;
        this.endDatetime = {
            start_Date: ''
        };
        this.showUser = [];
        // -----assign task----
        this.assigntask = {
            // start_time: '',
            planned_hour: 0,
            buffer_hour: 0,
            total_hour: 0,
        };
        this.module = {
            module_name: '',
            time: 0,
            tbl_estimation_tasks: [],
            removeBtn: false
        };
        this.Projects = {
            name: '',
            code: '',
            start_date: new Date(),
            developer: [],
            designer: [],
            qc: [],
            selctedTeam: {},
            teamhead: '',
            start_time: { hour: 0, minute: 0, second: 0 },
            planned_start_date: new Date(),
            planned_end_date: new Date(),
            team_head_id: 0
        };
        this.newTasks = {
            task_name: '',
            assigned_person: '',
            complexity: 0,
            planned_hour: 0,
            buffer_hour: 0,
            verification_hour: 0,
            start_date: '',
            start_time: '',
            end_date: '',
            end_time: '',
            task_type: '',
            priority: '',
            assigned: '',
            assigned1: '',
            docFile: [],
            docSrc: '',
            color: '',
            bordercolor: '',
            file: '',
            newChecklist: [{ name: '' }],
            assigned_user: ''
        };
        this.newTasks1 = {
            task_name: '',
            assigned_person: '',
            complexity: 0,
            planned_hour: 0,
            buffer_hour: 0,
            verification_hour: 0,
            start_date: '',
            start_time: '',
            end_date: '',
            end_time: '',
            task_type: '',
            priority: '',
            assigned: '',
            assigned1: '',
            docFile: [],
            docSrc: '',
            color: '',
            bordercolor: '',
            file: '',
            newChecklist: [{ name: '' }],
            assigned_user: '',
            removeBtn: false
        };
        this.assignedperdatevariable = {
            id: '',
            date: ''
        };
        this.assignedPersonDateArray = [];
        this.assignedPersonDateArray1 = [];
        this.holidaydata = [];
        this.leavedata = [];
        this.worktime = [];
        this.offday = [];
        this.is_not_planned_start_time = [];
        this.assignedPersonEmpty = false;
        this.date = new __WEBPACK_IMPORTED_MODULE_4__angular_forms__["FormControl"](new Date());
        this.serializedDate = new __WEBPACK_IMPORTED_MODULE_4__angular_forms__["FormControl"]((new Date()).toISOString());
        this.oldDevTeam = '';
    }
    CompanyRevisedExecutionPlanComponent.prototype.meridian = function () {
        if (this.meridain == 'AM') {
            this.meridain = 'PM';
        }
        else if (this.meridain == 'PM') {
            this.meridain = 'AM';
        }
    };
    CompanyRevisedExecutionPlanComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    CompanyRevisedExecutionPlanComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.totalEstimatedhr = 0;
        this.Projects.start_date = new Date();
        var hr = this.Projects.start_date.getHours();
        var mnt = this.Projects.start_date.getMinutes();
        var sec = this.Projects.start_date.getSeconds();
        this.Projects.start_time = { hour: hr, minute: mnt, second: sec };
        this.modules = [];
        this.myArray = [];
        this.myArray1 = [];
        this.myArray3 = [];
        this.holidaydata = [];
        this.assignedPersonDateArray = [];
        this.assignedPersonDateArray1 = [];
        this.offday = [];
        this.assignPerson = [];
        this.worktime = [];
        this.leavedata = [];
        this.is_not_planned_start_time = [];
        this.sub = this.route.params.subscribe(function (params) {
            _this.p_id = params.id;
            _this.companyService.getComplexity().subscribe(function (complexity) {
                _this.complexitys = complexity;
            });
            _this.companyService.getProjectById(_this.p_id).subscribe(function (resData) {
                console.log(resData);
                _this.Projects.name = resData.project_name;
                _this.Projects.code = resData.project_code;
                _this.Projects.planned_start_date = resData.planned_start_date;
                _this.Projects.team_head_id = resData.tbl_user_profile;
                _this.Projects.planned_end_date = resData.planned_end_date;
                _this.totalEstimatedhr = resData.total_estimated_hour;
                console.log(resData);
            });
        });
        // this.companyService.getDeveloperUsers().subscribe(developerDatas => {
        //   // console.log(developerDatas);
        //   this.Developers = developerDatas;
        // });
        // this.companyService.getDesignerrUsers().subscribe(designerDatas => {
        //   this.Designers = designerDatas;
        // });
        // this.companyService.getQcUsers().subscribe(qcDatas => {
        //   this.QCs = qcDatas;
        // });
        this.companyService.getTasksModules(this.p_id).subscribe(function (data) {
            // this.moduledata = data
            // this.total_verification_time = 0;
            // this.moduledata.forEach(element => {
            //   this.modules.push(element);
            //   this.task_time = 0;
            //   this.arr1.push(element.tbl_estimation.estimation_hour)
            //     ;
            //   element.tbl_estimation_tasks.forEach(elementimation_tasks => {
            //     this.task_time = this.task_time + elementimation_tasks.planned_hour + elementimation_tasks.buffer_hour;
            //     this.total_verification_time = this.total_verification_time + elementimation_tasks.verification_hour;
            //     elementimation_tasks.newChecklist = []
            //   })
            //   element.time = this.task_time;
            // })
            // this.arr1.forEach(element2 => {
            //   this.sum = this.sum + element2;
            // });
            // this.companyService.getAllUsers().subscribe(team => {
            //   this.team = team
            //   // this.assignPerson = asignedPerson;
            // });
            // this.companyService.getComplexity().subscribe(complexity => {
            //   this.complexitys = complexity;
            // });
        });
        this.companyService.getWorkingTime().subscribe(function (getWorkingTime) {
            _this.getWorkingTime = getWorkingTime;
        });
        this.companyService.getallTeamsforassign().subscribe(function (res) {
            _this.allteam = res;
        });
        this.companyService.getAllcompanyemployeeWithTeam().subscribe(function (res) {
            _this.companyemployee = res;
            // console.log(this.companyemployee);
        });
        this.companyService.getoldPlanningData(this.p_id).subscribe(function (oldplanningdetailsres) {
            _this.keepExistingplanningdetailsArray = [];
            _this.keepExistingplanningdetailsArray = oldplanningdetailsres.data;
            var newarray = [];
            // this.oldplanningdetails = oldplanningdetailsres.data
            _this.modules = oldplanningdetailsres.data;
            _this.modules.forEach(function (element, j) {
                element.removeBtn = true;
                element.tbl_estimation_tasks = [];
                element.tbl_project_tasks.forEach(function (tasks) {
                    tasks.removeBtn = true;
                    tasks.color = '#e6e6e6';
                    if (tasks.tbl_task_status_assocs[0].status_id !== 5 && tasks.tbl_task_status_assocs[0].status_id !== 6) {
                        element.removeBtn = false;
                        tasks.removeBtn = false;
                        tasks.color = '#e6ffe6';
                    }
                    tasks.bordercolor = '3px solid #6fa93b';
                    if (newarray.indexOf(tasks.tbl_user_profile.id) == -1) {
                        tasks.tbl_user_profile.start_date = tasks.planned_start_date_time;
                        var d = tasks.planned_start_date_time;
                        var starttimehour = d.substr(11, 2);
                        var starttimeminute = d.substr(14, 2);
                        var startimesecond = d.substr(17, 2);
                        tasks.tbl_user_profile.start_time = { hour: starttimehour, minute: starttimeminute, second: startimesecond };
                        tasks.tbl_user_profile.team_id = tasks.tbl_user_profile.tbl_team_assocs[0].tbl_team.id;
                        newarray.push(tasks.tbl_user_profile.id);
                        _this.projectSelectedTeam.push(tasks.tbl_user_profile);
                        if (!_this.Projects.selctedTeam[tasks.tbl_user_profile.team_id]) {
                            _this.Projects.selctedTeam[tasks.tbl_user_profile.team_id] = [];
                        }
                        _this.Projects.selctedTeam[tasks.tbl_user_profile.team_id].push(tasks.tbl_user_profile);
                        _this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](_this.projectSelectedTeam);
                        _this.dataSource.paginator = _this.paginator;
                        _this.dataSource.sort = _this.sort;
                    }
                    tasks.assigned_user = tasks.tbl_user_profile;
                    tasks.assigned_person = tasks.tbl_user_profile;
                    tasks.start_date_time_new = tasks.planned_start_date_time;
                    tasks.end_date_time = tasks.planned_end_date_time;
                    element.tbl_estimation_tasks.push(tasks);
                    // console.log(this.projectSelectedTeam);
                });
                if (element == _this.modules[_this.modules.length - 1]) {
                    element.removeBtn = true;
                    element.tbl_project_tasks.forEach(function (tasks) {
                        tasks.removeBtn = true;
                    });
                }
            });
            // console.log(this.companyemployee);
        });
    };
    //   compareFn(user1: this.Projects.selctedTeam[item.id], user2: User) {
    //     return user1 && user2 ? user1.id === user2.id : user1 === user2;
    // }
    CompanyRevisedExecutionPlanComponent.prototype.chooseTeamMember = function () {
        var _this = this;
        var userOldArr = [];
        userOldArr = this.projectSelectedTeam;
        var OldSelectedUserId = [];
        userOldArr.forEach(function (element) {
            OldSelectedUserId.push(element.id);
        });
        this.projectSelectedTeam = [];
        var selectedUserId = [];
        // console.log(this.Projects.developer);
        this.allteam.forEach(function (element1) {
            if (_this.Projects.selctedTeam[element1.id] && _this.Projects.selctedTeam[element1.id].length > 0) {
                _this.Projects.selctedTeam[element1.id].forEach(function (element) {
                    // console.log(element);
                    element.team_id = element1.id;
                    if (selectedUserId.indexOf(element.id) == -1) {
                        if (OldSelectedUserId.indexOf(element.id) == -1) {
                            element.start_date = _this.Projects.start_date;
                            element.start_time = _this.Projects.start_time;
                            element.team_name = element1.team_name;
                            _this.projectSelectedTeam.push(element);
                        }
                        else {
                            userOldArr.forEach(function (elm) {
                                if (elm.id == element.id) {
                                    element.start_date = elm.start_date;
                                    element.start_time = elm.start_time;
                                    element.team_name = element1.team_name;
                                }
                            });
                            selectedUserId.push(element.id);
                            _this.projectSelectedTeam.push(element);
                            // console.log(this.projectSelectedTeam)
                        }
                    }
                });
            }
        });
        console.log(this.projectSelectedTeam);
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](this.projectSelectedTeam);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    // onTeamHeadChange(value) {
    //   if (value.is_team_head == true) {
    //     this.projectSelectedTeam.forEach(element => {
    //       console.log(element);
    //       if (element.is_team_head == true && element.id !== value.id) {
    //         element.is_team_head = false
    //       }
    //     });
    //     this.Projects.teamhead = value;
    //   }
    // }
    CompanyRevisedExecutionPlanComponent.prototype.addMore = function () {
        this.newTasks.newChecklist.push({ name: '' });
    };
    CompanyRevisedExecutionPlanComponent.prototype.addMoreFromEdit = function () {
        this.newTasks.newChecklist.push({ name: '' });
    };
    CompanyRevisedExecutionPlanComponent.prototype.closeChecklist = function (index) {
        this.newTasks.newChecklist.splice(index, 1);
    };
    CompanyRevisedExecutionPlanComponent.prototype.displayDoc = function (fileInput) {
        var _this = this;
        var ext = fileInput.target.files[0].name.split('.').pop().toLowerCase();
        this.newTasks.docFile = fileInput.target.files[0];
        if (fileInput.target.files && fileInput.target.files[0]) {
            var reader = new FileReader();
            reader.onload = (function (e) {
                _this.newTasks.docSrc = e.target['result'];
            });
            reader.readAsDataURL(fileInput.target.files[0]);
        }
    };
    CompanyRevisedExecutionPlanComponent.prototype.modalClear = function () {
        this.newTasks = {
            task_name: '',
            assigned_person: '',
            complexity: 0,
            planned_hour: 0,
            buffer_hour: 0,
            verification_hour: 0,
            start_date: '',
            start_time: '',
            end_date: '',
            end_time: '',
            task_type: '',
            assigned1: '',
            priority: '',
            assigned: '',
            docFile: [],
            docSrc: '',
            color: '',
            bordercolor: '',
            file: '',
            newChecklist: [{ name: '' }],
            assigned_user: ''
        };
    };
    CompanyRevisedExecutionPlanComponent.prototype.addModule = function () {
        if (this.module.module_name == '') {
            var snackBarRef = this.snackBar.open("Module Name cannot be blank", '', {
                duration: 2000
            });
        }
        else {
            if (this.is_show_verification_module == true) {
                this.modules.splice(-1, 1);
                this.is_show_verification_module = false;
            }
            this.modules.push(this.module);
            var snackBarRef = this.snackBar.open("Module added successfully", '', {
                duration: 2000
            });
            this.module = {
                module_name: '',
                time: 0,
                tbl_estimation_tasks: [],
                removeBtn: false
            };
        }
    };
    CompanyRevisedExecutionPlanComponent.prototype.addModuleClear = function () {
        this.module = {
            module_name: '',
            time: 0,
            tbl_estimation_tasks: [],
            removeBtn: false
        };
    };
    CompanyRevisedExecutionPlanComponent.prototype.getId = function (index) {
        this.index = index;
        this.newTasks = {
            task_name: '',
            assigned_person: '',
            complexity: 0,
            planned_hour: 0,
            buffer_hour: 0,
            verification_hour: 0,
            start_date: '',
            assigned: '',
            start_time: '',
            end_date: '',
            assigned1: '',
            end_time: '',
            task_type: '',
            priority: '',
            docFile: [],
            docSrc: '',
            color: '',
            bordercolor: '',
            file: '',
            newChecklist: [{ name: '' }],
            assigned_user: ''
        };
    };
    // getassigned() {
    //   this.assigned_person = this.newTasks.assigned_person;
    //   this.assigned_person.tbl_team_assocs.forEach(teamId => {
    //     this.team_id = teamId.team_id;
    //   });
    //   this.assign_id = this.assigned_person.id;
    //   this.assign_fname = this.assigned_person.f_name;
    //   this.assign_lname = this.assigned_person.l_name;
    // }
    CompanyRevisedExecutionPlanComponent.prototype.addTask = function (index) {
        var _this = this;
        this.newTasks.assigned_user = '';
        this.companyService.getDatetime(this.newTasks).subscribe(function (datetime) {
            _this.datetime = datetime;
            if (_this.datetime.success == false) {
                var snackBarRef = _this.snackBar.open(_this.datetime.msg, '', {
                    duration: 2000
                });
            }
            else {
                _this.modules[index].tbl_estimation_tasks.push(_this.newTasks);
                // this.total_verification_time = this.total_verification_time + this.newTasks.verification_hour;
                // if (this.is_show_verification_module == true) {
                //   this.modules[this.modules.length - 1].time = this.total_verification_time;
                //   this.modules[this.modules.length - 1].tbl_estimation_tasks[0].planned_hour = this.total_verification_time;
                // }
                // this.modules[index].time = this.modules[index].time + this.newTasks.planned_hour + this.newTasks.buffer_hour;
                // this.sum = this.sum + this.newTasks.planned_hour + this.newTasks.buffer_hour;
                _this.closeBtn.nativeElement.click();
                var snackBarRef = _this.snackBar.open(' Task added succesfully', '', {
                    duration: 2000
                });
                _this.newTasks = {
                    task_name: '',
                    assigned_person: '',
                    complexity: 0,
                    planned_hour: 0,
                    buffer_hour: 0,
                    verification_hour: 0,
                    start_date: '',
                    start_time: '',
                    end_date: '',
                    end_time: '',
                    assigned: '',
                    assigned1: '',
                    task_type: '',
                    priority: '',
                    color: '',
                    bordercolor: '',
                    docFile: [],
                    docSrc: '',
                    file: '',
                    newChecklist: [{ name: '' }],
                    assigned_user: ''
                };
            }
        });
    };
    CompanyRevisedExecutionPlanComponent.prototype.deleteModule = function (i) {
        this.moduleVerifTime = 0;
        this.modules[i].tbl_estimation_tasks.forEach(function (element) {
            // this.moduleVerifTime = this.moduleVerifTime + element.verification_hour;
        });
        // this.total_verification_time = this.total_verification_time - this.moduleVerifTime;
        // if (this.is_show_verification_module == true) {
        //   this.modules[this.modules.length - 1].time = this.total_verification_time;
        //   this.modules[this.modules.length - 1].tbl_estimation_tasks[0].planned_hour = this.total_verification_time;
        // }
        // this.sum = this.sum - this.modules[i].time;
        this.modules.splice(i, 1);
    };
    CompanyRevisedExecutionPlanComponent.prototype.editModules = function (i, module) {
        this.modules.splice(i, 1);
        this.modules.push(module);
        this.modules.forEach(function (element) {
        });
    };
    CompanyRevisedExecutionPlanComponent.prototype.getId1 = function (i, j) {
        this.i = i;
        this.j = j;
    };
    CompanyRevisedExecutionPlanComponent.prototype.getId2 = function (i, j, task) {
        if (typeof this.Projects.developer.length !== 'undefined' && this.Projects.developer.length == 0 && typeof this.Projects.designer.length !== 'undefined' && this.Projects.designer.length == 0 && typeof this.Projects.qc.length !== 'undefined' && this.Projects.qc.length == 0) {
            this.assignedPersonEmpty = true;
        }
        else {
            this.assignedPersonEmpty = false;
        }
        this.i = i;
        this.j = j;
        this.newTasks = task;
        this.modules[i].tbl_estimation_tasks[j] = this.newTasks;
        // this.sum = this.sum - this.modules[i].tbl_estimation_tasks[j].planned_hour - this.modules[i].tbl_estimation_tasks[j].buffer_hour;
        // this.modules[i].time = this.modules[i].time - this.modules[i].tbl_estimation_tasks[j].planned_hour - this.modules[i].tbl_estimation_tasks[j].buffer_hour;
        this.newTasks.start_date = '';
        this.newTasks.start_time = '';
        this.meridain = '';
        // this.total_verification_time = this.total_verification_time - this.modules[i].tbl_estimation_tasks[j].verification_hour;
    };
    CompanyRevisedExecutionPlanComponent.prototype.compareObjects = function (o1, o2) {
        if (o1 !== undefined && o2 !== undefined) {
            return o1.id === o2.id;
        }
    };
    CompanyRevisedExecutionPlanComponent.prototype.getId3 = function (i, j, task) {
        if (typeof this.projectSelectedTeam !== 'undefined' && this.projectSelectedTeam.length == 0) {
            this.assignedPersonEmpty = true;
        }
        else {
            this.assignedPersonEmpty = false;
        }
        this.i = i;
        this.j = j;
        // this.newTasks = task;
        this.newTasks = task;
        console.log(this.newTasks.assigned_person);
        this.modules[i].tbl_estimation_tasks[j] = this.newTasks;
        // console.log(this.modules[i].tbl_estimation_tasks[j]);
    };
    CompanyRevisedExecutionPlanComponent.prototype.deleteTask = function (i, j) {
        // this.total_verification_time = this.total_verification_time - this.modules[i].tbl_estimation_tasks[j].verification_hour;
        // if (this.is_show_verification_module == true) {
        //   this.modules[this.modules.length - 1].time = this.total_verification_time;
        //   this.modules[this.modules.length - 1].tbl_estimation_tasks[0].planned_hour = this.total_verification_time;
        // }
        // this.modules[i].time = this.modules[i].time - this.modules[i].tbl_estimation_tasks[j].planned_hour - this.modules[i].tbl_estimation_tasks[j].buffer_hour;
        // this.sum = this.sum - this.modules[i].tbl_estimation_tasks[j].planned_hour - this.modules[i].tbl_estimation_tasks[j].buffer_hour;
        this.modules[i].tbl_estimation_tasks.splice(this.j, 1);
    };
    CompanyRevisedExecutionPlanComponent.prototype.editTask = function (i, j, users) {
        var _this = this;
        this.companyService.editTaskValidation(this.newTasks).subscribe(function (editTaskValidation) {
            if (!editTaskValidation.success) {
                var snackBarRef = _this.snackBar.open(editTaskValidation.msg, '', {
                    duration: 2000
                });
            }
            else {
                // console.log(this.total_verification_time)
                // this.total_verification_time = this.total_verification_time - this.modules[i].tbl_estimation_tasks[j].verification_hour;
                // this.total_verification_time = this.total_verification_time + this.newTasks.verification_hour;
                // console.log(this.total_verification_time)
                // if (this.is_show_verification_module == true) {
                //   this.modules[this.modules.length - 1].time = this.total_verification_time;
                //   this.modules[this.modules.length - 1].tbl_estimation_tasks[0].planned_hour = this.total_verification_time;
                // }
                // this.modules[i].time = this.modules[i].time - this.modules[i].tbl_estimation_tasks[j].planned_hour - this.modules[i].tbl_estimation_tasks[j].buffer_hour;
                // this.modules[i].time = this.modules[i].time + this.newTasks.planned_hour + this.newTasks.buffer_hour;
                // this.sum = this.sum + this.newTasks.planned_hour + this.newTasks.buffer_hour;
                _this.closeBtn1.nativeElement.click();
                var snackBarRef = _this.snackBar.open(' Task updated succesfully', '', {
                    duration: 2000
                });
            }
        });
    };
    CompanyRevisedExecutionPlanComponent.prototype.assignTask = function (i, j, users) {
        if (this.newTasks.assigned_person == '') {
            var snackBarRef = this.snackBar.open(' Please select a person to assign the task', '', {
                duration: 2000
            });
        }
        if (this.newTasks.assigned_person) {
            this.modules[i].tbl_estimation_tasks[j].assigned_user = this.newTasks.assigned_person;
            this.modules[i].tbl_estimation_tasks[j].color = '#e6ffe6';
            this.modules[i].tbl_estimation_tasks[j].bordercolor = '3px solid #6fa93b';
            this.closeBtn3.nativeElement.click();
            var snackBarRef = this.snackBar.open(' Assigned Successfully', '', {
                duration: 2000
            });
        }
    };
    CompanyRevisedExecutionPlanComponent.prototype.inArray = function (needle, haystack) {
        var count = haystack.length;
        for (var i = 0; i < count; i++) {
            if (haystack[i] === needle) {
                return true;
            }
        }
        return false;
    };
    CompanyRevisedExecutionPlanComponent.prototype.showDatepicker = function () {
        this.datepicker = true;
        this.showstartdate = false;
    };
    CompanyRevisedExecutionPlanComponent.prototype.showDate = function () {
        this.showstartdate = true;
        this.datepicker = false;
    };
    CompanyRevisedExecutionPlanComponent.prototype.finish = function () {
    };
    CompanyRevisedExecutionPlanComponent.prototype.assignedAuser = function (users) {
    };
    CompanyRevisedExecutionPlanComponent.prototype.calculateEnddate = function () {
        var _this = this;
        this.isSucessCalculate = true;
        this.disableCalculateBtn = true;
        this.projectSelectedTeam.forEach(function (eachMemeber) {
            if (eachMemeber.start_date < new Date()) {
                var snackBarRef = _this.snackBar.open('Failed! Please select a valid start date for the team member ' + eachMemeber.f_name + ' ' + eachMemeber.l_name + '', '', {
                    duration: 2000
                });
                _this.disableCalculateBtn = false;
                _this.isSucessCalculate = false;
            }
            else {
                if ((new Date(_this.Projects.planned_start_date)) > eachMemeber.start_date) {
                    var snackBarRef = _this.snackBar.open('Failed! Please select a date after project start date for team member ' + eachMemeber.f_name + ' ' + eachMemeber.l_name + '', '', {
                        duration: 2000
                    });
                    _this.disableCalculateBtn = false;
                    _this.isSucessCalculate = false;
                }
                else {
                    _this.modules.forEach(function (eachModule) {
                        if (typeof eachModule.tbl_estimation_tasks.length !== 'undefined' && eachModule.tbl_estimation_tasks.length == 0) {
                            var snackBarRef = _this.snackBar.open('Failed! Each module should contain atleast one task', '', {
                                duration: 2000
                            });
                            _this.disableCalculateBtn = false;
                            _this.isSucessCalculate = false;
                        }
                        else {
                            eachModule.tbl_estimation_tasks.forEach(function (task) {
                                if (!task.assigned_person) {
                                    var snackBarRef = _this.snackBar.open('Failed! Each task should be assigned to a team member', '', {
                                        duration: 2000
                                    });
                                    _this.disableCalculateBtn = false;
                                    _this.isSucessCalculate = false;
                                }
                            });
                        }
                    });
                }
            }
        });
        if (this.isSucessCalculate) {
            this.is_show_verification_module = true;
            this.showSpinner = true;
            var data = { modules: this.modules, teamMembers: this.projectSelectedTeam };
            this.companyService.getUserleavedataplanning(data).subscribe(function (data) {
                _this.showSpinner = false;
                var tmp = data;
                data.data.projectStartDate = new Date(_this.Projects.start_date);
                data.data.projectStartDate.setHours(_this.Projects.start_time.hour, _this.Projects.start_time.minute, _this.Projects.start_time.second);
                data.data.projectEndDate = data.projectEndDate;
                _this.projectEndDate = new Date(data.data.projectEndDate);
                $('#projectEndDateModal').modal('show');
                data.data.project_id = _this.p_id;
                _this.modules = data.data;
                _this.showSaveBtn = true;
                _this.disableCalculateBtn = false;
            });
        }
        // if (!this.teamheadselect) {
        //   let snackBarRef = this.snackBar.open('Failed! Please select a Team head', '', {
        //     duration: 2000
        //   });
        //   this.disableCalculateBtn = false;
        //   this.isSucessCalculate = false;
        // }
    };
    CompanyRevisedExecutionPlanComponent.prototype.savePlanningData = function () {
        var _this = this;
        this.saveBtnDisable = true;
        this.isSuccess = true;
        this.disableCalculateBtn = true;
        this.showSpinnersave = true;
        this.projectSelectedTeam.forEach(function (eachMemeber) {
            if (eachMemeber.start_date < new Date()) {
                var snackBarRef = _this.snackBar.open('Failed! Please select a valid start date for the team member ' + eachMemeber.f_name + ' ' + eachMemeber.l_name + '', '', {
                    duration: 2000
                });
                _this.disableCalculateBtn = false;
                _this.saveBtnDisable = false;
                _this.isSuccess = false;
                _this.showSpinnersave = false;
            }
            else {
                if ((new Date(_this.Projects.planned_start_date)) > eachMemeber.start_date) {
                    var snackBarRef = _this.snackBar.open('Failed! Please select a date after project start date for team member ' + eachMemeber.f_name + ' ' + eachMemeber.l_name + '', '', {
                        duration: 2000
                    });
                    _this.disableCalculateBtn = false;
                    _this.saveBtnDisable = false;
                    _this.isSuccess = false;
                    _this.showSpinnersave = false;
                }
                else {
                    _this.modules.forEach(function (eachModule) {
                        if (typeof eachModule.tbl_estimation_tasks.length !== 'undefined' && eachModule.tbl_estimation_tasks.length == 0) {
                            var snackBarRef = _this.snackBar.open('Failed! Each module should contain atleast one task', '', {
                                duration: 2000
                            });
                            _this.disableCalculateBtn = false;
                            _this.saveBtnDisable = false;
                            _this.isSuccess = false;
                            _this.showSpinnersave = false;
                        }
                        else {
                            eachModule.tbl_estimation_tasks.forEach(function (task) {
                                if (!task.assigned_person) {
                                    var snackBarRef = _this.snackBar.open('Failed! Each task should be assigned to a team member', '', {
                                        duration: 2000
                                    });
                                    _this.disableCalculateBtn = false;
                                    _this.saveBtnDisable = false;
                                    _this.isSuccess = false;
                                    _this.showSpinnersave = false;
                                }
                            });
                        }
                    });
                }
            }
        });
        if (this.isSuccess) {
            this.saveBtnDisable = false;
            this.companyService.savecompanyRevisePlanning(this.modules, this.keepExistingplanningdetailsArray, this.Projects.teamhead, this.Projects.planned_end_date).subscribe(function (data) {
                _this.showSpinnersave = false;
                if (data.success) {
                    _this.routes.navigate(['/project']);
                    var snackBarRef = _this.snackBar.open(data.msg, '', {
                        duration: 2000
                    });
                }
                else {
                    var snackBarRef = _this.snackBar.open(data.msg, '', {
                        duration: 2000
                    });
                }
            });
        }
    };
    CompanyRevisedExecutionPlanComponent.prototype.projectStartDateSelect = function () {
        var _this = this;
        this.assignstart_date = this.Projects.start_date;
        this.assignstart_time = this.Projects.start_time;
        this.modules.forEach(function (modules) {
            modules.tbl_estimation_tasks.forEach(function (tasks) {
                tasks.start_date = _this.Projects.start_date;
                tasks.start_time = _this.Projects.start_time;
            });
        });
        this.projectSelectedTeam.forEach(function (element) {
            if (element.start_date < _this.Projects.start_date) {
                element.start_date = _this.Projects.start_date;
                element.start_time = _this.Projects.start_time;
            }
            else if (element.start_date == _this.Projects.start_date) {
                var newstartTimeofUser = _this.changeTimepikcerFormat(element.start_time.hour, element.start_time.minute, element.start_time.second);
                var newstartTimeofProject = _this.changeTimepikcerFormat(_this.Projects.start_time.hour, _this.Projects.start_time.minute, _this.Projects.start_time.second);
                if (_this.timeToSec(newstartTimeofUser) < _this.timeToSec(newstartTimeofProject)) {
                    element.start_time = _this.Projects.start_time;
                }
            }
        });
        this.todayDate1 = this.Projects.start_date;
    };
    CompanyRevisedExecutionPlanComponent.prototype.setAvailableDateTimeofUser = function (date, time) {
        var _this = this;
        this.projectSelectedTeam.forEach(function (element, key) {
            if (element.start_date == _this.Projects.start_date) {
                var newstartTimeofUser = _this.changeTimepikcerFormat(element.start_time.hour, element.start_time.minute, element.start_time.second);
                var newstartTimeofProject = _this.changeTimepikcerFormat(_this.Projects.start_time.hour, _this.Projects.start_time.minute, _this.Projects.start_time.second);
            }
        });
    };
    CompanyRevisedExecutionPlanComponent.prototype.timeToSec = function (time) {
        var a = time.split(':'); // split it at the colons\
        return this.seconds = (+a[0]) * 60 * 60 + (+a[1]) * 60 + (+a[2]);
    };
    CompanyRevisedExecutionPlanComponent.prototype.changeTimepikcerFormat = function (hour, minute, second) {
        var hh = hour;
        var mm = minute;
        var ss = second;
        if (hh < 10) {
            hh = "0" + hh;
        }
        if (mm < 10) {
            mm = "0" + mm;
        }
        if (ss < 10) {
            ss = "0" + ss;
        }
        var splittedTime = hh + ":" + mm + ":" + ss;
        return splittedTime;
    };
    CompanyRevisedExecutionPlanComponent.prototype.closeEditModal = function (i, j) {
        this.modules[i].time = this.modules[i].time + this.newTasks.planned_hour + this.newTasks.buffer_hour;
        // this.total_verification_time = this.total_verification_time + this.modules[i].tbl_estimation_tasks[j].verification_hour;
        if (this.is_show_verification_module == true) {
            // this.modules[this.modules.length - 1].time = this.total_verification_time;
            // this.modules[this.modules.length - 1].tbl_estimation_tasks[0].planned_hour = this.total_verification_time;
        }
    };
    CompanyRevisedExecutionPlanComponent.prototype._keyPress = function (event) {
        var pattern = /[0-9/ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (!pattern.test(inputChar) && event.charCode != 0) {
            event.preventDefault();
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyRevisedExecutionPlanComponent.prototype, "closeBtn", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn1'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyRevisedExecutionPlanComponent.prototype, "closeBtn1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn3'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyRevisedExecutionPlanComponent.prototype, "closeBtn3", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn4'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyRevisedExecutionPlanComponent.prototype, "closeBtn4", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('projectEndDateModal'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyRevisedExecutionPlanComponent.prototype, "projectEndDateModal", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], CompanyRevisedExecutionPlanComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], CompanyRevisedExecutionPlanComponent.prototype, "sort", void 0);
    CompanyRevisedExecutionPlanComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-revised-execution-plan',
            template: __webpack_require__("../../../../../src/app/components/company-revised-execution-plan/company-revised-execution-plan.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-revised-execution-plan/company-revised-execution-plan.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__angular_router__["ActivatedRoute"], __WEBPACK_IMPORTED_MODULE_3__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */], __WEBPACK_IMPORTED_MODULE_2__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_5_ng2_dragula_ng2_dragula__["DragulaService"]])
    ], CompanyRevisedExecutionPlanComponent);
    return CompanyRevisedExecutionPlanComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-show-revised-projects/company-show-revised-projects.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".side-bar-menu{background:#fff;}\r\n.side-bar-menu li{    border-bottom: 1px solid #e4e4e4;}\r\n.side-bar-menu li a{color:#111;text-align:left;padding: 20px 23px;}\r\n.side-bar-menu li a:hover{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:focus{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:active{background-color: #fe6a07;color:#fff;}\r\n\r\nul.breadcrumb {\r\n    padding: 10px 0;\r\n    list-style: none;\r\n\r\n    text-align: left;\r\n    color: #d68956;\r\n}\r\nul.breadcrumb li {\r\n    display: inline;\r\n    font-size: 15px;\r\n}\r\nul.breadcrumb li+li:before {\r\n    padding: 8px;\r\n    color: black;\r\n    content: \"/\\A0\";\r\n}\r\nul.breadcrumb li a {\r\n    color: #bbbbbb;\r\n    text-decoration: none;\r\n}\r\nul.breadcrumb li a:hover {\r\n    color: #d68956;\r\n    text-decoration: none;\r\n\r\n}\r\n.breadcrumb{    background-color: #f6f7fa;}\r\n\r\n\r\n.example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}\r\nbutton.mat-menu-item{\r\n  font-size: 14px !important;\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-show-revised-projects/company-show-revised-projects.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n      <div class=\"col-md-1 col-xs-2 display-table-cell v-align box\" id=\"navigation\">\r\n        <company-sidebar></company-sidebar>\r\n      </div>\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <!-- topbar-->\r\n        <company-topbar></company-topbar>\r\n\r\n        <!-- end topbar-->\r\n        <div class=\"user-dashboard\">\r\n          <div class=\"\">\r\n            <!-----------------------------------------------------------------table-------------------------------------->\r\n            <div class=\"col-md-12\">\r\n              <h2>Projects</h2>\r\n              <ul class=\"breadcrumb\">\r\n                <li>\r\n                  <a>Projects</a>\r\n                </li>\r\n                <!-- <li><a routerLink=\"/company-request-management\">Time Extension Request List</a></li> -->\r\n\r\n                <li>Projects running </li>\r\n              </ul>\r\n            </div>\r\n            <!-- <ul class=\"breadcrumb\"> -->\r\n            <!-- <li><a routerLink=\"/\">Request Management</a></li> -->\r\n            <!-- <li><a routerLink=\"/company-request-management\">Time Extension Request List</a></li> -->\r\n\r\n            <!-- <li>Projects</li>\r\n              </ul> -->\r\n            <div class=\"col-md-12\">\r\n              <div class=\"\">\r\n                <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\">\r\n                    <div class=\"\">\r\n                      <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                        width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n                        <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                          <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n                          />\r\n                        </path>\r\n                      </svg>\r\n                    </div>\r\n                  </div> -->\r\n\r\n                <div class=\"col-md-12 optionz\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"example-header\">\r\n                        <mat-form-field>\r\n                          <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n                    <!-- <div class=\"col-md-2 pull-right\">\r\n                      <div>\r\n                        <mat-form-field class=\"filter\">\r\n\r\n                          <mat-select (change)=\"getProject()\" [(value)]=\"selected\">\r\n                            <mat-option value=\"all\">All</mat-option>\r\n                            <mat-option value=\"Drafted\">Drafted</mat-option>\r\n                            <mat-option value=\"In Progress\">In Progress</mat-option>\r\n                            <mat-option value=\"Planned\">Planned</mat-option>\r\n                            <mat-option value=\"Completed\">Completed</mat-option>\r\n                            <mat-option value=\"Cancelled\">Cancelled</mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div> -->\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"example-container mat-elevation-z8\">\r\n                  <mat-table [dataSource]=\"dataSource\" matSort>\r\n                    <ng-container matColumnDef=\"slno\">\r\n                      <mat-header-cell *matHeaderCellDef> SL NO. </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row; let i = index\"> {{i+1}} </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"project_name\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> PROJECT</mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.project_name}}</mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"startdate\">\r\n                      <mat-header-cell *matHeaderCellDef> ACTUAL/PLANNED START DATE</mat-header-cell>\r\n                      <!-- <mat-cell *matCellDef=\"let row\"> {{row.actual_start_date == null ? row.planned_start_date  : row.actual_start_date}}</mat-cell> -->\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.actual_start_date == null ? row.planned_start_date == null ? '-' : (row.planned_start_date| date:\r\n                        'yyyy-MM-dd HH:mm a') : (row.actual_start_date| date: 'yyyy-MM-dd HH:mm a')}}</mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"enddate\">\r\n                      <mat-header-cell *matHeaderCellDef> ACTUAL/PLANNED END DATE</mat-header-cell>\r\n                      <!-- <mat-cell *matCellDef=\"let row\"> {{row.actual_end_date === '' ? row.planned_end_date : row.actual_end_date}}</mat-cell> -->\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.actual_end_date == null ? row.planned_end_date == null ? '-' : (row.planned_end_date| date: 'yyyy-MM-dd\r\n                        HH:mm a') :(row.actual_end_date| date: 'yyyy-MM-dd HH:mm a')}}\r\n                      </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"project_cost\">\r\n                      <mat-header-cell *matHeaderCellDef> PROJECT COST</mat-header-cell>\r\n                      <!-- <mat-cell *matCellDef=\"let row\"> {{row.actual_end_date === '' ? row.planned_end_date : row.actual_end_date}}</mat-cell> -->\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.project_cost}}\r\n                      </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"description\">\r\n                      <mat-header-cell *matHeaderCellDef> DESCRIPTION</mat-header-cell>\r\n                      <!-- <mat-cell *matCellDef=\"let row\"> {{row.actual_end_date === '' ? row.planned_end_date : row.actual_end_date}}</mat-cell> -->\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.description}}\r\n                      </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"action\">\r\n                      <mat-header-cell *matHeaderCellDef> ACTION</mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\">\r\n                        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n                          <mat-icon>more_vert</mat-icon>\r\n                        </button>\r\n                        <mat-menu #menu=\"matMenu\" class=\"matdropdown\">\r\n                    \r\n                          <button mat-menu-item (click)=\"revisedExecution(row.id)\" *ngIf=\"(row.status == 'Planned' || row.status == 'In Progress'  )&& (row.assignee_id == loggedin_id || row.pm_id == loggedin_id)\">\r\n                            <mat-icon>\r\n                              <i class=\"material-icons\">Revised Execution Planning</i>\r\n                            </mat-icon>\r\n                            <span>Revised Execution Planning</span>\r\n                          </button>\r\n                        </mat-menu>\r\n                      </mat-cell>\r\n\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n                  </mat-table>\r\n                  <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n                    <div class=\"col-md-4 col-md-offset-4\">\r\n                      <mat-toolbar class=\"back-color\">No item found!</mat-toolbar>\r\n                    </div>\r\n                  </div>\r\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                </div>\r\n\r\n\r\n              </div>\r\n            </div>\r\n            <!-- <div class=\"add-button\">\r\n              <button type=\"button\" class=\"add-project\" (click)=\"open()\" data-backdrop=\"static\">+</button>\r\n            </div> -->\r\n\r\n            <!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n            <!-- <div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n\r\n    \r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">Delete </h4>\r\n                  </div>\r\n               \r\n                  <div class=\"modal-body delete-popup\">\r\n                    <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n                    <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n                  </div>\r\n\r\n                  <div class=\"modal-footer\" style=\"text-align:center;\">\r\n                    <button type=\"button\" (click)=\"deleteProject(Pid)\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Delete</button>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div> -->\r\n\r\n            <!-- ----------------------------------------------------------------------delete modal------------------------------------------------------------------\r\n            \r\n              <!-----------------------------------------------------------------end table-------------------------------------->\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <!-- footer-->\r\n      <!-- <company-footer></company-footer> -->\r\n      <!-- end footer-->\r\n    </div>\r\n  </div>\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-show-revised-projects/company-show-revised-projects.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyShowRevisedProjectsComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var CompanyShowRevisedProjectsComponent = (function () {
    function CompanyShowRevisedProjectsComponent(companyService, routes, snackBar, _activatedRoute) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this._activatedRoute = _activatedRoute;
        this.displayedColumns = ['slno', 'project_name', 'startdate', 'enddate', 'project_cost', 'description', 'action'];
        this.notExist = false;
    }
    CompanyShowRevisedProjectsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.selected = "all";
        // ---------------------------------Start-------------------------------------------
        // Function      : Get logged in entity
        // Params        : 
        // Returns       : Get logged in entity
        // Author        : Rinsha
        // Date          : 08-03-2018
        // Last Modified : 08-03-2018, Rinsha
        // Desc          :  
        this.companyService.getLoggedinEntity().subscribe(function (data) {
            _this.entity = data;
            _this.loggedin_id = _this.entity.id;
            if (data == null || data == '') {
                _this.routes.navigate(['/home']);
            }
            if (data.role_id == 2) {
                //super admin
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/home']);
                }
            }
            if (data.role_id == 1) {
                //company admin
                if (data.delete_status == true || data.block_status == true || data.cmp_status == "Not Verified") {
                    _this.routes.navigate(['/company-login']);
                }
                if (data.cmp_status == "Expired") {
                    _this.routes.navigate(['/expired']);
                }
                if (data.is_profile_completed == false) {
                    _this.routes.navigate(['/compay-aditninfo', data.cmp_id]);
                }
            }
            if (data.role_id == 3 || data.role_id == 4) {
                //company admin
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/company-login']);
                }
            }
        });
        // -----------------------------------End------------------------------------------
        this.getProject();
    };
    CompanyShowRevisedProjectsComponent.prototype.ngAfterViewInit = function () {
        // this.dataSource.sort = this.sort;
        // this.dataSource.paginator = this.paginator;
    };
    CompanyShowRevisedProjectsComponent.prototype.getProject = function () {
        var _this = this;
        this._activatedRoute.params.subscribe(function (params) {
            _this.date = params['id'];
            _this.date = new Date(_this.date);
        });
        // console.log(this.selected);
        this.notExist = false;
        // ---------------------------------Start-------------------------------------------
        // Function      : get all projects by status
        // Params        : 
        // Returns       : 
        // Author        : Rinsha
        // Date          : 12-03-2018
        // Last Modified : 12-03-2018, Rinsha
        // Desc          : getAllProjectByStatus 
        this.companyService.isProjectExist(this.date).subscribe(function (data) {
            console.log(data);
            data = data.data;
            if (data.length == 0) {
                _this.notExist = true;
            }
            _this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
            // console.log(this.dataSource);
            _this.dataSource.paginator = _this.paginator;
            _this.dataSource.sort = _this.sort;
        });
        // ---------------------------------End-------------------------------------------
        // // ---------------------------------Start-------------------------------------------
        // // Function      : get all projects
        // // Params        : 
        // // Returns       : 
        // // Author        : Rinsha
        // // Date          : 07-03-2018
        // // Last Modified : 07-03-2018, Rinsha
        // // Desc          : getAllProjects 
        // this.companyService.getAllProject().subscribe(data => {
        //   // console.log(data);
        //   if (data.length == 0) {
        //     this.notExist = true;
        //   }
        //   this.dataSource = new MatTableDataSource(data);
        //   // console.log(this.dataSource);
        //   this.dataSource.paginator = this.paginator;
        //   this.dataSource.sort = this.sort;
        // });
        // // ---------------------------------End-------------------------------------------
    };
    CompanyShowRevisedProjectsComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    CompanyShowRevisedProjectsComponent.prototype.open = function () {
        this.routes.navigate(['/add-project']);
    };
    CompanyShowRevisedProjectsComponent.prototype.assign = function (id) {
        this.routes.navigate(['/assign-project', id]);
    };
    CompanyShowRevisedProjectsComponent.prototype.edit = function (id) {
        this.routes.navigate(['/edit-project', id]);
    };
    CompanyShowRevisedProjectsComponent.prototype.approve = function (id) {
        this.routes.navigate(['/approve-estimation', id]);
    };
    CompanyShowRevisedProjectsComponent.prototype.approveProject = function (id) {
        this.routes.navigate(['/approve-project', id]);
    };
    CompanyShowRevisedProjectsComponent.prototype.planProject = function (id) {
        this.routes.navigate(['//project-planning', id]);
    };
    CompanyShowRevisedProjectsComponent.prototype.revisedExecution = function (id) {
        this.routes.navigate(['/revised-execution-planning', id]);
    };
    CompanyShowRevisedProjectsComponent.prototype.getId = function (id) {
        this.Pid = id;
    };
    CompanyShowRevisedProjectsComponent.prototype.viewProject = function (id) {
        this.routes.navigate(['/view-project', id]);
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], CompanyShowRevisedProjectsComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], CompanyShowRevisedProjectsComponent.prototype, "sort", void 0);
    CompanyShowRevisedProjectsComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-show-revised-projects',
            template: __webpack_require__("../../../../../src/app/components/company-show-revised-projects/company-show-revised-projects.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-show-revised-projects/company-show-revised-projects.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */], __WEBPACK_IMPORTED_MODULE_3__angular_router__["ActivatedRoute"]])
    ], CompanyShowRevisedProjectsComponent);
    return CompanyShowRevisedProjectsComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-sidebar/company-sidebar.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "@media only screen and (max-width: 1600px){\r\n\r\n.navbar-default {\r\n    min-height:861px;\r\n}\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-sidebar/company-sidebar.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"logo\">\r\n  <a><img src=\"./assets/images/logo.jpg\" alt=\"\" class=\"\">\r\n   \r\n</a>\r\n</div>\r\n\r\n<nav class=\"navbar navbar-default\">\r\n\r\n  <!-- Brand and toggle get grouped for better mobile display -->\r\n  <div class=\"navbar-header\">\r\n    <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\"\r\n      aria-expanded=\"false\">\r\n    <span class=\"sr-only\">Toggle navigation</span>\r\n    <span class=\"icon-bar\"></span>\r\n    <span class=\"icon-bar\"></span>\r\n    <span class=\"icon-bar\"></span>\r\n  </button>\r\n\r\n  </div>\r\n\r\n  <!-- Collect the nav links, forms, and other content for toggling -->\r\n  <div *ngIf=\"disp\" class=\"collapse navbar-collapse navi\" id=\"bs-example-navbar-collapse-1\">\r\n    <ul class=\"zx nav navbar-nav\">\r\n      <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\r\n        <a routerLink=\"/company-dashboard\"><i class=\"fa fa-desktop\" aria-hidden=\"true\"></i><span class=\"\">Dashboard</span></a></li>\r\n        <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\r\n          <a routerLink=\"/company-users\"><i class=\"fa fa-user\" aria-hidden=\"true\"></i><span class=\"\">Users</span></a></li>\r\n      <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\r\n        <a routerLink=\"/company-team\"><i class=\"fa fa-users fa-2x text-purple\"></i> Team</a></li>\r\n        \r\n      <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"dropdown\"><a class=\"dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i><span class=\"\">Master Settings</span></a>\r\n        <!-- *ngIf=\"exist2(1,2,3,4,5)\" -->\r\n        <div *ngIf=\"exist(1) || exist(2) || exist(3) || exist(11) || role == 1\" >\r\n        <ul class=\"dropdown-menu\" role=\"menu\" data-animations=\"fadeInDown fadeInRight fadeInUp fadeInLeft\">\r\n          <!-- {{role}} -->\r\n          <li *ngIf=\"(role == 3 && exist(3)) || role == 1\"><a routerLink=\"/company-project-category\">Project Category</a></li>\r\n          <li *ngIf=\"role == 1\"><a routerLink=\"/company-access-rights\">Access Rights</a></li>\r\n          <li *ngIf=\"role == 1\"><a routerLink=\"/company-working-time\">Office Time</a></li>\r\n          <li *ngIf=\"(role == 3 && exist(1)) || role == 1\"><a routerLink=\"/company-manage-holyday\">Public Holiday</a></li>\r\n          <li *ngIf=\"(role == 3 && exist(2)) || role == 1\"><a routerLink=\"/company-employee-leaves\">Employee Leaves</a></li>\r\n          <li *ngIf=\"(role == 3 && exist(11)) || role == 1\"><a routerLink=\"/company-manage-designation\">Designation</a></li>\r\n        </ul>\r\n      </div>\r\n      </li>\r\n\r\n      <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\r\n        <a routerLink=\"/project\"><i class=\"fa fa-file-text\" aria-hidden=\"true\"></i><span class=\"\">Projects</span></a></li>\r\n\r\n      <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" *ngIf=\"(role == 3 && exist(7)) || role == 1\" class=\"dropdown\"><a class=\"dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fa fa-user-plus\" aria-hidden=\"true\"></i><span class=\"\">Request Management</span></a>\r\n\r\n        <ul class=\"dropdown-menu\" role=\"menu\" data-animations=\"fadeInDown fadeInRight fadeInUp fadeInLeft\">\r\n          <li><a routerLink=\"/company-task-requests\">New Task Requests</a></li>\r\n          <li><a routerLink=\"/company-request-management\">Time Extension Requests</a></li>\r\n          <li><a routerLink=\"/company-leave-request-list\">Leave Requests</a></li>\r\n        </ul>\r\n\r\n      </li>\r\n\r\n      <!-- <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\r\n              <a routerLink=\"/company-request-management\"><i class=\"fa fa-user\" aria-hidden=\"true\"></i><span class=\"\">Request Management</span></a></li> \r\n           -->\r\n              \r\n            <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"dropdown\"><a  class=\"dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fa fa-leanpub\" aria-hidden=\"true\"></i><span class=\"\">Reports</span></a>\r\n            \r\n              <ul class=\"dropdown-menu\" role=\"menu\" data-animations=\"fadeInDown fadeInRight fadeInUp fadeInLeft\">\r\n                <li ><a  routerLink=\"/project-estimation-report\">Estimation Report</a></li>\r\n                <li ><a routerLink=\"/project-report\">Project Report</a></li>\r\n                <!-- <li *ngIf=\"((role == 3 && exist(9)) || (role == 1))\"><a  routerLink=\"/project-estimation-report\">Estimation Report</a></li>\r\n                <li *ngIf=\"((role == 3 && exist(10)) || (role == 1))\"><a routerLink=\"/project-report\">Project Report</a></li> -->\r\n                <li><a routerLink=\"/activity-log-report\">Activity Log</a></li>\r\n               \r\n              </ul>\r\n            \r\n          </li>     \r\n    </ul>\r\n\r\n\r\n  </div>\r\n  <!-- /.navbar-collapse -->\r\n\r\n</nav>\r\n<div class=\"footerlink\">\r\n    <i class=\"fa fa-facebook\" aria-hidden=\"true\"></i>\r\n    <i class=\"fa fa-twitter\" aria-hidden=\"true\"></i>\r\n    <i class=\"fa fa-google\" aria-hidden=\"true\"></i>\r\n    <p>Copyright 2018  All Rights Reserved.</p>\r\n   </div>"

/***/ }),

/***/ "../../../../../src/app/components/company-sidebar/company-sidebar.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanySidebarComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var CompanySidebarComponent = (function () {
    function CompanySidebarComponent(companyService, routes, snackBar, config) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.config = config;
        this.rights = [];
        this.disp = true;
        this.socket = __WEBPACK_IMPORTED_MODULE_4_socket_io_client__(config.socketURL);
    }
    CompanySidebarComponent.prototype.ngOnInit = function () {
    };
    CompanySidebarComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.checkRole();
        // ---------------------------------Start-------------------------------------------
        // Function      : Get logged in entity
        // Params        : 
        // Returns       : Get logged in entity
        // Author        : Rinsha
        // Date          : 08-03-2018
        // Last Modified : 08-03-2018, Rinsha
        // Desc          :  
        this.companyService.getLoggedinEntity().subscribe(function (data) {
            if (data == null || data == '') {
                _this.routes.navigate(['/home']);
            }
            if (data.role_id == 2) {
                //super admin
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/home']);
                }
                _this.routes.navigate(['/admin-dashboard']);
            }
            if (data.role_id == 3 || data.role_id == 1) {
                //company admin or pm
                if (data.delete_status == true || data.block_status == true || data.cmp_status == "Not Verified") {
                    _this.routes.navigate(['/company-login']);
                }
                if (data.cmp_status == "Expired") {
                    _this.routes.navigate(['/expired']);
                }
                if (data.is_profile_completed == false) {
                    _this.routes.navigate(['/compay-aditninfo', data.cmp_id]);
                }
                // this.routes.navigate(['/company-dashboard']);
            }
            if (data.role_id == 4) {
                //user
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/company-login']);
                }
                _this.routes.navigate(['/user-dashboard']);
            }
        });
        // -----------------------------------End------------------------------------------
    };
    CompanySidebarComponent.prototype.getAccessRightsforRole = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getAccessRightsforRole
        // Params        : 
        // Returns       : Access rights based on role
        // Author        : Manu Prasad
        // Date          : 19-04-2018
        // Last Modified : 19-04-2018, Manu Prasad
        // Desc          : 
        this.companyService.getAccessRightsforRole().subscribe(function (res) {
            // console.log(res);
            _this.rights = res;
            _this.disp = true;
            // console.log(res);      
            // console.log("res");
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanySidebarComponent.prototype.checkRole = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getAccessRightsforRole
        // Params        : 
        // Returns       : Access rights based on role
        // Author        : Manu Prasad
        // Date          : 19-04-2018
        // Last Modified : 19-04-2018, Manu Prasad
        // Desc          : 
        this.companyService.checkRole().subscribe(function (res) {
            // console.log(res);
            // console.log(res);      
            // console.log("res");
            _this.role = res;
            if (res == 3) {
                _this.getAccessRightsforRole();
            }
            else {
                _this.disp = true;
            }
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanySidebarComponent.prototype.exist = function (id) {
        var x = false;
        // console.log('calling exist');
        if (this.role == 3) {
            // console.log('passind id');
            // console.log(id)
            this.rights.forEach(function (element) {
                // console.log('each id id');
                // console.log(element.access_rights_id)
                if (element.access_rights_id == id) {
                    x = true;
                }
            });
        }
        // console.log(x);
        return x;
    };
    CompanySidebarComponent.prototype.exist2 = function (a, b, c, d) {
        var _this = this;
        var arr = [a, b, c, d];
        // console.log("gsg")
        // console.log(this.rights);
        // console.log("gsg")
        var trust = false;
        if (this.role == 3) {
            arr.forEach(function (ele) {
                _this.rights.forEach(function (element) {
                    if (element.access_rights_id == ele) {
                        trust = true;
                    }
                });
            });
            // console.log(trust);
        }
        else {
            return true;
        }
        return trust;
    };
    CompanySidebarComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-sidebar',
            template: __webpack_require__("../../../../../src/app/components/company-sidebar/company-sidebar.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-sidebar/company-sidebar.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_2__angular_router__["Router"],
            __WEBPACK_IMPORTED_MODULE_3__angular_material__["z" /* MatSnackBar */],
            __WEBPACK_IMPORTED_MODULE_5__config_config__["a" /* Config */]])
    ], CompanySidebarComponent);
    return CompanySidebarComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-signup/company-signup.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "button, select{outline:none;}\r\n.logn{height:100%;overflow-x:hidden;background:#fff;}\r\n.logn-img{height:100%;width:100%;position:relative;overflow:hidden;}\r\n.paragraph{    width: 56%;\r\n    left: 22%;\r\n    bottom: 10%;\r\n    z-index: 100;\r\n    min-height: 20px;\r\n    color: #fff;\r\n    text-align: left;\r\n    font-size: 14px;\r\n    position: absolute;\r\n    line-height: 22px;}\r\n.social-login{\r\n  position:relative;\r\n  float: none;\r\n  margin:0 auto;\r\n  height:auto;\r\n  padding: 10px 0 15px 0;\r\n  border-bottom: 1px solid #eee;\r\n  display: table;\r\n      width: 79%;\r\n}\r\n\r\n.social-login a{\r\n     position: relative;\r\n    float: left;\r\n    width: 48%;\r\n    text-decoration: none;\r\n    color: #fff;\r\n    border: 1px solid rgba(0,0,0,0.05);\r\n    padding: 7px 12px;\r\n    border-radius: 12px;\r\n    font-size: 12px;\r\n   \r\n        margin: 0px 1%;\r\n    text-align: center;\r\n}\r\n.social-login a i{\r\n  position: relative;\r\n  float: left;\r\n  width: 20px;\r\n  top: 2px;\r\n}\r\n.social-login a:first-child{\r\n  background-color: #49639F;\r\n}\r\n.social-login a:last-child{\r\n  background-color: #DF4A32;\r\n}\r\n.email-login,.email-signup{\r\n  position:relative;\r\n  float: left;\r\n  width: 100%;\r\n  height:auto;\r\n  margin-top: 20px;\r\n  text-align:center;\r\n}\r\nbody {\r\n  background: #e9e9e9;\r\n  color: #666666;\r\n  font-family: 'RobotoDraft', 'Roboto', sans-serif;\r\n  font-size: 14px;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n/* Pen Title */\r\n.pen-title {\r\n  padding: 20px 0;\r\n  text-align: center;\r\n  letter-spacing: 2px;\r\n}\r\n.pen-title h1 {\r\n  margin: 0 0 20px;\r\n  font-size: 40px;\r\n  font-weight: 300;\r\n}\r\n.pen-title span {\r\n  font-size: 12px;\r\n}\r\n.pen-title span .fa {\r\n  color: #ed2553;\r\n}\r\n.pen-title span a {\r\n  color: #ed2553;\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n}\r\n\r\n/* Rerun */\r\n.rerun {\r\n  margin: 0 0 30px;\r\n  text-align: center;\r\n}\r\n.rerun a {\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  background: #ed2553;\r\n  border-radius: 3px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  padding: 10px 20px;\r\n  color: #ffffff;\r\n  text-decoration: none;\r\n  transition: 0.3s ease;\r\n}\r\n.rerun a:hover {\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n}\r\n\r\n/* Scroll To Bottom */\r\n#codepen, #portfolio {\r\n  position: fixed;\r\n  bottom: 30px;\r\n  right: 30px;\r\n  background: #ec2652;\r\n  width: 56px;\r\n  height: 56px;\r\n  border-radius: 100%;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  transition: 0.3s ease;\r\n  color: #ffffff;\r\n  text-align: center;\r\n}\r\n#codepen i, #portfolio i {\r\n  line-height: 56px;\r\n}\r\n#codepen:hover, #portfolio:hover {\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n}\r\n\r\n/* CodePen */\r\n#portfolio {\r\n  bottom: 96px;\r\n  right: 36px;\r\n  background: #ec2652;\r\n  width: 44px;\r\n  height: 44px;\r\n  animation: buttonFadeInUp 1s ease;\r\n}\r\n#portfolio i {\r\n  line-height: 44px;\r\n}\r\n\r\n/* Container */\r\n.container {\r\n  position: relative;\r\n  max-width: 460px;\r\n  width: 100%;\r\n  margin: 0 auto 100px;\r\n}\r\n.container.active .card:first-child {\r\n  background: #f2f2f2;\r\n  margin: 0 15px;\r\n}\r\n.container.active .card:nth-child(2) {\r\n  background: #fafafa;\r\n  margin: 0 10px;\r\n}\r\n.container.active .card.alt {\r\n  top: 20px;\r\n  right: 0;\r\n  width: 100%;\r\n  min-width: 100%;\r\n  height: auto;\r\n  border-radius: 5px;\r\n  padding: 60px 0 40px;\r\n  overflow: hidden;\r\n}\r\n.container.active .card.alt .toggle {\r\n  position: absolute;\r\n  top: 40px;\r\n  right: -70px;\r\n  box-shadow: none;\r\n  transform: scale(15);\r\n  transition: transform .5s ease;\r\n}\r\n.container.active .card.alt .toggle:before {\r\n  content: '';\r\n}\r\n.container.active .card.alt .title,\r\n.container.active .card.alt .input-container,\r\n.container.active .card.alt .button-container {\r\n  left: 0;\r\n  opacity: 1;\r\n  visibility: visible;\r\n  transition: .3s ease;\r\n}\r\n.container.active .card.alt .title {\r\n  transition-delay: .3s;\r\n}\r\n.container.active .card.alt .input-container {\r\n  transition-delay: .4s;\r\n}\r\n.container.active .card.alt .input-container:nth-child(2) {\r\n  transition-delay: .5s;\r\n}\r\n.container.active .card.alt .input-container:nth-child(3) {\r\n  transition-delay: .6s;\r\n}\r\n.container.active .card.alt .button-container {\r\n  transition-delay: .7s;\r\n}\r\n\r\n\r\n/* Keyframes */\r\n@keyframes buttonFadeInUp {\r\n  0% {\r\n    bottom: 30px;\r\n    opacity: 0;\r\n  }\r\n}\r\n.g-recaptcha {\r\n    transform:scale(0.89);\r\n    transform-origin:0 0;\r\n}\r\n.round-button{border-radius:20px;margin:0 auto;float:none;background:#f37600;color:#fff;    padding: 10px 32px; /* Safari */\r\n    transition: background 2s;}\r\n.round-button:hover{background:#ffaa05;color:#fff;}\r\n.padd-lft{padding-left:20px;}\r\n\r\n\r\n\r\n@media only screen and (max-width : 768px) {\r\n.logn-img {\r\n    height: 72%;\r\n    width: 98%;\r\n\tmax-height:300px;\r\n}\r\n}\r\n\r\n@media only screen and (max-width : 480px)  { \r\n.card .input-container{    margin: 12px;}\r\n.logn-img{display:none;}\r\nform{text-align:center;}\r\n.logn-img {\r\n    height: 72%;\r\n    width: 98%;\r\n\tmax-height:300px;\r\n}\r\n.logn-img img{width:100%;}\r\n}\r\n@media only screen and (max-width : 320px) { \r\n\t.card .input-container{    width: 74%;\r\n        margin: 24px auto;\r\n    float: none;}\r\n\t.card .input-container .bar{left: 3%;}\r\n\t.container{max-width:100%;}\r\n\tform{text-align:center;}\r\n}\r\n\r\n.loder{\r\n  position: absolute;\r\n  top: 0px;\r\n}\r\nlogn{\r\n  position: relative\r\n}\r\n.btn-nxt{\r\n  /* position: absolute; */\r\n  top: 68px;\r\n  right: -45px;\r\n  background: transparent;\r\n  border: none;\r\n  position: absolute;\r\n}\r\n\r\n.nxt-cntainer{\r\n  position: relative;\r\n}\r\nselect,input{\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  outline: none;\r\n  padding: 10px;\r\n  font-size: 20px;\r\n  padding-right: 44px;\r\n}\r\nselect{\r\n  cursor: pointer;\r\n}\r\n.inp-hd{\r\n  font-size: 25px;\r\n}\r\n.errMsg{\r\n  font-size: 13px;color: #ff336a;\r\n}\r\n.progress-bar{\r\n  background-color: #28d685 !important;\r\n}\r\n.inp-top{\r\n  top: 89px;\r\n}\r\n.submit-form{\r\n  position: absolute;\r\n    top: 138px;\r\n    right: 0;\r\n    background: transparent;\r\n    border: none;\r\n  transition: color 1s ease;\r\n    \r\n}\r\n.trans-clr{\r\n  color: #20ad6b;\r\n  \r\n}\r\n.simform .progress::before{\r\n  width: 100%;\r\n}\r\nsection{\r\n  padding: 5em 7em 10em !important;\r\n}\r\n.bgz{padding-top:12em;}\r\n.lft-cls{\r\n  left: -45px;\r\n}\r\n.clr-grn{\r\n  color: #00ab5b;\r\n}\r\n.hm-lnk{\r\n  color: #f27a00;\r\n}\r\n.hm-lnk:hover{\r\n  color: #ff6238 !important;\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-signup/company-signup.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"logn\">\r\n    <div class=\"row\">\r\n\t   <div class=\"col-md-8\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"logn-img\">\r\n\t\t\t\t\t<img src=\"./assets/images/sign.jpg\" class=\"img-responsive\"/>\r\n\t\t\t\t\t<div class=\"paragraph\">\r\n\t\t\t\t\t\t<div class=\"col-md-12\" style=\"text-align:center;\">\r\n\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Proin tincidunt bibendum malesuada. Fusce tincidunt nibh quis nisi tristique, sed ultrices lorem aliquam. Nam facilisis posuere vehicula. Integer tempus rhoncus volutpat.\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t   </div>\r\n\t   <div class=\"col-md-4 bgz\">\r\n\t\t\t<h3>Registration</h3>\r\n\t\t\t<section>\r\n\t\t\t\t<form id=\"theForm\" class=\"simform\" autocomplete=\"off\">\r\n\t\t\t\t\t<div class=\"text-center\" *ngIf=\"registr\">\r\n\t\t\t\t\t<label>{{ssMsg}}</label>\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"text-center\" *ngIf=\"showLoader\">\r\n\t\t\t\t\t\t<app-spinner></app-spinner>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"simform-inner\" *ngIf=\"!registr\">\r\n\t\t\t\t\t\t<div  *ngFor=\"let item of questions;let i=index;\" class=\"nxt-cntainer\">\r\n\t\t\t\t\t\t\t<ng-container *ngIf=\"counter == i\">\r\n\t\t\t\t\t\t\t\t<label class=\"inp-hd\" >{{item.question}}</label>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" [attr.maxlength]=\"item.length\" *ngIf=\"item.type == 'text' else password\" [(ngModel)]=\"item.ans\" name=\"item.ans\" [focus]=\"counter == i\" >\r\n\t\t\t\t\t\t\t\t<!-- <input type=\"text\" [attr.maxlength]=\"item.length\" *ngIf=\"item.type == 'text' else password\" [(ngModel)]=\"item.ans\" name=\"item.ans\" [myFocus]=\"counter == i\"  > -->\r\n\t\t\t\t\t\t\t\t<!-- [attr.autofocus]=\"counter == i\"  -->\r\n\t\t\t\t\t\t\t\t<!-- <input type=\"text\" id=\"xx\" [hidden]=\"xd\"placeholder=\"hhh\" [attr.maxlength]=\"item.length\"   [attr.autofocus]=\"true\">\r\n\t\t\t\t\t\t\t\t<input type=\"text\" id=\"ass\" [hidden]=\"!xd\" placeholder=\"sss\"  >\r\n\t\t\t\t\t\t\t\t{{counter}}\r\n\t\t\t\t\t\t\t\t{{i}} -->\r\n\t\t\t\t\t\t\t\t<ng-template #password>\r\n\t\t\t\t\t\t\t\t\t<input type=\"password\" *ngIf=\"item.type == 'password' else multiple\" [(ngModel)]=\"item.ans\" name=\"item.ans\" autofocus>\r\n\t\t\t\t\t\t\t\t\t<ng-template #multiple>\r\n\t\t\t\t\t\t\t\t\t\t\t<select class=\"inp\"  [(ngModel)]=\"item.ans\" name=\"item.ans\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ng-container *ngIf=\"i == 3 else size\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ng-container *ngFor=\"let c of industry\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option  value=\"{{c.id}}\">{{c.industry}}</option>\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ng-template #size>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ng-container *ngFor=\"let s of cmpSize\">\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option  value=\"{{s.id}}\">{{s.size_range}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- <option>Select Company Size</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option>1-10</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option>1-20</option> -->\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<button *ngIf=\"counter != 8\" class=\"btn-nxt\" type=\"submit\" (click)=\"validate(i)\" [ngClass]=\"{'inp-top': counter==6}\"><i class=\"la la-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t<button *ngIf=\"counter != 0\" class=\"btn-nxt lft-cls\" type=\"submit\" (click)=\"subCount(i)\" [ngClass]=\"{'inp-top': counter==6}\"><i class=\"la la-arrow-left\"></i></button>\t\t\r\n\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"progress\">\r\n\t\t\t\t\t\t\t\t<div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"70\"\r\n\t\t\t\t\t\t\t\taria-valuemin=\"0\" aria-valuemax=\"100\" [style.width.%]=\"progressBarWidth\">\r\n\t\t\t\t\t\t\t\t  <span class=\"sr-only\">70% Complete</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t<div class=\"errMsg\">{{errMessage}}</div>\r\n\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t<div class=\"errMsg clr-grn\" *ngIf=\"counter == 8|| counter == 7\">{{passMessage}}</div>\r\n\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<button *ngIf=\"counter == 8\" class=\"submit-form trans-clr\" type=\"submit\" (click)=\"register()\"><i class=\"la la-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div><!-- /simform-inner -->\r\n\t\t\t\t\t<span class=\"final-message\"></span>\r\n\t\t\t\t</form><!-- /simform -->\t\r\n\t\t\t\t<a routerLink=\"/home\" class=\"hm-lnk\">Back to Home</a>\t\t\r\n\t\t\t</section>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t</div>\r\n\t\t\t\r\n\t\t  \r\n\t   \r\n   </div>\r\n\r\n    <!-- Modal -->\r\n \r\n\t\t<script>\r\n\t\t\t\r\n\t\t</script>\r\n\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-signup/company-signup.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanySignupComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var CompanySignupComponent = (function () {
    function CompanySignupComponent(companyService) {
        this.companyService = companyService;
        // @ViewChild('fieldName1')	
        // fieldName1: any;
        this.timestamp = new Date().getTime().toString();
        this.questions = [{
                question: "What's your Email?",
                type: "text",
                ans: "",
                length: 100
            },
            {
                question: "What's your Company Name?",
                type: "text",
                ans: "",
                length: 100
            },
            {
                question: "Your Company Code?",
                type: "text",
                ans: "",
                length: 3
            },
            {
                question: "Industry?",
                type: "multiple",
                ans: "",
                length: 100
            },
            {
                question: "Your Contact Number ?",
                type: "text",
                ans: "",
                length: 100
            },
            {
                question: "Company Size?",
                type: "multiple",
                ans: "",
                length: 100
            },
            {
                question: "Why are you looking for task managment software?",
                type: "text",
                ans: "",
                length: 100
            },
            {
                question: "Your Password",
                type: "password",
                ans: "",
                length: 100
            },
            {
                question: "Confirm Password",
                type: "password",
                ans: "",
                length: 100
            },
        ];
        this.errMessage = '';
        this.counter = 0;
        this.counter2 = 0;
        this.now = 0;
        this.progressBarWidth = 0;
        this.registr = false;
        this.ssMsg = '';
        this.showLoader = false;
        this.passMessage = "Password contain atleast 6 characters and should contain one number,one character and one special character";
        this.reg = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
        this.xd = false;
        this.verification_code = this.timestamp + Math.floor(100000 + Math.random() * 900000);
    }
    CompanySignupComponent.prototype.ngOnInit = function () {
        console.log(this.questions);
        this.getIndustries();
        this.getCompanySize();
    };
    CompanySignupComponent.prototype.register = function () {
        var _this = this;
        if (this.questions[7].ans == this.questions[8].ans) {
            this.errMessage = "";
            this.registr = true;
            this.showLoader = true;
            this.questions.push({ question: 'verification', type: 'text', ans: this.verification_code, length: 1 });
            this.companyService.registerCompany(this.questions).subscribe(function (resData) {
                _this.showLoader = false;
                _this.ssMsg = resData.message;
            });
        }
        else {
            this.errMessage = "Password doesn't match!";
        }
    };
    CompanySignupComponent.prototype.getIndustries = function () {
        var _this = this;
        this.companyService.getIndustries().subscribe(function (resData) {
            // console.log(resData)
            _this.industry = resData;
            // console.log(this.industry)
        });
    };
    CompanySignupComponent.prototype.getCompanySize = function () {
        var _this = this;
        this.companyService.getCompanySize().subscribe(function (resData) {
            // console.log(resData)
            _this.cmpSize = resData;
        });
    };
    CompanySignupComponent.prototype.ValidateEmail = function (mail) {
        if (/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(mail)) {
            return (true);
        }
        return (false);
    };
    CompanySignupComponent.prototype.addCounter = function () {
        // if(this.counter == 0){
        // 	if(this.ValidateEmail(this.questions[this.counter].ans)){
        // 	this.errMessage = "Invalid email address!";
        // 	}
        // }
        this.counter = this.counter + 1;
        if (this.progressBarWidth >= (this.counter / 8) * 100) {
        }
        else {
            this.progressBarWidth = (this.counter / 8) * 100;
        }
        // console.log(this.progressBarWidth );
    };
    CompanySignupComponent.prototype.subCount = function (i) {
        this.counter = this.counter - 1;
    };
    CompanySignupComponent.prototype.validatePassword = function (password) {
        var re = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[$@$!%*#?&.])[A-Za-z\d$@$!%*#?&.]{6,}$/;
        return re.test(password);
    };
    CompanySignupComponent.prototype.validate = function (i) {
        var _this = this;
        // console.log(this.counter);
        // console.log(this.counter2);
        // i = i+1;
        // let id = "#"+i
        // // console.log(id)
        // this.xd = true;
        if (this.questions[this.counter].ans == '') {
            this.errMessage = "Please fill the fields";
        }
        else {
            if (i == 0) {
                if (!this.reg.test(this.questions[0].ans.toLowerCase())) {
                    this.errMessage = "Enter valid email!";
                }
                else {
                    this.companyService.checkEmailExist(this.questions[0].ans).subscribe(function (checkingdata) {
                        if (!checkingdata.success) {
                            _this.errMessage = checkingdata.msg;
                        }
                        else {
                            _this.errMessage = "";
                            _this.addCounter();
                        }
                    });
                }
            }
            else if (i == 4) {
                if (!(/^\d+$/.test(this.questions[4].ans)) || (this.questions[4].ans.length < 10)) {
                    this.errMessage = "Enter valid phone number!";
                }
                else {
                    this.errMessage = "";
                    this.addCounter();
                }
            }
            else if (i == 7) {
                var strongRegex = new RegExp("^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$");
                if (this.validatePassword(this.questions[7].ans) == false) {
                    this.errMessage = "Invalid Password";
                }
                else {
                    this.errMessage = "";
                    this.addCounter();
                }
            }
            else {
                this.errMessage = '';
                this.addCounter();
            }
        }
    };
    CompanySignupComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-signup',
            template: __webpack_require__("../../../../../src/app/components/company-signup/company-signup.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-signup/company-signup.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_company_service__["a" /* CompanyService */]])
    ], CompanySignupComponent);
    return CompanySignupComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-status-graph/company-status-graph.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-status-graph/company-status-graph.component.html":
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "../../../../../src/app/components/company-status-graph/company-status-graph.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyStatusGraphComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var CompanyStatusGraphComponent = (function () {
    function CompanyStatusGraphComponent() {
        this.containerId = '';
    }
    CompanyStatusGraphComponent.prototype.ngOnInit = function () { };
    CompanyStatusGraphComponent.prototype.ngAfterViewInit = function () {
        //console.log(this.containerId);
        // const pieData = [
        //   {name: 'New - Yet to Start', value: 3, color: '#2778a7'},
        //   {name: 'In Progress', value: 4, color: '#99b745'},
        //   {name: 'Completed', value: 50, color: '#17a88f'},
        //   {name: 'On Hold', value: 50, color: '#f2ac37'},
        //   {name: 'Cancelled', value: 3, color: '#b74549'},
        //   {name: 'Un Planned', value: 1, color: '#4d5d6e'},
        // ];
        // console.log(this.pieData);
        this.bakeDonut(this.pieData);
    };
    CompanyStatusGraphComponent.prototype.bakeDonut = function (d) {
        var containerId = this.containerId;
        var activeSegment;
        var data = d.sort(function (a, b) { return b['value'] - a['value']; }), viewWidth = 195, viewHeight = 195, svgWidth = viewHeight, svgHeight = viewHeight, thickness = 25, colorArray = data.map(function (k) { return k.color; }), el = d3.select('#' + containerId), radius = Math.min(svgWidth, svgHeight) / 2, color = d3.scaleOrdinal()
            .range(colorArray);
        var max = d3.max(data, function (maxData) { return maxData.value; });
        var svg = el.append('svg')
            .attr('viewBox', "0 0 " + (viewWidth + thickness) + " " + (viewHeight + thickness))
            .attr('class', 'pie')
            .attr('width', viewWidth)
            .attr('height', svgHeight);
        var g = svg.append('g')
            .attr('transform', "translate( " + ((svgWidth / 2) + (thickness / 2)) + ", " + ((svgHeight / 2) + (thickness / 2)) + ")");
        var arc = d3.arc()
            .innerRadius(radius - thickness)
            .outerRadius(radius);
        var arcHover = d3.arc()
            .innerRadius(radius - (thickness + 5))
            .outerRadius(radius + 8);
        var pie = d3.pie()
            .value(function (pieData) { return pieData.value; })
            .sort(null);
        var maxAssigned = false;
        var maxArcAssigned = false;
        var path = g.selectAll('path')
            .attr('class', 'data-path')
            .data(pie(data))
            .enter()
            .append('g')
            .attr('class', 'data-group')
            .each(function (pathData, i) {
            var group = d3.select(this);
            group.append('text')
                .text("" + pathData.data.value)
                .attr('class', 'data-text data-text__value')
                .attr('text-anchor', 'middle')
                .attr('dy', '0em')
                .style("font-size", "25px");
            group.append('text')
                .text("" + pathData.data.name)
                .attr('class', 'data-text data-text__name')
                .attr('text-anchor', 'middle')
                .attr('dy', '1.5em')
                .style("font-size", "15px");
            // Set default active segment
            if (pathData.value === max && !maxAssigned) {
                var textVal = d3.select(this).select('.data-text__value')
                    .classed('data-text--show', true);
                var textName = d3.select(this).select('.data-text__name')
                    .classed('data-text--show', true);
                maxAssigned = true;
            }
        })
            .append('path')
            .attr('d', arc)
            .attr('fill', function (fillData, i) { return color(fillData.data.name); })
            .attr('class', 'data-path')
            .on('mouseover', function () {
            var _thisPath = this, parentNode = _thisPath.parentNode;
            if (_thisPath !== activeSegment) {
                activeSegment = _thisPath;
                //  alert('#' + containerId + ' .data-text');
                var dataTexts = d3.selectAll('#' + containerId + ' .data-text')
                    .classed('data-text--show', false);
                var paths = d3.selectAll('#' + containerId + ' .data-path')
                    .transition()
                    .duration(250)
                    .attr('d', arc);
                d3.select(_thisPath)
                    .transition()
                    .duration(250)
                    .attr('d', arcHover);
                var thisDataValue = d3.select(parentNode).select('.data-text__value')
                    .classed('data-text--show', true);
                var thisDataText = d3.select(parentNode).select('.data-text__name')
                    .classed('data-text--show', true);
            }
        })
            .each(function (v, i) {
            if (v.value === max && !maxArcAssigned) {
                var maxArc = d3.select(this)
                    .attr('d', arcHover);
                activeSegment = this;
                maxArcAssigned = true;
            }
            this._current = i;
        });
        // const legendRectSize = 15;
        // const legendSpacing = 10;
        //   const legend = svg.selectAll('.legend')
        //   .data(color.domain())
        //   .enter()
        //   .append('g')
        //   .attr('class', 'legend')
        //   .attr('transform', function(legendData, i) {
        //     const itemHeight =    legendRectSize + legendSpacing;
        //     const offset =        legendRectSize * color.domain().length;
        //     const horz =          svgWidth + 80;
        //     const vert =          (i * itemHeight) + legendRectSize + (svgHeight - offset) / 2;
        //     return `translate(${horz}, ${vert})`;
        //   });
        //   legend.append('circle')
        //     .attr('r', legendRectSize / 2)
        //     .style('fill', color);
        //   legend.append('text')
        //     .attr('x', legendRectSize + legendSpacing)
        //     .attr('y', legendRectSize - legendSpacing)
        //     .attr('class', 'legend-text')
        //     .text( (legendData) => legendData )
    };
    CompanyStatusGraphComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-status-graph',
            template: __webpack_require__("../../../../../src/app/components/company-status-graph/company-status-graph.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-status-graph/company-status-graph.component.css")],
            inputs: ['containerId', 'pieData']
        }),
        __metadata("design:paramtypes", [])
    ], CompanyStatusGraphComponent);
    return CompanyStatusGraphComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-task-requests/company-task-requests.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".user{\r\n    width: 55px;\r\n    height: 55px;\r\n    border-radius: 50%;\r\n    margin:10px 0;\r\n    float: left;\r\n    overflow: hidden;\r\n    background: #d45d0e;\r\n  \r\n    text-align: center;\r\n  }\r\n  .user .fa-user{padding-top: 14px;color:#fff;font-size: 21px;}\r\n  .bt{border-radius:30px;padding:3px 13px;   font-size: 12px;\r\n    margin-top: 9px;color: white;\r\n      background-color: #fe6a07;} ", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-task-requests/company-task-requests.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n\r\n    <body class=\"home\" >\r\n        <div class=\"container-fluid display-table\">\r\n            <div class=\"row display-table-row\">\r\n      \r\n                <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n                    <!-- sidebar-->\r\n      \r\n                    <company-sidebar></company-sidebar>\r\n                    <!-- end sidebar-->\r\n                </div>\r\n      \r\n                <div class=\"col-md-12 col-xs-12\">\r\n                    <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n                    <!-- topbar-->\r\n                    <company-topbar></company-topbar>\r\n                    <!-- end topbar-->\r\n      \r\n      \r\n                    <div class=\"user-dashboard\">\r\n                        <!-- <h1>Hello, JS</h1> -->\r\n                        <h2>Request Management</h2>\r\n                        <ul class=\"breadcrumb\">\r\n                          <li>\r\n                            <a>Request Management</a>\r\n                          </li>\r\n\r\n\r\n                          <li>New Task Request list </li>\r\n                        </ul>\r\n                        <div class=\"row\">\r\n                          \r\n                            <div class=\"col-md-12 col-sm-5 col-xs-12 gutter ad-tp dash-tbl\" >\r\n                              <div class=\"col-md-12 spinner-cont\" *ngIf=\"showSpinner\">\r\n                                  <app-spinner  class=\"tbl-spnner\"></app-spinner>\r\n                              </div>\r\n      \r\n                                <div class=\"example-header\" >\r\n                                    <mat-form-field class=\"mat-fltr\">\r\n                                      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                             \r\n                          <div class=\"example-container mat-elevation-z8 \">\r\n                          <mat-table #table [dataSource]=\"dataSource\" matSort>\r\n            \r\n                            <!-- ID Column -->\r\n                            <ng-container matColumnDef=\"slno\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> SL NO. </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row; let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}} </mat-cell>\r\n                            </ng-container>\r\n                        \r\n                            <ng-container matColumnDef=\"user_name\">\r\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>NAME</mat-header-cell>\r\n                                <!-- <mat-cell *matCellDef=\"let row\">\r\n                                  <div class=\"user\" *ngIf=\"profilCheck(row?.tbl_new_task_request?.tbl_user_profile?.tbl_login?.profile_image); else image\"><i class=\"fa fa-user\"></i></div>\r\n                                  <ng-template #image>\r\n                                      <div class=\"user\" ><img src=\"./assets/images/sign.jpg\"></div>\r\n                                  </ng-template>\r\n                                </mat-cell> -->\r\n                                <mat-cell *matCellDef=\"let row\"> {{row.tbl_new_task_request.tbl_user_profile.f_name}} </mat-cell>\r\n                              </ng-container>\r\n\r\n                            <!-- Theme Name -->\r\n                            <ng-container matColumnDef=\"name\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> PROJECT NAME  </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row?.tbl_new_task_request?.tbl_project_module?.tbl_project?.project_nam}} </mat-cell>\r\n                            </ng-container>\r\n                        \r\n                            <ng-container matColumnDef=\"task name\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> TASK NAME </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row?.tbl_new_task_request?.task_name}} </mat-cell>\r\n                            </ng-container>\r\n\r\n                            <ng-container matColumnDef=\"reqstatus\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> STATUS </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\"> {{row?.tbl_new_task_request?.request_status}} </mat-cell>\r\n                            </ng-container>\r\n                            <!-- Progress Column -->\r\n                            <!-- <ng-container matColumnDef=\"mybid\">\r\n                              <mat-header-cell *matHeaderCellDef mat-sort-header> Your Bids </mat-header-cell>\r\n                              <mat-cell *matCellDef=\"let row\">  -->\r\n                                \r\n                                <!-- {{row.status}} -->\r\n                                <!-- {{row.h_font_family }} -->\r\n                                <!-- <p *ngFor=\"let bid of row.mybid\">{{row.h_font_family }} : {{bid.date_time | date: 'dd-MM-yyyy h:mm a'}}</p> -->\r\n                              <!-- </mat-cell>\r\n                            </ng-container> -->\r\n                          \r\n                            <!-- ID Column -->\r\n                            <!-- <ng-container matColumnDef=\"topbid\">\r\n                                <mat-header-cell *matHeaderCellDef mat-sort-header> Top Bid </mat-header-cell>\r\n                                <mat-cell *matCellDef=\"let row\"> {{row.progress_text_color }} </mat-cell>\r\n                              </ng-container> -->\r\n                          \r\n                            <!-- ID Column -->\r\n                            <ng-container matColumnDef=\"status\">\r\n                                <mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </mat-header-cell>\r\n                                <mat-cell *matCellDef=\"let row\"> <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n                                  <mat-icon>more_vert</mat-icon>\r\n                                </button>\r\n                                <mat-menu #menu=\"matMenu\">\r\n                                  \r\n                                  <!-- <button mat-menu-item [routerLink]=\"['/edit-theme/',row._id]\">\r\n                                    <mat-icon>mode_edit</mat-icon>\r\n                                    <span>Edit</span>\r\n                                  </button> -->\r\n                                  <button mat-menu-item   [routerLink]=\"['/company-task-manage', row?.tbl_new_task_request.id]\"> \r\n                                      <mat-icon class=\"mat-menu-icn\"><i class=\"material-icons mat-assign-icn\">visibility</i></mat-icon>\r\n                                      <span>View</span>\r\n                                    </button>\r\n                                </mat-menu>\r\n                                 </mat-cell>\r\n                              </ng-container>\r\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                            </mat-row>\r\n                         \r\n                          </mat-table>\r\n                          <div class=\"col-md-12 noItemFound\" *ngIf=\"existStatus\">\r\n                              <div class=\"col-md-4 col-md-offset-4\">\r\n                                  <mat-toolbar   class=\"back-color\">No item found!</mat-toolbar>\r\n                              </div>\r\n                              </div>\r\n                      <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                          </div>\r\n                          </div>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                   \r\n      \r\n                </div>\r\n                <!-- footer-->\r\n                <!-- <admin-footer></admin-footer> -->\r\n                <!-- end footer-->\r\n            </div>\r\n        </div>\r\n        <!-- Modal -->\r\n      \r\n      \r\n      \r\n        <div id=\"assignModal\" class=\"modal fade\" role=\"dialog\">\r\n            <div class=\"modal-dialog\">\r\n      \r\n              <!-- Modal content-->\r\n              <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                  <h4 class=\"modal-title\"></h4>\r\n                </div>\r\n                <!-- <div class=\"modal-header\"> -->\r\n                <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n                <!-- </div> -->\r\n                <div class=\"modal-body delete-popup\">\r\n                  <div class=\"col-md-12\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"col-md-4\">\r\n                                <label class=\"modal-lft-lbl\">Team Name:</label> \r\n                            </div>\r\n                            <div class=\"col-md-7\">\r\n                                <label id=\"team-nm\" class=\"modal-lft-lbl\">{{teamName}}</label>\r\n                \r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"col-md-4 \"><label class=\"modal-lft-lbl\">Team Members :</label></div>\r\n                            <div class=\"col-md-7 \">\r\n                              <mat-form-field class=\"inputfileds\"> \r\n                                <mat-select name='selected' multiple [(ngModel)]=\"teamMembers\" (ngModelChange)=\"memberSelect($event)\">\r\n                                  <mat-option [value]=\"member.id\" *ngFor=\"let member of members; let i=index\" >{{member.f_name}} {{member.l_name}}</mat-option>\r\n                                </mat-select>\r\n                              </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n      \r\n                        <div class=\"col-md-12\">\r\n                            <div class=\"col-md-4 \"><label class=\"modal-lft-lbl\">Team Head :</label></div>\r\n                            <div class=\"col-md-7 \">\r\n                              <mat-form-field class=\"inputfileds\">\r\n                                <mat-select name='selected2'  [(ngModel)]=\"teamHead\" (ngModelChange)=\"headSelect($event)\">\r\n                                  \r\n                                    <mat-option *ngFor=\"let member of selectedTeamMembers;\" [value]=\"member.id\" >{{member.f_name}} {{member.l_name}}</mat-option>\r\n                                  \r\n                                </mat-select>\r\n                              </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-12\">\r\n                          {{errMessage}}\r\n                        </div>\r\n                      </div>\r\n                      \r\n                  </div>\r\n                  \r\n      \r\n                </div>\r\n      \r\n                <div class=\"modal-footer\">\r\n                  <app-spinner *ngIf=\"spinner\"></app-spinner>\r\n                  <button *ngIf=\"!spinner\" type=\"button\" (click)=\"assignTeam()\" class=\"btn round-button\" >Assign</button>\r\n                </div>\r\n              </div>\r\n      \r\n            </div>\r\n          </div>\r\n      </body>"

/***/ }),

/***/ "../../../../../src/app/components/company-task-requests/company-task-requests.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyTaskRequestsComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CompanyTaskRequestsComponent = (function () {
    function CompanyTaskRequestsComponent(companyService, routes, snackBar) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        // displayedColumns = ['id', 'profile', 'name', 'task name', 'strength', 'reqstatus','status'];
        this.displayedColumns = ['slno', 'user_name', 'name', 'task name', 'reqstatus', 'status'];
        this.showSpinner = false;
        this.existStatus = false;
        this.displatStat = false;
    }
    CompanyTaskRequestsComponent.prototype.ngOnInit = function () {
        this.getNewTaskRequests();
    };
    CompanyTaskRequestsComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, Manu Prasad 
    // Desc          : Get Teams from database
    CompanyTaskRequestsComponent.prototype.getNewTaskRequests = function () {
        var _this = this;
        this.showSpinner = true;
        this.companyService.getNewTaskRequests().subscribe(function (requests) {
            _this.showSpinner = false;
            // console.log(requests);
            if (requests.length <= 0) {
                // // console.log("theme is empty");
                _this.existStatus = true;
            }
            else {
                _this.existStatus = false;
            }
            //  else {
            // // console.log(themes);
            // // console.log("theme is not empty");
            //  // console.log(this.existStatus);
            _this.displatStat = true;
            _this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](requests);
            _this.dataSource.paginator = _this.paginator;
            _this.dataSource.sort = _this.sort;
            // }  
        });
    };
    //  ---------------------------------end-----------------------------------------------
    CompanyTaskRequestsComponent.prototype.profilCheck = function (image) {
        // ---------------------------------Start-------------------------------------------
        // Function      : Check image is empty
        // Params        : image name
        // Returns       : 
        // Author        : MANU PRASAD
        // Date          : 03-04-2018
        // Last Modified : 03-04-2018,
        // Desc          : check image is empty or not
        // // console.log('xx-'+image)
        if (image == '') {
            return false;
        }
        else {
            return true;
        }
        // ---------------------------------End-------------------------------------------
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], CompanyTaskRequestsComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], CompanyTaskRequestsComponent.prototype, "sort", void 0);
    CompanyTaskRequestsComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-task-requests',
            template: __webpack_require__("../../../../../src/app/components/company-task-requests/company-task-requests.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-task-requests/company-task-requests.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"],
            __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], CompanyTaskRequestsComponent);
    return CompanyTaskRequestsComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-task-vs-status/company-task-vs-status.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "html, body {\r\n    height: 100%;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n  }\r\n  \r\n  body {\r\n    background: linear-gradient(to bottom, #606c88 0%, #3f4c6b 100%);\r\n    font-family: 'Source Sans Pro', sans-serif;\r\n  }\r\n  .bg-g{background:#17a88f;color:#fff; padding: 10px;margin-bottom:10px;}\r\n  .bg-hash{background:#E9E9E9;padding: 10px;margin-bottom:10px;}\r\n  .bg-hash select{background:none;border:none;width:100%;}\r\n  .total{font-weight:700;padding-top: 20px; line-height: 36px;}\r\n  .widget{margin-top:9%;}\r\n  .tasklabel{       background: #efefef;\r\n    padding: 25px 30px;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    margin: 10px 0;\r\n    border: 1px solid #ccc;\r\n    font-weight: bold;\r\n    font-size : 12px;\r\n  }\r\n  .pie {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    -webkit-filter: drop-shadow(0 2px 0px #333);\r\n            filter: drop-shadow(0 2px 0px #333);\r\n  }\r\n  \r\n  .data-path:hover {\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .data-text {\r\n    transition: transform .2s ease-in-out;\r\n    fill: #fff;\r\n  }\r\n  .data-text__value {\r\n    font-size: 4rem !important;\r\n    transform: translateY(-0.5rem);\r\n    opacity: 0;\r\n  }\r\n  .data-text__name {\r\n    font-size: 2rem;\r\n    transform: translateY(0.5rem);\r\n    opacity: 0;\r\n  }\r\n  .data-text--show {\r\n    transform: translateY(0);\r\n    animation: fadeGraphTextIn 0.5s forwards;\r\n  }\r\n  .data-text:hover {\r\n    -webkit-user-select: none;\r\n       -moz-user-select: none;\r\n        -ms-user-select: none;\r\n            user-select: none;\r\n  }\r\nh1{text-align:center;}\r\n/* .sales{margin-bottom: 25px;} */\r\n  .legend-text {\r\n    fill: #fff;\r\n  }\r\n  \r\n  @keyframes fadeGraphTextIn {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n  /* .sales{    margin-bottom: 20px;} */\r\n  .sales{margin-bottom: 25px;border:none;    box-shadow: 4px 7px 31px #e8e8e8;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-task-vs-status/company-task-vs-status.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\r\n\r\n\r\n<div class=\"row\">\r\n    <div class=\"sales\">\r\n        <h1><b>Task Vs Status</b></h1>\r\n    <div class=\"col-md-6 col-sm-6 col-xs-12\">\r\n      <div class=\"col-md-8 col-md-offset-2\">\r\n      <div class=\"col-md-6 bg-g\">*Select Project</div>\r\n      <div class=\"col-md-6 bg-hash\">\r\n        <!-- <select>\r\n          <option *ngFor=\"let prj of projects\" value=\"{{prj.id}}\">{{prj.project_name}}</option>\r\n        </select> -->\r\n        <mat-select  name=\"projet_id\" [(ngModel)]=\"project.id\" (ngModelChange)=\"changeProject($event)\" required>\r\n        <mat-option *ngFor=\"let prj of projects\" [value]=\"prj.id\">\r\n          {{prj.project_name}}\r\n        </mat-option>\r\n      </mat-select>\r\n      </div> \r\n      <br>\r\n      <br>\r\n      <div class=\"col-md-6 bg-g\">*Select Person</div>\r\n      <div class=\"col-md-6 bg-hash\">\r\n        <!-- <select>\r\n          <option *ngFor=\"let usr of users\" value=\"{{usr.id}}\">{{usr.f_name}} {{usr.l_name}}</option>\r\n        </select> -->\r\n        <mat-select [(ngModel)]=\"user_id\" (ngModelChange)=\"changeUser($event)\" required>\r\n          <mat-option *ngIf=\"showUsers\" value=\"all\">All</mat-option>\r\n            <mat-option *ngFor=\"let usr of users\" [value]=\"usr.id\">\r\n                {{usr.f_name}} {{usr.l_name}}\r\n            </mat-option>\r\n          </mat-select>\r\n      </div> \r\n      <div class=\"clearfix\"></div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"tasklabel\">\r\n          TASKS ASSIGNED\r\n          <br>\r\n          {{total_tasks}}\r\n        </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <div class=\"tasklabel\">\r\n            TASKS COMPLETED\r\n            <br>\r\n            {{completed_tasks}}\r\n           </div>\r\n          </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"tasklabel\">\r\n          <!-- DUE THIS WEEK -->\r\n          TASKS ON HOLD\r\n          <br>\r\n          {{onHold_tasks}}\r\n        </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <div class=\"tasklabel\">\r\n           <!-- DUE NEXT WEEK -->\r\n           TASKS IN PROGRESS\r\n            <br>\r\n            {{in_progress_tasks}}\r\n           </div>\r\n          </div>\r\n      </div>\r\n      <!-- <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"tasklabel\">\r\n          DUE THIS MONTH\r\n          <br>\r\n          10\r\n        </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <div class=\"tasklabel\">\r\n            DUE THIS YEAR\r\n            <br>\r\n            10\r\n           </div>\r\n          </div>\r\n      </div> -->\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"col-md-6 col-sm-6 col-xs-12\">\r\n        <div class=\"widget\">\r\n           \r\n            <div id=\"chart\" class=\"chart-container\">\r\n        \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n"

/***/ }),

/***/ "../../../../../src/app/components/company-task-vs-status/company-task-vs-status.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyTaskVsStatusComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CompanyTaskVsStatusComponent = (function () {
    function CompanyTaskVsStatusComponent(companyService, config) {
        this.companyService = companyService;
        this.config = config;
        this.projects = [];
        this.users = [];
        this.project = {
            id: '',
        };
        this.total_tasks = 0;
        this.new_tasks = 0;
        this.in_progress_tasks = 0;
        this.completed_tasks = 0;
        this.onHold_tasks = 0;
        this.paused_tasks = 0;
        this.showUsers = false;
        this.socket = __WEBPACK_IMPORTED_MODULE_2_socket_io_client__(config.socketURL);
    }
    CompanyTaskVsStatusComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.showUsers = false;
        this.pieData = [
            { name: 'New - Yet to Start', value: this.new_tasks, color: '#2778a7' },
            { name: 'In Progress', value: this.in_progress_tasks, color: '#99b745' },
            { name: 'Completed', value: this.completed_tasks, color: '#17a88f' },
            { name: 'On Hold', value: this.onHold_tasks, color: '#f2ac37' },
            { name: 'Paused', value: this.paused_tasks, color: '#b74549' },
        ];
        this.bakeDonut(this.pieData);
        this.socket.on('new', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('paused', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('completed', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('hold', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('inProgress', function (data) {
            _this.getAllProjects();
        });
        this.getAllProjects();
        // const pieData = [
        //   { name: 'New - Yet to Start', value: 0, color: '#2778a7' },
        //   { name: 'In Progress', value: 0, color: '#99b745' },
        //   { name: 'Completed', value: 0, color: '#17a88f' },
        //   { name: 'On Hold', value: 0, color: '#f2ac37' },
        //   // {name: 'Cancelled', value: 3, color: '#b74549'},
        //   // {name: 'Un Planned', value: 1, color: '#4d5d6e'},
        // ];
        // this.bakeDonut(pieData);
    };
    CompanyTaskVsStatusComponent.prototype.getAllProjects = function () {
        var _this = this;
        this.companyService.getAllProject().subscribe(function (data) {
            _this.projects = [];
            data.forEach(function (element) {
                if (element.status == "Planned" || element.status == "Completed" || element.status == "In Progress") {
                    _this.projects.push(element);
                }
            });
            if (_this.projects.length == 0) {
                _this.users = [];
                //no data in charts
            }
            else {
                _this.project.id = _this.projects[0].id;
                _this.getUsers(_this.projects[0].id);
            }
        });
    };
    CompanyTaskVsStatusComponent.prototype.getUsers = function (projId) {
        var _this = this;
        this.companyService.getUsers(projId).subscribe(function (data) {
            _this.users = data;
            // console.log(data)
            if (_this.users.length == 0) {
                // no data in charts
            }
            else {
                _this.showUsers = true;
                _this.user_id = "all";
                _this.getData(projId, _this.user_id);
            }
        });
    };
    CompanyTaskVsStatusComponent.prototype.changeProject = function (pro) {
        this.showUsers = false;
        this.getUsers(pro);
    };
    CompanyTaskVsStatusComponent.prototype.changeUser = function (user_id) {
        this.getData(this.project.id, user_id);
    };
    CompanyTaskVsStatusComponent.prototype.getData = function (pro_id, user_id) {
        var _this = this;
        var last_status;
        var last_status_id = 0;
        this.total_tasks = 0;
        this.new_tasks = 0;
        this.in_progress_tasks = 0;
        this.completed_tasks = 0;
        this.onHold_tasks = 0;
        this.paused_tasks = 0;
        // ---------------------------------Start-------------------------------------------
        // Function      : getTasksByUser
        // Params        : pro_id, user_id
        // Returns       : 
        // Author        : Rinsha
        // Date          :  17-04-2018
        // Last Modified : 
        // Desc          : 
        this.companyService.getTasksByUser(pro_id, user_id).subscribe(function (data) {
            // console.log(data);
            data.forEach(function (module) {
                _this.total_tasks = _this.total_tasks + module.tbl_project_tasks.length;
                module.tbl_project_tasks.forEach(function (task) {
                    last_status_id = 0;
                    last_status = {};
                    task.tbl_task_status_assocs.forEach(function (statuses) {
                        if (statuses.id > last_status_id) {
                            last_status_id = statuses.id;
                            last_status = statuses;
                        }
                    });
                    if (last_status && last_status.status_id == 1) {
                        _this.new_tasks = _this.new_tasks + 1;
                    }
                    if (last_status && last_status.status_id == 2) {
                        _this.paused_tasks = _this.paused_tasks + 1;
                    }
                    if (last_status && last_status.status_id == 3) {
                        _this.in_progress_tasks = _this.in_progress_tasks + 1;
                    }
                    if (last_status && last_status.status_id == 4) {
                        _this.onHold_tasks = _this.onHold_tasks + 1;
                    }
                    if (last_status && last_status.status_id == 5) {
                        _this.completed_tasks = _this.completed_tasks + 1;
                    }
                });
            });
            // console.log("total task:" + this.total_tasks);
            // console.log("new task:" + this.new_tasks);
            // console.log("in pro task:" + this.in_progress_tasks);
            // console.log("completed task:" + this.completed_tasks);
            // console.log("onhold task:" + this.onHold_tasks);
            // console.log("paused task:" + this.paused_tasks);
            _this.pieData = [
                { name: 'New - Yet to Start', value: _this.new_tasks, color: '#2778a7' },
                { name: 'In Progress', value: _this.in_progress_tasks, color: '#99b745' },
                { name: 'Completed', value: _this.completed_tasks, color: '#17a88f' },
                { name: 'On Hold', value: _this.onHold_tasks, color: '#f2ac37' },
                { name: 'Paused', value: _this.paused_tasks, color: '#b74549' },
            ];
            _this.bakeDonut(_this.pieData);
        });
        // -----------------------------------End------------------------------------------
    };
    CompanyTaskVsStatusComponent.prototype.bakeDonut = function (d) {
        d3.select('#chart').selectAll("svg").remove();
        var activeSegment;
        var data = d.sort(function (a, b) { return b['value'] - a['value']; }), viewWidth = 450, viewHeight = 220, svgWidth = viewHeight, svgHeight = viewHeight, thickness = 20, colorArray = data.map(function (k) { return k.color; }), el = d3.select('#chart'), radius = Math.min(svgWidth, svgHeight) / 2, color = d3.scaleOrdinal()
            .range(colorArray);
        var max = d3.max(data, function (maxData) { return maxData.value; });
        var svg = el.append('svg')
            .attr('viewBox', "0 0 " + (viewWidth + thickness) + " " + (viewHeight + thickness))
            .attr('class', 'pie')
            .attr('width', viewWidth)
            .attr('height', svgHeight);
        var g = svg.append('g')
            .attr('transform', "translate( " + ((svgWidth / 2) + (thickness / 2)) + ", " + ((svgHeight / 2) + (thickness / 2)) + ")");
        var arc = d3.arc()
            .innerRadius(radius - thickness)
            .outerRadius(radius);
        var arcHover = d3.arc()
            .innerRadius(radius - (thickness + 5))
            .outerRadius(radius + 8);
        var pie = d3.pie()
            .value(function (pieData) { return pieData.value; })
            .sort(null);
        var maxAssigned = false;
        var maxArcAssigned = false;
        var path = g.selectAll('path')
            .attr('class', 'data-path')
            .data(pie(data))
            .enter()
            .append('g')
            .attr('class', 'data-group')
            .each(function (pathData, i) {
            var group = d3.select(this);
            group.append('text')
                .text("" + pathData.data.value)
                .attr('class', 'data-text data-text__value')
                .attr('text-anchor', 'middle')
                .attr('dy', '0em');
            group.append('text')
                .text("" + pathData.data.name)
                .attr('class', 'data-text data-text__name')
                .attr('text-anchor', 'middle')
                .attr('dy', '1.5em');
            // Set default active segment
            if (pathData.value === max && !maxAssigned) {
                var textVal = d3.select(this).select('.data-text__value')
                    .classed('data-text--show', true);
                var textName = d3.select(this).select('.data-text__name')
                    .classed('data-text--show', true);
                maxAssigned = true;
            }
        })
            .append('path')
            .attr('d', arc)
            .attr('fill', function (fillData, i) { return color(fillData.data.name); })
            .attr('class', 'data-path')
            .on('mouseover', function () {
            var _thisPath = this, parentNode = _thisPath.parentNode;
            if (_thisPath !== activeSegment) {
                activeSegment = _thisPath;
                var dataTexts = d3.selectAll('#chart .data-text')
                    .classed('data-text--show', false);
                var paths = d3.selectAll('#chart .data-path')
                    .transition()
                    .duration(250)
                    .attr('d', arc);
                d3.select(_thisPath)
                    .transition()
                    .duration(250)
                    .attr('d', arcHover);
                var thisDataValue = d3.select(parentNode).select('.data-text__value')
                    .classed('data-text--show', true);
                var thisDataText = d3.select(parentNode).select('.data-text__name')
                    .classed('data-text--show', true);
            }
        })
            .each(function (v, i) {
            if (v.value === max && !maxArcAssigned) {
                var maxArc = d3.select(this)
                    .attr('d', arcHover);
                activeSegment = this;
                maxArcAssigned = true;
            }
            this._current = i;
        });
        var legendRectSize = 15;
        var legendSpacing = 10;
        var legend = svg.selectAll('.legend')
            .data(color.domain())
            .enter()
            .append('g')
            .attr('class', 'legend')
            .attr('transform', function (legendData, i) {
            var itemHeight = legendRectSize + legendSpacing;
            var offset = legendRectSize * color.domain().length;
            var horz = svgWidth + 80;
            var vert = (i * itemHeight) + legendRectSize + (svgHeight - offset) / 2;
            return "translate(" + horz + ", " + vert + ")";
        });
        legend.append('circle')
            .attr('r', legendRectSize / 2)
            .style('fill', color);
        legend.append('text')
            .attr('x', legendRectSize + legendSpacing)
            .attr('y', legendRectSize - legendSpacing)
            .attr('class', 'legend-text')
            .text(function (legendData) { return legendData; });
    };
    CompanyTaskVsStatusComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-task-vs-status',
            template: __webpack_require__("../../../../../src/app/components/company-task-vs-status/company-task-vs-status.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-task-vs-status/company-task-vs-status.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_3__config_config__["a" /* Config */]])
    ], CompanyTaskVsStatusComponent);
    return CompanyTaskVsStatusComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-time-extension-request/company-time-extension-request.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".task{background:#fbf6f1;width:100%;padding:6px 0;display: inline-block;margin-bottom:6px;}\r\nbutton, input, optgroup, select, textarea{outline:none !important;}\r\n.taskedit{border-left:1px solid #ccc;    display: inline-block;width:100%;margin-top: 5px;}\r\n.task ul li{width:auto;float:left;padding: 8px;}\r\n\ta{color:#111;}\r\n.task h5{padding-top:13px;padding-top: 6px;}\r\n.hash{background:#f7f6f4;}\r\n.round-button {\r\n    border-radius: 20px;\r\n    margin: 0;\r\n    float: left;\r\n    background: #f37600;\r\n    color: #fff;\r\n    padding: 7px 15px;\r\n    transition: background 2s;\r\n\tmargin-bottom:15px;\r\n}\r\n.round-button:hover {\r\n    background: #ffaa05;\r\n    color: #fff;\r\n}\r\n.dropdown ul.dropdown-menu:before {\r\n    content: \"\";\r\n    border-bottom: 10px solid #fff;\r\n    border-right: 10px solid transparent;\r\n    border-left: 10px solid transparent;\r\n    position: absolute;\r\n    top: -10px;\r\n    right: 16px;\r\n    z-index: 10;\r\n}\r\n.round-button:hover, .round-button:focus, .round-button.focus{color:#fff;}\r\nbutton, input, optgroup, select, textarea{outline:none;}\r\n.effect-1 ~ .focus-border{position: absolute; bottom: 0; left: 15px; width: 0; height: 2px;background-color: #bba28b; transition: 0.4s;right:15px;}\r\n.effect-1:focus ~ .focus-border{width: 95%; transition: 0.4s;}\r\n.effect-1{border: 0; padding: 7px 0; border-bottom: 1px solid #ccc;width:100%;}\r\n.style{width:100%;}\r\nlabel{font-size:15px;color:#4a4a4a;font-weight:normal;padding:5px 0;}\r\n.mrg-2{margin-bottom:10px;}\r\n.dropdown-menu > li > a {\r\n    display: block;\r\n    padding: 3px 20px;\r\n    clear: both;\r\n    font-weight: normal;\r\n    line-height: 25px;\r\n    color: #333333;\r\n    white-space: nowrap;\r\n}\r\n.addmodule {\r\n    padding: 20px 10px!important;\r\n    min-width: 357px;\r\n    right: 0px;\r\n    left: inherit;\r\n}\r\n.style{border:none;border-bottom: 1px solid #ccc;}\r\n.white {\r\n    background: #ffffff none repeat scroll 0 0;\r\n    \r\n    display: inline-block;\r\n    padding: 33px 25px;\r\n    width: 100%;\r\n}\r\n.btn-file{padding:0;}\r\n.white {\r\n    background: #ffffff none repeat scroll 0 0;\r\n    \r\n    display: inline-block;\r\n    padding: 33px 25px;\r\n    width: 100%;\r\n\tmargin-bottom:20px;\r\n}\r\n.center-bt{margin:20px auto 10px auto;float:none;}\r\n@media only screen and (max-width : 767px) {\r\n.mrg-2 {\r\n    margin-bottom: 37px;\r\n}\r\n\r\n.task ul li{    padding: 2px;}\t\r\n.addmodule{    min-width: 274px;}\r\n}\r\n.highlight{    background: rgb(247, 247, 247);\r\n    box-shadow: -4px 4px 35px #eaeaea;\r\n    border: 2px solid #f1ab7d;}\r\n\r\n\r\n    ul.breadcrumb {\r\n        padding: 10px 0;\r\n        list-style: none;\r\n    \r\n        text-align: left;\r\n        color: #d68956;\r\n    }\r\n    ul.breadcrumb li {\r\n        display: inline;\r\n        font-size: 15px;\r\n    }\r\n    ul.breadcrumb li+li:before {\r\n        padding: 8px;\r\n        color: black;\r\n        content: \"/\\A0\";\r\n    }\r\n    ul.breadcrumb li a {\r\n        color: #bbbbbb;\r\n        text-decoration: none;\r\n    }\r\n    ul.breadcrumb li a:hover {\r\n        color: #d68956;\r\n        text-decoration: none;\r\n    \r\n    }\r\n    .breadcrumb{    background-color: #f6f7fa;}    \r\n    mat-chip {\r\n        max-width: 150px;\r\n      }\r\n      .example-button-row {\r\n        display: -ms-flexbox;\r\n        display: flex;\r\n        -ms-flex-align: center;\r\n            align-items: center;\r\n        -ms-flex-pack: distribute;\r\n            justify-content: space-around;\r\n      }\r\n.bt{border-radius:30px;padding:3px 13px;border:1px solid #f37600;background:none;    font-size: 12px;\r\n    margin-top: 9px;}      \r\n    .modal-content{border-radius:0;box-shadow:none;}\r\n    .modal-header {\r\n        padding: 7px 15px;\r\n        border-bottom: 1px solid #e5e5e5;\r\n        background: #f37600;\r\n    }\r\n    .modal-title {\r\n        margin: 0;\r\n        line-height: 26px;\r\n        font-size: 15px;\r\n        color: #fff;\r\n    }\r\n    .tsk-lbl{\r\n        color: #828282;\r\n        font-size: 11px;\r\n        padding-top: 4px;\r\n        float: left;\r\n        white-space: pre;\r\n    }\r\n    .tsk-dt[_ngcontent-c1] {\r\n        margin: 0;\r\n        padding-top: 2px !important;\r\n        float: left;\r\n        \r\n    }", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-time-extension-request/company-time-extension-request.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n      <div class=\"row display-table-row\">\r\n    \r\n          <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n               <!-- sidebar-->\r\n             \r\n               <company-sidebar></company-sidebar> \r\n               <!-- end sidebar-->\r\n          </div>\r\n          \r\n          <div class=\"col-md-12 col-xs-12\">\r\n              <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n              <!-- topbar-->\r\n              <company-topbar></company-topbar> \r\n              \r\n                  <!-- end topbar-->\r\n              \r\n              \r\n              <div class=\"user-dashboard\">\r\n                  <h2>Request Management</h2>\r\n                  <ul class=\"breadcrumb\">\r\n                    <li><a routerLink=\"/\">Request Management</a></li>\r\n                    <li><a routerLink=\"/company-request-management\">Time Extension Request List</a></li>\r\n                    \r\n                    <li>Time Extension Request View</li>\r\n                  </ul>\r\n                 \r\n                  <div class=\"row\">\r\n                      \r\n            <div class=\"col-md-5 col-sm-12 col-xs-12 gutter \">\r\n             <div class=\"white\">\r\n               <div class=\"form-group\">\r\n                 <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Project Name</label></div>\r\n                 <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\">{{project?.project_name}}</label></div>\r\n               </div>\r\n               \r\n               <div class=\"form-group\">\r\n                 <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Project Code</label></div>\r\n                 <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\">{{project?.project_code}}</label></div>\r\n               </div>\r\n               \r\n               <div class=\"form-group\">\r\n                 <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Project Start Date</label></div>\r\n                 <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\">{{project?.planned_start_date | date:'EEE, d MMM,y'}}</label></div>\r\n               </div>\r\n              \r\n               <div class=\"form-group\">\r\n                 <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Team Members</label></div>\r\n               \r\n                \r\n                 <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\" *ngFor=\"let name of teammembers; \">{{name}}, </label></div>\r\n        \r\n              </div>\r\n     \r\n               <!-- <div class=\"form-group\">\r\n                 <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Remark</label></div>\r\n                 <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\">{{reqdetails?.remarks}}</label></div>\r\n               </div> -->\r\n\r\n               \r\n             </div>\r\n            </div>\r\n              <div class=\"col-md-7 col-sm-12 col-xs-12 gutter\">\r\n\r\n                           <div class=\"white\">\r\n               <div class=\"col-md-12 mrg-2\">\r\n                 <div class=\"col-md-4\">\r\n                   <label>\r\n                     Total Hours\r\n                   </label>\r\n                 </div>\r\n                 <div class=\"col-md-4 col-xs-5\">\r\n                   <!-- <input class=\"effect-1 style\" type=\"text\" placeholder=\"44:00 Hr\"> -->\r\n                   <span class=\"focus-border\">{{sum}} Hr</span>\r\n                 </div>\r\n\r\n               </div>\r\n               <div *ngFor=\"let task of myTasks; let i = index \">\r\n                  <div class=\"col-md-12 col-xs-12 pull-right\">\r\n                 <div class=\"task\">\r\n                   <div class=\"col-md-8 col-xs-7\">\r\n                     <h5>{{task.module_name}}</h5>\r\n                   </div>\r\n                   <div class=\"col-md-4 col-xs-5\">\r\n                     <ul class=\"taskedit\">\r\n                       <li>{{task.ttlModHour}}Hr</li>\r\n                      \r\n                     </ul>\r\n                   </div>\r\n                 </div>\r\n               </div>\r\n               <!---task end-->\r\n               <div *ngFor=\"let task1 of myTasks[i].tbl_project_tasks; let y = index\">\r\n               <div class=\"col-md-11 col-xs-12 pull-right\">\r\n                  <div *ngIf=\"task1?.id != reqdetails?.task_id\">\r\n                 <div class=\"task hash\">\r\n                  <div class=\"col-md-12\">\r\n                    <h5 class=\"mrgn-t\">{{task1.task_name}}</h5>\r\n                  </div> \r\n                   <div class=\"col-md-12 col-xs-12\">\r\n                     <ul class=\"\">\r\n                       <li><label for=\"\" class=\"tsk-lbl\">Assigned Person: </label><h5 class=\"tsk-dt\">{{task1?.tbl_user_profile.f_name}}</h5></li>\r\n                       <li><label for=\"\" class=\"tsk-lbl\">Hours: </label><h5 class=\"tsk-dt\">{{task1?.planned_hour + task1?.buffer_hour}} hrs</h5></li>\r\n                       <li><label for=\"\" class=\"tsk-lbl\">Start Date: </label><h5 class=\"tsk-dt\">{{task1?.planned_start_date_time | date:'medium'}}</h5></li>\r\n                       <li><label for=\"\" class=\"tsk-lbl\">End Date: </label><h5 class=\"tsk-dt\">{{task1?.planned_end_date_time | date:'medium'}}</h5></li>\r\n                      \r\n                       \r\n                     </ul>\r\n                   </div>\r\n                   \r\n                   <div class=\"clearfix\"></div>\r\n                 \r\n                 </div>\r\n\r\n                </div>\r\n                <div *ngIf=\"task1?.id == reqdetails?.task_id && (reqdetails?.req_status=='Pending' || (reqdetails?.req_status=='Approval' && role_id==1))  \">\r\n                <div class=\"task highlight\">\r\n                    <div class=\"col-md-3 col-xs-7\">\r\n                      <h5>{{task1.task_name}}</h5>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-xs-12\">\r\n                        <ul class=\"\">\r\n                          <li><label for=\"\" class=\"tsk-lbl\">Assigned Person: </label><h5 class=\"tsk-dt\">{{task1?.tbl_user_profile.f_name}}</h5></li>\r\n                          <li><label for=\"\" class=\"tsk-lbl\">Existing hours: </label><h5 class=\"tsk-dt\">{{oldtasktime}} hrs</h5></li>\r\n                          <li><label for=\"\" class=\"tsk-lbl\">Requested hours: </label><h5 class=\"tsk-dt\">{{reqdetails?.additional_hours}} hrs</h5></li>\r\n                          <li><label for=\"\" class=\"tsk-lbl\">Total Hours: </label><h5 class=\"tsk-dt\">{{task1?.planned_hour + task1?.buffer_hour}} hrs</h5></li>\r\n                          <li><label for=\"\" class=\"tsk-lbl\">Start Date: </label><h5 class=\"tsk-dt\">{{task1?.planned_start_date_time | date:'medium'}}</h5></li>\r\n                          <li><label for=\"\" class=\"tsk-lbl\">End Date: </label><h5 class=\"tsk-dt\">{{task1?.planned_end_date_time | date:'medium'}}</h5></li>\r\n                        </ul>\r\n                        \r\n                        <br>\r\n                        <div class=\"pull-right\">\r\n                          <button class=\"bt\"  (click)=\"getEditId(reqdetails?.id,reqdetails?.additional_hours,reqdetails?.task_id,task1?.tbl_user_profile.id,task1?.tbl_user_profile.cmp_id)\" data-toggle=\"modal\" data-target=\"#editModal\">Edit</button>\r\n                          <button class=\"bt\"  (click)=\"getIdinApprove(task1.id,task1.planned_hour,task1.buffer_hour,reqdetails.additional_hours,reqdetails?.id)\" data-toggle=\"modal\" data-target=\"#approvedModal\">Approve</button>\r\n                          <button class=\"bt\"  (click)=\"getId(reqdetails?.id)\" data-toggle=\"modal\" data-target=\"#rejectModal\">Reject</button>\r\n                          <button *ngIf=\"sendtoAdminBtnShow\" class=\"bt\" (click)=\"getId(reqdetails?.id)\" data-toggle=\"modal\" data-target=\"#sendtoadminModal\">Send to admin</button>\r\n                          \r\n                        </div>  \r\n                      </div>\r\n                    <div class=\"clearfix\"></div>\r\n                    \r\n                  </div>\r\n\r\n                 </div>\r\n               </div>\r\n              </div>\r\n            </div>\r\n               <!---task end-->\r\n        \r\n               <div class=\"clearfix\"></div> \r\n              \r\n                               \r\n                           </div>\r\n                       </div>\r\n\r\n\r\n<!-- --------------------------------------------- edit modal ----------------------------------------------------------------- -->\r\n  \r\n\r\n<div id=\"editModal\" class=\"modal fade\">\r\n  <div class=\"modal-dialog\">\r\n\r\n    <!-- Modal content-->\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn1>&times;</button>\r\n        <h4 class=\"modal-title\">Edit Requested Time</h4>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n          <form  role=\"form\"  #f=\"ngForm\" (ngSubmit)=\"updateReqtime(reqtime);\" novalidate>\r\n          \r\n                  <div class=\"col-md-11\">\r\n                 \r\n                            \r\n                      <div class=\"form-group\" >\r\n                          \r\n                 \r\n                            <div class=\"col-md-5 paddtop\">\r\n                                <label>Old Time</label>\r\n                             </div> \r\n                             <div class=\"col-md-6\">\r\n                           \r\n                                  <label>{{oldtasktime}} hrs</label>\r\n                        \r\n                             </div>\r\n                             <div class=\"clearfix\"></div>\r\n    \r\n                              <div class=\"col-md-5 paddtop\">\r\n                                  <label>Requested Time</label>\r\n                               </div>\r\n                               <div class=\"col-md-6\">\r\n                                  <mat-form-field>\r\n                                      <input matInput type=\"number\" name =\"additional_hr\" [(ngModel)]=\"reqtime.additional_hr\"  required>\r\n                                      \r\n                                   </mat-form-field>\r\n                               </div>\r\n                               <div class=\"clearfix\"></div>\r\n                         \r\n                               \r\n                              \r\n                        </div>\r\n                        \r\n                    <br>\r\n          \r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-4\">\r\n                        <button type=\"submit\" [disabled]=\"btnDisbled\" class=\"btn round-button\">Submit</button>\r\n      \r\n                      </div>\r\n                      <!-- <div class=\"col-md-8\" *ngIf=\"showSpinner\">\r\n                        <svg class=\"svgclass\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                          x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\"\r\n                          xml:space=\"preserve\">\r\n                          <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                            <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n                            />\r\n                          </path>\r\n                        </svg>\r\n                      </div> -->\r\n      \r\n                    </div>\r\n      \r\n                 \r\n                  </div>\r\n                 \r\n                \r\n             \r\n      </form>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n<!-----------------------------------------------------------------edit modal-------------------------------------->\r\n<!-------------------approve modal---------------------------------->\r\n<div id=\"approvedModal\" class=\"modal fade\" role=\"dialog\">\r\n  <div class=\"modal-dialog\">\r\n\r\n    <!-- Modal content-->\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\"  #closeBtn>&times;</button>\r\n        <h4 class=\"modal-title\">Approve </h4>\r\n      </div>\r\n      <!-- <div class=\"modal-header\"> -->\r\n      <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n      <!-- </div> -->\r\n      <div class=\"modal-body delete-popup\">\r\n        <!-- <i class=\"fa fa-exclamation\"></i> -->\r\n\r\n\r\n        <h4 class=\"textalign\">Do you wish to continue?</h4>\r\n\r\n      </div>\r\n\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" (click)=\"approved(id)\" class=\"btn round-button\" data-dismiss=\"modal\">Yes</button>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n<!-------------------approve end modal---------------------------------->\r\n<!-------------------reject modal---------------------------------->\r\n<div id=\"rejectModal\" class=\"modal fade\" role=\"dialog\">\r\n  <div class=\"modal-dialog\">\r\n\r\n    <!-- Modal content-->\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\"  #closeBtn2>&times;</button>\r\n        <h4 class=\"modal-title\">Reject Modal </h4>\r\n      </div>\r\n      <!-- <div class=\"modal-header\"> -->\r\n      <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n      <!-- </div> -->\r\n      <div class=\"modal-body delete-popup\">\r\n        <!-- <i class=\"fa fa-exclamation\"></i> -->\r\n\r\n\r\n        <h4 class=\"textalign\">Do you wish to continue?</h4>\r\n\r\n      </div>\r\n\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" (click)=\"rejecttimeextreq(id)\" class=\"btn round-button\" data-dismiss=\"modal\">Yes</button>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n<!-------------------reject modal---------------------------------->\r\n  <!-------------------sendtoadminModal---------------------------------->\r\n<div id=\"sendtoadminModal\" class=\"modal fade\" role=\"dialog\">\r\n  <div class=\"modal-dialog\">\r\n\r\n    <!-- Modal content-->\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn3>&times;</button>\r\n        <h4 class=\"modal-title\">Send to Admin </h4>\r\n      </div>\r\n      <!-- <div class=\"modal-header\"> -->\r\n      <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n      <!-- </div> -->\r\n      <div class=\"modal-body delete-popup\">\r\n        <!-- <i class=\"fa fa-exclamation\"></i> -->\r\n\r\n\r\n        <h4 class=\"textalign\">Do you wish to continue?</h4>\r\n\r\n      </div>\r\n\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" (click)=\"sendtoadmin(id)\" class=\"btn round-button\" data-dismiss=\"modal\">Yes</button>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n<!-------------------sendtoadminModal---------------------------------->\r\n    <!-------------------sendtoadminModal---------------------------------->\r\n<div id=\"approveModal\" class=\"modal fade\" role=\"dialog\">\r\n  <div class=\"modal-dialog\">\r\n\r\n    <!-- Modal content-->\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn3>&times;</button>\r\n        <h4 class=\"modal-title\">Approved </h4>\r\n      </div>\r\n      <!-- <div class=\"modal-header\"> -->\r\n      <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n      <!-- </div> -->\r\n      <div class=\"modal-body delete-popup\">\r\n        <!-- <i class=\"fa fa-exclamation\"></i> -->\r\n\r\n\r\n        <h4 class=\"textalign\">Do you whish to continue?</h4>\r\n\r\n      </div>\r\n\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" (click)=\"approved(id)\" class=\"btn round-button\" data-dismiss=\"modal\">Yes</button>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n<!-------------------sendtoadminModal---------------------------------->\r\n  </div>\r\n\r\n    </div>\r\n              \r\n          </div>\r\n              <!-- footer-->\r\n              <company-footer></company-footer>\r\n     <!-- end footer-->\r\n      </div>\r\n       </div>\r\n      <!-- Modal -->\r\n   </body>"

/***/ }),

/***/ "../../../../../src/app/components/company-time-extension-request/company-time-extension-request.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyTimeExtensionRequestComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CompanyTimeExtensionRequestComponent = (function () {
    function CompanyTimeExtensionRequestComponent(_activatedRoute, companyService, routes, snackBar) {
        this._activatedRoute = _activatedRoute;
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.arr1 = [];
        this.myNewTasks = [];
        this.tmp = [];
        this.reqModuleindex = 0;
        this.sendtoAdminBtnShow = true;
        this.reqtime = { additional_hr: '', req_id: '', task_id: '', userid: '', cmp_id: '' };
        this.showSpinner = false;
        this.aditionRequest = {
            newTotalHr: 0,
            taskId: 0,
            reqId: 0,
            planned_start_date_time: '',
            planned_end_date_time: ''
        };
    }
    CompanyTimeExtensionRequestComponent.prototype.ngOnInit = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : Get logged in entity
        // Params        : 
        // Returns       : Get logged in entity
        // Author        : Rinsha
        // Date          : 08-03-2018
        // Last Modified : 08-03-2018, Rinsha
        // Desc          :  
        this.companyService.getLoggedinEntity().subscribe(function (data) {
            _this.login_id = data.id;
        });
        // -----------------------------------End------------------------------------------
        this.getUserid();
    };
    CompanyTimeExtensionRequestComponent.prototype.getUserid = function () {
        //   this.sub = this.route.params.subscribe(params => {
        //     this.surveyId = params['id2'];
        //     this.userId = params['id1'];
        //  });
        var _this = this;
        this._activatedRoute.params.subscribe(function (params) {
            _this.reqId = params['id1'];
            _this.projId = params['id2'];
            // console.log( this.reqId, this.projId)
        });
        this.companyService.gettimerequest(this.reqId, this.projId).subscribe(function (res) {
            // console.log(res);
            _this.project = res.project;
            if (_this.project.assignee_id == _this.project.pm_id) {
                _this.sendtoAdminBtnShow = false;
            }
            _this.reqdetails = res.reqdetails;
            _this.teammembers = res.teammembers;
            _this.myTasks = res.myTasks;
            _this.requestedUser = res.requestedUser;
            _this.additional_hours = _this.reqdetails.additional_hours;
            var checkTask = false;
            var assignedUser = '';
            var modifiedTaskStartDateTime = '';
            // let resultIndex = 0;
            _this.tmp = [];
            _this.myTasks.forEach(function (element, key) {
                var modifTasks = [];
                _this.module_time = 0;
                _this.totalhr = 0;
                element.tbl_project_tasks.forEach(function (elm_tasks, key1) {
                    if (elm_tasks.id == _this.reqdetails.task_id) {
                        _this.oldtasktime = (elm_tasks.planned_hour + elm_tasks.buffer_hour);
                        _this.module_time = _this.module_time + elm_tasks.planned_hour + elm_tasks.buffer_hour + _this.reqdetails.additional_hours;
                        assignedUser = elm_tasks.assigned_to_id;
                        checkTask = true;
                        modifiedTaskStartDateTime = elm_tasks.planned_start_date_time;
                    }
                    else {
                        _this.module_time = _this.module_time + elm_tasks.planned_hour + elm_tasks.buffer_hour;
                    }
                    if (checkTask) {
                        if (assignedUser == elm_tasks.assigned_to_id) {
                            if (elm_tasks.id == _this.reqdetails.task_id) {
                                elm_tasks.planned_hour_old = elm_tasks.planned_hour;
                                elm_tasks.planned_hour += _this.reqdetails.additional_hours;
                                _this.reqModuleindex = key;
                            }
                            elm_tasks.assigned_person = { id: elm_tasks.assigned_to_id };
                            modifTasks.push(elm_tasks);
                            _this.tmp.push({ 'modIdnx': key, 'keyIdnx': key1 });
                            // resultIndex++;
                        }
                    }
                });
                _this.myTasks[key].tbl_estimation_tasks = modifTasks;
                if (modifTasks.length > 0) {
                    _this.myNewTasks.push(_this.myTasks[key]);
                }
                _this.myTasks[key].ttlModHour = _this.module_time;
                _this.arr1.push(_this.module_time);
                _this.sum = _this.arr1.reduce(function (a, b) { return a + b; }, 0);
            });
            console.log(_this.tmp);
            _this.requestedUser.start_date = modifiedTaskStartDateTime;
            var modifiedTaskStartTime = new Date(modifiedTaskStartDateTime);
            var hr = modifiedTaskStartTime.getHours();
            var mnt = modifiedTaskStartTime.getMinutes();
            var sec = modifiedTaskStartTime.getSeconds();
            _this.requestedUser.start_time = {
                hour: hr,
                minute: mnt,
                second: sec
            };
            _this.calculateUpdatedTaskTime();
        });
    };
    CompanyTimeExtensionRequestComponent.prototype.calculateUpdatedTaskTime = function () {
        var _this = this;
        var data = { modules: this.myNewTasks, teamMembers: [this.requestedUser] };
        console.log(data);
        this.companyService.getUserleavedataplanning(data).subscribe(function (data) {
            console.log(data);
            var Indexx = 0;
            if (data.data) {
                data.data.forEach(function (element) {
                    element.tbl_estimation_tasks.forEach(function (elm_tasks, key1) {
                        var mdinx = _this.tmp[key1].modIdnx;
                        var tskinx = _this.tmp[key1].keyIdnx;
                        console.log(elm_tasks.start_date_time_new);
                        _this.myTasks[mdinx].tbl_project_tasks[tskinx].planned_start_date_time = elm_tasks.start_date_time_new;
                        console.log(_this.myTasks[mdinx].tbl_project_tasks[tskinx].planned_start_date_time);
                        _this.myTasks[mdinx].tbl_project_tasks[tskinx].planned_end_date_time = elm_tasks.end_date_time;
                        _this.aditionRequest.planned_start_date_time = elm_tasks.start_date_time_new;
                        _this.aditionRequest.planned_end_date_time = elm_tasks.end_date_time;
                        console.log(_this.myTasks);
                    });
                });
            }
            else {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    CompanyTimeExtensionRequestComponent.prototype.getId = function (id) {
        // this.showSpinner =false
        // this.showSpinnerDelete =false
        this.id = id;
        //  console.log(this.id)
    };
    CompanyTimeExtensionRequestComponent.prototype.getIdinApprove = function (taskid, planned_hour1, buffer_hour, additional_hours, reqId) {
        this.aditionRequest.taskId = taskid;
        this.aditionRequest.newTotalHr = planned_hour1;
        this.aditionRequest.reqId = reqId;
    };
    //rejecttimeextreq
    CompanyTimeExtensionRequestComponent.prototype.rejecttimeextreq = function (id) {
        var _this = this;
        // console.log(id);
        this.showSpinner = true;
        this.companyService.Rejecttimeextreq(id).subscribe(function (data) {
            if (data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.closeBtn2.nativeElement.click();
                _this.routes.navigate(['/company-request-management']);
            }
            else {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    //sendtoadminModal
    CompanyTimeExtensionRequestComponent.prototype.sendtoadmin = function (id) {
        var _this = this;
        // console.log(id);
        this.showSpinner = true;
        this.companyService.Sendtoadmin(id).subscribe(function (data) {
            if (data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.closeBtn3.nativeElement.click();
                _this.routes.navigate(['/company-request-management']);
            }
            else {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    CompanyTimeExtensionRequestComponent.prototype.getEditId = function (id1, id2, id3, id4, id5) {
        this.reqtime.req_id = id1;
        this.reqtime.additional_hr = id2;
        this.reqtime.task_id = id3;
        this.reqtime.userid = id4;
        this.reqtime.cmp_id = id5;
    };
    CompanyTimeExtensionRequestComponent.prototype.updateReqtime = function (reqtime) {
        if (typeof (reqtime.additional_hr) !== 'number') {
            var snackBarRef = this.snackBar.open("Invalid!, Please fill the time in digits", '', {
                duration: 2000
            });
        }
        else {
            this.myTasks[this.reqModuleindex].tbl_estimation_tasks[0].planned_hour = parseInt(this.myTasks[this.reqModuleindex].tbl_estimation_tasks[0].planned_hour_old) + parseInt(this.reqtime.additional_hr);
            this.calculateUpdatedTaskTime();
            this.showSpinner = true;
            this.closeBtn1.nativeElement.click();
        }
    };
    //approved    
    CompanyTimeExtensionRequestComponent.prototype.approved = function () {
        var _this = this;
        this.companyService.ApprovedTimeextension(this.aditionRequest).subscribe(function (data) {
            //  console.log("data");
            if (data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.closeBtn.nativeElement.click();
                _this.routes.navigate(['/company-request-management']);
            }
            else {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])('closeBtn'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_core__["ElementRef"])
    ], CompanyTimeExtensionRequestComponent.prototype, "closeBtn", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])('closeBtn1'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_core__["ElementRef"])
    ], CompanyTimeExtensionRequestComponent.prototype, "closeBtn1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])('closeBtn2'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_core__["ElementRef"])
    ], CompanyTimeExtensionRequestComponent.prototype, "closeBtn2", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["ViewChild"])('closeBtn3'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_core__["ElementRef"])
    ], CompanyTimeExtensionRequestComponent.prototype, "closeBtn3", void 0);
    CompanyTimeExtensionRequestComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_1__angular_core__["Component"])({
            selector: 'company-time-extension-request',
            template: __webpack_require__("../../../../../src/app/components/company-time-extension-request/company-time-extension-request.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-time-extension-request/company-time-extension-request.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__angular_router__["ActivatedRoute"],
            __WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_0__angular_material__["z" /* MatSnackBar */]])
    ], CompanyTimeExtensionRequestComponent);
    return CompanyTimeExtensionRequestComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-topbar/company-topbar.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".drp2 .dropdown-menu{padding:0;right:-3%;left:inherit;max-width: 297px;}\r\n.drp2 .dropdown-menu li a{padding:15px 20px;}\r\n.drp2 .navbar-content{text-align:left;}\r\n.drp2 .dropdown-menu li{width:100%;}\r\n.drp2 .dropdown-menu > li > a:hover p{color:#fff !important;}\r\n.dropdown-menu{margin-bottom:0;}\r\nheader .dropdown-menu{top: 207%;}\r\n.dropdown-menu p {\r\n    margin: 0 0 0px;\r\n}\r\n.drp2 .dropdown-menu h4{margin-bottom: 2px;\r\n    color: #000;\r\n    font-weight: 500;\r\n    font-family: arial;}\r\n.media-heading{font-size:16px;}\r\n.closbtn{\r\n    border-radius: 50%;\r\n    height: 15px;\r\n    width: 15px;\r\n    padding-top: 0; \r\n    margin-right: 12px;\r\n    line-height: 13px;\r\n    font-size: 9px;\r\n    padding: 0;\r\n    text-align: center;\r\n    margin-top: 0;\r\n    background: #fe6a07;\r\n    border: none;\r\n}\r\n.dropdown-menu .divider {\r\n    height: 1px;\r\n    margin: 0px 0;\r\n    overflow: hidden;\r\n    background-color: #e5e5e5;\r\n}\r\n.head{background: #FFFFFF;color:#fff !important;}\r\n.head>a{color:#686868 !important;}\r\n.content{\r\n    text-decoration: none;\r\n}\r\n.dropdown-menu>li>a:hover h4{color:#fff;}\r\n.drp2 .dropdown-menu > li > a{white-space:normal !important;}\r\n.drp2 .dropdown-menu{    min-width: 324px;}\r\n.drp2 p{line-height: 18px;margin-top: 10px;}\r\n.drp2 li{padding: 0px 0;}\r\n.media-heading {font-size: 15px;\r\ncolor: #8a8a8a;\r\nfont-weight: 600;    margin-top: 2px;}\r\n.drp2 li a{padding:7px 0px !important;color:#909090;}\r\n.ng-star-inserted:hover{background:#f3f3f3;}\r\n.ng-star-inserted{}\r\n.drp2 h4{padding: 0px 20px;    font-weight: 700 !important;\r\n    font-family: arial;\r\n    font-size: 15px;\r\n    color:#ffffff !important;\r\n    margin-top:0px;\r\n    margin-bottom:0;\r\n    background: #919aa0;\r\n    padding: 14px 20px;\r\n    \r\n}\r\n.ng-star-inserted:hover {\r\n    background: #ffff;\r\n}\r\n.overlay{    position: fixed;\r\n    z-index: 100;\r\n    background: rgba(0,0,0, 0.6);\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    padding: 10% 20%;}\r\n    .overlay:hover{background: rgba(0,0,0, 0.6);}\r\nbody{position:relative;}\r\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-topbar/company-topbar.component.html":
/***/ (function(module, exports) {

module.exports = "<!-- <div class=\"row\">\r\n  <header>\r\n      \r\n      <div class=\"col-md-5 pull-right\">\r\n          <div class=\"header-rightside\">\r\n              <ul class=\"list-inline header-top pull-right\">\r\n                  <li class=\"\"><a href=\"#\" class=\"add-project\">Add Project</a></li>\r\n                  \r\n                  <li class=\"dropdown\">\r\n                    <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fa fa-bell\" aria-hidden=\"true\"></i>\r\n                        <b class=\"caret\"></b></a>\r\n                    <ul class=\"dropdown-menu\" *ngIf=\"showNotifications\">\r\n                        <li *ngFor=\"let items of newTaskreq\">\r\n                            <a routerLink=\"/company-task-requests\">\r\n                                <h4>New Task Request</h4>\r\n                                <h5>{{items.tbl_new_task_request.tbl_project_module.tbl_project.project_nam}}</h5>\r\n                                <h5>{{items.tbl_new_task_request.tbl_user_profile.f_name}} {{items.tbl_new_task_request.tbl_user_profile.l_name}}</h5>\r\n                            </a>\r\n                        </li>\r\n                        <li *ngFor=\"let item of notifications.back\">\r\n                                <a routerLink=\"/company-task-requests\">\r\n                                    <h4>New Task Approval Request</h4>\r\n                                    <h5>{{item.tbl_new_task_request.tbl_project_module.tbl_project.project_nam}}</h5>\r\n                                    <h5>{{items.tbl_new_task_request.tbl_user_profile.f_name}} {{items.tbl_new_task_request.tbl_user_profile.l_name}}</h5>\r\n                                    <h5>Status: {{items.tbl_new_task_request.request_status}}</h5>\r\n                                </a>\r\n                            </li>\r\n                    </ul>\r\n                </li>\r\n                  <li class=\"dropdown\">\r\n                      <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                          <b class=\"caret\"></b></a>\r\n                      <ul class=\"dropdown-menu\">\r\n                          <li>\r\n                              <div class=\"navbar-content\">\r\n                                  <span>JS Krishna</span>\r\n                                  <p class=\"text-muted small\">\r\n                                      me@jskrishna.com\r\n                                  </p>\r\n                                  <div class=\"divider\">\r\n                                  </div>\r\n                                  <a href=\"#\" class=\"view btn-sm active\">View Profile</a>\r\n                              </div>\r\n                          </li>\r\n                      </ul>\r\n                  </li>\r\n                  <li><a href=\"#\"><i class=\"fa fa-power-off\" aria-hidden=\"true\"></i></a></li>\r\n              </ul>\r\n          </div>\r\n      </div>\r\n  </header>\r\n</div> -->\r\n<div class=\"overlay\" *ngIf=\"(countOverlay-overlaynotfSrv.notifReadCount) > 0\" >\r\n        <div class=\"row\">\r\n            <div class=\"alert-group\">\r\n \r\n                <div *ngFor=\"let item of project\" class=\"alert alert-warning alert-dismissable\" >\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\" (click)=\"closeoverlayNotif('Alert Viewed : New project assigned ' + item.project_name ,item.id)\">×</button>\r\n                    <h4>New Project </h4>\r\n                    <div >\r\n                            <h5 class=\"media-heading\">You are assignd for a new project : {{item.project_name}}</h5>\r\n                    </div>\r\n                </div>\r\n              \r\n               \r\n                <div *ngFor=\"let list of estimationApproval\" class=\"alert alert-warning alert-dismissable\" >\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\" (click)=\"closeoverlayNotif('Alert Viewed : Estimation Approval of ' + list.tbl_project.project_name  , list.tbl_project.id)\">×</button>\r\n                    <h4>Estimation Approval</h4>\r\n                    <div >\r\n                        <h5 class=\"media-heading\">Approve the Estimation : {{list.tbl_project.project_name}}</h5>\r\n                    </div>\r\n                </div>\r\n              \r\n               \r\n                <div *ngFor=\"let item1 of resubmitEstimation\" class=\"alert alert-warning alert-dismissable\" >\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\" (click)=\"closeoverlayNotif('Alert Viewed : Re-estimate the project ' + item1.project_name  , item1.id)\">×</button>\r\n                    <h4>Estimation Resubmit</h4>\r\n                    <div >\r\n                        <h5 class=\"media-heading\">Re-estimate the project : {{item1.project_name}}</h5>    \r\n                    </div>\r\n                </div>\r\n              \r\n               \r\n                <div *ngFor=\"let item2 of approveProject\" class=\"alert alert-warning alert-dismissable\" >\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\" (click)=\"closeoverlayNotif('Alert Viewed : Approve the project ' + item2.project_name  , item2.id)\">×</button>\r\n                    <h4>Project Approve</h4>\r\n                    <div >\r\n                        <h5 class=\"media-heading\">Approve the project: {{item2.project_name}}</h5>    \r\n                    </div>\r\n                </div>\r\n              \r\n               \r\n                <div *ngFor=\"let item3 of planProject\" class=\"alert alert-warning alert-dismissable\" >\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\" (click)=\"closeoverlayNotif('Alert Viewed : Plan the project ' + item3.project_name  , item3.id)\">×</button>\r\n                    <h4>Project Plan</h4>\r\n                    <div >\r\n                        <h5 class=\"media-heading\">Plan the project : {{item3.project_name}}</h5>\r\n                    </div>\r\n                </div>\r\n\r\n              <div *ngIf=\"dispStatus\">\r\n               \r\n                <div  *ngFor=\"let items of newTaskreq\" class=\"alert alert-warning alert-dismissable\" >\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\" (click)=\"closeoverlayNotif('Alert Viewed : New task request for project ' + items.tbl_new_task_request?.tbl_project_module?.tbl_project?.project_nam + ' by ' + items.tbl_new_task_request?.tbl_user_profile?.f_name + ' ' +  items.tbl_new_task_request?.tbl_user_profile?.l_name  , items.tbl_new_task_request?.tbl_project_module?.tbl_project.id)\">×</button>\r\n                    <h4>New Task Requests</h4>\r\n                    <div >\r\n                        <h5 class=\"media-heading\">Project: {{items.tbl_new_task_request?.tbl_project_module?.tbl_project?.project_nam}}</h5>\r\n                        <h5 class=\"media-heading\">Requester: {{items.tbl_new_task_request?.tbl_user_profile?.f_name}} {{items.tbl_new_task_request?.tbl_user_profile?.l_name}}</h5>\r\n                    </div>\r\n                </div>\r\n              \r\n               \r\n                <div *ngFor=\"let items of newTaskApp\" class=\"alert alert-warning alert-dismissable\" >\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\" (click)=\"closeoverlayNotif('Alert Viewed : New task approval request for project ' + items.tbl_new_task_request?.tbl_project_module?.tbl_project?.project_nam + ' by ' + items.tbl_new_task_request?.tbl_user_profile?.f_name + ' ' +  items.tbl_new_task_request?.tbl_user_profile?.l_name  , items.tbl_new_task_request?.tbl_project_module?.tbl_project.id)\">×</button>\r\n                    <h4>New Task Approval </h4>\r\n                    <div >\r\n                        <h5 class=\"media-heading\">Project: {{items.tbl_new_task_request?.tbl_project_module?.tbl_project?.project_nam}}</h5>\r\n                        <h5 class=\"media-heading\">Requester: {{items.tbl_new_task_request?.tbl_user_profile?.f_name}} {{items.tbl_new_task_request?.tbl_user_profile?.l_name}}</h5>\r\n                        <h5 class=\"media-heading\">Status: {{items.tbl_new_task_request?.request_status}}</h5>\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n               \r\n                <div *ngFor=\"let items of timeextreqdata\" class=\"alert alert-warning alert-dismissable\" >\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\" (click)=\"closeoverlayNotif('Alert Viewed : Time Extension Requests for project ' + items?.xt?.tbl_project_task?.tbl_project_module?.tbl_project?.project_name + ' by ' + items?.xt?.tbl_project_task?.tbl_user_profile?.f_name + ' ' +  items?.xt?.tbl_project_task?.tbl_user_profile?.f_name?.l_name , items?.xt?.tbl_project_task?.tbl_project_module?.tbl_project?.id)\">×</button>\r\n                    <h4>Time Extension Requests</h4>\r\n                    <div >\r\n                        <h5 class=\"media-heading\">Project: {{items?.xt?.tbl_project_task?.tbl_project_module?.tbl_project?.project_name}}</h5>\r\n                        <h5 class=\"media-heading\">Requester: {{items?.xt?.tbl_project_task?.tbl_user_profile?.f_name}} {{items?.xt?.tbl_project_task?.tbl_user_profile?.f_name?.l_name}}</h5>\r\n                    </div>\r\n                </div>\r\n                <div *ngFor=\"let list of projVerfNotif\" class=\"alert alert-warning alert-dismissable\" >\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\" (click)=\"closeoverlayNotif('Alert Viewed : Project ' + list.project_name + ' Completed, Approve project ', list?.id)\">×</button>\r\n                    <h4>Approve completed project </h4>\r\n                    <div >\r\n                        <h5 class=\"media-heading\">Project {{list.project_name}} Completed, Approve project</h5>\r\n                    </div>\r\n                </div>\r\n              \r\n            </div>\r\n        </div>\r\n    </div>\r\n<div class=\"row\">\r\n    <header>\r\n        <!-- --------------------------------------------- logout confirmation ----------------------------------------------------------------- -->\r\n        <div id=\"confirmation\" class=\"modal fade\" role=\"dialog\">\r\n            <div class=\"modal-dialog\">\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                        <h4 class=\"modal-title\">Logout </h4>\r\n                    </div>\r\n                    <!-- <div class=\"modal-header\"> -->\r\n                    <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n                    <!-- </div> -->\r\n                    <div class=\"modal-body delete-popup\">\r\n                        <i class=\"fa fa-exclamation\"></i>\r\n                        <h4 class=\"textalign\">Are you sure?</h4>\r\n                    </div>\r\n                    <div class=\"modal-footer\" style=\"text-align:center;\">\r\n                        <button type=\"button\" (click)=\"logout()\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Logout</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- --------------------------------------------- logout confirmation  ----------------------------------------------------------------- -->\r\n\r\n        <div class=\"col-md-5 pull-right\">\r\n            <div class=\"header-rightside\">\r\n                <ul class=\"list-inline header-top pull-right\">\r\n                    <li *ngIf=\"upgradeBtnShow\" class=\"\">\r\n                        <a [routerLink]=\"['/planlist']\" class=\"add-project\">Upgrade</a>\r\n                    </li>\r\n                    <li class=\"\">\r\n                        <a [routerLink]=\"['/add-project']\" class=\"add-project\">Add Project</a>\r\n                    </li>\r\n\r\n                    <li class=\"dropdown drp2\" *ngIf=\"dispStatus\">\r\n                        <a class=\"icon-info dropdown-toggle\" data-toggle=\"dropdown\">\r\n                            <i class=\"fa fa-bell\" aria-hidden=\"true\"></i>\r\n                            <span class=\"label label-primary\">{{count}}</span>\r\n\r\n                        </a>\r\n\r\n                        <ul class=\"dropdown-menu\">\r\n\r\n                            <li class=\"head\">\r\n                                <div class=\"navbar-content\">\r\n                                    <h4>New Project Notification</h4>\r\n                                    <div *ngFor=\"let item of project\">\r\n                                        <a (click)=\"closeNotif(item.id)\" [routerLink]=\"['/assign-project', item.id]\">\r\n                                            <div class='exclusaoNotificacao pull-right'>\r\n                                                <button class='btn btn-danger btn-xs button_exclusao closbtn' (click)=\"closeNotif(item.id)\">x</button>\r\n                                            </div>\r\n                                            <h5 class=\"media-heading\">{{item.project_name}}</h5>\r\n                                            <p>\r\n                                                <a class=\"content\">You are assignd for a new project. Click here to assign team heads.</a>\r\n                                            </p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <div class=\"divider\"> </div>\r\n\r\n                            <li class=\"head\">\r\n                                <div class=\"navbar-content\">\r\n                                    <h4>Estimation Approval Notification</h4>\r\n                                    <div *ngFor=\"let list of estimationApproval\">\r\n                                        <a (click)=\"closeNotif2(list.id)\" [routerLink]=\"['/approve-estimation', list.tbl_project.id]\">\r\n                                            <div class='exclusaoNotificacao pull-right'>\r\n                                                <button class='btn btn-danger btn-xs button_exclusao closbtn' (click)=\"closeNotif2(list.id)\">x</button>\r\n                                            </div>\r\n                                            <h5 class=\"media-heading\">{{list.tbl_project.project_name}}</h5>\r\n                                            <p>\r\n                                                <a class=\"content\">Click here to approve the Estimation</a>\r\n                                            </p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <div class=\"divider\"> </div>\r\n\r\n                            <li class=\"head\">\r\n                                <div class=\"navbar-content\">\r\n                                    <h4>Estimation Resubmit Notification</h4>\r\n                                    <div *ngFor=\"let item1 of resubmitEstimation\">\r\n                                        <a (click)=\"closeNotif(item1.id)\" [routerLink]=\"['/approve-estimation', item1.id]\">\r\n                                            <div class='exclusaoNotificacao pull-right'>\r\n                                                <button class='btn btn-danger btn-xs button_exclusao closbtn' (click)=\"closeNotif(item1.id)\">x</button>\r\n                                            </div>\r\n                                            <h5 class=\"media-heading\">{{item1.project_name}}</h5>\r\n                                            <p>\r\n                                                <a class=\"content\">Click here to re-estimate the project.</a>\r\n                                            </p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <div class=\"divider\"> </div>\r\n\r\n                            <li class=\"head\">\r\n                                <div class=\"navbar-content\">\r\n                                    <h4>Project Approve Notification</h4>\r\n                                    <div *ngFor=\"let item2 of approveProject\">\r\n                                        <a (click)=\"closeNotif3(item2.id)\" [routerLink]=\"['/approve-project', item2.id]\">\r\n                                            <div class='exclusaoNotificacao pull-right'>\r\n                                                <button class='btn btn-danger btn-xs button_exclusao closbtn' (click)=\"closeNotif3(item2.id)\">x</button>\r\n                                            </div>\r\n                                            <h5 class=\"media-heading\">{{item2.project_name}}</h5>\r\n                                            <p>\r\n                                                <a class=\"content\">Click here to approve the project.</a>\r\n                                            </p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <div class=\"divider\"> </div>\r\n\r\n                            <li class=\"head\">\r\n                                <div class=\"navbar-content\">\r\n                                    <h4>Project Plan Notification</h4>\r\n                                    <div *ngFor=\"let item3 of planProject\">\r\n                                        <a (click)=\"closeNotif4(item3.id)\" [routerLink]=\"['/project-planning', item3.id]\">\r\n                                            <div class='exclusaoNotificacao pull-right'>\r\n                                                <button class='btn btn-danger btn-xs button_exclusao closbtn' (click)=\"closeNotif4(item3.id)\">x</button>\r\n                                            </div>\r\n                                            <h5 class=\"media-heading\">{{item3.project_name}}</h5>\r\n                                            <p>\r\n                                                <a class=\"content\">Click here to plan the project.</a>\r\n                                            </p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <div class=\"divider\"> </div>\r\n                            <!------------------------------------------>\r\n                            <li class=\"head\">\r\n                                <div class=\"navbar-content\">\r\n                                    <h4>Leave Request</h4>\r\n                                    <div *ngFor=\"let item5 of userpendingdata\">\r\n                                        <a (click)=\"closeNotif5(item5.id)\" [routerLink]=\"['/company-user-leave-request', item5.id]\">\r\n                                            <div class='exclusaoNotificacao pull-right'>\r\n                                                <button class='btn btn-danger btn-xs button_exclusao closbtn' (click)=\"closeNotif5(item5.id)\">x</button>\r\n                                            </div>\r\n                                            <h5 class=\"media-heading\">{{item5.tbl_user_profile.f_name}}</h5>\r\n                                            <p>\r\n                                                <a class=\"content\">Click here to view leave details.</a>\r\n                                            </p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <div class=\"divider\"> </div>\r\n                            <li class=\"head\">\r\n                                <div class=\"navbar-content\">\r\n                                    <h4>New Task Requests</h4>\r\n                                    <ng-container *ngIf=\"dispStatus\">\r\n                                        <div *ngFor=\"let items of newTaskreq\">\r\n                                            <a (click)=\"closeNotifReq(items.id)\" [routerLink]=\"['/company-task-manage', items.id]\">\r\n                                                <div class='exclusaoNotificacao pull-right'>\r\n                                                    <button class='btn btn-danger btn-xs button_exclusao closbtn' (click)=\"closeNotifReq(items.id)\">x</button>\r\n                                                </div>\r\n                                                <h5>Project: {{items.tbl_new_task_request?.tbl_project_module?.tbl_project?.project_nam}}</h5>\r\n                                                <h5>Requester: {{items.tbl_new_task_request?.tbl_user_profile?.f_name}} {{items.tbl_new_task_request?.tbl_user_profile?.l_name}}</h5>\r\n                                                <p>\r\n                                                    <a class=\"content\">Click here to view.</a>\r\n                                                </p>\r\n                                            </a>\r\n                                        </div>\r\n                                    </ng-container>\r\n\r\n                                </div>\r\n                            </li>\r\n                            <div class=\"divider\"> </div>\r\n                            <li class=\"head\">\r\n                                <div class=\"navbar-content\">\r\n                                    <h4>New Task Approval</h4>\r\n                                    <ng-container *ngIf=\"dispStatus\">\r\n                                        <div *ngFor=\"let items of newTaskApp\">\r\n                                            <a (click)=\"closeNotifAproval(items.id)\" [routerLink]=\"['/company-task-manage', items?.id]\">\r\n                                                <div class='exclusaoNotificacao pull-right'>\r\n                                                    <button class='btn btn-danger btn-xs button_exclusao closbtn' (click)=\"closeNotifAproval(items?.id)\">x</button>\r\n                                                </div>\r\n                                                <h5>Project: {{items.tbl_new_task_request?.tbl_project_module?.tbl_project?.project_nam}}</h5>\r\n                                                <h5>Requester: {{items.tbl_new_task_request?.tbl_user_profile?.f_name}} {{items.tbl_new_task_request?.tbl_user_profile?.l_name}}</h5>\r\n                                                <h5>Status: {{items.tbl_new_task_request?.request_status}}</h5>\r\n                                                <p>\r\n                                                    <a class=\"content\">Click here to view.</a>\r\n                                                </p>\r\n                                            </a>\r\n                                        </div>\r\n                                    </ng-container>\r\n\r\n                                </div>\r\n                            </li>\r\n\r\n                            <div class=\"divider\"> </div>\r\n                            \r\n                            <li class=\"head\">\r\n                                <div class=\"navbar-content\">\r\n                                    <h4>Project completed Verification</h4>\r\n                                    <div *ngFor=\"let list of projVerfNotif\" class=\"ng-star-inserted\">\r\n                                        <a  [routerLink]=\"['/company-project-approval', list?.id]\">\r\n                                            <div class='exclusaoNotificacao pull-right'>\r\n                                                <button class='btn btn-danger btn-xs button_exclusao closbtn' >x</button>\r\n                                            </div>\r\n                                            <h5 class=\"media-heading\">Project {{list.project_name}} Completed</h5>\r\n                                            <p><a class=\"content\">Approve project</a></p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n\r\n                            <li class=\"head\">\r\n                                <div class=\"navbar-content\">\r\n                                    <h4>Time Extension Requests</h4>\r\n                                    <!-- <ng-container *ngIf=\"dispStatus\"> -->\r\n                                    <div *ngFor=\"let items of timeextreqdata\">\r\n                                        <a (click)=\"closeNotif9(items.id)\" [routerLink]=\"['/company-time-extension-request', items.request_id, items.xt.tbl_project_task.tbl_project_module.project_id]\">\r\n                                            <div class='exclusaoNotificacao pull-right'>\r\n                                                <button class='btn btn-danger btn-xs button_exclusao closbtn' (click)=\"closeNotifReq(items.id)\">x</button>\r\n                                            </div>\r\n                                            <h5>Project: {{items?.xt?.tbl_project_task?.tbl_project_module?.tbl_project?.project_name}}</h5>\r\n                                            <h5>Requester: {{items?.xt?.tbl_project_task?.tbl_user_profile?.f_name}} {{items?.xt?.tbl_project_task?.tbl_user_profile?.f_name?.l_name}}</h5>\r\n                                            <p>\r\n                                                <a class=\"content\">Click here to view.</a>\r\n                                            </p>\r\n                                        </a>\r\n                                    </div>\r\n                                    <!-- </ng-container> -->\r\n\r\n                                </div>\r\n                            </li>\r\n                            <div class=\"divider\"> </div>\r\n                            <!-- <div class=\"divider\"> </div> -->\r\n                            <div *ngIf=\"count == 0\">\r\n                                <h5 style=\"color : red; margin-left:20px; \">No Data</h5>\r\n                            </div>\r\n                        </ul>\r\n\r\n                    </li>\r\n\r\n                    <li class=\"dropdown\">\r\n                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\">\r\n                            <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                            <b class=\"caret\"></b>\r\n                        </a>\r\n                        <ul class=\"dropdown-menu\">\r\n                            <li>\r\n                                <div *ngIf=\"profile?.role_id == 1\" class=\"navbar-content\">\r\n                                    <span>{{profile?.tbl_companies[0].cmp_name}}</span>\r\n                                    <p class=\"text-muted small\">\r\n                                        {{profile?.email }}\r\n                                    </p>\r\n                                    <div >Company Admin</div>\r\n                                    <div class=\"divider\">\r\n                                    </div>\r\n                                    <!-- <a href=\"#\" class=\"view btn-sm active\">View Profile</a> -->\r\n                                </div>\r\n                                <div *ngIf=\"profile?.role_id == 3\" class=\"navbar-content\">\r\n                                    <span>{{profile?.tbl_user_profiles[0].f_name}} {{profile?.tbl_user_profiles[0].l_name}}</span>\r\n                                    <p class=\"text-muted small\">\r\n                                        {{profile?.email }}\r\n                                    </p>\r\n                                    <div class=\"clearfix\"></div>\r\n                                    <div>Project Manager</div>\r\n                                    \r\n                                    <div class=\"divider\">\r\n                                    </div>\r\n                                    <!-- <a href=\"#\" class=\"view btn-sm active\">View Profile</a> -->\r\n                                </div>\r\n                                \r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                    \r\n                        <a data-toggle=\"modal\" data-target=\"#confirmation\">\r\n                            <i class=\"fa fa-power-off\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                    </li>\r\n\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        \r\n\r\n\r\n    </header>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/company-topbar/company-topbar.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyTopbarComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_overlay_notifcount_service__ = __webpack_require__("../../../../../src/app/services/overlay-notifcount.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var CompanyTopbarComponent = (function () {
    function CompanyTopbarComponent(companyService, routes, snackBar, overlaynotf, config) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.overlaynotf = overlaynotf;
        this.config = config;
        this.count = 0;
        this.countOverlay = 0;
        this.timeextreqdata = [];
        this.upgradeBtnShow = true;
        this.assignHeadCount = 0;
        this.approveEstimationCount = 0;
        this.approveProjectCount = 0;
        this.planProjectCount = 0;
        this.resubmitEstimationCount = 0;
        this.userpendingdataCount = 0;
        this.adminnotifdataCount = 0;
        this.timeextreqdataCount = 0;
        this.showNotifications = false;
        this.newTaskreqCount = 0;
        this.newTaskreqBackCount = 0;
        this.timeExtensionCount = 0;
        this.projVerfNotifCount = 0;
        this.dispStatus = true;
        this.socket = __WEBPACK_IMPORTED_MODULE_5_socket_io_client__(config.socketURL);
        this.overlaynotfSrv = overlaynotf;
    }
    // overlaynotfCount.notifReadCount = 0;
    CompanyTopbarComponent.prototype.closeoverlayNotif = function (msg, ref_id) {
        console.log(this.overlaynotfSrv.notifReadCount);
        this.overlaynotfSrv.inc();
        console.log(this.overlaynotfSrv.notifReadCount);
        this.companyService.saveActivityLog({ msg: msg, ref_id: ref_id }).subscribe(function (data) {
        });
    };
    CompanyTopbarComponent.prototype.ngOnInit = function () {
        var _this = this;
        $('#newNotif').click();
        $('#newNotif').click();
        $('#newNotif').click();
        // ---------------------------------Start-------------------------------------------
        // Function      : Get logged in entity
        // Params        : 
        // Returns       : Get logged in entity
        // Author        : Rinsha
        // Date          : 08-03-2018
        // Last Modified : 08-03-2018, Rinsha
        // Desc          :  
        this.companyService.getLoggedinEntity().subscribe(function (data) {
            if (data == null || data == '' || data == [] || (data !== undefined && data.length == 0)) {
                _this.routes.navigate(['/home']);
            }
            if (data.role_id == 2) {
                //super admin
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/home']);
                }
                _this.routes.navigate(['/admin-dashboard']);
            }
            if (data.role_id == 3 || data.role_id == 1) {
                //company admin or pm
                if (data.delete_status == true || data.block_status == true || data.cmp_status == "Not Verified") {
                    _this.routes.navigate(['/company-login']);
                }
                if (data.cmp_status == "Expired") {
                    _this.routes.navigate(['/expired']);
                }
                if (data.is_profile_completed == false) {
                    _this.routes.navigate(['/compay-aditninfo', data.cmp_id]);
                }
                // this.routes.navigate(['/company-dashboard']);
            }
            if (data.role_id == 4) {
                //user
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/company-login']);
                }
                _this.routes.navigate(['/user-dashboard']);
            }
        });
        // -----------------------------------End------------------------------------------
        this.getLoggedDetails();
        this.getNotifications();
        this.count = 0;
        this.assignHeadNotification();
        this.socket.on('addProject', function (data) {
            _this.assignHeadNotification();
        });
        this.approveEstimationNotification();
        this.socket.on('approveEstimation', function (data) {
            _this.approveEstimationNotification();
        });
        this.approveProjectNotification();
        this.socket.on('approveProject', function (data) {
            _this.approveProjectNotification();
        });
        this.planProjectNotification();
        this.socket.on('planProject', function (data) {
            _this.planProjectNotification();
        });
        this.resubmitEstimationNotification();
        this.socket.on('reEstimateProject', function (data) {
            _this.resubmitEstimationNotification();
        });
        this.socket.on('newtaskrequestAccepted', function (data) {
            _this.getNotifications();
        });
        this.socket.on('newtaskrequestRejected', function (data) {
            _this.getNotifications();
        });
        this.socket.on('newtaskrequestApproval', function (data) {
            _this.getNotifications();
        });
        this.getAllemppendingleavesnotifi();
        this.socket.on('Leaveaddeduser', function (data) {
            _this.getAllemppendingleavesnotifi();
        });
        this.socket.on('userstatuschange', function (data) {
            _this.getAllemppendingleavesnotifi();
        });
        this.getAllSendtoadminnotif();
        this.socket.on('adminviewstatuschange', function (data) {
            _this.getAllSendtoadminnotif();
        });
        this.socket.on('sendtoadmin', function (data) {
            _this.getAllSendtoadminnotif();
        });
        this.socket.on('timeextention', function (data) {
            _this.gettimeextentionNotifications();
        });
        this.socket.on('newtaskrequest', function (data) {
            _this.getNotifications();
        });
        this.socket.on('notfificationclosed', function (data) {
            _this.getNotifications();
        });
        this.getProfile();
        this.getProjectApproveNotifications();
    };
    CompanyTopbarComponent.prototype.assignHeadNotification = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : get assignHeadNotification
        // Params        : 
        // Returns       : project data
        // Author        : Rinsha
        // Date          : 12-03-2018
        // Last Modified : 12-03-2018, Rinsha
        // Desc          : check whether the loggedin project manager assigned for a project. If yes, then notification to assign team heads
        this.companyService.assignHeadNotification().subscribe(function (res) {
            console.log('yasir');
            console.log(res);
            _this.project = res;
            _this.assignHeadCount = 0;
            _this.assignHeadCount = _this.project.length;
            _this.refresh();
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyTopbarComponent.prototype.logout = function () {
        this.companyService.logout();
        this.routes.navigate(['/home']);
        return false;
    };
    CompanyTopbarComponent.prototype.approveEstimationNotification = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : get approveEstimationNotification
        // Params        : 
        // Returns       : notification data
        // Author        : Rinsha
        // Date          : 14-03-2018
        // Last Modified : 14-03-2018, Rinsha
        // Desc          : check whether the loggedin project manager have pending estimation approval notification
        this.companyService.approveEstimationNotification().subscribe(function (res) {
            _this.estimationApproval = res;
            _this.approveEstimationCount = 0;
            _this.approveEstimationCount = _this.estimationApproval.length;
            _this.refresh();
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyTopbarComponent.prototype.closeNotif = function (notif_id) {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : close notification of estimation approval
        // Params        : notification id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 14-03-2018
        // Last Modified : 14-03-2018, Rinsha
        // Desc          : close notification when pm sees the estimation approval notification
        this.companyService.closeNotif(notif_id).subscribe(function (res) {
            if (res.success == false) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 3000
                });
            }
            _this.assignHeadNotification();
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyTopbarComponent.prototype.closeNotif2 = function (notif_id) {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : close notification of estimation approval
        // Params        : notification id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 14-03-2018
        // Last Modified : 14-03-2018, Rinsha
        // Desc          : close notification when pm sees the estimation approval notification
        this.companyService.closeNotif2(notif_id).subscribe(function (res) {
            if (res.success == false) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 3000
                });
            }
            _this.approveEstimationNotification();
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyTopbarComponent.prototype.approveProjectNotification = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : get apprroveProjectNotification
        // Params        : 
        // Returns       : project data
        // Author        : Rinsha
        // Date          : 19-03-2018
        // Last Modified : 19-03-2018, Rinsha
        // Desc          : check whether the loggedin company admin have any project to approves
        this.companyService.approveProjectNotification().subscribe(function (res) {
            // console.log(res)
            _this.approveProject = res;
            _this.approveProjectCount = 0;
            _this.approveProjectCount = _this.approveProject.length;
            _this.refresh();
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyTopbarComponent.prototype.closeNotif3 = function (p_id) {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : close notification of project approval
        // Params        : project id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 19-03-2018
        // Last Modified : 19-03-2018, Rinsha
        // Desc          : close notification when pm sees the project approval notification
        this.companyService.closeNotif3(p_id).subscribe(function (res) {
            if (res.success == false) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 3000
                });
            }
            _this.approveProjectNotification();
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyTopbarComponent.prototype.planProjectNotification = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : get planProjectNotification
        // Params        : 
        // Returns       : project data
        // Author        : Rinsha
        // Date          : 20-03-2018
        // Last Modified : 20-03-2018, Rinsha
        // Desc          : check whether the loggedin pm have any project to plan
        this.companyService.planProjectNotification().subscribe(function (res) {
            // console.log(res)
            _this.planProject = res;
            _this.planProjectCount = 0;
            _this.planProjectCount = _this.planProject.length;
            _this.refresh();
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyTopbarComponent.prototype.closeNotif4 = function (p_id) {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : close notification of project plan
        // Params        : project id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 19-03-2018
        // Last Modified : 19-03-2018, Rinsha
        // Desc          : close notification when pm sees the project plan notification
        this.companyService.closeNotif4(p_id).subscribe(function (res) {
            if (res.success == false) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 3000
                });
            }
            _this.planProjectNotification();
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyTopbarComponent.prototype.resubmitEstimationNotification = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : get resubmitEstimationNotification
        // Params        : 
        // Returns       : project data
        // Author        : Rinsha
        // Date          : 20-03-2018
        // Last Modified : 20-03-2018, Rinsha
        // Desc          : check whether the loggedin pm have any estimation to resubmit
        this.companyService.resubmitEstimationNotification().subscribe(function (res) {
            // console.log(res)
            _this.resubmitEstimation = res;
            _this.resubmitEstimationCount = 0;
            _this.resubmitEstimationCount = _this.resubmitEstimation.length;
            _this.refresh();
        });
        // ---------------------------------End-------------------------------------------
    };
    // ---------------------------------Start-------------------------------------------
    // Function      : Get logged in entity
    // Params        : 
    // Returns       : Get logged in entity
    // Author        : Rinsha
    // Date          : 08-03-2018
    // Last Modified : 08-03-2018, Rinsha
    // Desc          :  
    CompanyTopbarComponent.prototype.getLoggedDetails = function () {
        var _this = this;
        this.companyService.getLoggedinEntity().subscribe(function (data) {
            _this.entity = data;
            if (_this.entity.role_id == 3) {
                _this.upgradeBtnShow = false;
            }
        });
    };
    // -----------------------------------End------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Manu Prasad 
    // Desc          : Get Teams from database
    CompanyTopbarComponent.prototype.getNotifications = function () {
        var _this = this;
        this.companyService.getNotifications().subscribe(function (resNotifications) {
            // this.accessRights = accessRights;
            // console.log(resNotifications)
            _this.notifications = resNotifications;
            if (resNotifications.back && resNotifications.back.length > 0) {
                // if (resNotifications.back.length > 0) {
                _this.newTaskreqBackCount = resNotifications.back.length;
                _this.newTaskApp = resNotifications.back;
                _this.dispStatus = true;
            }
            else {
                _this.newTaskApp = [];
                _this.dispStatus = true;
            }
            if (resNotifications.req && resNotifications.req.length > 0) {
                // if (resNotifications.req.length > 0) {
                _this.newTaskreqCount = resNotifications.req.length;
                _this.newTaskreq = resNotifications.req;
                _this.dispStatus = true;
            }
            else {
                _this.newTaskreq = [];
                _this.dispStatus = true;
            }
            _this.showNotifications = true;
            _this.refresh();
        });
    };
    //  ---------------------------------end-----------------------------------------------
    CompanyTopbarComponent.prototype.getAllemppendingleavesnotifi = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      :  getAllemppendingleavesnotifi
        // Params        : 
        // Returns       : notification data
        // Author        : sudha
        // Date          : 29-03-2018
        // Last Modified : 
        // Desc          : check user leave request
        this.companyService.getAllemppendingleavesnotifi().subscribe(function (res) {
            // console.log(res)
            _this.userpendingdata = res;
            _this.userpendingdataCount = 0;
            _this.userpendingdataCount = _this.userpendingdata.length;
            // console.log( this.userpendingdata);
            _this.refresh();
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyTopbarComponent.prototype.closeNotif5 = function (notif_id) {
        var _this = this;
        // console.log(notif_id);
        // ---------------------------------Start-------------------------------------------
        // Function      : close notification of estimation approval
        // Params        : notification id
        // Returns       : 
        // Author        : sudha
        // Date          : 29-03-2018
        // Last Modified : 
        // Desc          : close notification user leave request
        this.companyService.closeNotif5(notif_id).subscribe(function (res) {
            if (res.success == false) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 3000
                });
            }
            _this.getAllemppendingleavesnotifi();
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyTopbarComponent.prototype.getAllSendtoadminnotif = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      :  getAllSendtoadminnotif
        // Params        : 
        // Returns       : notification data
        // Author        : sudha
        // Date          : 06-03-2018
        // Last Modified : 
        // Desc          : admin approval for time extension
        this.companyService.getAllSendtoadminnotif().subscribe(function (res) {
            // console.log(res);
            if (res != "no data") {
                _this.adminnotifdata = res;
                _this.adminnotifdataCount = 0;
                _this.adminnotifdataCount = _this.adminnotifdata.length;
                // console.log( this.adminnotifdata);
                _this.refresh();
            }
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyTopbarComponent.prototype.closeNotif6 = function (notif_id) {
        var _this = this;
        // console.log(notif_id);
        // ---------------------------------Start-------------------------------------------
        // Function      : close notification of estimation approval
        // Params        : notification id
        // Returns       : 
        // Author        : sudha
        // Date          : 29-03-2018
        // Last Modified : 
        // Desc          : close notification user leave request
        this.companyService.closeNotif6(notif_id).subscribe(function (res) {
            if (res.success == false) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 3000
                });
            }
            _this.getAllSendtoadminnotif();
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyTopbarComponent.prototype.refresh = function () {
        this.count = 0;
        this.countOverlay = 0;
        this.count = this.assignHeadCount + this.approveEstimationCount + this.approveProjectCount + this.planProjectCount + this.resubmitEstimationCount + this.newTaskreqBackCount + this.newTaskreqCount
            + this.userpendingdataCount + this.adminnotifdataCount + this.timeextreqdataCount + this.projVerfNotifCount;
        this.countOverlay = this.assignHeadCount + this.approveEstimationCount + this.approveProjectCount + this.planProjectCount + this.resubmitEstimationCount + this.newTaskreqBackCount + this.newTaskreqCount
            + this.adminnotifdataCount + this.timeextreqdataCount + this.projVerfNotifCount;
    };
    CompanyTopbarComponent.prototype.closeNotifReq = function (id) {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : close notification of new request
        // Params        : project id
        // Returns       : 
        // Author        : MANU PRASAD
        // Date          : 29-03-2018
        // Last Modified : 29-03-2018, Rinsha
        // Desc          : close notification when pm sees the new request notification
        this.companyService.closeNotifnewTaskReq(id).subscribe(function (res) {
            if (res.success == false) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 3000
                });
            }
            _this.getNotifications();
            _this.routes.navigateByUrl('/company-task-manage/' + id);
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyTopbarComponent.prototype.closeNotifAproval = function (id) {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : close notification of new request
        // Params        : project id
        // Returns       : 
        // Author        : MANU PRASAD
        // Date          : 29-03-2018
        // Last Modified : 29-03-2018, Rinsha
        // Desc          : close notification when pm sees the new request notification
        this.companyService.closeNotifAproval(id).subscribe(function (res) {
            if (res.success == false) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 3000
                });
            }
            _this.getNotifications();
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyTopbarComponent.prototype.gettimeextentionNotifications = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      :  gettimeextentionNotifications
        // Params        : 
        // Returns       : notification data
        // Author        :  manu
        // Date          : 29-03-2018
        // Last Modified : 
        // Desc          : check  request
        this.companyService.gettimeextentionNotifications().subscribe(function (res) {
            // console.log("kdddddddkkk")
            // console.log(res)
            // res.req.forEach(element => {
            //   console.log(element.xt.tbl_project_task.tbl_project_module.project_id)
            // });
            // console.log("kdddddddkkk")
            _this.timeextreqdata = res.req;
            // this.timeextreqdataCount = 0;
            _this.timeextreqdataCount = _this.timeextreqdata.length;
            // console.log( this.userpendingdata);
            _this.refresh();
        });
        // ---------------------------------End-------------------------------------------
    };
    // ---------------------------------End-------------------------------------------
    CompanyTopbarComponent.prototype.closeNotif9 = function (notif_id) {
        var _this = this;
        // console.log(notif_id);
        // ---------------------------------Start-------------------------------------------
        // Function      : gettimeextentionNotifications
        // Params        : notification id
        // Returns       : 
        // Author        : manu
        // Date          : 29-03-2018
        // Last Modified : 
        // Desc          : close notification user leave request
        this.companyService.closeNotif9(notif_id).subscribe(function (res) {
            if (res.success == false) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 3000
                });
            }
            _this.gettimeextentionNotifications();
        });
    };
    // ---------------------------------End-------------------------------------------
    CompanyTopbarComponent.prototype.getProfile = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getProfile
        // Params        : 
        // Returns       : logged in user details
        // Author        : Rinsha
        // Date          : 21-03-2018
        // Last Modified : 21-03-2018, Rinsha
        // Desc          : 
        this.companyService.getProfile().subscribe(function (info) {
            _this.profile = info;
            _this.user_id = info.id;
        });
    };
    // ---------------------------------Start-------------------------------------------
    // Function      : getProjectApproveNotifications
    // Params        : 
    // Returns       : 
    // Author        : Yasir Poongadan 
    // Date          : 03-08-2018
    // Last Modified : 03-08-2018, Yasir Poongadan
    // Desc          : 
    CompanyTopbarComponent.prototype.getProjectApproveNotifications = function () {
        var _this = this;
        this.companyService.getProjectApproveNotifications().subscribe(function (res) {
            _this.projVerfNotif = res;
            _this.projVerfNotifCount = _this.projVerfNotif.length;
            _this.refresh();
        });
    };
    CompanyTopbarComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-topbar',
            template: __webpack_require__("../../../../../src/app/components/company-topbar/company-topbar.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-topbar/company-topbar.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"],
            __WEBPACK_IMPORTED_MODULE_4__angular_material__["z" /* MatSnackBar */],
            __WEBPACK_IMPORTED_MODULE_2__services_overlay_notifcount_service__["a" /* OverlayNotifcountService */],
            __WEBPACK_IMPORTED_MODULE_6__config_config__["a" /* Config */]])
    ], CompanyTopbarComponent);
    return CompanyTopbarComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-upgrade/company-upgrade.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-upgrade/company-upgrade.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n      <div class=\"col-md-1 col-xs-2 display-table-cell v-align box\" id=\"navigation\">\r\n        <company-sidebar></company-sidebar>\r\n      </div>\r\n      <company-topbar></company-topbar>\r\n      <br>\r\n      <br>\r\n      <div class=\"container\">\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">Payment Method</div>\r\n          <div class=\"panel-body\">\r\n            <mat-form-field [formGroup]=\"formGroup\">\r\n              <input matInput [(ngModel)]=\"payment.cardnum\" name=\"cardnum\" autofocus placeholder=\"Card Number\" required formControlName=\"cardnumValidation\">\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field [formGroup]=\"formGroup\">\r\n              <input matInput [(ngModel)]=\"payment.cardname\" name=\"cardname\" placeholder=\"Name on Card\" required formControlName=\"cardnameValidation\">\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field [formGroup]=\"formGroup\">\r\n              <input type=\"number\" matInput [(ngModel)]=\"payment.cvv\" min=\"1\" max=\"3\" name=\"cvv\" placeholder=\"CVV\" required formControlName=\"cvvValidation\">\r\n            </mat-form-field>\r\n            <br>\r\n          </div>\r\n        </div>\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">Billing Details</div>\r\n          <div class=\"panel-body\">\r\n            <mat-form-field [formGroup]=\"formGroup\">\r\n              <input matInput [(ngModel)]=\"payment.fname\" name=\"fname\" placeholder=\"First Name\" required formControlName=\"fnameValidation\">\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field [formGroup]=\"formGroup\">\r\n              <input matInput [(ngModel)]=\"payment.lname\" name=\"lname\" placeholder=\"Last Name\" required formControlName=\"lnameValidation\">\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field [formGroup]=\"formGroup\">\r\n              <input matInput [(ngModel)]=\"payment.addr\" name=\"addr\" placeholder=\"Address\" required formControlName=\"addrValidation\">\r\n            </mat-form-field>\r\n            <br>\r\n            <mat-form-field [formGroup]=\"formGroup\">\r\n              <input matInput [(ngModel)]=\"payment.no\" name=\"no\" placeholder=\"Phone Number\" required formControlName=\"noValidation\">\r\n            </mat-form-field>\r\n            <br>\r\n          </div>\r\n        </div>\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">Review and Confirm</div>\r\n          <div class=\"panel-body\">\r\n            <table>\r\n              <tr>\r\n                <td>Plan </td>\r\n                <td>:</td>\r\n                <td><b>{{plan?.plan_name}}</b></td>\r\n              </tr>\r\n              <br>\r\n              <tr>\r\n                <td>No. of Months </td>\r\n                <td>:</td>\r\n                <td>\r\n                  <mat-form-field [formGroup]=\"formGroup\"><input type=\"number\" min=\"1\" matInput [(ngModel)]=\"payment.no_months\" name=\"no_months\" required formControlName=\"no_monthsValidation\">\r\n                  </mat-form-field>\r\n                </td>\r\n              </tr>\r\n              <br>\r\n              <tr>\r\n                <td>Price </td>\r\n                <td>:</td>\r\n                <td><b>{{plan?.plan_price}}</b></td>\r\n              </tr>\r\n              <br>\r\n              <tr>\r\n                <td>Amount </td>\r\n                <td>:</td>\r\n                <td><b>{{plan?.plan_price * payment.no_months}} </b></td>\r\n              </tr>\r\n              <br>\r\n            </table>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-3\">\r\n                <button type=\"submit\" class=\"btn round-button\" (click)=\"confirm(plan?.id)\">Confirm</button>\r\n              \r\n              </div>\r\n            \r\n             \r\n              <!-- <div class=\"col-md-8\" *ngIf=\"showSpinner\">\r\n                <svg class=\"svgclass\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                  x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n                  <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                    <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n                    />\r\n                  </path>\r\n                </svg>\r\n              </div> -->\r\n\r\n            </div>\r\n           \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-upgrade/company-upgrade.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyUpgradeComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__("../../../forms/esm5/forms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var CompanyUpgradeComponent = (function () {
    function CompanyUpgradeComponent(companyService, _formBuilder, routes, route, snackBar) {
        this.companyService = companyService;
        this._formBuilder = _formBuilder;
        this.routes = routes;
        this.route = route;
        this.snackBar = snackBar;
        this.payment = {
            cardnum: '',
            cardname: '',
            cvv: '',
            fname: '',
            lname: '',
            addr: '',
            no: '',
            no_months: ''
        };
    }
    CompanyUpgradeComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.sub = this.route.params.subscribe(function (params) {
            _this.plan_id = params.id;
            // ---------------------------------Start-------------------------------------------
            // Function      : get plan by id
            // Params        : id
            // Returns       : plan
            // Author        : Rinsha
            // Date          : 06-03-2018
            // Last Modified : 06-03-2018, Rinsha
            // Desc          : getplan
            _this.companyService.getPlan(_this.plan_id).subscribe(function (res) {
                _this.plan = res;
            });
            // ---------------------------------End-------------------------------------------
        });
        this.formGroup = this._formBuilder.group({
            cardnumValidation: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required],
            cardnameValidation: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required],
            cvvValidation: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required],
            fnameValidation: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required],
            lnameValidation: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required],
            addrValidation: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required],
            noValidation: new __WEBPACK_IMPORTED_MODULE_3__angular_forms__["FormControl"]('', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].pattern(/^\d{9}|^\d{3}-\d{3}-\d{3}|^\d{3}\s\d{3}\s\d{3}$/)),
            no_monthsValidation: ['', __WEBPACK_IMPORTED_MODULE_3__angular_forms__["Validators"].required],
        });
    };
    CompanyUpgradeComponent.prototype.confirm = function (id) {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : upgrade
        // Params        : data from form
        // Returns       : message
        // Author        : Rinsha
        // Date          : 06-03-2018
        // Last Modified : 06-03-2018, Rinsha
        // Desc          : upgrade
        this.companyService.upgrade(id, this.payment).subscribe(function (res) {
            if (res.success == true) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 3000
                });
                _this.routes.navigate(['/planlist']);
            }
            else {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 3000
                });
            }
        });
        // ---------------------------------End-------------------------------------------
    };
    CompanyUpgradeComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-upgrade',
            template: __webpack_require__("../../../../../src/app/components/company-upgrade/company-upgrade.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-upgrade/company-upgrade.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["FormBuilder"], __WEBPACK_IMPORTED_MODULE_1__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_router__["ActivatedRoute"], __WEBPACK_IMPORTED_MODULE_4__angular_material__["z" /* MatSnackBar */]])
    ], CompanyUpgradeComponent);
    return CompanyUpgradeComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-user-leave-request/company-user-leave-request.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".task{background:#fbf6f1;width:100%;padding:6px 0;display: inline-block;margin-bottom:6px;}\r\nbutton, input, optgroup, select, textarea{outline:none !important;}\r\n.taskedit{border-left:1px solid #ccc;    display: inline-block;width:100%;margin-top: 5px;}\r\n.task ul li{width:auto;float:left;padding: 8px;}\r\n\ta{color:#111;}\r\n.task h5{padding-top:13px;padding-top: 6px;}\r\n.hash{background:#f7f6f4;}\r\n.round-button {\r\n    border-radius: 20px;\r\n    margin: 0;\r\n    float: left;\r\n    background: #f37600;\r\n    color: #fff;\r\n    padding: 7px 15px;\r\n    transition: background 2s;\r\n\tmargin-bottom:15px;\r\n}\r\n.round-button:hover {\r\n    background: #ffaa05;\r\n    color: #fff;\r\n}\r\n.dropdown ul.dropdown-menu:before {\r\n    content: \"\";\r\n    border-bottom: 10px solid #fff;\r\n    border-right: 10px solid transparent;\r\n    border-left: 10px solid transparent;\r\n    position: absolute;\r\n    top: -10px;\r\n    right: 16px;\r\n    z-index: 10;\r\n}\r\n.round-button:hover, .round-button:focus, .round-button.focus{color:#fff;}\r\nbutton, input, optgroup, select, textarea{outline:none;}\r\n.effect-1 ~ .focus-border{position: absolute; bottom: 0; left: 15px; width: 0; height: 2px;background-color: #bba28b; transition: 0.4s;right:15px;}\r\n.effect-1:focus ~ .focus-border{width: 95%; transition: 0.4s;}\r\n.effect-1{border: 0; padding: 7px 0; border-bottom: 1px solid #ccc;width:100%;}\r\n.style{width:100%;}\r\nlabel{font-size:15px;color:#4a4a4a;font-weight:normal;padding:5px 0;}\r\n.mrg-2{margin-bottom:10px;}\r\n.dropdown-menu > li > a {\r\n    display: block;\r\n    padding: 3px 20px;\r\n    clear: both;\r\n    font-weight: normal;\r\n    line-height: 25px;\r\n    color: #333333;\r\n    white-space: nowrap;\r\n}\r\n.addmodule {\r\n    padding: 20px 10px!important;\r\n    min-width: 357px;\r\n    right: 0px;\r\n    left: inherit;\r\n}\r\n.style{border:none;border-bottom: 1px solid #ccc;}\r\n.white {\r\n    background: #ffffff none repeat scroll 0 0;\r\n    \r\n    display: inline-block;\r\n    padding: 33px 25px;\r\n    width: 100%;\r\n}\r\n.btn-file{padding:0;}\r\n.white {\r\n    background: #ffffff none repeat scroll 0 0;\r\n    \r\n    display: inline-block;\r\n    padding: 33px 25px;\r\n    width: 100%;\r\n\tmargin-bottom:20px;\r\n}\r\n.center-bt{margin:20px auto 10px auto;float:none;}\r\n@media only screen and (max-width : 767px) {\r\n.mrg-2 {\r\n    margin-bottom: 37px;\r\n}\r\n\r\n.task ul li{    padding: 2px;}\t\r\n.addmodule{    min-width: 274px;}\r\n}\r\n.highlight{    background: rgb(247, 247, 247);\r\n    box-shadow: -4px 4px 35px #eaeaea;\r\n    border: 2px solid #f1ab7d;}\r\n\r\n\r\n    ul.breadcrumb {\r\n        padding: 10px 0;\r\n        list-style: none;\r\n    \r\n        text-align: left;\r\n        color: #d68956;\r\n    }\r\n    ul.breadcrumb li {\r\n        display: inline;\r\n        font-size: 15px;\r\n    }\r\n    ul.breadcrumb li+li:before {\r\n        padding: 8px;\r\n        color: black;\r\n        content: \"/\\A0\";\r\n    }\r\n    ul.breadcrumb li a {\r\n        color: #bbbbbb;\r\n        text-decoration: none;\r\n    }\r\n    ul.breadcrumb li a:hover {\r\n        color: #d68956;\r\n        text-decoration: none;\r\n    \r\n    }\r\n    .breadcrumb{    background-color: #f6f7fa;}    \r\n    mat-chip {\r\n        max-width: 150px;\r\n      }\r\n      .example-button-row {\r\n        display: -ms-flexbox;\r\n        display: flex;\r\n        -ms-flex-align: center;\r\n            align-items: center;\r\n        -ms-flex-pack: distribute;\r\n            justify-content: space-around;\r\n      }\r\n.bt{border-radius:30px;padding:3px 13px;border:1px solid #f37600;background:none;    font-size: 12px;\r\n    margin-top: 9px;}      \r\n    .modal-content{border-radius:0;box-shadow:none;}\r\n    .modal-header {\r\n        padding: 7px 15px;\r\n        border-bottom: 1px solid #e5e5e5;\r\n        background: #f37600;\r\n    }\r\n    .modal-title {\r\n        margin: 0;\r\n        line-height: 26px;\r\n        font-size: 15px;\r\n        color: #fff;\r\n    }\r\n    .photo{width:120px;height:120px;border-radius:50%;overflow:hidden;\r\n        float:left;background:#ccc;margin-bottom: 20px;\r\n       }\r\n    .round-button{margin-right:5px;}\r\n    .photo img{width:100%;}\r\n    .tsk-lbl{\r\n        color: #828282;\r\n        font-size: 11px;\r\n        padding-top: 4px;\r\n        float: left;\r\n        white-space: pre;\r\n    }\r\n    .tsk-dt[_ngcontent-c1] {\r\n        margin: 0;\r\n        padding-top: 2px !important;\r\n        float: left;\r\n        \r\n    }\r\n    .tsk-dt{    font-size: 11px;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-user-leave-request/company-user-leave-request.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n    <div class=\"container-fluid display-table\">\r\n        <div class=\"row display-table-row\">\r\n      \r\n            <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n                 <!-- sidebar-->\r\n               \r\n                 <company-sidebar></company-sidebar> \r\n                 <!-- end sidebar-->\r\n            </div>\r\n            \r\n            <div class=\"col-md-12 col-xs-12\">\r\n                <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n                <!-- topbar-->\r\n                <company-topbar></company-topbar> \r\n                \r\n                    <!-- end topbar-->\r\n                \r\n                \r\n                <div class=\"user-dashboard\">\r\n                    <h2>Request Management</h2>\r\n                    <ul class=\"breadcrumb\">\r\n                      <li><a routerLink=\"/\">Leave Request Management</a></li>\r\n                      <li><a routerLink=\"/company-leave-request-list\">Leave Request Management List</a></li>\r\n                      \r\n                      <li>Leave Request User View</li>\r\n                    </ul>\r\n                   \r\n                    <div class=\"row\">\r\n                    <!-- <div *ngFor=\"let myTask of myTasks; let i = index\">            -->\r\n              <div class=\"col-md-5 col-sm-12 col-xs-12 gutter \">\r\n               <div  class=\"white\" >\r\n            \r\n                 <div class=\"photo\">\r\n                   <img *ngIf=\"leavedata?.tbl_user_profile.tbl_login.profile_image == ''\" src=\"./assets/images/user1.png\">\r\n                   <img *ngIf=\"leavedata?.tbl_user_profile.tbl_login.profile_image != ''\"  src=\"../assets/profile_upload/{{leavedata?.tbl_user_profile.tbl_login.profile_image}}\">\r\n                 </div>\r\n                 <div class=\"clearfix\"></div>\r\n                 <div class=\"form-group\">\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Name</label></div>\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\">{{leavedata?.tbl_user_profile?.f_name}}</label></div>\r\n                 </div>\r\n                \r\n                 <div class=\"form-group\">\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Leave Start Date</label></div>\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\">{{leavedata?.start_date}}</label></div>\r\n                 </div>\r\n                 \r\n                 <div class=\"form-group\">\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Leave End Date</label></div>\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\">{{leavedata?.end_date}}</label></div>\r\n                 </div>\r\n                 \r\n                 <div class=\"form-group\">\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Leave Hour</label></div>\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\">{{leavedata?.leave_hrs}}</label></div>\r\n                 </div>\r\n              <div *ngIf=\"leavedata?.request_status == 'Rejected'\">\r\n                <div class=\"form-group\">\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Reject Reason</label></div>\r\n                   <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\">{{leavedata?.reject_reason}}</label></div>\r\n                 </div>\r\n                </div>\r\n                <div *ngIf=\"leavedata?.request_status == 'Accepted'\">\r\n                    <div class=\"form-group\">\r\n                       <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\">Status</label></div>\r\n                       <div class=\"col-md-6 col-sm-6 col-xs-6\"><label for=\"\" class=\"label2\">Accepted</label></div>\r\n                     </div>\r\n                    </div>\r\n                 <div class=\"col-md-4\">\r\n                    <button *ngIf=\"leavedata?.request_status == 'Pending'\" class=\"btn round-button\"  (click)=\"getacceptId(leavedata.id)\" data-toggle=\"modal\" data-target=\"#acceptModal\" type=\"submit\">Accept</button>\r\n                 \r\n                    <button *ngIf=\"leavedata?.request_status == 'Pending'\" class=\"btn round-button\" (click)=\"getrejectId(leavedata.id)\" data-toggle=\"modal\" data-target=\"#rejectModal\" type=\"submit\">Reject</button>\r\n                  </div>\r\n  \r\n              </div>\r\n              </div>\r\n                         <div class=\"col-md-7 col-sm-12 col-xs-12 gutter\">\r\n                          <div *ngFor=\"let myTask of myTasks; let i = index\">    \r\n                    <div class=\"white\">\r\n                 <div class=\"col-md-12 mrg-2\">\r\n                   <div class=\"col-md-4\">\r\n                     <label>\r\n                       Project Name\r\n                     </label>\r\n                   </div>\r\n                   <div class=\"col-md-4 col-xs-5\">\r\n                     <!-- <input class=\"effect-1 style\" type=\"text\" placeholder=\"44:00 Hr\"> -->\r\n                     <span class=\"focus-border\">{{myTask?.project_name}}</span>\r\n                   </div>\r\n\r\n                 </div>\r\n                 <div class=\"col-md-12 mrg-2\">\r\n                  <div class=\"col-md-4\">\r\n                    <label>\r\n                      Total Hours\r\n                    </label>\r\n                  </div>\r\n                  <div class=\"col-md-4 col-xs-5\">\r\n                    <!-- <input class=\"effect-1 style\" type=\"text\" placeholder=\"44:00 Hr\"> -->\r\n                    <span class=\"focus-border\">{{sum}}</span>\r\n                  </div>\r\n\r\n                </div>\r\n                <div *ngFor=\"let task of myTasks[i].tbl_project_modules; let j = index \">\r\n                  \r\n                    <!-- <div *ngFor=\"let task1 of task; \"> -->\r\n                    <div class=\"col-md-12 col-xs-12 pull-right\">\r\n                   <div class=\"task\">\r\n                     <div class=\"col-md-8 col-xs-7\">\r\n                       <h5>{{task?.module_name}}</h5>\r\n                     </div>\r\n                     <div class=\"col-md-4 col-xs-5\">\r\n                       <ul class=\"taskedit\">\r\n                          <li>{{task?.ttlModHour}} Hr</li>\r\n                         <!-- <li>{{getHours(myTask.tbl_project_tasks)}}</li> -->\r\n                         <!-- <li class=\"pull-right\"><a href=\"\"><i class=\"fa fa-close\" aria-hidden=\"true\"></i></a></li>\r\n                         <li class=\"pull-right\"><a href=\"\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></a></li> -->\r\n                         \r\n                       </ul>\r\n                     </div>\r\n                   </div>\r\n                 </div><!---task end-->\r\n                 <div *ngFor=\"let task1 of myTasks[i].tbl_project_modules[j].tbl_project_tasks; let y = index\">\r\n                 <div class=\"col-md-11 col-xs-12 pull-right\">\r\n                    <!-- <div *ngFor=\"let task of myTasks[i].tbl_project_modules; \"> -->\r\n                        <!-- <div ngFor=\"let task1 of myTasks[i].tbl_project_tasks[j].tbl_task_status_assocs; let y = index\"> -->\r\n                   <div class=\"task hash\">\r\n                    <div class=\"col-md-12\">\r\n                      <h5 class=\"mrgn-t\">{{task1.task_name}}</h5>\r\n                    </div> \r\n                     <div class=\"col-md-12 col-xs-12\">\r\n                       <ul class=\"\">\r\n                          <!-- <li>{{task1?.task_name}}</li> -->\r\n                          <!-- <br> -->\r\n                         <!-- <li>assign person</li> -->\r\n                         <li><label for=\"\" class=\"tsk-lbl\"></label><h5 class=\"tsk-dt\"></h5></li>\r\n                         <li><label for=\"\" class=\"tsk-lbl\">Hours: </label><h5 class=\"tsk-dt\">{{task1?.planned_hour + task1?.buffer_hour}} Hrs</h5></li>\r\n                         <li><label for=\"\" class=\"tsk-lbl\">Start Date: </label><h5 class=\"tsk-dt\">{{task1?.planned_start_date_time | date:'EEE, d MMM,y'}}</h5></li>\r\n                         <li><label for=\"\" class=\"tsk-lbl\">End Date: </label><h5 class=\"tsk-dt\">{{task1?.planned_end_date_time | date:'EEE, d MMM,y'}}</h5></li>\r\n                          <!-- <li class=\"pull-right\"><a href=\"\"><i class=\"fa fa-close\" aria-hidden=\"true\"></i></a></li>\r\n                         <li class=\"pull-right\"><a href=\"\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></a></li>  -->\r\n                         \r\n                       </ul>\r\n                     </div>\r\n                \r\n                     \r\n \r\n                     <div class=\"clearfix\"></div>\r\n                    </div>\r\n                  </div>\r\n                   </div>\r\n                 <!-- </div> -->\r\n\r\n\r\n                </div>\r\n                                 \r\n                             </div>\r\n\r\n                            </div>\r\n\r\n\r\n                         </div>\r\n\r\n\r\n\r\n                     </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n<!-- --------------------------------------------- rejectModal ----------------------------------------------------------------- -->\r\n    \r\n    <div id=\"rejectModal\" class=\"modal fade\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n    \r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\"  #closeBtn>&times;</button>\r\n              <h4 class=\"modal-title\">Reject Reason </h4>\r\n            </div>\r\n            <form  role=\"form\"  #f=\"ngForm\" (ngSubmit)=\"Reject(reason);\" novalidate>\r\n            <div class=\"modal-body delete-popup\">\r\n              \r\n                  <textarea matInput placeholder=\"Reject reason\" name =\"reason\" [(ngModel)]=\"reason.reject_reason\"  required></textarea>\r\n            \r\n    \r\n            </div>\r\n    \r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" [disabled]=\"btnDisbled\" class=\"btn round-button\">Reject</button>\r\n            </div>\r\n          </form>\r\n          </div>\r\n    \r\n        </div>\r\n      </div>\r\n      <!-----------------------------------------------------------------rejectModal-------------------------------------->\r\n      <!-- --------------------------------------------- acceptModal ----------------------------------------------------------------- -->\r\n    \r\n    <div id=\"acceptModal\" class=\"modal fade\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n    \r\n          <!-- Modal content-->\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\"  #closeBtn1>&times;</button>\r\n              <h4 class=\"modal-title\">Accept Leave </h4>\r\n            </div>\r\n            <form  role=\"form\"  #f=\"ngForm\" (ngSubmit)=\"Accept(accept);\" novalidate>\r\n                <div class=\"modal-body delete-popup\">\r\n                    <!-- <i class=\"fa fa-exclamation\"></i> -->\r\n          \r\n          \r\n                    <h4 class=\"textalign\">Are you sure?</h4>\r\n          \r\n                  </div>\r\n    \r\n            <div class=\"modal-footer\">\r\n                <button type=\"submit\" [disabled]=\"btnDisbled\" class=\"btn round-button\">Accept</button>\r\n            </div>\r\n          </form>\r\n          </div>\r\n    \r\n        </div>\r\n      </div>\r\n      <!-----------------------------------------------------------------acceptModal-------------------------------------->\r\n                <!-- footer-->\r\n                <company-footer></company-footer>\r\n       <!-- end footer-->\r\n        </div>\r\n         </div>\r\n        <!-- Modal -->\r\n     </body>"

/***/ }),

/***/ "../../../../../src/app/components/company-user-leave-request/company-user-leave-request.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyUserLeaveRequestComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CompanyUserLeaveRequestComponent = (function () {
    // data = {"start_date":'',"end_date":'',"leave_hrs":'',
    //   "tbl_user_profile":{"f_name":''},
    //   "tbl_user_profile": {"tbl_login": {"profile_image":''}},
    // };
    function CompanyUserLeaveRequestComponent(_activatedRoute, companyService, routes, snackBar) {
        this._activatedRoute = _activatedRoute;
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.reason = { reject_reason: '', id: '' };
        this.accept = { id: '' };
        this.arr1 = [];
        this.showSpinner = false;
    }
    CompanyUserLeaveRequestComponent.prototype.ngOnInit = function () {
        this.getUserid();
    };
    CompanyUserLeaveRequestComponent.prototype.getUserid = function () {
        var _this = this;
        this._activatedRoute.params.subscribe(function (params) {
            _this.userId = params['id'];
        });
        this.companyService.getuserleave(this.userId).subscribe(function (user) {
            // console.log(user);
            _this.leavedata = user.leave;
            _this.myTasks = user.mytask;
            _this.myTasks.forEach(function (element, key) {
                // console.log(element.)
                _this.module_time = 0;
                _this.totalhr = 0;
                element.tbl_project_modules.forEach(function (elm_tasks, key1) {
                    _this.module_time = 0;
                    elm_tasks.tbl_project_tasks.forEach(function (elm_tasks1) {
                        // console.log(elm_tasks1);
                        _this.module_time = _this.module_time + elm_tasks1.planned_hour + elm_tasks1.buffer_hour;
                        // console.log(this.module_time);
                    });
                    _this.myTasks[key].tbl_project_modules[key1].ttlModHour = _this.module_time;
                    _this.arr1.push(_this.module_time);
                });
                _this.sum = _this.arr1.reduce(function (a, b) { return a + b; }, 0);
            });
            // console.log(this.myTasks);
        });
    };
    CompanyUserLeaveRequestComponent.prototype.getrejectId = function (id) {
        // console.log(id);
        this.reason.id = id;
    };
    CompanyUserLeaveRequestComponent.prototype.getacceptId = function (id) {
        // console.log(id);
        this.accept.id = id;
    };
    CompanyUserLeaveRequestComponent.prototype.Reject = function (reason) {
        var _this = this;
        //   console.log(reason);
        this.showSpinner = true;
        this.companyService.addReason(this.reason).subscribe(function (data) {
            if (!data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
            else if (data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.closeBtn.nativeElement.click();
                _this.routes.navigate(['/company-leave-request-list']);
                // this.getUserid();
            }
        });
    };
    CompanyUserLeaveRequestComponent.prototype.Accept = function (accept) {
        var _this = this;
        //  console.log(accept);
        this.showSpinner = true;
        this.companyService.addaccept(this.accept).subscribe(function (data) {
            if (!data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
            else if (data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.closeBtn1.nativeElement.click();
                _this.routes.navigate(['/company-leave-request-list']);
                //  this.getUserid();
            }
        });
    };
    CompanyUserLeaveRequestComponent.prototype.getHours = function (tasks) {
        var time = 0;
        tasks.forEach(function (element) {
            time = time + element.planned_hour + element.buffer_hour;
        });
        return time;
    };
    CompanyUserLeaveRequestComponent.prototype.getTotalHours = function (total) {
        // console.log(total)
        //   let totalhr = 0;
        //   total.forEach(element => {
        //     // console.log("K"+element)
        //     element.forEach(element1 => {
        //       element1.forEach(element2 => {
        //     totalhr = totalhr+element2.planned_hour+element2.buffer_hour
        //   });
        //   });
        // });
        //   return totalhr
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyUserLeaveRequestComponent.prototype, "closeBtn", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn1'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyUserLeaveRequestComponent.prototype, "closeBtn1", void 0);
    CompanyUserLeaveRequestComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'company-user-leave-request',
            template: __webpack_require__("../../../../../src/app/components/company-user-leave-request/company-user-leave-request.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-user-leave-request/company-user-leave-request.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__angular_router__["ActivatedRoute"],
            __WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], CompanyUserLeaveRequestComponent);
    return CompanyUserLeaveRequestComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-users/company-users.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".side-bar-menu{background:#fff;}\r\n.side-bar-menu li{    border-bottom: 1px solid #e4e4e4;}\r\n.side-bar-menu li a{color:#111;text-align:left;padding: 20px 23px;}\r\n.side-bar-menu li a:hover{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:focus{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:active{background-color: #fe6a07;color:#fff;}\r\n\r\nul.breadcrumb {\r\n    padding: 10px 0;\r\n    list-style: none;\r\n\r\n    text-align: left;\r\n    color: #d68956;\r\n}\r\nul.breadcrumb li {\r\n    display: inline;\r\n    font-size: 15px;\r\n}\r\nul.breadcrumb li+li:before {\r\n    padding: 8px;\r\n    color: black;\r\n    content: \"/\\A0\";\r\n}\r\nul.breadcrumb li a {\r\n    color: #bbbbbb;\r\n    text-decoration: none;\r\n}\r\nul.breadcrumb li a:hover {\r\n    color: #d68956;\r\n    text-decoration: none;\r\n\r\n}\r\n.breadcrumb{    background-color: #f6f7fa;}\r\n\r\n\r\n.example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}\r\n.modal-dialog{max-width:900px !important;width:100%;}\r\n.user{width:280px;height:280px;border-radius:50%;margin:0 auto;float:none;overflow:hidden; background: #d45d0e;margin-top: 20%;\r\n    margin-bottom: 20%;text-align:center;}\r\n    .user:hover{opacity:0.6;cursor:pointer;}\r\n.user img{width:120%;max-width: 287px;min-width: 287px;}\r\n\r\n.brdr-left{    width: 1px;\r\n    height: 155px;\r\n    float: left;\r\n    margin-top: 36%;\r\n    display: inherit;\r\n    background: #efecec;\r\n    margin-right: 21px;}\r\n  .user .fa-camera{color:#fff;font-size:50px;text-align:center;background: #d45d0e;padding-top:204%;}\r\n\r\n\r\n    /*---------------------------------- asif new changes--------------------------------------------- */\r\n\r\n    .userbg{background:#fff;padding:20px;overflow: hidden;position:relative;margin-bottom: 26px;}\r\n    .userrelative{width:45px;height:45px;position:relative;float:left;}\r\n    .userdp{width:42px;height:42px;border-radius:50%;overflow:hidden;float:left;background:#555657;}\r\n    .activeuser{width:12px;height:12px;position:absolute;z-index:100;right:0;top:26px;background:#3bbb47;border-radius: 50%;}\r\n    .inactiveuser{width:12px;height:12px;position:absolute;z-index:100;right:0;top:26px;background:#96a597;border-radius: 50%;}\r\n    .userbg h2{font-size:13px;color:#3d3c3c;text-align:left;text-transform:capitalize;margin: 0;padding-bottom: 2px;}\r\n    .userbg p{font-size:11px;color:#828282;text-align:left;margin: 0;}\r\n    .useredits{position:absolute;right:0;top:0;background:#fe6a07;padding:6px;z-index:10;}\r\n    .useredits .fa{color:#fff;font-size:14px;float:left;margin-left:3px;} \r\n    .optionz {    margin-top: 17px;\r\n      margin-right: 1%;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-users/company-users.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n\r\n      <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n        <!-- sidebar-->\r\n\r\n        <company-sidebar></company-sidebar>\r\n        <!-- end sidebar-->\r\n      </div>\r\n\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n        <!-- topbar-->\r\n        <company-topbar></company-topbar>\r\n\r\n        <!-- end topbar-->\r\n\r\n\r\n        <div class=\"user-dashboard\">\r\n          <div class=\"col-md-4\">\r\n          <h2>Users</h2>\r\n          <ul class=\"breadcrumb\">\r\n            <li>\r\n              <a href=\"#\">users</a>\r\n            </li>\r\n\r\n\r\n            <li>userslist</li>\r\n          </ul>\r\n          </div>\r\n          <div class=\"row\">\r\n            <!-----------------------------------------------------------------table-------------------------------------->\r\n\r\n\r\n            <!-- <p>You selected: {{selected}} </p> -->\r\n\r\n            <div class=\"\">\r\n              <div class=\"\">\r\n                <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\" >\r\n            <div class=\"\"  >\r\n                <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n            <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n              <animateTransform attributeType=\"xml\"\r\n                attributeName=\"transform\"\r\n                type=\"rotate\"\r\n                from=\"0 25 25\"\r\n                to=\"360 25 25\"\r\n                dur=\"0.6s\"\r\n                repeatCount=\"indefinite\"/>\r\n              </path>\r\n            </svg>\r\n        </div>\r\n        </div> -->\r\n\r\n                \r\n                <div class=\"col-md-3 optionz pull-right\">\r\n                      \r\n                        <div *ngIf=\"all_value\">\r\n                          <mat-form-field class=\"filter\">\r\n  \r\n                            <mat-select (change)=\"refresh()\" [(value)]=\"selected\">\r\n                              <!-- <mat-option>None</mat-option> -->\r\n                              <mat-option value=\"All\">All</mat-option>\r\n                              <mat-option value=\"Active\">Active</mat-option>\r\n                              <mat-option value=\"Block\">Block</mat-option>\r\n                              <mat-option value=\"Deleted\">Deleted</mat-option>\r\n                              <!-- <mat-option value=\"Delete\">Delete </mat-option> -->\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n                        </div>\r\n                </div>\r\n                <div id=\"custom-search-input\" class=\"col-md-4 pull-right\">\r\n                    <br>\r\n                      <div class=\"input-group\">\r\n                          <input type=\"text\" class=\"search-query form-control\" placeholder=\"Filter\" value=\"\" [(ngModel)]=\"searchTermTeam\"/>\r\n                          <span class=\"input-group-btn\">\r\n                              <button class=\"btn btn-danger\" type=\"button\">\r\n                                  <span class=\" glyphicon glyphicon-search\"></span>\r\n                              </button>\r\n                          </span>\r\n                      </div>\r\n                  </div>\r\n\r\n                  <div class=\"add-button\">\r\n                    <button type=\"button\" class=\"add-project\" data-toggle=\"modal\" (click)=\"addNewUser()\" data-target=\"#addModal\" data-backdrop=\"static\">+</button>\r\n                  </div>\r\n                <div class=\"clearfix\"></div>\r\n                <div class=\"col-sm-4\" *ngFor=\"let item of data | users:searchTermTeam\">\r\n                    \r\n                 \r\n                    <div class=\"userbg\">\r\n                      \r\n                       \r\n                      <div class=\"userrelative\">\r\n                        <div class=\"userdp\">\r\n                            <img src=\"../assets/profile_upload/{{item.tbl_login.profile_image}}\" alt=\"\" width=\"\" height=\"\" >\r\n                        </div>\r\n                        <div  *ngIf=\"item.tbl_login.delete_status==false && item.tbl_login.block_status == false\"class=\"activeuser\"></div>\r\n                        <div  *ngIf=\"item.tbl_login.delete_status==true || item.tbl_login.block_status == true\"class=\"inactiveuser\"></div>\r\n                      </div>\r\n                      <div class=\"col-md-8\">\r\n                        <h2>{{item.f_name}} {{item.l_name}}</h2>\r\n                        <p>{{item.email}}</p>\r\n                        <p>{{item.contact_no}}</p>\r\n                      </div>\r\n                      <div class=\"useredits\" *ngIf=\"item.tbl_login.delete_status==false\" >\r\n                        <i matTooltip=\"Edit\" *ngIf=\"item.tbl_login.is_verified==false && item.tbl_login.delete_status==false\" (click)=\"getEditId(item.tbl_login.id)\"\r\n                        data-toggle=\"modal\" data-target=\"#editModal\"  aria-hidden=\"true\" class=\"fa fa-pencil\"></i>\r\n                       \r\n\r\n                        <i matTooltip=\"Delete\" *ngIf=\"item.tbl_login.delete_status==false && (item.tbl_login.block_status==false  || item.tbl_login.block_status==true)\"\r\n                        (click)=\"getId(item.tbl_login.id)\" data-toggle=\"modal\" data-target=\"#deleteModal\" aria-hidden=\"true\" class=\"fa fa-trash\"></i>\r\n\r\n                        <i matTooltip=\"Block\" *ngIf=\"item.tbl_login.block_status==false && item.tbl_login.delete_status==false\"\r\n                        (click)=\"blockUser(item.tbl_login.id)\" class=\"fa fa-ban\" aria-hidden=\"true\"></i>\r\n\r\n                        <i matTooltip=\"Unblock\" *ngIf=\"item.tbl_login.block_status==true && item.tbl_login.delete_status==false\"\r\n                        (click)=\"unblockUser(item.tbl_login.id)\" class=\"fa fa-history\" aria-hidden=\"true\"></i>\r\n\r\n\r\n                  \r\n                        <!-- <button *ngIf=\" row.tbl_login.block_status==true && row.tbl_login.delete_status==false\"\r\n                        (click)=\"unblockUser(row.tbl_login.id)\" mat-menu-item>\r\n                        <i class=\"material-icons\">block</i>\r\n                        <span>Unblock</span>\r\n                      </button> -->\r\n\r\n\r\n                      \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n   \r\n\r\n                  <!-- <div class=\"col-sm-4\">\r\n                  <div class=\"userbg\">\r\n                    <div class=\"userrelative\">\r\n                      <div class=\"userdp\">\r\n                      </div>\r\n                      <div class=\"inactiveuser\"></div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                      <h2>Asif Marakkar</h2>\r\n                      <p>asifmunnas35@gmail.com</p>\r\n                      <p>+91 8943498992</p>\r\n                    </div>\r\n                    <div class=\"useredits\">\r\n                      <i aria-hidden=\"true\" class=\"fa fa-pencil\"></i>\r\n                      <i aria-hidden=\"true\" class=\"fa fa-trash\"></i>\r\n                    </div>\r\n                  </div>\r\n                  </div> -->\r\n                 <!-- <div class=\"col-sm-4\">\r\n                  <div class=\"userbg\">\r\n                    <div class=\"userrelative\">\r\n                      <div class=\"userdp\">\r\n                      </div>\r\n                      <div class=\"inactiveuser\"></div>\r\n                    </div>\r\n                    <div class=\"col-md-8\">\r\n                      <h2>Asif Marakkar</h2>\r\n                      <p>asifmunnas35@gmail.com</p>\r\n                      <p>+91 8943498992</p>\r\n                    </div>\r\n                    <div class=\"useredits\">\r\n                      <i aria-hidden=\"true\" class=\"fa fa-pencil\"></i>\r\n                      <i aria-hidden=\"true\" class=\"fa fa-trash\"></i>\r\n                    </div>\r\n                  </div>\r\n                  </div> -->\r\n\r\n\r\n\r\n                <!--    \r\n              <div class=\"example-header\" >\r\n                  <mat-form-field>\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                  </mat-form-field>\r\n              </div> -->\r\n\r\n                <!-- <div class=\"example-container mat-elevation-z8 \">\r\n                  <div *ngIf=\"preloader\">\r\n                    <app-spinner></app-spinner>\r\n                  </div>\r\n\r\n                  <mat-table [dataSource]=\"dataSource\" matSort>\r\n                    <ng-container matColumnDef=\"slno\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header>Sl_No </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row;let i = index\">{{(paginator.pageIndex * paginator.pageSize) + (i+1)}} </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"name\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header>NAME </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.f_name}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"email\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> EMAIL </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.email}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"contactnumber\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> CONTACT NUMBER </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.contact_no}}</mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"status\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> STATUS </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\">\r\n                        <div *ngIf=\"row.tbl_login.block_status==false && row.tbl_login.delete_status==false\"> Active</div>\r\n                        <div *ngIf=\"row.tbl_login.block_status==true && row.tbl_login.delete_status==false \"> Blocked</div>\r\n                        <div *ngIf=\"row.tbl_login.delete_status==true \"> Deleted</div>\r\n\r\n                      </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"action\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\">\r\n                        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n                          <mat-icon>more_vert</mat-icon>\r\n                        </button>\r\n                        <mat-menu #menu=\"matMenu\">\r\n                          <button *ngIf=\"row.tbl_login.is_verified==false && row.tbl_login.delete_status==false\" (click)=\"getEditId(row.tbl_login.id)\"\r\n                            data-toggle=\"modal\" data-target=\"#editModal\" mat-menu-item>\r\n                            <i class=\"material-icons\">mode_edit</i>\r\n                            <span>Edit</span>\r\n                          </button>\r\n                          <button *ngIf=\"row.tbl_login.delete_status==false && (row.tbl_login.block_status==false  || row.tbl_login.block_status==true)\"\r\n                            (click)=\"getId(row.tbl_login.id)\" data-toggle=\"modal\" data-target=\"#deleteModal\" mat-menu-item>\r\n                            <i class=\"material-icons\">delete</i>\r\n                            <span>Delete</span>\r\n                          </button>\r\n\r\n\r\n                          <button *ngIf=\"row.tbl_login.is_verified==true && row.tbl_login.block_status==false && row.tbl_login.delete_status==false\"\r\n                            (click)=\"blockUser(row.tbl_login.id)\" mat-menu-item>\r\n                            <i class=\"material-icons\">block</i>\r\n                            <span>Block</span>\r\n                          </button>\r\n                          <button *ngIf=\"row.tbl_login.is_verified==true && row.tbl_login.block_status==true && row.tbl_login.delete_status==false\"\r\n                            (click)=\"unblockUser(row.tbl_login.id)\" mat-menu-item>\r\n                            <i class=\"material-icons\">block</i>\r\n                            <span>Unblock</span>\r\n                          </button>\r\n                          <button *ngIf=\"row.tbl_login.delete_status==true\" mat-menu-item disabled>\r\n                            <i class=\"material-icons\">delete_forever</i>\r\n                            <span>Deleted</span>\r\n                          </button>\r\n                        </mat-menu>\r\n\r\n                      </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                  </mat-table>\r\n                  <div class=\"col-md-15 \">\r\n           \r\n                  </div>\r\n                  <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n                    <div class=\"col-md-4 col-md-offset-4\">\r\n                      <mat-toolbar class=\"back-color\">No item found!</mat-toolbar>\r\n                    </div>\r\n                  </div>\r\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                </div> -->\r\n\r\n\r\n              </div>\r\n            </div>\r\n        \r\n            <!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n\r\n            <div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn2>&times;</button>\r\n                    <h4 class=\"modal-title\">Delete </h4>\r\n                  </div>\r\n                  <!-- <div class=\"modal-header\"> -->\r\n                  <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n                  <!-- </div> -->\r\n                  <div class=\"modal-body delete-popup\">\r\n                    <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n                    <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n                  </div>\r\n\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" [disabled]=\"deleteuserBtnDisable\" (click)=\"deleteUser(id)\" class=\"btn round-button\" data-dismiss=\"modal\">Delete</button>\r\n                    <div *ngIf=\"deleteSpinner\">\r\n                      <app-spinner></app-spinner>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <!-----------------------------------------------------------------delete modal-------------------------------------->\r\n            <!-----------------------------------------------------------------add modal-------------------------------------->\r\n            <div id=\"addModal\" class=\"modal fade\">\r\n              <div class=\"modal-dialog\">\r\n\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn>&times;</button>\r\n                    <h4 class=\"modal-title\">Add New User</h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"addUser(newUser);\">\r\n                      <div class=\"col-md-7\">\r\n                        <div class=\"form-group\">\r\n                          <div class=\"example-container\">\r\n                            <mat-form-field>\r\n                              <input matInput placeholder=\"Email\" [formControl]=\"email\" name=\"email\" [(ngModel)]=\"newUser.email\">\r\n                              <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                              <input matInput placeholder=\"First Name\" name=\"f_name\" [(ngModel)]=\"newUser.f_name\" pattern=\"[A-Za-z]\">\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                              <input matInput placeholder=\"Last Name\" name=\"l_name\" [(ngModel)]=\"newUser.l_name\" pattern=\"[A-Za-z]\">\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n\r\n                              <mat-select placeholder=\"Gender\" name=\"gender\" [(ngModel)]=\"newUser.gender\">\r\n\r\n                                <mat-option value=\"Male\">Male</mat-option>\r\n                                <mat-option value=\"Female\">Female</mat-option>\r\n\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                              <input matInput placeholder=\"Phone Number\" name=\"contact_no\" [(ngModel)]=\"newUser.contact_no\" min=\"10\">\r\n\r\n\r\n                            </mat-form-field>\r\n\r\n                            <!-- <mat-form-field>\r\n\r\n                              <mat-select placeholder=\"Designation\" name=\"design\" [(ngModel)]=\"newUser.design\">\r\n\r\n                                <mat-option *ngFor=\"let item of designation\" [value]=\"item.id\">{{item.designation}}</mat-option>\r\n\r\n                              </mat-select>\r\n                            </mat-form-field> -->\r\n                            <mat-form-field>\r\n\r\n                              <mat-select placeholder=\"Previous Experience\" name=\"pre_exp\" [(ngModel)]=\"newUser.pre_exp\">\r\n\r\n                                <mat-option *ngFor=\"let item of prevexp\" [value]=\"item.id\">{{item.exp_range}}</mat-option>\r\n\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n\r\n                              <mat-select placeholder=\"User Group\" name=\"user_group\" [(ngModel)]=\"newUser.user_group\">\r\n\r\n                                <mat-option *ngFor=\"let item of usergroup\" [value]=\"item.id\">{{item.role}}</mat-option>\r\n\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field *ngIf=\"newUser.user_group == 4\">\r\n                              <mat-select placeholder=\"Team\" name='team' #group=\"ngModel\" [(ngModel)]=\"newUser.team\" multiple>\r\n                                <mat-option [value]=\"item\" *ngFor=\"let item of team;\">{{item.team_name}}</mat-option>\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                              <input matInput [matDatepicker]=\"picker\" placeholder=\"Join date\" name=\"join_date\" [(ngModel)]=\"newUser.join_date\">\r\n                              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                              <mat-datepicker #picker></mat-datepicker>\r\n                            </mat-form-field>\r\n\r\n\r\n                          </div>\r\n\r\n                        </div>\r\n                        <br>\r\n                        <!-- <div *ngIf=\"showSpinner\">\r\n                                      <mat-spinner></mat-spinner>\r\n                                     </div> -->\r\n\r\n\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-4\">\r\n                            <button type=\"submit\" [disabled]=\"addUserBtnDisable\" class=\"btn round-button\">Submit</button>\r\n                            <div *ngIf=\"addUserSpinner\">\r\n                              <app-spinner></app-spinner>\r\n                            </div>\r\n                          </div>\r\n                          <!-- <div class=\"col-md-8\" *ngIf=\"showSpinner\">\r\n                      <svg class=\"svgclass\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                        x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\"\r\n                        xml:space=\"preserve\">\r\n                        <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                          <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n                          />\r\n                        </path>\r\n                      </svg>\r\n                    </div> -->\r\n\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n                      <div class=\"col-md-5\">\r\n                        <div class=\"brdr-left\"></div>\r\n\r\n\r\n                        <div class=\"user\">\r\n                          <label for=\"file-input\">\r\n                            <!-- <img *ngIf=\"!newUser.photoSrc\" src=\"./assets/images/user.png\"/>\r\n                      <img *ngIf=\"newUser.photoSrc\" [src]=\"newUser.photoSrc\"/> -->\r\n                            <img *ngIf=\"newUser.photoSrc\" [src]=\"newUser.photoSrc\">\r\n                            <i *ngIf=\"!newUser.photoSrc\" class=\"fa fa-camera\"></i>\r\n                          </label>\r\n\r\n                        </div>\r\n                        <input style=\"display: none;\" (change)=\"displayPhoto($event)\" accept=\".png,.jpeg,.jpg,.bmp,.gif\" id=\"file-input\" name=\"file\"\r\n                          type=\"file\" />\r\n\r\n                      </div>\r\n\r\n                    </form>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <!----------------------------------------addModal------------------------------>\r\n\r\n\r\n\r\n\r\n\r\n            <!-----------------------------------------------------------------Edit modal-------------------------------------->\r\n            <div id=\"editModal\" class=\"modal fade\">\r\n              <div class=\"modal-dialog\">\r\n\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn1>&times;</button>\r\n                    <h4 class=\"modal-title\">Update User</h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form (ngSubmit)=\" updateUser(user)\">\r\n                      <div class=\"col-md-7\">\r\n                        <div class=\"form-group\">\r\n                          <div class=\"example-container\">\r\n\r\n                            <label>{{user.email}} </label>\r\n\r\n\r\n                            <mat-form-field>\r\n                              <input matInput placeholder=\"First Name\" name=\"f_name\" [(ngModel)]=\"user.f_name\" pattern=\"[A-Za-z]\">\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                              <input matInput placeholder=\"Last Name\" name=\"l_name\" [(ngModel)]=\"user.l_name\" pattern=\"[A-Za-z]\">\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n\r\n                              <mat-select placeholder=\"Gender\" name=\"gender\" [(ngModel)]=\"user.gender\">\r\n\r\n                                <mat-option value=\"Male\">Male</mat-option>\r\n                                <mat-option value=\"Female\">Female</mat-option>\r\n\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                              <input matInput placeholder=\"Phone Number\" name=\"contact_no\" [(ngModel)]=\"user.contact_no\" min=\"10\">\r\n\r\n\r\n                            </mat-form-field>\r\n\r\n                            <!-- <mat-form-field>\r\n\r\n                              <mat-select placeholder=\"Designation\" name=\"design\" [(ngModel)]=\"user.designation_id\">\r\n\r\n                                <mat-option *ngFor=\"let item of designation\" [value]=\"item.id\">{{item.designation}}</mat-option>\r\n\r\n                              </mat-select>\r\n                            </mat-form-field> -->\r\n                            <mat-form-field>\r\n\r\n                              <mat-select placeholder=\"Previous Experience\" name=\"pre_exp\" [(ngModel)]=\"user.prev_exp_id\">\r\n\r\n                                <mat-option *ngFor=\"let item of prevexp\" [value]=\"item.id\">{{item.exp_range}}</mat-option>\r\n\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n\r\n                              <mat-select placeholder=\"User Group\" name=\"user_group\" [(ngModel)]=\"user.role_id\">\r\n\r\n                                <mat-option *ngFor=\"let item of usergroup\" [value]=\"item.id\">{{item.role}}</mat-option>\r\n\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n\r\n                            <mat-form-field *ngIf=\"user.role_id == 4\">\r\n                              <mat-select placeholder=\"Team\" name='team' #group=\"ngModel\" [(ngModel)]=\"user.team\" multiple>\r\n                                <mat-option [value]=\"item.id\" *ngFor=\"let item of team;\">{{item.team_name}}</mat-option>\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-form-field>\r\n                              <input matInput [matDatepicker]=\"picker1\" placeholder=\"Join date\" name=\"join_date\" [(ngModel)]=\"user.join_date\">\r\n                              <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                              <mat-datepicker #picker1></mat-datepicker>\r\n                            </mat-form-field>\r\n\r\n\r\n                          </div>\r\n\r\n                        </div>\r\n                        <br>\r\n                        <!-- <div *ngIf=\"showSpinner\">\r\n                                <mat-spinner></mat-spinner>\r\n                               </div> -->\r\n\r\n\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-4\">\r\n                            <button type=\"submit\" [disabled]=\"editBtnDisable\" class=\"btn round-button\">Update</button>\r\n                            <div *ngIf=\"editSpinner\">\r\n                              <app-spinner></app-spinner>\r\n                            </div>\r\n                          </div>\r\n                          <!-- <div class=\"col-md-8\" *ngIf=\"showSpinner\">\r\n                <svg class=\"svgclass\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                  x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\"\r\n                  xml:space=\"preserve\">\r\n                  <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                    <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n                    />\r\n                  </path>\r\n                </svg>\r\n              </div> -->\r\n\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n                      <div class=\"col-md-5\">\r\n                        <div class=\"brdr-left\"></div>\r\n\r\n\r\n                        <div class=\"user\">\r\n                          <label for=\"file-input1\">\r\n                            <!-- <img src=\"../assets/profile_upload/1521016755851_846408.jpeg\"> -->\r\n                            <img *ngIf=\"user.editPhotoSrc\" [src]=\"user.editPhotoSrc\">\r\n                            <img *ngIf=\"user.photoSrc && user.editPhotoSrc != ''\" src=\"../assets/profile_upload/{{user.photoSrc}}\">\r\n                            <i *ngIf=\"!user.photoSrc && user.editPhotoSrc != ''\" class=\"fa fa-camera\"></i>\r\n                          </label>\r\n\r\n                        </div>\r\n                        <input style=\"display: none;\" (change)=\"displayEditPhoto($event)\" accept=\".png,.jpeg,.jpg,.bmp,.gif\" id=\"file-input1\" name=\"file\"\r\n                          type=\"file\" />\r\n\r\n                      </div>\r\n\r\n                    </form>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <!----------------------------------------addModal------------------------------>\r\n            <!-----------------------------------------------------------------end table-------------------------------------->\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <!-- footer-->\r\n      <!-- <company-footer></company-footer> -->\r\n      <!-- end footer-->\r\n    </div>\r\n  </div>\r\n  <!-- Modal -->\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-users/company-users.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyUsersComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__("../../../forms/esm5/forms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var CompanyUsersComponent = (function () {
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin user management
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 06-03-2018
    // Last Modified : 
    // Desc          : All users
    function CompanyUsersComponent(companyService, routes, snackBar) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.displayedColumns = ['slno', 'name', 'email', 'contactnumber', 'status', 'action'];
        this.notExist = false;
        this.selected = 'All';
        this.all_value = false;
        this.preloader = false;
        this.showSpinner = false;
        this.addUserBtnDisable = false;
        this.addUserSpinner = false;
        this.editBtnDisable = false;
        this.editSpinner = false;
        this.deleteuserBtnDisable = false;
        this.deleteSpinner = false;
        this.user = {
            //email: '',
            f_name: '',
            l_name: '',
            gender: '',
            contact_no: '',
            design: '',
            pre_exp: '',
            user_group: '',
            team: [],
            join_date: '',
            photoSrc: '',
            imgFile: [],
            editPhotoSrc: ''
        };
        this.newUser = {
            email: '',
            f_name: '',
            l_name: '',
            gender: '',
            contact_no: '',
            design: '',
            pre_exp: '',
            user_group: '',
            team: [],
            join_date: '',
            photoSrc: '',
            imgFile: []
        };
        this.email = new __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormControl"]('', [__WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].required, __WEBPACK_IMPORTED_MODULE_2__angular_forms__["Validators"].email]);
    }
    CompanyUsersComponent.prototype.getErrorMessage = function () {
        // return this.email.hasError('required') ? 'You must enter a value' :
        //   this.email.hasError('email') ? 'Not a valid email' :
        //     '';
    };
    CompanyUsersComponent.prototype.refresh = function () {
        var _this = this;
        // // console.log("hj");
        this.showSpinner = true;
        //  // console.log(this.selected);
        var company = [];
        if (this.selected == 'All') {
            this.companyService.getAllusers().subscribe(function (data) {
                if (data.length != 0) {
                    _this.all_value = true;
                }
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Active') {
            this.companyService.getAllactiveusers().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Block') {
            this.companyService.getAllblockedusers().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
        if (this.selected == 'Deleted') {
            this.companyService.getAlldeleteusers().subscribe(function (data) {
                _this.loadToDataTable(data);
                _this.showSpinner = false;
            });
        }
    };
    CompanyUsersComponent.prototype.loadToDataTable = function (data) {
        this.preloader = false;
        // console.log(data);
        this.notExist = false;
        if (data.length == 0) {
            this.notExist = true;
        }
        this.data = data;
        // this.dataSource = new MatTableDataSource(data);
        // // // console.log(this.dataSource);
        // this.dataSource.paginator = this.paginator;
        // this.dataSource.sort = this.sort;
    };
    CompanyUsersComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.preloader = true;
        this.logedinOrnotChecking();
        this.refresh();
        this.companyService.getAllusergroup().subscribe(function (res) {
            _this.usergroup = res;
        });
        this.companyService.getAllDesignation().subscribe(function (res) {
            _this.designation = res;
        });
        this.companyService.getAllPrevexp().subscribe(function (res) {
            _this.prevexp = res;
        });
        this.companyService.getAllTeam().subscribe(function (res) {
            _this.team = res;
        });
    };
    CompanyUsersComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        console.log(filterValue);
        console.log(this.dataSource);
        this.dataSource.filter = filterValue;
    };
    CompanyUsersComponent.prototype.logedinOrnotChecking = function () {
        var _this = this;
        this.companyService.getLoggedinEntity().subscribe(function (data) {
            if (!data || data == null || data == '' || data == [] || (data !== undefined && data.length == 0)) {
                _this.routes.navigate(['/home']);
            }
            if (data.role_id == 2) {
                //super admin
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/home']);
                }
                _this.routes.navigate(['/admin-dashboard']);
            }
            if (data.role_id == 3 || data.role_id == 1) {
                //company admin or pm
                if (data.delete_status == true || data.block_status == true || data.cmp_status == "Not Verified") {
                    _this.routes.navigate(['/company-login']);
                }
                if (data.cmp_status == "Expired") {
                    _this.routes.navigate(['/expired']);
                }
                if (data.is_profile_completed == false) {
                    _this.routes.navigate(['/compay-aditninfo', data.cmp_id]);
                }
                // this.routes.navigate(['/company-dashboard']);
            }
            if (data.role_id == 4) {
                //user
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/company-login']);
                }
                _this.routes.navigate(['/user-dashboard']);
            }
        });
    };
    CompanyUsersComponent.prototype.addNewUser = function () {
        //this.showSpinner =false;
        //this.showSpinnerDelete =false;
        this.newUser = {
            email: '',
            f_name: '',
            l_name: '',
            gender: '',
            contact_no: '',
            design: '',
            pre_exp: '',
            user_group: '',
            team: [],
            join_date: '',
            photoSrc: '',
            imgFile: []
        };
    };
    CompanyUsersComponent.prototype.getId = function (id) {
        // this.showSpinner =false
        // this.showSpinnerDelete =false
        this.id = id;
        //  // console.log(this.id)
    };
    //delete company
    CompanyUsersComponent.prototype.deleteUser = function (id) {
        var _this = this;
        this.deleteuserBtnDisable = true;
        this.deleteSpinner = true;
        // console.log(id);
        this.showSpinner = true;
        this.companyService.deleteUser(id).subscribe(function (data) {
            // // console.log(data);
            if (data.success) {
                _this.deleteuserBtnDisable = false;
                _this.deleteSpinner = false;
                _this.showSpinner = false;
                _this.closeBtn2.nativeElement.click();
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                _this.deleteuserBtnDisable = false;
                _this.deleteSpinner = false;
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    //block company
    CompanyUsersComponent.prototype.blockUser = function (id) {
        var _this = this;
        //// console.log(id);
        this.companyService.blockUser(id).subscribe(function (data) {
            console.log(data);
            if (data.success) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    //unblock company
    CompanyUsersComponent.prototype.unblockUser = function (id) {
        var _this = this;
        this.companyService.unblockUser(id).subscribe(function (data) {
            // // console.log(data);
            if (data.success) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    CompanyUsersComponent.prototype.displayPhoto = function (fileInput) {
        var _this = this;
        var ext = fileInput.target.files[0].name.split('.').pop().toLowerCase();
        if (['gif', 'png', 'jpg', 'jpeg'].indexOf(ext) < 0) {
            // fileInput.target.files.remove(0);
            this.newUser.photoSrc = '';
            alert('Please select a valid image [ jpg | jpeg | gif | png ]');
            return false;
        }
        //this.newUser.imgFile =ext;
        // console.log(fileInput);
        this.newUser.imgFile = fileInput.target.files[0];
        if (fileInput.target.files && fileInput.target.files[0]) {
            var reader = new FileReader();
            reader.onload = (function (e) {
                _this.newUser.photoSrc = e.target['result'];
            });
            reader.readAsDataURL(fileInput.target.files[0]);
        }
    };
    CompanyUsersComponent.prototype.displayEditPhoto = function (fileInput) {
        var _this = this;
        var ext = fileInput.target.files[0].name.split('.').pop().toLowerCase();
        if (['gif', 'png', 'jpg', 'jpeg'].indexOf(ext) < 0) {
            // fileInput.target.files.remove(0);
            this.user.editPhotoSrc = '';
            alert('Please select a valid image [ jpg | jpeg | gif | png ]');
            return false;
        }
        //this.newUser.imgFile =ext;
        // console.log(fileInput);
        this.user.imgFile = fileInput.target.files[0];
        if (fileInput.target.files && fileInput.target.files[0]) {
            var reader = new FileReader();
            reader.onload = (function (e) {
                _this.user.editPhotoSrc = e.target['result'];
            });
            reader.readAsDataURL(fileInput.target.files[0]);
        }
    };
    CompanyUsersComponent.prototype.addUser = function (newUser) {
        var _this = this;
        console.log("hereeeeeeeeeeeeee");
        console.log(newUser);
        // this.addUserBtnDisable = true;
        // this.addUserSpinner = true;
        this.showSpinner = true;
        if (newUser.email == '') {
            var snackBarRef = this.snackBar.open('* Failed, You must enter a email!', '', {
                duration: 2000
            });
            this.addUserBtnDisable = false;
            this.addUserSpinner = false;
        }
        else if (this.email.hasError('email')) {
            var snackBarRef = this.snackBar.open('* Failed, Please enter a valid email!', '', {
                duration: 2000
            });
            this.addUserBtnDisable = false;
            this.addUserSpinner = false;
        }
        else {
            this.companyService.addUser(this.newUser).subscribe(function (addUser) {
                if (!addUser.success) {
                    _this.showSpinner = false;
                    var snackBarRef = _this.snackBar.open(addUser.msg, '', {
                        duration: 2000
                    });
                    _this.addUserBtnDisable = false;
                    _this.addUserSpinner = false;
                    _this.refresh();
                }
                else if (addUser.success) {
                    _this.showSpinner = false;
                    var snackBarRef = _this.snackBar.open(addUser.msg, '', {
                        duration: 2000
                    });
                    _this.addUserBtnDisable = false;
                    _this.addUserSpinner = false;
                    _this.closeBtn.nativeElement.click();
                    _this.refresh();
                }
            });
        }
    };
    CompanyUsersComponent.prototype.getEditId = function (id) {
        var _this = this;
        //  // console.log(id);
        this.showSpinner = false;
        this.companyService.getSingleuser(id).subscribe(function (data) {
            _this.user = data;
            var teams = [];
            data.tbl_team_assocs.forEach(function (element) {
                teams.push(element.team_id);
            });
            _this.user.team = teams;
            _this.user.photoSrc = data.tbl_login.profile_image;
            // this.user.editPhotoSrc ='';
            //this.user.join_date = this.user.join_date.substring(0, 10);
            // // console.log(data.tbl_login.profile_image);
            if (data.success == false) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
            }
            _this.user = data;
            // // console.log(this.user.design);
        });
    };
    CompanyUsersComponent.prototype.updateUser = function (user) {
        var _this = this;
        this.editBtnDisable = true;
        this.editSpinner = true;
        // console.log(user);
        this.showSpinner = true;
        this.companyService.updateUser(this.user).subscribe(function (data) {
            if (!data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.editBtnDisable = false;
                _this.editSpinner = false;
            }
            else if (data.success) {
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.editBtnDisable = false;
                _this.editSpinner = false;
                _this.closeBtn1.nativeElement.click();
                _this.refresh();
            }
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyUsersComponent.prototype, "closeBtn", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn1'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyUsersComponent.prototype, "closeBtn1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn2'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], CompanyUsersComponent.prototype, "closeBtn2", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], CompanyUsersComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], CompanyUsersComponent.prototype, "sort", void 0);
    CompanyUsersComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-users',
            template: __webpack_require__("../../../../../src/app/components/company-users/company-users.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-users/company-users.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], CompanyUsersComponent);
    return CompanyUsersComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-view-project/company-view-project.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".task-main{background:#fff;width:100%;padding:20px;overflow: hidden;margin-bottom: 13px;}\r\n.subtasks{    background: #fbfbfb;padding:15px 20px;margin-bottom: 10px;}\r\n.task-main h3{font-size: 16px;\r\n    color: #3d3c3c;\r\n    text-align: left;\r\n    text-transform: capitalize;\r\n    margin: 0;\r\n    padding-bottom: 2px;\r\n    float: left;\r\n    font-weight: 400;\r\n    font-family: arial;\r\n    line-height: 34px;}\r\n#demo{margin:10px 0;}\r\n.statusbt{    border: 1px solid #5bc0de;\r\n    color: #5bc0de;\r\n    border-radius: 5px;\r\n    font-size: 12px;\r\n    background: none;\r\n    padding: 11px 29px;}\r\n.morebt{    color: #ffffff;\r\n    border-radius: 43px;\r\n    font-size: 12px;\r\n    background: #de894f;\r\n    padding: 11px 18px;\r\n    margin-left: 5px;\r\n    transition: opacity 2s;\r\n    -webkit-transition: opacity 2s;\r\n    margin-left: 26px;}\r\n.morebt .fa{margin-right:4px;}\r\n.morebt:hover{opacity:0.5;text-decoration:none;}\r\na:focus, a:hover{text-decoration:none;}\r\n\r\n.timebox .fa{font-size: 40px;}\r\n.timedate p{font-size: 12px;}\r\n.timedate h5 {\r\n    line-height: 20px;\r\n    font-size: 16px;\r\n    margin-top: 0px;\r\n    float: left;\r\n    text-align: left;\r\n    color: #636161;\r\n    margin-left: -2px;\r\n    margin-bottom: 0;\r\n}\r\n.timebox{    margin: 0px 10px;\r\n    margin-top: 0px;\r\n    float: right;\r\n    margin-right: 21px;}\r\n.topborder {\r\n    min-height: 31px;\r\n    width: 1px;\r\n    background: #ccc;\r\n    float: left;\r\n    margin-left: 10px;\r\n    margin-top: 4px;\r\n    margin-right: 9px;\r\n}\r\n.colz{float:left;margin-right:28px;}\r\n.colz p{margin-bottom:3px;float:left;width:auto;color: #b9b9b9;clear:left;}\r\n.colz h4{clear: left;color: #755f5f;\r\n        font-size: 15px;margin-bottom: 0;}\r\n.colz h5 {\r\n            clear: left;\r\n            color: #de894f;\r\n            font-size: 18px;\r\n            margin-bottom: 0;    margin-top: -9px;\r\n            line-height: 13px;\r\n        }\r\n.hrtotal .fa{font-size:31px;}\r\n.hrtotal h2{font-size: 21px;margin-bottom:0px;margin-top: 0;}\r\n.hrtotal .topborder{    margin-right: 8px;    min-height: 26px;    margin-left: 20px;}\r\n.hrtotal{    margin-top: 4px;}\r\n.marginr20{margin-right:20px;}\r\n\r\n\r\n.colz h2{    float: left;\r\n    clear:left;\r\n    margin-bottom: 0;\r\n    margin-top: 0px;\r\n    font-size: 27px;}\r\n.amounts h4 {\r\n    font-size: 34px;\r\n    color: #70b735;\r\n    padding-top: 0px;\r\n     margin-top: 1px;\r\n    }", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-view-project/company-view-project.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n\r\n      <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n        <!-- sidebar-->\r\n\r\n        <company-sidebar></company-sidebar>\r\n        <!-- end sidebar-->\r\n      </div>\r\n\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n        <!-- topbar-->\r\n        <company-topbar></company-topbar>\r\n        <!-- end topbar-->\r\n\r\n\r\n        <div class=\"user-dashboard\">\r\n          <!-- <h1>Hello, JS</h1> -->\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 margbt\">\r\n              <div class=\"col-md-4\">\r\n                <ul class=\"breadcrumb text-left\">\r\n                  <li>\r\n                    <a routerLink=\"/project\">Projects</a>\r\n                  </li>\r\n                  <li>Project Details</li>\r\n                </ul>\r\n              </div>\r\n              <div class=\"col-md-8\">\r\n                <div class=\"projctlabel colz pull-right margright0\">\r\n\r\n                </div>\r\n                <div id=\"custom-search-input\" class=\"col-md-5 pull-right\">\r\n                  <div class=\"input-group\">\r\n                    <input type=\"text\" class=\"search-query form-control\" placeholder=\"Filter\" value=\"\" [(ngModel)]=\"searchTermTeam\" />\r\n                    <span class=\"input-group-btn\">\r\n                      <button class=\"btn btn-danger\" type=\"button\">\r\n                        <span class=\" glyphicon glyphicon-search\"></span>\r\n                      </button>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-12 col-sm-12 col-xs-12 gutter \">\r\n\r\n              <div class=\"col-md-12\">\r\n                <div class=\"task-main\">\r\n                  <div class=\"colz\">\r\n                    <h2>{{allProjects?.project_name}}</h2>\r\n                    <p>{{allProjects?.project_code}}</p>\r\n                  </div>\r\n                  <div class=\"pull-right amounts\">\r\n                    <h4>₹{{ allProjects && allProjects?.project_cost}}</h4>\r\n                  </div>\r\n                  <div class=\"timebox\">\r\n                    <i class=\"fa fa-clock-o\"></i>\r\n                    <div class=\"timedate\">\r\n                      <p>\r\n                        <span class=\"xx\">{{allProjects?.planned_start_date| date: 'yyyy-MM-dd'}}</span>\r\n                      </p>\r\n                      <h5 *ngIf=\"allProjects?.planned_start_date\">{{allProjects?.projectstarttime}}\r\n                        <!-- <span class=\"xx\">PM</span> -->\r\n                      </h5>\r\n                    </div>\r\n                    <div class=\"topborder\"></div>\r\n\r\n                    <div class=\"timedate\">\r\n                      <p>\r\n                        <span class=\"xx\">{{allProjects && allProjects?.planned_end_date| date: 'yyyy-MM-dd'}}</span>\r\n                      </p>\r\n                      <h5 *ngIf=\"allProjects?.planned_end_date\">{{allProjects?.projectendtime}}\r\n                        <!-- <span class=\"xx\">PM</span> -->\r\n                      </h5>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n              <div class=\"clearfix\"></div>\r\n              <div class=\"col-md-12\" *ngFor=\"let project of projects  | viewproject:searchTermTeam\">\r\n                <div class=\"task-main\">\r\n                  <h3>{{project?.module_name}}</h3>\r\n                  <a href=\"#demo{{project?.id}}\" class=\"morebt pull-right\" data-toggle=\"collapse\">\r\n                    <i class=\"fa fa-chevron-down\"></i> View Task</a>\r\n                  <!-- <button class=\"statusbt pull-right\">Pending</button> -->\r\n                  <div class=\"timebox hrtotal\">\r\n                    <i class=\"fa fa-clock-o\"></i>\r\n                    <div class=\"timedate\">\r\n                      <h2>{{project?.totalhour}}\r\n                        <span class=\"xx\">Hrs</span>\r\n                      </h2>\r\n                    </div>\r\n                    <div class=\"topborder\"></div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div id=\"demo{{project?.id}}\" class=\"collapse\" *ngFor=\"let i of project.tbl_project_tasks; let i=index\">\r\n                  <div class=\"col-md-11 pull-right subtasks\">\r\n                    <div class=\"colz\">\r\n                      <p>Task Name</p>\r\n                      <h4>{{i.task_name}}</h4>\r\n                    </div>\r\n                    <div class=\"colz\">\r\n                      <p>Assigned Person</p>\r\n                      <h4>{{i.tbl_user_profile.f_name}} {{i.tbl_user_profile.l_name}}</h4>\r\n                    </div>\r\n\r\n                    <div class=\"colz pull-right\">\r\n                      <p>Planned Hours</p>\r\n                      <h5>{{i.planned_hour+i.buffer_hour}} Hrs</h5>\r\n                    </div>\r\n                    <div class=\"colz pull-right\" *ngIf=\"i.actual_hour\">\r\n                      <p>Actual Hours</p>\r\n                      <h5>{{i.actual_hour}} Hrs</h5>\r\n                    </div>\r\n                 \r\n                    <div class=\"colz pull-right\" *ngIf=\"i.tbl_task_status_assocs[0]?.tbl_task_status.id==2 && i.tbl_task_status_assocs[0]?.reason \">\r\n                      <p>Reason to Pause</p>\r\n                      <h5>{{i.tbl_task_status_assocs[0]?.reason}} </h5>\r\n                    </div>\r\n\r\n                    \r\n                    <div class=\"colz pull-right\" *ngIf=\"i.tbl_task_status_assocs[0]?.tbl_task_status.id==4 \">\r\n                      <p>Reason to Hold</p>\r\n                      <h5>{{i.tbl_task_status_assocs[0]?.reason}} </h5>\r\n                    </div>\r\n\r\n                    <div class=\"colz pull-right\" *ngIf=\"i.tbl_task_status_assocs[0]?.progress_id\">\r\n                      <p>Progress Percentage:</p>\r\n                      <h5>{{i.tbl_task_status_assocs[0]?.progress.percentage}}%</h5>\r\n                    </div>\r\n\r\n\r\n                    <button class=\"statusbt pull-right marginr20\">{{i?.tbl_task_status_assocs[0]?.tbl_task_status.status}} </button>\r\n                    <div class=\"timebox\">\r\n                      <i class=\"fa fa-clock-o\"></i>\r\n                      <div class=\"timedate\">\r\n                        <p>\r\n                          <span class=\"xx\">{{i.planned_start_date_time | date: 'yyyy-MM-dd'}}</span>\r\n                        </p>\r\n                        <h5 *ngIf=\"i.planned_start_date_time\">{{i.starttime}}\r\n                          <!-- <span class=\"xx\">PM</span> -->\r\n                        </h5>\r\n                      </div>\r\n                      <div class=\"topborder\"></div>\r\n                      <div class=\"timedate\">\r\n                        <p>\r\n                          <span class=\"xx\">{{i.planned_end_date_time | date: 'yyyy-MM-dd '}}</span>\r\n                        </p>\r\n                        <h5 *ngIf=\"i.planned_end_date_time\">{{i.endtime }}\r\n                          <!-- <span class=\"xx\">PM</span> -->\r\n                        </h5>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n        <!-- footer-->\r\n        <!-- <admin-footer></admin-footer> -->\r\n        <!-- end footer-->\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- Modal -->\r\n\r\n\r\n\r\n  <!--delete modal------>\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-view-project/company-view-project.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyViewProjectComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var CompanyViewProjectComponent = (function () {
    function CompanyViewProjectComponent(companyService, routes, snackBar, _activatedRoute, config) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this._activatedRoute = _activatedRoute;
        this.config = config;
        this.spinner = false;
        this.showData = false;
        this.xShow = false;
        this.socket = __WEBPACK_IMPORTED_MODULE_3_socket_io_client__(config.socketURL);
    }
    CompanyViewProjectComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.socket.on('inProgress', function () {
            _this.getProjectDetails();
        });
        this.socket.on('paused', function () {
            _this.getProjectDetails();
        });
        this.socket.on('complete', function () {
            _this.getProjectDetails();
        });
        this.socket.on('hold', function () {
            _this.getProjectDetails();
        });
        this.socket.on('completed', function () {
            _this.getProjectDetails();
        });
        this.getProjectDetails();
        this.companyService.getProjectsById(this.projectId).subscribe(function (allprobyid) {
            _this.allProjects = allprobyid;
            var pd = new Date(_this.allProjects.planned_start_date);
            var pe = new Date(_this.allProjects.planned_end_date);
            _this.allProjects.projectstarttime = pd.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });
            _this.allProjects.projectendtime = pe.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });
        });
    };
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Manu Prasad 
    // Desc          : Get Teams from database
    CompanyViewProjectComponent.prototype.getProjectDetails = function () {
        var _this = this;
        this.spinner = true;
        this._activatedRoute.params.subscribe(function (params) {
            _this.projectId = params['id'];
        });
        // console.log(this.projectId)
        this.companyService.getProjectDetails(this.projectId).subscribe(function (resProjects) {
            _this.projects = [];
            _this.projects = resProjects.data;
            _this.projects.forEach(function (module, key) {
                var totalhour = 0;
                module.tbl_project_tasks.forEach(function (task) {
                    totalhour = totalhour + task.buffer_hour + task.planned_hour;
                    var d = new Date(task.planned_start_date_time);
                    var e = new Date(task.planned_end_date_time);
                    task.starttime = d.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });
                    task.endtime = e.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });
                });
                module.totalhour = totalhour;
            });
            if (resProjects) {
                _this.showData = true;
                _this.spinner = false;
            }
        });
    };
    CompanyViewProjectComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-view-project',
            template: __webpack_require__("../../../../../src/app/components/company-view-project/company-view-project.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-view-project/company-view-project.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["Router"],
            __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */],
            __WEBPACK_IMPORTED_MODULE_4__angular_router__["ActivatedRoute"],
            __WEBPACK_IMPORTED_MODULE_5__config_config__["a" /* Config */]])
    ], CompanyViewProjectComponent);
    return CompanyViewProjectComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/company-working-time/company-working-time.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".thin-lbl{\r\n    font-weight: 400 !important;\r\n}\r\n.bg-grey-btn{\r\n    background-color: rgb(236, 236, 236);\r\n    border-radius: 4px;\r\n    border: none;\r\n    padding: 2px 7px;\r\n}\r\n.bg-grey-btn:hover{\r\n    background-color: #fe6a07;\r\n    color: #fff;\r\n}\r\n.rnd-btn{\r\n    position: absolute;\r\n    bottom: -13px;\r\n    right: 104px;\r\n}\r\n.white{\r\n    position: relative;\r\n}\r\n.week-btn{\r\n    background-color: transparent;\r\n    min-width: 90px;\r\n    text-align: center;\r\n    padding: 7px;\r\n    border: none;\r\n    border-bottom: 1px solid #ccc;\r\n    color: #848484;\r\n}\r\ntd{\r\n    padding: 7px;\r\n}\r\nth{\r\n    text-align: center !important;\r\n}\r\n.clr-green{\r\n    color: #00cc6f;\r\n    font-weight: 500;\r\n}\r\n.week-nm{\r\n    font-weight: 600\r\n}\r\n.plus-btn {\r\n    float: right;\r\n    margin-right: 35px !important;}\r\n\r\n.add-brk{\r\n    padding: 4px;\r\n    background-color: transparent;\r\n    color: #00b136;\r\n    /* font-weight: 800; */\r\n    margin-top: 25px;\r\n    font-size: 20px;\r\n}\r\n.mrgn-tp{\r\n    margin-top: 18px;\r\n    width: 100%;\r\n}\r\n\r\n.plus-btn{\r\n    box-shadow: 2px 2px 5px #ffbb8e !important;\r\n}\r\n.dsbld{\r\n    background-color: #ccc;\r\n    box-shadow: none !important;\r\n    \r\n}\r\n.mrgn-ed{\r\n    margin-top: 0;\r\n}\r\n.red{\r\n    color: #ff0023\r\n}\r\n.material-icons{\r\n\r\nmargin-top:190%;\r\n}\r\n@media only screen and (max-width: 1920px){\r\n    .week-btn{    min-width: 126px;}\r\n    }\r\n @media only screen and (max-width: 1600px){\r\n     .week-btn{    min-width: 104px;}\r\n    }\r\n@media only screen and (max-width: 1366px){\r\n    .week-btn{    min-width: 82px;}\r\n    }\r\n    @media only screen and (max-width: 1280px){\r\n        .week-btn{min-width: 76px;}\r\n        }", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/company-working-time/company-working-time.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n\r\n      <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n        <!-- sidebar-->\r\n\r\n        <company-sidebar></company-sidebar>\r\n        <!-- end sidebar-->\r\n      </div>\r\n\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n        <!-- topbar-->\r\n        <company-topbar></company-topbar>\r\n        <!-- end topbar-->\r\n\r\n\r\n        <div class=\"user-dashboard\">\r\n          <!-- <h1>Hello, JS</h1> -->\r\n          <div class=\"row\">\r\n              <h2>Master Settings</h2>\r\n              <ul class=\"breadcrumb\">\r\n                <li><a >Master Settings</a></li>\r\n                <!-- <li><a routerLink=\"/company-request-management\">Time Extension Request List</a></li> -->\r\n                \r\n                <li>Office Time</li>\r\n              </ul>\r\n              <div class=\"col-md-4 col-sm-12 col-xs-12 gutter \">\r\n                <div class=\"white\">\r\n                  <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <div class=\"col-md-11\"><label for=\"\"><b>Working Hours</b></label></div>\r\n                      <div class=\"col-md-1\"><button class=\"bg-grey-btn\" (click)=\"setWorkTime()\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></button></div>\r\n                      <div class=\"col-md-12 padd-15\">\r\n                        <div class=\"col-md-6\">\r\n                          <label class=\"thin-lbl\" for=\"\">Office Start Time</label>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                          <label *ngIf=\"show\" for=\"\">{{default?.start_time}}</label>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-md-12 padd-15\">\r\n                        <div class=\"col-md-6\">\r\n                          <label class=\"thin-lbl\" for=\"\">Office End Time</label>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                          <label *ngIf=\"show\" for=\"\">{{default?.end_time}}</label>\t\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  \r\n                    <div class=\"form-group padd-15\">\r\n                      <div class=\"col-md-11 padd-15\"><label for=\"\"><b>Breaks</b></label></div>\r\n                      \r\n                      <div class=\"col-md-12 padd-15\" *ngFor=\"let item of breaks; let i = index; trackBy:trackByIndex\">\r\n                        <div class=\"col-md-5\">\r\n                          <label class=\"thin-lbl\" for=\"\">{{item?.title}}</label>\r\n                        </div>\r\n                        <div class=\"col-md-5\">\r\n                          <label *ngIf=\"show\" for=\"\">{{item?.start_time}}</label> - \r\n                          <label *ngIf=\"show\" for=\"\">{{item?.end_time}}</label>\r\n                        </div>\r\n                        <div class=\"col-md-1\">\r\n                            <button class=\"bg-grey-btn bg-trans\" (click)=\"deleteBreak(item.id)\"><i class=\"la la-trash\"></i></button>\r\n                        </div>\r\n                        \r\n                      </div>\r\n                      \r\n                    </div>\r\n                  \r\n                  \r\n                \r\n                  </div>\r\n                 \r\n                  <app-spinner *ngIf=\"spinner\"></app-spinner>\r\n                  \r\n                  <button class=\"rnd-btn plus-btn\" (click)=\"addBreak()\">+</button>\r\n                </div><!--white-->\r\n               </div>\r\n               \r\n               <div class=\"col-md-8\">\r\n                 <div class=\"white\">\r\n                   <h4>Day Settings</h4>\r\n                   <table>\r\n                     <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Mon</th>\r\n                            <th>Tue</th>\r\n                            <th>Wed</th>\r\n                            <th>Thu</th>\r\n                            <th>Fri</th>\r\n                            <th>Sat</th>\r\n                            <th>Sun</th>\r\n                         </tr>\r\n                     </thead>\r\n                     \r\n                     \r\n                     <tbody *ngIf=\"showTbl\">\r\n\r\n                          <ng-container *ngFor=\"let item of createRange(5)\">\r\n                              <tr>\r\n                                <td class=\"week-nm\">{{item}} Week</td>\r\n                                <td *ngFor=\"let i of createRange(7); let x=index\">\r\n                                   <button class=\"week-btn clr-green\" *ngIf=\"timings[i][item].id else chngd\" (click)=\"openModal(i,item)\">Changed</button>\r\n                                   <ng-template #chngd>\r\n                                   <button class=\"week-btn\" (click)=\"openModal(i,item)\" >Default</button>\r\n                                    \r\n                                   </ng-template>\r\n                                \r\n                                  \r\n                                </td>\r\n                              </tr>\r\n                          </ng-container>\r\n                  \r\n                       \r\n                     </tbody>\r\n                   </table>\r\n                 </div>\r\n               </div>\r\n               \r\n        </div>\r\n\r\n\r\n      </div>\r\n      <!-- footer-->\r\n      <!-- <admin-footer></admin-footer> -->\r\n      <!-- end footer-->\r\n    </div>\r\n  </div>\r\n  </div>\r\n  <!-- Modal -->\r\n\r\n  <div id=\"assignModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n      <!-- Modal content-->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n          <h4 class=\"modal-title\">Edit Working Hours</h4>\r\n        </div>\r\n        <!-- <div class=\"modal-header\"> -->\r\n        <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n        <!-- </div> -->\r\n        <div class=\"modal-body delete-popup\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"col-md-4\">\r\n                  <label class=\"modal-lft-lbl\">Office Start Time:</label>\r\n                </div>\r\n                <div class=\"col-md-7\">\r\n                    \r\n                  <ngb-timepicker [(ngModel)]=\"startTime\" ></ngb-timepicker>\r\n                    \r\n\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <div class=\"col-md-4\">\r\n                  <label class=\"modal-lft-lbl\">Office End Time:</label>\r\n                </div>\r\n                <div class=\"col-md-7\">\r\n                   \r\n                  <ngb-timepicker [(ngModel)]=\"endTime\"></ngb-timepicker>\r\n                    \r\n\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n          <app-spinner *ngIf=\"spinner\"></app-spinner>\r\n          <button *ngIf=\"!spinner\" type=\"button\" [disabled]=\"editWorkinBtnDisable\" (click)=\"saveWorkTime()\" class=\"btn round-button\">Save</button>\r\n          <div *ngIf=\"editWorkingSpinner\">\r\n            <app-spinner></app-spinner>\r\n        </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n   <!--Break Modal -->\r\n   <div id=\"breakModal\" class=\"modal fade\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n\r\n      <!-- Modal content-->\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n          <h4 class=\"modal-title\">Add Break</h4>\r\n        </div>\r\n        <!-- <div class=\"modal-header\"> -->\r\n        <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n        <!-- </div> -->\r\n        <div class=\"modal-body delete-popup\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                  <div class=\"col-md-4\">\r\n                      <label class=\"modal-lft-lbl\">Break Title:</label>\r\n                    </div>\r\n                    <div class=\"col-md-7 text-left\">\r\n                        \r\n                        <mat-form-field>\r\n                            <input matInput placeholder=\"Title\" [(ngModel)]=\"breakTitle\">\r\n                          </mat-form-field>\r\n                    </div>\r\n                <div class=\"col-md-4\">\r\n                  <label class=\"modal-lft-lbl\">Break Start Time:</label>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                  <ngb-timepicker [(ngModel)]=\"breakStartTime\" ></ngb-timepicker>\r\n                </div>\r\n                <div class=\"col-md-1\">\r\n                  <span class=\"houricon\" matTooltip=\"Time should be in 24 hour format \">\r\n                    <i class=\"material-icons info-icon\">info_outline</i>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-md-12\">\r\n                <div class=\"col-md-4\">\r\n                  <label class=\"modal-lft-lbl\">Break End Time:</label>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                  <ngb-timepicker [(ngModel)]=\"breakEndTime\" ></ngb-timepicker>\r\n                </div>\r\n                <div class=\"col-md-1\">\r\n                  <span class=\"houricon\" matTooltip=\"Time should be in 24 hour format \">\r\n                    <i class=\"material-icons info-icon\">info_outline</i>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n        <div class=\"modal-footer\">\r\n          <app-spinner *ngIf=\"spinner\"></app-spinner>\r\n          <button  type=\"button\" [disabled]=\"addBreakBtnDisable\" (click)=\"saveBreak()\" class=\"btn round-button\">Add Break</button>\r\n          <div *ngIf=\"addBreakSpinner\">\r\n            <app-spinner></app-spinner>\r\n        </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n  <!----------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n  <div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\r\n      <div class=\"modal-dialog\">\r\n\r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n            <h4 class=\"modal-title\">Delete </h4>\r\n          </div>\r\n          <!-- <div class=\"modal-header\"> -->\r\n          <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n          <!-- </div> -->\r\n          <div class=\"modal-body delete-popup text-center\">\r\n            <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n            <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n          </div>\r\n\r\n          <div class=\"modal-footer\" style=\"text-align:center;\">\r\n            <button type=\"button\" (click)=\"confirm(planId)\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Delete</button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  <!--delete modal------>\r\n\r\n\r\n  <!--Break Modal -->\r\n\r\n  <div id=\"weekModal\" class=\"modal fade\" role=\"dialog\">\r\n      <div class=\"modal-dialog\">\r\n  \r\n        <!-- Modal content-->\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <button type=\"button\" class=\"close\" (click)=\"closeDayPopup()\">&times;</button>\r\n            <h4 class=\"modal-title\">Edit Working Hours</h4>\r\n          </div>\r\n          <!-- <div class=\"modal-header\"> -->\r\n          <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n          <!-- </div> -->\r\n          <div class=\"modal-body delete-popup\">\r\n            <div class=\"col-md-12\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"col-md-12 text-left\">\r\n                            <mat-checkbox [(ngModel)]=\"holiday\" >Off day?</mat-checkbox> \r\n                      <!-- {{holiday}} -->\r\n                          </div>\r\n                      <div class=\"col-md-4\">\r\n                        <label class=\"modal-lft-lbl\">Office Start Time:</label>\r\n                      </div>\r\n                      <div class=\"col-md-4\">\r\n                        <ngb-timepicker [(ngModel)]=\"xtime\" [readonlyInputs]=\"holiday\" [spinners]=\"!holiday\"></ngb-timepicker>\r\n                      </div>\r\n                      <div class=\"col-md-1\">\r\n                        <span class=\"houricon\" matTooltip=\"Time should be in 24 hour format \">\r\n                          <i class=\"material-icons info-icon\">info_outline</i>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                      <div class=\"col-md-4\">\r\n                        <label class=\"modal-lft-lbl\">Office End Time:</label>\r\n                      </div>\r\n                      <div class=\"col-md-4\">\r\n                        <ngb-timepicker [(ngModel)]=\"ytime\" [readonlyInputs]=\"holiday\" [spinners]=\"!holiday\"></ngb-timepicker>\r\n                      </div>\r\n                      <div class=\"col-md-1\">\r\n                        <span class=\"houricon\" matTooltip=\"Time should be in 24 hour format \">\r\n                          <i class=\"material-icons info-icon\">info_outline</i>\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n      \r\n                    <div class=\"form-group padd-7\">\r\n                        <div class=\"col-md-11 padd-7 text-left\"><label for=\"\"><b>Breaks</b></label></div>\r\n                        \r\n                        <div class=\"col-md-12 padd-7\" *ngFor=\"let item of breaks; let i = index; trackBy:trackByIndex\">\r\n                          <div class=\"col-md-6\">\r\n                            <label class=\"thin-lbl\" for=\"\">{{item.title}}</label>\r\n                          </div>\r\n                          <div class=\"col-md-5\">\r\n                            <label *ngIf=\"show\" for=\"\">{{item.start_time}}</label> - \r\n                            <label *ngIf=\"show\" for=\"\">{{item.end_time}}</label>\r\n                          </div>\r\n                          <!-- <div class=\"col-md-1\">\r\n                              <button class=\"bg-grey-btn bg-trans\" (click)=\"deleteBreak(item.id)\"><i class=\"la la-trash\"></i></button>\r\n                          </div> -->\r\n                          \r\n                        </div>\r\n                        \r\n                        <div class=\"col-md-12 padd-7\" *ngFor=\"let item of dayBreak; let i = index; trackBy:trackByIndex\">\r\n                            <div class=\"col-md-6\">\r\n                              <label class=\"thin-lbl\" for=\"\">{{item.title}}</label>\r\n                            </div>\r\n                            <div class=\"col-md-5\">\r\n                              <label *ngIf=\"show\" for=\"\">{{item.start_time}}</label> - \r\n                              <label *ngIf=\"show\" for=\"\">{{item.end_time}}</label>\r\n                            </div>\r\n                            <div class=\"col-md-1\">\r\n                                <button class=\"bg-grey-btn bg-trans\" (click)=\"deleteExtraBreak(item.id)\" [disabled]=\"holiday\"><i class=\"la la-trash\"></i></button>\r\n                            </div>\r\n                            \r\n                          </div>\r\n                          <div class=\"col-md-12\" *ngIf=\"showAddBreak\">\r\n                              <!-- <div class=\"row\"> -->\r\n                               \r\n                                      <div class=\"col-md-4\">\r\n                                          <div class=\"row\">\r\n                                              <mat-form-field>\r\n                                                  <input matInput placeholder=\"Title\" [(ngModel)]=\"xtrabreakTitle\" [disabled]=\"holiday\" class=\"mrgn-tp\">\r\n                                                </mat-form-field>\r\n                                          </div>\r\n                                       \r\n                                      </div>\r\n                   \r\n                                  <div class=\"col-md-3\">\r\n                                      \r\n                                    <ngb-timepicker [(ngModel)]=\"atime\" [readonlyInputs]=\"holiday\" [spinners]=\"!holiday\" class=\"tpkr\"></ngb-timepicker>\r\n                                      \r\n                  \r\n                                  </div>\r\n                                \r\n                                  <div class=\"col-md-3\">\r\n                                     \r\n                                    <ngb-timepicker [(ngModel)]=\"btime\" [readonlyInputs]=\"holiday\" [spinners]=\"!holiday\" class=\"tpkr\"></ngb-timepicker>\r\n                                      \r\n                  \r\n                                  </div>\r\n                                  <div class=\"col-md-2\">\r\n                                    <button class=\"btn add-brk\" (click)=\"saveExtraBreak()\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></button>\r\n                                    <button class=\"btn add-brk red\" (click)=\"closeExtraBreak()\">x</button>\r\n                                    \r\n                                  </div>\r\n                  \r\n                              <!-- </div> -->\r\n                  \r\n                            </div>\r\n                          <button class=\" plus-btn mrgn-ed\" (click)=\"addExtraBreak()\" [disabled]=\"holiday\" [ngClass]=\"{ 'dsbld' : holiday}\">+</button>\r\n\r\n                          \r\n                      </div>\r\n                  </div>\r\n      \r\n                </div>\r\n          </div>\r\n  \r\n          <div class=\"modal-footer\">\r\n            <app-spinner *ngIf=\"spinner\"></app-spinner>\r\n            <button *ngIf=\"!spinner\" type=\"button\" (click)=\"saveDayWorkTime()\" class=\"btn round-button\">Save</button>\r\n          </div>\r\n        </div>\r\n  \r\n      </div>\r\n    </div>\r\n  \r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/company-working-time/company-working-time.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyWorkingTimeComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CompanyWorkingTimeComponent = (function () {
    function CompanyWorkingTimeComponent(companyService, routes, snackBar) {
        this.companyService = companyService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.addBreakBtnDisable = false;
        this.addBreakSpinner = false;
        this.editWorkinBtnDisable = false;
        this.editWorkingSpinner = false;
        this.show = false;
        this.showTbl = false;
        this.breakStartTime = { hour: 0, minute: 0 };
        this.breakEndTime = { hour: 0, minute: 0 };
        this.BreakId = '';
        this.time = { hour: 0, minute: 0 };
        this.meridian = true;
        this.spinner = false;
        this.holiday = false;
        this.showAddBreak = false;
        this.xtime = { hour: 0, minute: 0 };
        this.ytime = { hour: 0, minute: 0 };
        this.atime = { hour: 0, minute: 0 };
        this.btime = { hour: 0, minute: 0 };
        this.readOnly = false;
        this.xtrabreakTitle = '';
    }
    CompanyWorkingTimeComponent.prototype.ngOnInit = function () {
        this.getTimings();
        this.getWeekTimings();
        // // console.log();
    };
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTimings
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 19-03-2018
    // Last Modified : 19-03-2018, Manu Prasad 
    // Desc          : Get Timings from database
    CompanyWorkingTimeComponent.prototype.getTimings = function () {
        var _this = this;
        this.companyService.getWorkTimes().subscribe(function (timings) {
            // console.log(timings);
            _this.default = timings.default;
            _this.breaks = timings.break;
            var time = _this.default.start_time.split(':');
            var etime = _this.default.end_time.split(':');
            _this.startTime = { hour: parseInt(time[0]), minute: parseInt(time[1]) };
            _this.endTime = { hour: parseInt(etime[0]), minute: parseInt(etime[1]) };
            _this.show = true;
            // // console.log(this.endTime);  
            // // console.log(this.startTime);  
        });
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTimings
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 19-03-2018
    // Last Modified : 19-03-2018, Manu Prasad 
    // Desc          : Get Timings from database
    CompanyWorkingTimeComponent.prototype.getWeekTimings = function () {
        var _this = this;
        this.companyService.getWeekTimes().subscribe(function (timings) {
            //  // console.log(timings)
            _this.timings = timings;
            _this.showTbl = true;
            //  // console.log(timings[1][0])
        });
    };
    //  ---------------------------------end-----------------------------------------------
    // checkType(val : any, x:any){
    //   if(val in this.timings || x in this.timings[x]){
    //     return true
    //   }
    //   else{
    //     return false
    //   }
    // }
    CompanyWorkingTimeComponent.prototype.createRange = function (number) {
        var items = [];
        for (var i = 1; i <= number; i++) {
            items.push(i);
        }
        return items;
    };
    //  ---------------------------------Start-------------------------------------------
    // Function      : setWorkTime
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 19-03-2018
    // Last Modified : 19-03-2018, Manu Prasad 
    // Desc          : set values to modal
    CompanyWorkingTimeComponent.prototype.setWorkTime = function () {
        // $('#assignModal .modal-title').text("");
        $('#assignModal').modal('show');
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : setWorkTime
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 19-03-2018
    // Last Modified : 19-03-2018, Manu Prasad 
    // Desc          : set values to modal
    CompanyWorkingTimeComponent.prototype.saveWorkTime = function () {
        var _this = this;
        this.companyService.saveWorkTimes(this.default.id, this.startTime, this.endTime).subscribe(function (res) {
            if (res.status == 1) {
                var snackBarRef = _this.snackBar.open(res.message, '', {
                    duration: 2000
                });
                _this.getTimings();
                $('#assignModal').modal('hide');
            }
            else {
                var snackBarRef = _this.snackBar.open(res.message, '', {
                    duration: 2000
                });
            }
        });
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : setRights
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Manu Prasad 
    // Desc          : set access rights in modal 
    CompanyWorkingTimeComponent.prototype.deleteBreak = function (breakId) {
        this.BreakId = breakId;
        $('#deleteModal').modal('show');
    };
    //  ---------------------------------end-----------------------------------------------
    CompanyWorkingTimeComponent.prototype.confirm = function () {
        var _this = this;
        this.companyService.deleteBreak(this.BreakId).subscribe(function (res) {
            var snackBarRef = _this.snackBar.open(res.message, '', {
                duration: 2000
            });
            if (res.status == 1) {
                _this.getTimings();
                $('#assignModal').modal('hide');
            }
        });
    };
    CompanyWorkingTimeComponent.prototype.addBreak = function () {
        $('#breakModal').modal('show');
        this.breakStartTime = { hour: 0, minute: 0 };
        this.breakEndTime = { hour: 0, minute: 0 };
        this.breakTitle = '';
        //  this.breakStartTime.hour = 0 ;
        //  this.breakStartTime.minute =0 ;
        //  this.breakEndTime.hour =0 ;
        //  this.breakEndTime.minute =0 ;
    };
    CompanyWorkingTimeComponent.prototype.saveBreak = function () {
        var _this = this;
        this.addBreakBtnDisable = true;
        this.addBreakSpinner = true;
        // console.log("hh")
        if (this.breakTitle == '' || this.breakTitle == undefined) {
            var snackBarRef = this.snackBar.open("Title empty!", '', {
                duration: 2000
            });
            this.addBreakBtnDisable = false;
            this.addBreakSpinner = false;
        }
        else {
            this.spinner = true;
            var data = {};
            data = {
                start_time: this.breakStartTime,
                end_time: this.breakEndTime,
                title: this.breakTitle,
                day: null,
                week: null
            };
            this.companyService.saveBreak(data).subscribe(function (res) {
                if (res.status == 1) {
                    var snackBarRef = _this.snackBar.open(res.message, '', {
                        duration: 2000
                    });
                    _this.addBreakBtnDisable = false;
                    _this.addBreakSpinner = false;
                    _this.getTimings();
                    $('#breakModal').modal('hide');
                    _this.spinner = false;
                }
                else {
                    var snackBarRef = _this.snackBar.open(res.message, '', {
                        duration: 2000
                    });
                    _this.addBreakBtnDisable = false;
                    _this.addBreakSpinner = false;
                    _this.spinner = false;
                }
            });
        }
    };
    CompanyWorkingTimeComponent.prototype.checkType = function (obj) {
        // // console.log( obj.length);
        if (obj.length > 0) {
            return false;
        }
        else {
            return true;
        }
    };
    CompanyWorkingTimeComponent.prototype.openModal = function (day, week) {
        // console.log('day:'+day)
        // console.log('week:'+week)
        this.selectedWeek = week;
        this.selectedDay = day;
        this.getDayBreaks(day, week);
        this.getDayDetails(day, week);
    };
    CompanyWorkingTimeComponent.prototype.getDayBreaks = function (day, week) {
        var _this = this;
        this.companyService.getDayBreaks(day, week).subscribe(function (res) {
            // console.log(res);
            _this.dayBreak = res;
            // $('#weekModal').modal('show');
        });
    };
    CompanyWorkingTimeComponent.prototype.getDayDetails = function (day, week) {
        var _this = this;
        this.companyService.getDayDetails(day, week).subscribe(function (res2) {
            // console.log(res2)
            if (!res2[0].start_time) {
                _this.holiday = true;
            }
            else {
                _this.specificTime = res2[0];
                var time = res2[0].start_time.split(':');
                var etime = res2[0].end_time.split(':');
                _this.xtime = { hour: parseInt(time[0]), minute: parseInt(time[1]) };
                _this.ytime = { hour: parseInt(etime[0]), minute: parseInt(etime[1]) };
                _this.xtime['hours'] =
                    console.log(_this.specificTime);
            }
            $('#weekModal').modal({ backdrop: 'static', keyboard: false });
            $('#weekModal').modal('show');
        });
    };
    CompanyWorkingTimeComponent.prototype.addExtraBreak = function () {
        this.xtrabreakTitle = '';
        this.showAddBreak = true;
    };
    CompanyWorkingTimeComponent.prototype.saveExtraBreak = function () {
        var _this = this;
        this.companyService.saveDayBreak(this.selectedDay, this.selectedWeek, this.atime, this.btime, this.xtrabreakTitle).subscribe(function (res2) {
            if (res2.status == 1) {
                var snackBarRef = _this.snackBar.open(res2.message, '', {
                    duration: 2000
                });
                _this.showAddBreak = false;
                _this.getDayBreaks(_this.selectedDay, _this.selectedWeek);
            }
            else {
                var snackBarRef = _this.snackBar.open(res2.message, '', {
                    duration: 2000
                });
            }
        });
    };
    CompanyWorkingTimeComponent.prototype.saveDayWorkTime = function () {
        var _this = this;
        this.editWorkinBtnDisable = true;
        this.editWorkingSpinner = true;
        console.log(this.holiday);
        this.companyService.saveDayWorkTime(this.holiday, this.xtime, this.ytime, this.selectedDay, this.selectedWeek).subscribe(function (res2) {
            // // console.log(res2)
            if (res2.status == 1) {
                var snackBarRef = _this.snackBar.open(res2.message, '', {
                    duration: 2000
                });
                _this.editWorkinBtnDisable = false;
                _this.editWorkingSpinner = false;
                _this.showAddBreak = false;
                _this.holiday = false;
                _this.getTimings();
                _this.getWeekTimings();
                $('#weekModal').modal('hide');
            }
            else {
                var snackBarRef = _this.snackBar.open(res2.message, '', {
                    duration: 2000
                });
                _this.editWorkinBtnDisable = false;
                _this.editWorkingSpinner = false;
            }
        });
    };
    CompanyWorkingTimeComponent.prototype.closeDayPopup = function () {
        this.showAddBreak = false;
        this.holiday = false;
        $('#weekModal').modal('hide');
    };
    CompanyWorkingTimeComponent.prototype.closeExtraBreak = function () {
        this.showAddBreak = false;
    };
    CompanyWorkingTimeComponent.prototype.deleteExtraBreak = function (breakId) {
        var _this = this;
        this.companyService.deleteExtraBreak(breakId).subscribe(function (res2) {
            if (res2.status == 1) {
                var snackBarRef = _this.snackBar.open(res2.message, '', {
                    duration: 2000
                });
                _this.showAddBreak = false;
                _this.getDayBreaks(_this.selectedDay, _this.selectedWeek);
            }
            else {
                var snackBarRef = _this.snackBar.open(res2.message, '', {
                    duration: 2000
                });
            }
        });
    };
    CompanyWorkingTimeComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-company-working-time',
            template: __webpack_require__("../../../../../src/app/components/company-working-time/company-working-time.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/company-working-time/company-working-time.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"],
            __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], CompanyWorkingTimeComponent);
    return CompanyWorkingTimeComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/compay-aditninfo/compay-aditninfo.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "button, select{outline:none;}\r\n.logn{height:100%;overflow-x:hidden;background:#fff;}\r\n.logn-img{height:100%;width:100%;position:relative;overflow:hidden;}\r\n.paragraph{    width: 56%;\r\n    left: 22%;\r\n    bottom: 10%;\r\n    z-index: 100;\r\n    min-height: 20px;\r\n    color: #fff;\r\n    text-align: left;\r\n    font-size: 14px;\r\n    position: absolute;\r\n    line-height: 22px;}\r\n.social-login{\r\n  position:relative;\r\n  float: none;\r\n  margin:0 auto;\r\n  height:auto;\r\n  padding: 10px 0 15px 0;\r\n  border-bottom: 1px solid #eee;\r\n  display: table;\r\n      width: 79%;\r\n}\r\n\r\n.social-login a{\r\n     position: relative;\r\n    float: left;\r\n    width: 48%;\r\n    text-decoration: none;\r\n    color: #fff;\r\n    border: 1px solid rgba(0,0,0,0.05);\r\n    padding: 7px 12px;\r\n    border-radius: 12px;\r\n    font-size: 12px;\r\n   \r\n        margin: 0px 1%;\r\n    text-align: center;\r\n}\r\n.social-login a i{\r\n  position: relative;\r\n  float: left;\r\n  width: 20px;\r\n  top: 2px;\r\n}\r\n.social-login a:first-child{\r\n  background-color: #49639F;\r\n}\r\n.social-login a:last-child{\r\n  background-color: #DF4A32;\r\n}\r\n.email-login,.email-signup{\r\n  position:relative;\r\n  float: left;\r\n  width: 100%;\r\n  height:auto;\r\n  margin-top: 20px;\r\n  text-align:center;\r\n}\r\nbody {\r\n  background: #e9e9e9;\r\n  color: #666666;\r\n  font-family: 'RobotoDraft', 'Roboto', sans-serif;\r\n  font-size: 14px;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n/* Pen Title */\r\n.pen-title {\r\n  padding: 20px 0;\r\n  text-align: center;\r\n  letter-spacing: 2px;\r\n}\r\n.pen-title h1 {\r\n  margin: 0 0 20px;\r\n  font-size: 40px;\r\n  font-weight: 300;\r\n}\r\n.pen-title span {\r\n  font-size: 12px;\r\n}\r\n.pen-title span .fa {\r\n  color: #ed2553;\r\n}\r\n.pen-title span a {\r\n  color: #ed2553;\r\n  font-weight: 600;\r\n  text-decoration: none;\r\n}\r\n\r\n/* Rerun */\r\n.rerun {\r\n  margin: 0 0 30px;\r\n  text-align: center;\r\n}\r\n.rerun a {\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  background: #ed2553;\r\n  border-radius: 3px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  padding: 10px 20px;\r\n  color: #ffffff;\r\n  text-decoration: none;\r\n  transition: 0.3s ease;\r\n}\r\n.rerun a:hover {\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n}\r\n\r\n/* Scroll To Bottom */\r\n#codepen, #portfolio {\r\n  position: fixed;\r\n  bottom: 30px;\r\n  right: 30px;\r\n  background: #ec2652;\r\n  width: 56px;\r\n  height: 56px;\r\n  border-radius: 100%;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n  transition: 0.3s ease;\r\n  color: #ffffff;\r\n  text-align: center;\r\n}\r\n#codepen i, #portfolio i {\r\n  line-height: 56px;\r\n}\r\n#codepen:hover, #portfolio:hover {\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\r\n}\r\n\r\n/* CodePen */\r\n#portfolio {\r\n  bottom: 96px;\r\n  right: 36px;\r\n  background: #ec2652;\r\n  width: 44px;\r\n  height: 44px;\r\n  animation: buttonFadeInUp 1s ease;\r\n}\r\n#portfolio i {\r\n  line-height: 44px;\r\n}\r\n\r\n/* Container */\r\n.container {\r\n  position: relative;\r\n  max-width: 460px;\r\n  width: 100%;\r\n  margin: 0 auto 100px;\r\n}\r\n.container.active .card:first-child {\r\n  background: #f2f2f2;\r\n  margin: 0 15px;\r\n}\r\n.container.active .card:nth-child(2) {\r\n  background: #fafafa;\r\n  margin: 0 10px;\r\n}\r\n.container.active .card.alt {\r\n  top: 20px;\r\n  right: 0;\r\n  width: 100%;\r\n  min-width: 100%;\r\n  height: auto;\r\n  border-radius: 5px;\r\n  padding: 60px 0 40px;\r\n  overflow: hidden;\r\n}\r\n.container.active .card.alt .toggle {\r\n  position: absolute;\r\n  top: 40px;\r\n  right: -70px;\r\n  box-shadow: none;\r\n  transform: scale(15);\r\n  transition: transform .5s ease;\r\n}\r\n.container.active .card.alt .toggle:before {\r\n  content: '';\r\n}\r\n.container.active .card.alt .title,\r\n.container.active .card.alt .input-container,\r\n.container.active .card.alt .button-container {\r\n  left: 0;\r\n  opacity: 1;\r\n  visibility: visible;\r\n  transition: .3s ease;\r\n}\r\n.container.active .card.alt .title {\r\n  transition-delay: .3s;\r\n}\r\n.container.active .card.alt .input-container {\r\n  transition-delay: .4s;\r\n}\r\n.container.active .card.alt .input-container:nth-child(2) {\r\n  transition-delay: .5s;\r\n}\r\n.container.active .card.alt .input-container:nth-child(3) {\r\n  transition-delay: .6s;\r\n}\r\n.container.active .card.alt .button-container {\r\n  transition-delay: .7s;\r\n}\r\n\r\n\r\n/* Keyframes */\r\n@keyframes buttonFadeInUp {\r\n  0% {\r\n    bottom: 30px;\r\n    opacity: 0;\r\n  }\r\n}\r\n.g-recaptcha {\r\n    transform:scale(0.89);\r\n    transform-origin:0 0;\r\n}\r\n.round-button{border-radius:20px;margin:0 auto;float:none;background:#f37600;color:#fff;    padding: 10px 32px; /* Safari */\r\n    transition: background 2s;}\r\n.round-button:hover{background:#ffaa05;color:#fff;}\r\n.padd-lft{padding-left:20px;}\r\n\r\n\r\n\r\n@media only screen and (max-width : 768px) {\r\n.logn-img {\r\n    height: 72%;\r\n    width: 98%;\r\n\tmax-height:300px;\r\n}\r\n}\r\n\r\n@media only screen and (max-width : 480px)  { \r\n.card .input-container{    margin: 12px;}\r\n.logn-img{display:none;}\r\nform{text-align:center;}\r\n.logn-img {\r\n    height: 72%;\r\n    width: 98%;\r\n\tmax-height:300px;\r\n}\r\n.logn-img img{width:100%;}\r\n}\r\n@media only screen and (max-width : 320px) { \r\n\t.card .input-container{    width: 74%;\r\n        margin: 24px auto;\r\n    float: none;}\r\n\t.card .input-container .bar{left: 3%;}\r\n\t.container{max-width:100%;}\r\n\tform{text-align:center;}\r\n}\r\n\r\n.loder{\r\n  position: absolute;\r\n  top: 0px;\r\n}\r\nlogn{\r\n  position: relative\r\n}\r\n.btn-nxt{\r\n  /* position: absolute; */\r\n  top: 68px;\r\n  right: -45px;\r\n  background: transparent;\r\n  border: none;\r\n  position: absolute;\r\n}\r\n\r\n.nxt-cntainer{\r\n  position: relative;\r\n}\r\nselect,input{\r\n  width: 100%;\r\n  margin-top: 20px;\r\n  outline: none;\r\n  padding: 10px;\r\n  font-size: 20px;\r\n  padding-right: 44px;\r\n}\r\nselect{\r\n  cursor: pointer;\r\n}\r\n.inp-hd{\r\n  font-size: 25px;\r\n}\r\n.errMsg{\r\n  font-size: 13px;color: #ff336a;\r\n}\r\n.progress-bar{\r\n  background-color: #28d685 !important;\r\n}\r\n.inp-top{\r\n  top: 89px;\r\n}\r\n.submit-form{\r\n  position: absolute;\r\n    top: 138px;\r\n    right: 0;\r\n    background: transparent;\r\n    border: none;\r\n  transition: color 1s ease;\r\n    \r\n}\r\n.trans-clr{\r\n  color: #20ad6b;\r\n  \r\n}\r\n.simform .progress::before{\r\n  width: 100%;\r\n}\r\nsection{\r\n  padding: 5em 7em 10em !important;\r\n}\r\n.bgz{padding-top:12em;}\r\n.lft-cls{\r\n  left: -45px;\r\n}\r\n.inp-top2{\r\n  top: 159px;\r\n    right: -45px;\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/compay-aditninfo/compay-aditninfo.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"logn\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col-md-8\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"logn-img\">\r\n\t\t\t\t\t<img src=\"./assets/images/login.jpg\" class=\"img-responsive\" />\r\n\t\t\t\t\t<div class=\"paragraph\">\r\n\t\t\t\t\t\t<div class=\"col-md-12\" style=\"text-align:center;\">\r\n\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Proin tincidunt bibendum malesuada. Fusce tincidunt nibh quis nisi\r\n\t\t\t\t\t\t\ttristique, sed ultrices lorem aliquam. Nam facilisis posuere vehicula. Integer tempus rhoncus volutpat.\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<br>\r\n\t\t<div class=\"col-md-4 bgz\">\r\n\t\t\t<h3>Registration</h3>\r\n\t\t\t<section>\r\n\t\t\t\t<form id=\"theForm\" class=\"simform\" autocomplete=\"off\">\r\n\t\t\t\t\t<div class=\"simform-inner\">\r\n\r\n\t\t\t\t\t\t<div class=\"nxt-cntainer\" *ngFor=\"let item of questions;let i=index;\">\r\n\t\t\t\t\t\t\t<ng-container *ngIf=\"counter == i\">\r\n\t\t\t\t\t\t\t\t<label class=\"inp-hd\">{{item.question}}</label>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" *ngIf=\"item.type == 'text' else password\" [(ngModel)]=\"item.ans\" name=\"item.ans\" maxlength=\"{{item.length}}\">\r\n\t\t\t\t\t\t\t\t<ng-template #password>\r\n\t\t\t\t\t\t\t\t\t<input type=\"password\" *ngIf=\"item.type == 'password' else multiple\" [(ngModel)]=\"item.ans\" name=\"item.ans\">\r\n\t\t\t\t\t\t\t\t\t<ng-template #multiple>\r\n\t\t\t\t\t\t\t\t\t\t<select class=\"inp\" [(ngModel)]=\"item.ans\" name=\"item.ans\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ng-container *ngIf=\"i == 2 else size\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ng-container *ngFor=\"let c of industry\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option  value=\"{{c.id}}\">{{c.industry}}</option>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ng-template #size>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ng-container *ngFor=\"let s of cmpSize\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option  value=\"{{s.id}}\">{{s.size_range}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<!-- <option>Select Company Size</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option>1-10</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option>1-20</option> -->\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</ng-template>\r\n\r\n\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\t<!-- <button *ngIf=\"counter != 5\" class=\"\" type=\"submit\" (click)=\"validate()\">next</button> -->\r\n\t\t\t\t\t\t\t\t<button  [ngClass]=\"{'inp-top': counter==5}\" *ngIf=\"counter != 8 && counter != 0\" class=\"btn-nxt lft-cls\" type=\"submit\" (click)=\"subCount(i)\" ><i class=\"la la-arrow-left\"></i></button>\r\n\t\t\t\t\t\t\t\t<button *ngIf=\"counter != 5\"  class=\"btn-nxt\" type=\"submit\" (click)=\"validate(i)\"><i class=\"la la-arrow-right\"></i></button>\r\n\t\t\t\t\t\t\t\t<!-- {{counter}} -->\r\n\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"progress\">\r\n\t\t\t\t\t\t\t<div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"70\" aria-valuemin=\"0\" aria-valuemax=\"100\" [style.width.%]=\"progressBarWidth\">\r\n\t\t\t\t\t\t\t\t<span class=\"sr-only\">70% Complete</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span class=\"errMsg\">{{errMessage}}</span>\r\n\r\n\t\t\t\t\t\t<!-- <button *ngIf=\"counter == 5\" class=\"submit-form\" type=\"submit\" (click)=\"register()\">GO</button> -->\r\n\r\n\t\t\t\t\t\t<button *ngIf=\"counter == 5\" [ngClass]=\"{'inp-top2': counter==5}\"  class=\"submit-form\" type=\"submit\" (click)=\"register()\"><i class=\"la la-arrow-right\"></i></button>\r\n\r\n\t\t\t\t\t\t<div *ngIf=\"spinner\">\r\n\t\t\t\t\t\t\t\t<app-spinner></app-spinner>\r\n\t\t\t\t\t\t\t<!-- <div class=\"\">\r\n\t\t\t\t\t\t\t\t<svg class=\"svg\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n\t\t\t\t\t\t\t\t x=\"0px\" y=\"0px\" width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50; margin-left:25%;\"\r\n\t\t\t\t\t\t\t\t xml:space=\"preserve\">\r\n\t\t\t\t\t\t\t\t\t<path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n\t\t\t\t\t\t\t\t\t\t<animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</path>\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</div> -->\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- /simform-inner -->\r\n\t\t\t\t\t<span class=\"final-message\"></span>\r\n\t\t\t\t</form>\r\n\t\t\t\t<!-- /simform -->\r\n\t\t\t</section>\r\n\r\n\r\n\r\n\t\t</div>\r\n\r\n\r\n\r\n\t</div>\r\n\r\n\t<!-- Modal -->\r\n\r\n\t<script>\r\n\r\n\t</script>\r\n\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/compay-aditninfo/compay-aditninfo.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompayAditninfoComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var CompayAditninfoComponent = (function () {
    function CompayAditninfoComponent(adminService, snackBar, routes, companyService, route) {
        this.adminService = adminService;
        this.snackBar = snackBar;
        this.routes = routes;
        this.companyService = companyService;
        this.route = route;
        this.reg = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
        this.timestamp = new Date().getTime().toString();
        this.spinner = false;
        this.questions = [{
                // 	question:"What's your Email?",
                // 	type:"text",
                // 	ans:""
                // },
                // {
                question: "What's your Company Name?",
                type: "text",
                ans: "",
                length: 100
            },
            {
                question: "Your Company Code?",
                type: "text",
                ans: "",
                length: 3
            },
            {
                question: "Industry?",
                type: "multiple",
                ans: ""
            },
            {
                question: "Your Contact Number ?",
                type: "text",
                ans: "",
                length: 100
            },
            {
                question: "Company Size?",
                type: "multiple",
                ans: ""
            },
            {
                question: "Why are you looking for task managment software?",
                type: "text",
                ans: "",
                length: 100
            }
            // {
            // 	question:"Your Password",
            // 	type:"password",
            // 	ans:""
            // },
            // {
            // 	question:"Confirm Password",
            // 	type:"password",
            // 	ans:""
            // },
        ];
        this.array = [];
        this.errMessage = '';
        this.counter = 0;
        this.progressBarWidth = 0;
        this.newReg = {
            company_name: '',
            company_code: '',
            contact_no: '',
            email: '',
            company_strength: '',
            industry: '',
            password: '',
            why_choosen: '',
            verification_code: this.timestamp + Math.floor(100000 + Math.random() * 900000),
        };
    }
    CompayAditninfoComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.sub = this.route.params.subscribe(function (params) {
            _this.p_id = params.id;
            // console.log("sub");
            _this.companyService.getCompanyDetailsById(_this.p_id).subscribe(function (data) {
                // console.log("data" + data.is_profile_completed);
                if (data.is_profile_completed == true) {
                    _this.companyService.generateToken(params.id).subscribe(function (data4) {
                        if (data4.success == true) {
                            _this.companyService.storeUserData(data4.token, data4.login);
                            if (data.cmp_status == "Expired") {
                                _this.routes.navigate(['/expired']);
                            }
                            else {
                                _this.routes.navigate(['/company-dashboard']);
                            }
                        }
                    });
                    // console.log("completed");
                }
                else {
                    _this.companyService.generateToken(params.id).subscribe(function (data3) {
                        if (data3.success) {
                            _this.companyService.storeUserData(data3.token, data3.login);
                        }
                    });
                }
            });
        });
        // this.companyService.getLoggedUSerDetails().subscribe(info => {
        // console.log("sdsss" + info);
        // if(info == null || info == ''){
        //   this.routes.navigate(['/clogin']); 
        // }
        // if(info.role == "admin"){
        //   this.routes.navigate(['/admin-dashboard']);
        // }
        // if(info.role == "user"){
        //   if(info.delete_status == true || info.block_status == true){
        // 	this.routes.navigate(['/404']); 
        //   }
        //   this.routes.navigate(['/survey', info.surveyId]); 
        // }
        // if(info.role == "company"){
        //   if(info.delete_status == true || info.block_status == true || info.cmp_status == "Not Verified"){
        // 	this.routes.navigate(['/clogin']); 
        //   }
        //   if(info.cmp_status == "Expired"){
        // 	this.routes.navigate(['/expired']);
        //   }
        //   if(info.is_profile_completed == false){
        // 	this.routes.navigate(['/additnInfo', info.id]);
        //   }
        // }
        // });
        // console.log(this.questions);
        this.getIndustries();
        this.getCompanySize();
    };
    CompayAditninfoComponent.prototype.register = function () {
        var _this = this;
        this.questions.push({ question: '', type: '', ans: this.p_id });
        this.companyService.registerCompanyFromadtninfo(this.questions).subscribe(function (resData) {
            _this.spinner = true;
            // console.log(resData)
            _this.industry = resData;
            if (resData.success == true) {
                _this.spinner = false;
                var snackBarRef = _this.snackBar.open('Redirecting into your account.', '', {
                    duration: 2000
                });
                _this.routes.navigate(['/company-dashboard']);
            }
            else {
                _this.spinner = false;
                // this._flashMessagesService.show('Error', { cssClass: 'alert-danger', timeout: 4000 });
                var snackBarRef = _this.snackBar.open('Error', '', {
                    duration: 2000
                });
                _this.routes.navigate(['/404']);
            }
        });
    };
    CompayAditninfoComponent.prototype.getIndustries = function () {
        var _this = this;
        this.companyService.getIndustries().subscribe(function (resData) {
            // console.log(resData)
            _this.industry = resData;
            // console.log(this.industry)
        });
    };
    CompayAditninfoComponent.prototype.getCompanySize = function () {
        var _this = this;
        this.companyService.getCompanySize().subscribe(function (resData) {
            // console.log(resData)
            _this.cmpSize = resData;
        });
    };
    CompayAditninfoComponent.prototype.addCounter = function () {
        this.counter = this.counter + 1;
        this.progressBarWidth = (this.counter / 8) * 100;
        // console.log(this.progressBarWidth);
    };
    CompayAditninfoComponent.prototype.validate = function (i) {
        if (this.questions[this.counter].ans == '') {
            this.errMessage = "Please fill the fields";
        }
        else if (i == 3) {
            if (!(/^\d+$/.test(this.questions[3].ans)) || (this.questions[3].ans.length < 10)) {
                this.errMessage = "Enter valid phone number!";
            }
            else {
                this.errMessage = "";
                this.addCounter();
            }
        }
        else {
            this.errMessage = "";
            this.addCounter();
        }
        console.log(this.counter);
    };
    CompayAditninfoComponent.prototype.subCount = function (i) {
        this.counter = this.counter - 1;
    };
    CompayAditninfoComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'compay-aditninfo',
            template: __webpack_require__("../../../../../src/app/components/compay-aditninfo/compay-aditninfo.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/compay-aditninfo/compay-aditninfo.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_admin_service__["a" /* AdminService */], __WEBPACK_IMPORTED_MODULE_2__angular_material__["z" /* MatSnackBar */], __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_4__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_3__angular_router__["ActivatedRoute"]])
    ], CompayAditninfoComponent);
    return CompayAditninfoComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/count-down-timer/count-down-timer.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CountDownTimerComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Rx__ = __webpack_require__("../../../../rxjs/_esm5/Rx.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var CountDownTimerComponent = (function () {
    function CountDownTimerComponent(elm) {
        this.onTimeOver = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        this.futureString = elm.nativeElement.getAttribute('inputDate');
    }
    CountDownTimerComponent.prototype.dhms = function (t) {
        var days, hours, minutes, seconds;
        days = Math.floor(t / 86400);
        t -= days * 86400;
        hours = Math.floor(t / 3600);
        t -= hours * 3600;
        minutes = Math.floor(t / 60) % 60;
        t -= minutes * 60;
        seconds = t % 60;
        if (days < 0) {
            this.subscription.unsubscribe();
            this.onTimeOver.emit();
            return "0:00:00";
        }
        else {
            return [
                days + 'days ',
                hours + ':',
                this.lpad(minutes) + ':',
                this.lpad(seconds)
            ].join('');
        }
    };
    CountDownTimerComponent.prototype.lpad = function (num) {
        var s = num + "";
        if (s.length < 2)
            s = "0" + s;
        return s;
    };
    CountDownTimerComponent.prototype.ngOnInit = function () {
        var _this = this;
        console.log(this.addClass);
        this.future = new Date(this.inputDate);
        this.$counter = __WEBPACK_IMPORTED_MODULE_1_rxjs_Rx__["Observable"].interval(1000).map(function (x) {
            _this.diff = Math.floor((_this.future.getTime() - new Date().getTime()) / 1000);
            return x;
        });
        this.subscription = this.$counter.subscribe(function (x) { return _this.message = _this.dhms(_this.diff); });
    };
    CountDownTimerComponent.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    CountDownTimerComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-count-down-timer',
            template: "\n  <div [ngClass]=\"addClass\">\n    {{message}}\n  </div>\n",
            inputs: ["inputDate", "addClass"],
            outputs: ['onTimeOver']
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"]])
    ], CountDownTimerComponent);
    return CountDownTimerComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/email-verification/email-verification.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/email-verification/email-verification.component.html":
/***/ (function(module, exports) {

module.exports = "<p>\n\n</p>\n"

/***/ }),

/***/ "../../../../../src/app/components/email-verification/email-verification.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return EmailVerificationComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var EmailVerificationComponent = (function () {
    function EmailVerificationComponent(route, companyService, snackBar, routes) {
        this.route = route;
        this.companyService = companyService;
        this.snackBar = snackBar;
        this.routes = routes;
    }
    EmailVerificationComponent.prototype.ngOnInit = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : Company verification
        // Params        : verification id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 29-12-2017
        // Last Modified : 29-12-2017, Rinsha
        // Desc          : 
        this.sub = this.route.params.subscribe(function (params) {
            _this.companyService.verifyCompany(params.id).subscribe(function (data) {
                _this.msg = data.msg;
                if (data.success) {
                    // this._flashMessagesService.show('Success...', { cssClass: 'alert-success', timeout: 4000 });
                    _this.companyService.storeUserData(data.token, data.login);
                    var snackBarRef = _this.snackBar.open(_this.msg, '', {
                        duration: 2000
                    });
                    _this.routes.navigate(['/company-login']);
                    // this.routes.navigate(['/dashboard']); dashboard
                    // setTimeout(() => {  
                    // }, 2000);
                }
                else {
                    // this._flashMessagesService.show('Error...', { cssClass: 'alert-danger', timeout: 4000 });
                    var snackBarRef = _this.snackBar.open(_this.msg, '', {
                        duration: 2000
                    });
                    _this.routes.navigate(['/home']);
                    setTimeout(function () {
                    }, 2000);
                }
            });
        });
        // -----------------------------------End------------------------------------------
    };
    EmailVerificationComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'email-verification',
            template: __webpack_require__("../../../../../src/app/components/email-verification/email-verification.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/email-verification/email-verification.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_router__["ActivatedRoute"], __WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_3__angular_material__["z" /* MatSnackBar */], __WEBPACK_IMPORTED_MODULE_1__angular_router__["Router"]])
    ], EmailVerificationComponent);
    return EmailVerificationComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/forgot-password/forgot-password.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n.logn{height:100%;overflow-x:hidden;background:#fff;}\n.logn-img{height:100%;width:100%;position:relative;overflow:hidden;}\n.paragraph{width:60%;left:10%;bottom:10%;z-index:100;min-height:20px;color:#fff;text-align:left;font-size:14px;position:absolute;}\n.social-login{\n  position:relative;\n  float: none;\n  margin:0 auto;\n  height:auto;\n  padding: 10px 0 15px 0;\n  border-bottom: 1px solid #eee;\n  display: table;\n      width: 79%;\n}\n\n.social-login a{\n     position: relative;\n    float: left;\n    width: 48%;\n    text-decoration: none;\n    color: #fff;\n    border: 1px solid rgba(0,0,0,0.05);\n    padding: 7px 12px;\n    border-radius: 12px;\n    font-size: 12px;\n   \n        margin: 0px 1%;\n    text-align: center;\n}\n.social-login a i{\n  position: relative;\n  float: left;\n  width: 20px;\n  top: 2px;\n}\n.social-login a:first-child{\n  background-color: #49639F;\n}\n.social-login a:last-child{\n  background-color: #DF4A32;\n}\n.email-login,.email-signup{\n  position:relative;\n  float: left;\n  width: 100%;\n  height:auto;\n  margin-top: 20px;\n  text-align:center;\n}\nbody {\n  background: #e9e9e9;\n  color: #666666;\n  font-family: 'RobotoDraft', 'Roboto', sans-serif;\n  font-size: 14px;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n/* Pen Title */\n.pen-title {\n  padding: 20px 0;\n  text-align: center;\n  letter-spacing: 2px;\n}\n.pen-title h1 {\n  margin: 0 0 20px;\n  font-size: 40px;\n  font-weight: 300;\n}\n.pen-title span {\n  font-size: 12px;\n}\n.pen-title span .fa {\n  color: #ed2553;\n}\n.pen-title span a {\n  color: #ed2553;\n  font-weight: 600;\n  text-decoration: none;\n}\n\n/* Rerun */\n.rerun {\n  margin: 0 0 30px;\n  text-align: center;\n}\n.rerun a {\n  cursor: pointer;\n  display: inline-block;\n  background: #ed2553;\n  border-radius: 3px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  padding: 10px 20px;\n  color: #ffffff;\n  text-decoration: none;\n  transition: 0.3s ease;\n}\n.rerun a:hover {\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n}\n\n/* Scroll To Bottom */\n#codepen, #portfolio {\n  position: fixed;\n  bottom: 30px;\n  right: 30px;\n  background: #ec2652;\n  width: 56px;\n  height: 56px;\n  border-radius: 100%;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: 0.3s ease;\n  color: #ffffff;\n  text-align: center;\n}\n#codepen i, #portfolio i {\n  line-height: 56px;\n}\n#codepen:hover, #portfolio:hover {\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n}\n\n/* CodePen */\n#portfolio {\n  bottom: 96px;\n  right: 36px;\n  background: #ec2652;\n  width: 44px;\n  height: 44px;\n  animation: buttonFadeInUp 1s ease;\n}\n#portfolio i {\n  line-height: 44px;\n}\n\n/* Container */\n.container {\n  position: relative;\n  max-width: 460px;\n  width: 100%;\n  margin: 0 auto 100px;\n}\n.container.active .card:first-child {\n  background: #f2f2f2;\n  margin: 0 15px;\n}\n.container.active .card:nth-child(2) {\n  background: #fafafa;\n  margin: 0 10px;\n}\n.container.active .card.alt {\n  top: 20px;\n  right: 0;\n  width: 100%;\n  min-width: 100%;\n  height: auto;\n  border-radius: 5px;\n  padding: 60px 0 40px;\n  overflow: hidden;\n}\n.container.active .card.alt .toggle {\n  position: absolute;\n  top: 40px;\n  right: -70px;\n  box-shadow: none;\n  transform: scale(15);\n  transition: transform .5s ease;\n}\n.container.active .card.alt .toggle:before {\n  content: '';\n}\n.container.active .card.alt .title,\n.container.active .card.alt .input-container,\n.container.active .card.alt .button-container {\n  left: 0;\n  opacity: 1;\n  visibility: visible;\n  transition: .3s ease;\n}\n.container.active .card.alt .title {\n  transition-delay: .3s;\n}\n.container.active .card.alt .input-container {\n  transition-delay: .4s;\n}\n.container.active .card.alt .input-container:nth-child(2) {\n  transition-delay: .5s;\n}\n.container.active .card.alt .input-container:nth-child(3) {\n  transition-delay: .6s;\n}\n.container.active .card.alt .button-container {\n  transition-delay: .7s;\n}\n\n/* Card */\n.card {\n \n}\n.card:first-child {\n\n}\n.card .title {\n      position: relative;\n    z-index: 1;\n    /* border-left: 5px solid #ec2652; */\n    margin: 0 0 35px;\n        padding: 20% 0 6% 0;\n    color: #f37501;\n    font-size: 32px;\n    font-weight: 600;\n    text-transform: uppercase;\n    text-align: center;\n}\ninput:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill{background-color:none !important;}\n.card .input-container {\n        position: relative;\n    margin: 0 60px 34px;\n    /* overflow: hidden; */\n    display: inline-block;\n\t\n}\n.card .input-container input {\n  outline: none;\n  z-index: 1;\n  position: relative;\n  background: none;\n  width: 100%;\n  height: 54px;\n  border: 0;\n  color: #212121;\n  font-size: 20px;\n  font-weight: 400;\n}\n.card .input-container input:focus ~ label {\n  color: #9d9d9d;\n  transform: translate(-12%, -50%) scale(0.75);\n}\n.card .input-container input:focus ~ .bar:before, .card .input-container input:focus ~ .bar:after {\n  width: 50%;\n}\n.card .input-container input:valid ~ label {\n  color: #9d9d9d;\n  transform: translate(-12%, -50%) scale(0.75);\n}\n.card .input-container label {\n  position: absolute;\n  top: 0;\n      left: 20px;\n  color: #757575;\n      font-size: 18px;\n  font-weight: 300;\n  line-height: 60px;\n  transition: 0.2s ease;\n}\n.card .fa{     padding-top: 19px;\n    font-size: 28px;color:#f37600;}\n.card .input-container .bar {\n  position: absolute;\n      left: -4%;\n  bottom: 0;\n  background: #757575;\n  width: 100%;\n  height: 1px;\n}\n.card .input-container .bar:before, .card .input-container .bar:after {\n  content: '';\n  position: absolute;\n      background: #f47453;\n  width: 0;\n  height: 2px;\n  transition: .2s ease;\n}\n.card .input-container .bar:before {\n  left: 50%;\n}\n.card .input-container .bar:after {\n  right: 50%;\n}\n.card .button-container {\n  margin: 0 60px;\n  text-align: center;\n}\n.card .button-container button {\n  outline: 0;\n  cursor: pointer;\n  position: relative;\n  display: inline-block;\n  background: 0;\n  width: 240px;\n  border: 2px solid #e3e3e3;\n  padding: 20px 0;\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1;\n  text-transform: uppercase;\n  overflow: hidden;\n  transition: .3s ease;\n}\n.card .button-container button span {\n  position: relative;\n  z-index: 1;\n  color: #ddd;\n  transition: .3s ease;\n}\n.card .button-container button:before {\n  content: '';\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  display: block;\n  background: #ec2652;\n  width: 30px;\n  height: 30px;\n  border-radius: 100%;\n  margin: -15px 0 0 -15px;\n  opacity: 0;\n  transition: .3s ease;\n}\n.card .button-container button:hover, .card .button-container button:active, .card .button-container button:focus {\n  border-color: #ec2652;\n}\n.card .button-container button:hover span, .card .button-container button:active span, .card .button-container button:focus span {\n  color: #ec2652;\n}\n.card .button-container button:active span, .card .button-container button:focus span {\n  color: #ffffff;\n}\n.card .button-container button:active:before, .card .button-container button:focus:before {\n  opacity: 1;\n  transform: scale(10);\n}\n.card .footer {\n  margin: 6px 0 9%;\n  color: #d3d3d3;\n  font-size: 24px;\n  font-weight: 300;\n  text-align: center;\n}\n.card .footer a {\n      color: inherit;\n    text-decoration: none;\n    transition: .3s ease;\n    font-size: 15px;\n    color: #111;\n}\n.card .footer a:hover {\n  color: #bababa;\n}\n.card.alt {\n  position: absolute;\n  top: 40px;\n  right: -70px;\n  z-index: 10;\n  width: 100px;\n  height: 100px;\n  background: none;\n  border-radius: 100%;\n  box-shadow: none;\n  padding: 0;\n  transition: .3s ease;\n  /* Toggle */\n  /* Title */\n  /* Input */\n  /* Button */\n}\n.card.alt .toggle {\n  position: relative;\n  background: #ec2652;\n  width: 100px;\n  height: 100px;\n  border-radius: 100%;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  color: #ffffff;\n  font-size: 42px;\n  line-height: 100px;\n  text-align: center;\n  cursor: pointer;\n}\n.card.alt .toggle:before {\n  content: '\\F067';\n  display: inline-block;\n  font: normal normal normal 14px/1 FontAwesome;\n  font-size: inherit;\n  text-rendering: auto;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  transform: translate(0, 0);\n}\n.card.alt .title,\n.card.alt .input-container,\n.card.alt .button-container {\n  left: 100px;\n  opacity: 0;\n  visibility: hidden;\n}\n.card.alt .title {\n  position: relative;\n  border-color: #ffffff;\n  color: #ffffff;\n}\n.card.alt .title .close {\n  cursor: pointer;\n  position: absolute;\n  top: 0;\n  right: 60px;\n  display: inline;\n  color: #ffffff;\n  font-size: 58px;\n  font-weight: 400;\n}\n.card.alt .title .close:before {\n  content: '\\D7';\n}\n.card.alt .input-container input {\n  color: #ffffff;\n}\n.card.alt .input-container input:focus ~ label {\n  color: #ffffff;\n}\n.card.alt .input-container input:focus ~ .bar:before, .card.alt .input-container input:focus ~ .bar:after {\n  background: #ffffff;\n}\n.card.alt .input-container input:valid ~ label {\n  color: #ffffff;\n}\n.card.alt .input-container label {\n  color: rgba(255, 255, 255, 0.8);\n}\n.card.alt .input-container .bar {\n  background: rgba(255, 255, 255, 0.8);\n}\n.card.alt .button-container button {\n  width: 100%;\n  background: #ffffff;\n  border-color: #ffffff;\n}\n.card.alt .button-container button span {\n  color: #ec2652;\n}\n.card.alt .button-container button:hover {\n  background: rgba(255, 255, 255, 0.9);\n}\n.card.alt .button-container button:active:before, .card.alt .button-container button:focus:before {\n  display: none;\n}\n\n/* Keyframes */\n@keyframes buttonFadeInUp {\n  0% {\n    bottom: 30px;\n    opacity: 0;\n  }\n}\n.g-recaptcha {\n    transform:scale(0.89);\n    transform-origin:0 0;\n}\n.round-button{border-radius:20px;margin:0 auto;float:none;background:#f37600;color:#fff;    padding: 10px 32px; /* Safari */\n    transition: background 2s;}\n.round-button:hover{background:#ffaa05;color:#fff;}\n.padd-lft{padding-left:20px;}\n@media only screen and (max-width : 768px) {\n.logn-img {\n    height: 72%;\n    width: 98%;\n\tmax-height:300px;\n}\n}\n\n@media only screen and (max-width : 480px)  { \n.card .input-container{    margin: 12px;}\n.logn-img{display:none;}\nform{text-align:center;}\n.logn-img {\n    height: 72%;\n    width: 98%;\n\tmax-height:300px;\n}\n.logn-img img{width:100%;}\n}\n@media only screen and (max-width : 320px) { \n\t.card .input-container{    width: 74%;\n        margin: 24px auto;\n    float: none;}\n\t.card .input-container .bar{left: 3%;}\n\t.container{max-width:100%;}\n\tform{text-align:center;}\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/forgot-password/forgot-password.component.html":
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\r\n\r\n<html>\r\n\r\n<head>\r\n\t<!-- <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n\t<title>Taskit</title>\r\n\t<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\r\n\t<link href=\"css/login.css\" rel=\"stylesheet\">\r\n\t<link href=\"css/responsive.css\" rel=\"stylesheet\">\r\n\t Include the above in your HEAD tag -->\r\n<!-- \r\n\t<link rel=\"stylesheet\" href=\"css/font-awesome.min.css\">\r\n\t<link rel=\"stylesheet\" href=\"css/line-awesome-font-awesome.min.css\">  -->\r\n\r\n</head>\r\n\r\n<body class=\"logn\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"col-md-8\">\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"logn-img\">\r\n\t\t\t\t\t<img src=\"./assets/images/login.jpg\" style=\"width:100%;\" />\r\n\t\t\t\t\t<!-- <img src=\"img/login.jpg\"/> -->\r\n\t\t\t\t\t<!-- <div class=\"paragraph\">\r\n\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Proin tincidunt bibendum malesuada. Fusce tincidunt nibh quis nisi tristique, sed ultrices lorem aliquam. Nam facilisis posuere vehicula. Integer tempus rhoncus volutpat.\r\n\t\t\t\t\t</div> -->\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"col-md-4\">\r\n\t\t\t<div class=\"row\">\r\n\r\n\t\t\t\t<!-- Mixins-->\r\n\t\t\t\t<!-- Pen Title-->\r\n\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<div class=\"card\"></div>\r\n\t\t\t\t\t<div class=\"card\">\r\n\t\t\t\t\t\t<h1 class=\"title\">Login</h1>\r\n\t\t\t\t\t\t<form role=\"form\" (ngSubmit)=\"reset(newPassword)\" novalidate>\r\n\t\t\t\t\t\t\t<div class=\"input-container\">\r\n\t\t\t\t\t\t\t\t<div class=\"col-xs-1\"><i class=\"fa fa-user\" aria-hidden=\"true\"></i></div>\r\n\t\t\t\t\t\t\t\t<div class=\"col-xs-10\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"Username\" name=\"email\" [(ngModel)]=\"newPassword.email\" required/>\r\n\t\t\t\t\t\t\t\t\t<label for=\"Username\">Email</label>\r\n\t\t\t\t\t\t\t\t\t<div class=\"bar\"></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"clearfix\"></div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"input-container\" >\r\n\t\t\t\t\t\t\t\t\t<re-captcha (captchaResponse)=\"handleCorrectCaptcha($event)\" site_key=\"6LdWoEsUAAAAALf4IQwncQqV0HZPduSL0Ab4QC11\" ></re-captcha>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div class=\"clearfix\"></div>\r\n\t\t\t\t\t\t\r\n              <div class=\"col-md-12\" style=\"text-align:center;\"><button type=\"submit\" class=\"btn round-button\">Reset password</button></div>\r\n              <div class=\"clearfix\"></div>\r\n            </form>\r\n            <br>\r\n            <div class=\"footer\"><a [routerLink]=\"['/company-login']\">Return to login</a></div>\r\n\t\t\t\t\t\t<div *ngIf=\"spinner\">\r\n\t\t\t\t\t\t\t\t<app-spinner></app-spinner>\r\n\t\t\t\t\t\t\t<!-- <div class=\"\">\r\n\t\t\t\t\t\t\t\t<svg class=\"svg\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n\t\t\t\t\t\t\t\t width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50; margin-left:25%;\" xml:space=\"preserve\">\r\n\t\t\t\t\t\t\t\t\t<path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n\t\t\t\t\t\t\t\t\t\t<animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</path>\r\n\t\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t\t</div> -->\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<!-- Modal -->\r\n\r\n\t<!-- <script src=\"http://code.jquery.com/jquery-1.11.1.js\"></script>\r\n\t<script src=\"js/bootstrap.min.js\"></script> -->\r\n\r\n\r\n</body>\r\n\r\n\r\n</html>"

/***/ }),

/***/ "../../../../../src/app/components/forgot-password/forgot-password.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ForgotPasswordComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_angular2_recaptcha__ = __webpack_require__("../../../../angular2-recaptcha/angular2-recaptcha.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_angular2_recaptcha___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_angular2_recaptcha__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var ForgotPasswordComponent = (function () {
    function ForgotPasswordComponent(companyService, snackBar, routes) {
        this.companyService = companyService;
        this.snackBar = snackBar;
        this.routes = routes;
        this.newPassword = {
            email: '',
            captcha: ''
        };
        this.spinner = false;
    }
    ForgotPasswordComponent.prototype.ngOnInit = function () {
    };
    ForgotPasswordComponent.prototype.handleCorrectCaptcha = function (event) {
        this.token = this.captcha.getResponse();
        // console.log(token);
    };
    ForgotPasswordComponent.prototype.reset = function (newPassword) {
        var _this = this;
        this.spinner = true;
        newPassword.captcha = this.token;
        this.companyService.forgotPassword(this.newPassword).subscribe(function (data) {
            console.log("data");
            _this.spinner = false;
            if (data.success == true) {
                var snackBarRef = _this.snackBar.open('Reset password successfully.Please check your email', '', {
                    duration: 2000
                });
                _this.routes.navigate(['/company-login']);
                if (_this.captcha) {
                    _this.captcha.reset();
                }
            }
            else {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 3000
                });
                if (_this.captcha) {
                    _this.captcha.reset();
                }
            }
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1_angular2_recaptcha__["ReCaptchaComponent"]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1_angular2_recaptcha__["ReCaptchaComponent"])
    ], ForgotPasswordComponent.prototype, "captcha", void 0);
    ForgotPasswordComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'forgot-password',
            template: __webpack_require__("../../../../../src/app/components/forgot-password/forgot-password.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/forgot-password/forgot-password.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_3__angular_material__["z" /* MatSnackBar */], __WEBPACK_IMPORTED_MODULE_2__angular_router__["Router"]])
    ], ForgotPasswordComponent);
    return ForgotPasswordComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/home/home.component.css":
/***/ (function(module, exports, __webpack_require__) {

var escape = __webpack_require__("../../../../css-loader/lib/url/escape.js");
exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "body{overflow-x:inherit;background:#fff ;}\r\n.navbar-nav > li{float:left;}\r\n.navbar-fixed-top{    background: rgba(255, 119, 0, 0.72);}\r\n.banner{ background: url(" + escape(__webpack_require__("../../../../../src/assets/images/banner.jpg")) + ") no-repeat center center fixed;\r\n  background-size: cover;\r\n      width: 100%;\r\n    min-height: 580px;\r\n\tposition:relative;\r\n  }\r\n .navbar-brand {\r\n    float: left;\r\n    padding: 10.5px 15px;\r\n    font-size: 18px;\r\n    line-height: 20px;\r\n    height: 78px;\r\n}\r\n/* ./assets/images/banner.jpg */\r\n.navbar-toggle {\r\n    position: relative;\r\n    float: right;\r\n    margin-right: 15px;\r\n    padding: 9px 10px;\r\n    margin-top: 10.5px;\r\n    margin-bottom: 10.5px;\r\n    background-color: #d06000;\r\n    /* background-image: none; */\r\n    border: 1px solid transparent;\r\n    border-radius: 13px;\r\n}\r\n.about p{    color: #a5a0a0;    line-height: 24px;}\r\n.paddtop{padding-top:4%;}\r\n.navbar-left{      padding-top: 4%;}\r\n.nav > li{margin-left: 9px;}\r\n.btn-login{background:none;border-radius:40px;border:3px solid #fff;color:#fff;font-weight:bold;margin-left:4px;}\r\n.btn-login:hover{color:#fff;opacity:0.6;}\r\n.nav > li > a:hover{\r\n    text-decoration: none;\r\n    background-color: #fdaf00;\r\n    color: #fff;\r\n    border-radius: 40px;\r\n\tpadding-top:10px;\r\n\tpadding-bottom:10px;\r\n}\r\n.nav > li > a:focus{text-decoration: none;\r\n    background-color: #fdaf00;\r\n    color: #fff;\r\n    border-radius: 40px;\r\n\tpadding-top:10px;\r\n\tpadding-bottom:10px;\r\n}\r\n.navbar-nav > li > a {\r\n    padding-top:10px;\r\n    padding-bottom: 10px;\r\n}\r\n  .planz{ background: url(" + escape(__webpack_require__("../../../../../src/assets/images/bg.jpg")) + ") no-repeat center center fixed;\r\n  background-size: cover;\r\n      width: 100%;\r\n   min-height: 327px;\r\n\tposition:relative;\r\n  }\r\n  .carry {\r\n    position: absolute;\r\n    z-index: 100;\r\n    left: 0;\r\n    right: 0;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    width: 100%;\r\n    max-width: 873px;\r\n    top: 46%;\r\n}\r\na {\r\n    color: #ffffff;\r\n    text-decoration: none;\r\n}\r\n\r\n.device{max-width:806px;width:100%;background: url(" + escape(__webpack_require__("../../../../../src/assets/images/device.png")) + ") no-repeat;background-size:100%;min-height:467px;margin:0 auto;    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n       bottom: -15%;}\r\n.left-c{text-align:right;color:#fff;    padding-top: 23%;padding-right: 4%;}\r\n.left-r{text-align:left;color:#fff;    padding-top: 23%;padding-left: 6%;}\r\n.about{padding:11em 0 3em 0;}\r\n.shade {\r\n   box-shadow: 0px -2px 77px 0px rgba(0, 0, 0, 0.09);\r\n\t    padding: 20px;\r\n}\r\n.features h3{    padding-top: 17px;\r\n    font-size: 18px;\r\n    color: #6f300c;\r\n    margin-top: 0;\r\n    font-weight: bold;}\r\n.features p{    \r\n    font-size: 12px;\r\n    color: #989898;\r\n    line-height: 19px;}\r\n.plans {\r\n  width: 836px;\r\n  margin: 50px auto;\r\n  overflow: hidden;\r\n}\r\n\r\n  .plan {\r\n    float: left;\r\n    max-width: 276px;\r\n    margin: 20px 2px;\r\n    padding: 15px 0px;\r\n    text-align: center;\r\n    background: white;\r\n    background-clip: padding-box;\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    box-shadow: 14px 26px 67px #0000002e;\r\n    -webkit-box-shadow: 14px 26px 67px #0000002e;\r\n    -moz-box-shadow: 14px 26px 67px #0000002e;\r\n    margin-right: -8px;\r\n}\r\n.banner h3{font-size: 20px;\r\n    font-weight: normal;\r\n    line-height: 27px;}\r\n.banner p{    color: #fdd3a7;}\r\n.hilight {\r\n  max-width: 309px;\r\n  padding: 28px 0px;\r\n  position: relative;\r\n  z-index: 100;\r\n  left: 0%;\r\n  top: -33px;\r\n}\r\n\r\n.features{padding:2em 0 6em 0;}\r\n.plan-title {\r\n      margin-bottom: 12px;\r\n    font-size: 22px;\r\n    color: #424242;\r\n}\r\n.mr-lft{    margin-left: -8%;}\r\n.plan-price {\r\n  margin-bottom: 20px;\r\n  line-height: 1;\r\n  font-size: 40px;\r\n  font-weight: bold;\r\n    color: #f7752a;\r\n}\r\n\r\n.plan-unit {\r\n  display: block;\r\n  margin-top: 5px;\r\n  font-size: 13px;\r\n  font-weight: normal;\r\n  color: #aaa;\r\n}\r\n\r\n.plan-features {\r\n  width: 100%;\r\n  margin:0 auto;\r\n  padding: 0;\r\n \r\n  text-align: left;\r\n}\r\n\r\n.plan-feature {\r\n    border-top: 1px solid #e5ded6;\r\n    text-align: center;\r\n        padding: 9px 0;\r\n\t    list-style-type: none;\r\n    \r\n}\r\n.plan-feature h4{text-align: center;\r\n    padding: 17px 0;\r\n    list-style-type: none;\r\n    font-size: 21px;\r\n    line-height: 39px;\r\n    font-weight: bold;\r\n    color: #9f9f9f;\r\n\t    padding: 0;\r\n    margin: 0;\r\n}\r\n.hilight h4{    color: #767676 !important;\r\n    font-size: 39px;\r\n    line-height: 47px;}\r\n.hilight .plan-price{font-size:48px;}\r\n\r\n.plan-feature + .plan-feature {\r\n  margin-top: 5px;\r\n}\r\n\r\n.plan-feature-unit {\r\n  margin-left: 2px;\r\n  font-size: 16px;\r\n}\r\n\r\n.plan-feature-name {\r\n  font-size: 13px;\r\n  font-weight: normal;\r\n  color: #aaa;\r\n}\r\n\r\n.plan-button {\r\n  position: relative;\r\n  display: block;\r\n  line-height: 40px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: white;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-shadow: 0 1px rgba(0, 0, 0, 0.1);\r\n  background: #fd935c;\r\n  border-bottom: 2px solid #cf7e3b;\r\n  border-color: rgba(0, 0, 0, 0.15);\r\n  border-radius: 4px;\r\n}\r\n.hilight .plan-feature-name {\r\nfont-size: 15px;}\r\n.planz h2{color:#fff;text-align:center;    padding-top: 4%;}\r\nfooter{width:100%;padding:10px 0;background:#ccc;color:#fff;text-align:left;font-size:13px;    margin-top: 34em;}\r\n\r\n\r\n@media only screen and (max-width :1024px) {\r\n.device{    max-width: 672px;bottom: -20%;}\r\n\r\n}\r\n\r\n@media only screen and (max-width : 768px) {\r\n\t.left-r{display:none;}\r\n\t.banner p{text-align:center;}\r\n\t.device{    max-width: 617px;bottom: -41%;}\r\n\t.banner h3{text-align:center;}\r\n\t.nav > li > a{padding: 10px 6px;}\r\n\t.mr-lft {\r\n    margin-left: -14%;\r\n    }\r\n\t.hilight{left: -7%;}\r\n\t\r\n}\r\n@media only screen and (max-width : 767px) {\r\n.plan { max-width: 253px;}\t\r\n.mr-lft {\r\n    margin-left: -17%;\r\n}\r\n}\r\n\r\n@media only screen and (max-width : 480px) {\r\n\r\n.img-responsive{margin:0 auto;}\r\n.features h3{text-align:center;}\r\n.features p{text-align:center;}\r\n.banner{    min-height: 415px;}\r\n.device {\r\n    max-width: 344px;\r\n    bottom: -82%;\r\n\t    min-height: 427px;\r\n}\r\n.plan{     max-width: 152px;}\r\n.left-c{    padding-top: 31%;}\r\n.mr-lft {\r\n    margin-left: -26%;\r\n}\r\n.hilight {\r\n    left: -13%;\r\n}\r\n}\r\n@media only screen and (max-width : 360px) {\r\n\t\r\n\t.mr-lft {\r\n    margin-left: -30%;\r\n    }\r\n\t.hilight {\r\n    left: -15%;\r\n}\r\n\t\r\n}\r\n\r\n/* @charset \"UTF-8\"; */\r\n\r\n/*!\r\nAnimate.css - http://daneden.me/animate\r\nLicensed under the MIT license - http://opensource.org/licenses/MIT\r\n\r\nCopyright (c) 2015 Daniel Eden\r\n*/\r\n\r\n.animated {\r\n  animation-duration: 1s;\r\n  animation-fill-mode: both;\r\n}\r\n.animated-fast {\r\n  animation-duration: .5s;\r\n  animation-fill-mode: both;\r\n}\r\n\r\n.animated.infinite {\r\n  animation-iteration-count: infinite;\r\n}\r\n\r\n.animated.hinge {\r\n  animation-duration: 2s;\r\n}\r\n\r\n.animated.bounceIn,\r\n.animated.bounceOut {\r\n  animation-duration: .75s;\r\n}\r\n\r\n.animated.flipOutX,\r\n.animated.flipOutY {\r\n  animation-duration: .75s;\r\n}\r\n\r\n@keyframes bounce {\r\n  from, 20%, 53%, 80%, to {\r\n    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\r\n    transform: translate3d(0,0,0);\r\n  }\r\n\r\n  40%, 43% {\r\n    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);\r\n    transform: translate3d(0, -30px, 0);\r\n  }\r\n\r\n  70% {\r\n    animation-timing-function: cubic-bezier(0.755, 0.050, 0.855, 0.060);\r\n    transform: translate3d(0, -15px, 0);\r\n  }\r\n\r\n  90% {\r\n    transform: translate3d(0,-4px,0);\r\n  }\r\n}\r\n\r\n.bounce {\r\n  animation-name: bounce;\r\n  transform-origin: center bottom;\r\n}\r\n\r\n@keyframes flash {\r\n  from, 50%, to {\r\n    opacity: 1;\r\n  }\r\n\r\n  25%, 75% {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.flash {\r\n  animation-name: flash;\r\n}\r\n\r\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\r\n\r\n@keyframes pulse {\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  50% {\r\n    transform: scale3d(1.05, 1.05, 1.05);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n}\r\n\r\n.pulse {\r\n  animation-name: pulse;\r\n}\r\n\r\n@keyframes rubberBand {\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  30% {\r\n    transform: scale3d(1.25, 0.75, 1);\r\n  }\r\n\r\n  40% {\r\n    transform: scale3d(0.75, 1.25, 1);\r\n  }\r\n\r\n  50% {\r\n    transform: scale3d(1.15, 0.85, 1);\r\n  }\r\n\r\n  65% {\r\n    transform: scale3d(.95, 1.05, 1);\r\n  }\r\n\r\n  75% {\r\n    transform: scale3d(1.05, .95, 1);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n}\r\n\r\n.rubberBand {\r\n  animation-name: rubberBand;\r\n}\r\n\r\n@keyframes shake {\r\n  from, to {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n\r\n  10%, 30%, 50%, 70%, 90% {\r\n    transform: translate3d(-10px, 0, 0);\r\n  }\r\n\r\n  20%, 40%, 60%, 80% {\r\n    transform: translate3d(10px, 0, 0);\r\n  }\r\n}\r\n\r\n.shake {\r\n  animation-name: shake;\r\n}\r\n\r\n@keyframes swing {\r\n  20% {\r\n    transform: rotate3d(0, 0, 1, 15deg);\r\n  }\r\n\r\n  40% {\r\n    transform: rotate3d(0, 0, 1, -10deg);\r\n  }\r\n\r\n  60% {\r\n    transform: rotate3d(0, 0, 1, 5deg);\r\n  }\r\n\r\n  80% {\r\n    transform: rotate3d(0, 0, 1, -5deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate3d(0, 0, 1, 0deg);\r\n  }\r\n}\r\n\r\n.swing {\r\n  transform-origin: top center;\r\n  animation-name: swing;\r\n}\r\n\r\n@keyframes tada {\r\n  from {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n\r\n  10%, 20% {\r\n    transform: scale3d(.9, .9, .9) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  30%, 50%, 70%, 90% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, 3deg);\r\n  }\r\n\r\n  40%, 60%, 80% {\r\n    transform: scale3d(1.1, 1.1, 1.1) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  to {\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n}\r\n\r\n.tada {\r\n  animation-name: tada;\r\n}\r\n\r\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\r\n\r\n@keyframes wobble {\r\n  from {\r\n    transform: none;\r\n  }\r\n\r\n  15% {\r\n    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);\r\n  }\r\n\r\n  30% {\r\n    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);\r\n  }\r\n\r\n  45% {\r\n    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);\r\n  }\r\n\r\n  60% {\r\n    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);\r\n  }\r\n\r\n  75% {\r\n    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);\r\n  }\r\n\r\n  to {\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.wobble {\r\n  animation-name: wobble;\r\n}\r\n\r\n@keyframes jello {\r\n  from, 11.1%, to {\r\n    transform: none;\r\n  }\r\n\r\n  22.2% {\r\n    transform: skewX(-12.5deg) skewY(-12.5deg);\r\n  }\r\n\r\n  33.3% {\r\n    transform: skewX(6.25deg) skewY(6.25deg);\r\n  }\r\n\r\n  44.4% {\r\n    transform: skewX(-3.125deg) skewY(-3.125deg);\r\n  }\r\n\r\n  55.5% {\r\n    transform: skewX(1.5625deg) skewY(1.5625deg);\r\n  }\r\n\r\n  66.6% {\r\n    transform: skewX(-0.78125deg) skewY(-0.78125deg);\r\n  }\r\n\r\n  77.7% {\r\n    transform: skewX(0.390625deg) skewY(0.390625deg);\r\n  }\r\n\r\n  88.8% {\r\n    transform: skewX(-0.1953125deg) skewY(-0.1953125deg);\r\n  }\r\n}\r\n\r\n.jello {\r\n  animation-name: jello;\r\n  transform-origin: center;\r\n}\r\n\r\n@keyframes bounceIn {\r\n  from, 20%, 40%, 60%, 80%, to {\r\n    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\r\n  }\r\n\r\n  0% {\r\n    opacity: 0;\r\n    transform: scale3d(.3, .3, .3);\r\n  }\r\n\r\n  20% {\r\n    transform: scale3d(1.1, 1.1, 1.1);\r\n  }\r\n\r\n  40% {\r\n    transform: scale3d(.9, .9, .9);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: scale3d(1.03, 1.03, 1.03);\r\n  }\r\n\r\n  80% {\r\n    transform: scale3d(.97, .97, .97);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: scale3d(1, 1, 1);\r\n  }\r\n}\r\n\r\n.bounceIn {\r\n  animation-name: bounceIn;\r\n}\r\n\r\n@keyframes bounceInDown {\r\n  from, 60%, 75%, 90%, to {\r\n    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\r\n  }\r\n\r\n  0% {\r\n    opacity: 0;\r\n    transform: translate3d(0, -3000px, 0);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: translate3d(0, 25px, 0);\r\n  }\r\n\r\n  75% {\r\n    transform: translate3d(0, -10px, 0);\r\n  }\r\n\r\n  90% {\r\n    transform: translate3d(0, 5px, 0);\r\n  }\r\n\r\n  to {\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.bounceInDown {\r\n  animation-name: bounceInDown;\r\n}\r\n\r\n@keyframes bounceInLeft {\r\n  from, 60%, 75%, 90%, to {\r\n    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\r\n  }\r\n\r\n  0% {\r\n    opacity: 0;\r\n    transform: translate3d(-3000px, 0, 0);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: translate3d(25px, 0, 0);\r\n  }\r\n\r\n  75% {\r\n    transform: translate3d(-10px, 0, 0);\r\n  }\r\n\r\n  90% {\r\n    transform: translate3d(5px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.bounceInLeft {\r\n  animation-name: bounceInLeft;\r\n}\r\n\r\n@keyframes bounceInRight {\r\n  from, 60%, 75%, 90%, to {\r\n    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\r\n  }\r\n\r\n  from {\r\n    opacity: 0;\r\n    transform: translate3d(3000px, 0, 0);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: translate3d(-25px, 0, 0);\r\n  }\r\n\r\n  75% {\r\n    transform: translate3d(10px, 0, 0);\r\n  }\r\n\r\n  90% {\r\n    transform: translate3d(-5px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.bounceInRight {\r\n  animation-name: bounceInRight;\r\n}\r\n\r\n@keyframes bounceInUp {\r\n  from, 60%, 75%, 90%, to {\r\n    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\r\n  }\r\n\r\n  from {\r\n    opacity: 0;\r\n    transform: translate3d(0, 3000px, 0);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: translate3d(0, -20px, 0);\r\n  }\r\n\r\n  75% {\r\n    transform: translate3d(0, 10px, 0);\r\n  }\r\n\r\n  90% {\r\n    transform: translate3d(0, -5px, 0);\r\n  }\r\n\r\n  to {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n}\r\n\r\n.bounceInUp {\r\n  animation-name: bounceInUp;\r\n}\r\n\r\n@keyframes bounceOut {\r\n  20% {\r\n    transform: scale3d(.9, .9, .9);\r\n  }\r\n\r\n  50%, 55% {\r\n    opacity: 1;\r\n    transform: scale3d(1.1, 1.1, 1.1);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: scale3d(.3, .3, .3);\r\n  }\r\n}\r\n\r\n.bounceOut {\r\n  animation-name: bounceOut;\r\n}\r\n\r\n@keyframes bounceOutDown {\r\n  20% {\r\n    transform: translate3d(0, 10px, 0);\r\n  }\r\n\r\n  40%, 45% {\r\n    opacity: 1;\r\n    transform: translate3d(0, -20px, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(0, 2000px, 0);\r\n  }\r\n}\r\n\r\n.bounceOutDown {\r\n  animation-name: bounceOutDown;\r\n}\r\n\r\n@keyframes bounceOutLeft {\r\n  20% {\r\n    opacity: 1;\r\n    transform: translate3d(20px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(-2000px, 0, 0);\r\n  }\r\n}\r\n\r\n.bounceOutLeft {\r\n  animation-name: bounceOutLeft;\r\n}\r\n\r\n@keyframes bounceOutRight {\r\n  20% {\r\n    opacity: 1;\r\n    transform: translate3d(-20px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(2000px, 0, 0);\r\n  }\r\n}\r\n\r\n.bounceOutRight {\r\n  animation-name: bounceOutRight;\r\n}\r\n\r\n@keyframes bounceOutUp {\r\n  20% {\r\n    transform: translate3d(0, -10px, 0);\r\n  }\r\n\r\n  40%, 45% {\r\n    opacity: 1;\r\n    transform: translate3d(0, 20px, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(0, -2000px, 0);\r\n  }\r\n}\r\n\r\n.bounceOutUp {\r\n  animation-name: bounceOutUp;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale(0.95);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: scale(1.0);\r\n  }\r\n}\r\n\r\n.fadeIn {\r\n  animation-name: fadeIn;\r\n}\r\n\r\n@keyframes fadeInDown {\r\n  from {\r\n    opacity: 0;\r\n    /*-webkit-transform: translate3d(0, -100%, 0);\r\n    transform: translate3d(0, -100%, 0);*/\r\n    transform: translate3d(0, -50px, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInDown {\r\n  animation-name: fadeInDown;\r\n}\r\n\r\n@keyframes fadeInDownBig {\r\n  from {\r\n    opacity: 0;\r\n    transform: translate3d(0, -2000px, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInDownBig {\r\n  animation-name: fadeInDownBig;\r\n}\r\n\r\n@keyframes fadeInLeft {\r\n  from {\r\n    opacity: 0;\r\n    /*-webkit-transform: translate3d(-100%, 0, 0);\r\n    transform: translate3d(-100%, 0, 0);*/\r\n    transform: translate3d(-50px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInLeft {\r\n  animation-name: fadeInLeft;\r\n}\r\n\r\n@keyframes fadeInLeftBig {\r\n  from {\r\n    opacity: 0;\r\n    transform: translate3d(-2000px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInLeftBig {\r\n  animation-name: fadeInLeftBig;\r\n}\r\n\r\n@keyframes fadeInRight {\r\n  from {\r\n    opacity: 0;\r\n    /*-webkit-transform: translate3d(100%, 0, 0);\r\n    transform: translate3d(100%, 0, 0);*/\r\n    transform: translate3d(50px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInRight {\r\n  animation-name: fadeInRight;\r\n}\r\n\r\n@keyframes fadeInRightBig {\r\n  from {\r\n    opacity: 0;\r\n    transform: translate3d(2000px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInRightBig {\r\n  animation-name: fadeInRightBig;\r\n}\r\n\r\n@keyframes fadeInUp {\r\n  from {\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    /*-webkit-transform: translate3d(0, 100%, 0);\r\n    transform: translate3d(0, 100%, 0);*/\r\n    transform: translate3d(0, 40px, 0);\r\n  }\r\n\r\n  to {\r\n    visibility: visible;\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInUp {\r\n  animation-name: fadeInUp;\r\n}\r\n\r\n@keyframes fadeInUpMenu {\r\n  from {\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    /*-webkit-transform: translate3d(0, 100%, 0);\r\n    transform: translate3d(0, 100%, 0);*/\r\n    transform: translate3d(0, 20px, 0);\r\n  }\r\n\r\n  to {\r\n    visibility: visible;\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInUpMenu {\r\n  animation-name: fadeInUpMenu;\r\n}\r\n\r\n@keyframes fadeInUpBig {\r\n  from {\r\n    opacity: 0;\r\n    transform: translate3d(0, 2000px, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.fadeInUpBig {\r\n  animation-name: fadeInUpBig;\r\n}\r\n\r\n@keyframes fadeOut {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.fadeOut {\r\n  animation-name: fadeOut;\r\n}\r\n\r\n@keyframes fadeOutDown {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(0, 40px, 0);\r\n  }\r\n}\r\n\r\n.fadeOutDown {\r\n  animation-name: fadeOutDown;\r\n}\r\n\r\n@keyframes fadeOutDownBig {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(0, 2000px, 0);\r\n  }\r\n}\r\n\r\n.fadeOutDownBig {\r\n  animation-name: fadeOutDownBig;\r\n}\r\n\r\n@keyframes fadeOutLeft {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(-100%, 0, 0);\r\n  }\r\n}\r\n\r\n.fadeOutLeft {\r\n  animation-name: fadeOutLeft;\r\n}\r\n\r\n@keyframes fadeOutLeftBig {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(-2000px, 0, 0);\r\n  }\r\n}\r\n\r\n.fadeOutLeftBig {\r\n  animation-name: fadeOutLeftBig;\r\n}\r\n\r\n@keyframes fadeOutRight {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(100%, 0, 0);\r\n  }\r\n}\r\n\r\n.fadeOutRight {\r\n  animation-name: fadeOutRight;\r\n}\r\n\r\n@keyframes fadeOutRightBig {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(2000px, 0, 0);\r\n  }\r\n}\r\n\r\n.fadeOutRightBig {\r\n  animation-name: fadeOutRightBig;\r\n}\r\n\r\n@keyframes fadeOutUp {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(0, -100%, 0);\r\n  }\r\n}\r\n\r\n.fadeOutUp {\r\n  animation-name: fadeOutUp;\r\n}\r\n\r\n@keyframes fadeOutUpBig {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(0, -2000px, 0);\r\n  }\r\n}\r\n\r\n.fadeOutUpBig {\r\n  animation-name: fadeOutUpBig;\r\n}\r\n\r\n@keyframes flip {\r\n  from {\r\n    transform: perspective(400px) rotate3d(0, 1, 0, -360deg);\r\n    animation-timing-function: ease-out;\r\n  }\r\n\r\n  40% {\r\n    transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -190deg);\r\n    animation-timing-function: ease-out;\r\n  }\r\n\r\n  50% {\r\n    transform: perspective(400px) translate3d(0, 0, 150px) rotate3d(0, 1, 0, -170deg);\r\n    animation-timing-function: ease-in;\r\n  }\r\n\r\n  80% {\r\n    transform: perspective(400px) scale3d(.95, .95, .95);\r\n    animation-timing-function: ease-in;\r\n  }\r\n\r\n  to {\r\n    transform: perspective(400px);\r\n    animation-timing-function: ease-in;\r\n  }\r\n}\r\n\r\n.animated.flip {\r\n  -webkit-backface-visibility: visible;\r\n  backface-visibility: visible;\r\n  animation-name: flip;\r\n}\r\n\r\n@keyframes flipInX {\r\n  from {\r\n    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\r\n    animation-timing-function: ease-in;\r\n    opacity: 0;\r\n  }\r\n\r\n  40% {\r\n    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\r\n    animation-timing-function: ease-in;\r\n  }\r\n\r\n  60% {\r\n    transform: perspective(400px) rotate3d(1, 0, 0, 10deg);\r\n    opacity: 1;\r\n  }\r\n\r\n  80% {\r\n    transform: perspective(400px) rotate3d(1, 0, 0, -5deg);\r\n  }\r\n\r\n  to {\r\n    transform: perspective(400px);\r\n  }\r\n}\r\n\r\n.flipInX {\r\n  -webkit-backface-visibility: visible !important;\r\n  backface-visibility: visible !important;\r\n  animation-name: flipInX;\r\n}\r\n\r\n@keyframes flipInY {\r\n  from {\r\n    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\r\n    animation-timing-function: ease-in;\r\n    opacity: 0;\r\n  }\r\n\r\n  40% {\r\n    transform: perspective(400px) rotate3d(0, 1, 0, -20deg);\r\n    animation-timing-function: ease-in;\r\n  }\r\n\r\n  60% {\r\n    transform: perspective(400px) rotate3d(0, 1, 0, 10deg);\r\n    opacity: 1;\r\n  }\r\n\r\n  80% {\r\n    transform: perspective(400px) rotate3d(0, 1, 0, -5deg);\r\n  }\r\n\r\n  to {\r\n    transform: perspective(400px);\r\n  }\r\n}\r\n\r\n.flipInY {\r\n  -webkit-backface-visibility: visible !important;\r\n  backface-visibility: visible !important;\r\n  animation-name: flipInY;\r\n}\r\n\r\n@keyframes flipOutX {\r\n  from {\r\n    transform: perspective(400px);\r\n  }\r\n\r\n  30% {\r\n    transform: perspective(400px) rotate3d(1, 0, 0, -20deg);\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform: perspective(400px) rotate3d(1, 0, 0, 90deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.flipOutX {\r\n  animation-name: flipOutX;\r\n  -webkit-backface-visibility: visible !important;\r\n  backface-visibility: visible !important;\r\n}\r\n\r\n@keyframes flipOutY {\r\n  from {\r\n    transform: perspective(400px);\r\n  }\r\n\r\n  30% {\r\n    transform: perspective(400px) rotate3d(0, 1, 0, -15deg);\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform: perspective(400px) rotate3d(0, 1, 0, 90deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.flipOutY {\r\n  -webkit-backface-visibility: visible !important;\r\n  backface-visibility: visible !important;\r\n  animation-name: flipOutY;\r\n}\r\n\r\n@keyframes lightSpeedIn {\r\n  from {\r\n    transform: translate3d(100%, 0, 0) skewX(-30deg);\r\n    opacity: 0;\r\n  }\r\n\r\n  60% {\r\n    transform: skewX(20deg);\r\n    opacity: 1;\r\n  }\r\n\r\n  80% {\r\n    transform: skewX(-5deg);\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform: none;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.lightSpeedIn {\r\n  animation-name: lightSpeedIn;\r\n  animation-timing-function: ease-out;\r\n}\r\n\r\n@keyframes lightSpeedOut {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform: translate3d(100%, 0, 0) skewX(30deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.lightSpeedOut {\r\n  animation-name: lightSpeedOut;\r\n  animation-timing-function: ease-in;\r\n}\r\n\r\n@keyframes rotateIn {\r\n  from {\r\n    transform-origin: center;\r\n    transform: rotate3d(0, 0, 1, -200deg);\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    transform-origin: center;\r\n    transform: none;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.rotateIn {\r\n  animation-name: rotateIn;\r\n}\r\n\r\n@keyframes rotateInDownLeft {\r\n  from {\r\n    transform-origin: left bottom;\r\n    transform: rotate3d(0, 0, 1, -45deg);\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    transform-origin: left bottom;\r\n    transform: none;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.rotateInDownLeft {\r\n  animation-name: rotateInDownLeft;\r\n}\r\n\r\n@keyframes rotateInDownRight {\r\n  from {\r\n    transform-origin: right bottom;\r\n    transform: rotate3d(0, 0, 1, 45deg);\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    transform-origin: right bottom;\r\n    transform: none;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.rotateInDownRight {\r\n  animation-name: rotateInDownRight;\r\n}\r\n\r\n@keyframes rotateInUpLeft {\r\n  from {\r\n    transform-origin: left bottom;\r\n    transform: rotate3d(0, 0, 1, 45deg);\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    transform-origin: left bottom;\r\n    transform: none;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.rotateInUpLeft {\r\n  animation-name: rotateInUpLeft;\r\n}\r\n\r\n@keyframes rotateInUpRight {\r\n  from {\r\n    transform-origin: right bottom;\r\n    transform: rotate3d(0, 0, 1, -90deg);\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    transform-origin: right bottom;\r\n    transform: none;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.rotateInUpRight {\r\n  animation-name: rotateInUpRight;\r\n}\r\n\r\n@keyframes rotateOut {\r\n  from {\r\n    transform-origin: center;\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform-origin: center;\r\n    transform: rotate3d(0, 0, 1, 200deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.rotateOut {\r\n  animation-name: rotateOut;\r\n}\r\n\r\n@keyframes rotateOutDownLeft {\r\n  from {\r\n    transform-origin: left bottom;\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform-origin: left bottom;\r\n    transform: rotate3d(0, 0, 1, 45deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.rotateOutDownLeft {\r\n  animation-name: rotateOutDownLeft;\r\n}\r\n\r\n@keyframes rotateOutDownRight {\r\n  from {\r\n    transform-origin: right bottom;\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform-origin: right bottom;\r\n    transform: rotate3d(0, 0, 1, -45deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.rotateOutDownRight {\r\n  animation-name: rotateOutDownRight;\r\n}\r\n\r\n@keyframes rotateOutUpLeft {\r\n  from {\r\n    transform-origin: left bottom;\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform-origin: left bottom;\r\n    transform: rotate3d(0, 0, 1, -45deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.rotateOutUpLeft {\r\n  animation-name: rotateOutUpLeft;\r\n}\r\n\r\n@keyframes rotateOutUpRight {\r\n  from {\r\n    transform-origin: right bottom;\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform-origin: right bottom;\r\n    transform: rotate3d(0, 0, 1, 90deg);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.rotateOutUpRight {\r\n  animation-name: rotateOutUpRight;\r\n}\r\n\r\n@keyframes hinge {\r\n  0% {\r\n    transform-origin: top left;\r\n    animation-timing-function: ease-in-out;\r\n  }\r\n\r\n  20%, 60% {\r\n    transform: rotate3d(0, 0, 1, 80deg);\r\n    transform-origin: top left;\r\n    animation-timing-function: ease-in-out;\r\n  }\r\n\r\n  40%, 80% {\r\n    transform: rotate3d(0, 0, 1, 60deg);\r\n    transform-origin: top left;\r\n    animation-timing-function: ease-in-out;\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    transform: translate3d(0, 700px, 0);\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.hinge {\r\n  animation-name: hinge;\r\n}\r\n\r\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\r\n\r\n@keyframes rollIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n}\r\n\r\n.rollIn {\r\n  animation-name: rollIn;\r\n}\r\n\r\n/* originally authored by Nick Pettit - https://github.com/nickpettit/glide */\r\n\r\n@keyframes rollOut {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);\r\n  }\r\n}\r\n\r\n.rollOut {\r\n  animation-name: rollOut;\r\n}\r\n\r\n@keyframes zoomIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale3d(.3, .3, .3);\r\n  }\r\n\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.zoomIn {\r\n  animation-name: zoomIn;\r\n}\r\n\r\n@keyframes zoomInDown {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale3d(.1, .1, .1) translate3d(0, -1000px, 0);\r\n    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);\r\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);\r\n  }\r\n}\r\n\r\n.zoomInDown {\r\n  animation-name: zoomInDown;\r\n}\r\n\r\n@keyframes zoomInLeft {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale3d(.1, .1, .1) translate3d(-1000px, 0, 0);\r\n    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: scale3d(.475, .475, .475) translate3d(10px, 0, 0);\r\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);\r\n  }\r\n}\r\n\r\n.zoomInLeft {\r\n  animation-name: zoomInLeft;\r\n}\r\n\r\n@keyframes zoomInRight {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale3d(.1, .1, .1) translate3d(1000px, 0, 0);\r\n    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: scale3d(.475, .475, .475) translate3d(-10px, 0, 0);\r\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);\r\n  }\r\n}\r\n\r\n.zoomInRight {\r\n  animation-name: zoomInRight;\r\n}\r\n\r\n@keyframes zoomInUp {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);\r\n    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);\r\n  }\r\n\r\n  60% {\r\n    opacity: 1;\r\n    transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);\r\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);\r\n  }\r\n}\r\n\r\n.zoomInUp {\r\n  animation-name: zoomInUp;\r\n}\r\n\r\n@keyframes zoomOut {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n\r\n  50% {\r\n    opacity: 0;\r\n    transform: scale3d(.3, .3, .3);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.zoomOut {\r\n  animation-name: zoomOut;\r\n}\r\n\r\n@keyframes zoomOutDown {\r\n  40% {\r\n    opacity: 1;\r\n    transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);\r\n    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: scale3d(.1, .1, .1) translate3d(0, 2000px, 0);\r\n    transform-origin: center bottom;\r\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);\r\n  }\r\n}\r\n\r\n.zoomOutDown {\r\n  animation-name: zoomOutDown;\r\n}\r\n\r\n@keyframes zoomOutLeft {\r\n  40% {\r\n    opacity: 1;\r\n    transform: scale3d(.475, .475, .475) translate3d(42px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: scale(.1) translate3d(-2000px, 0, 0);\r\n    transform-origin: left center;\r\n  }\r\n}\r\n\r\n.zoomOutLeft {\r\n  animation-name: zoomOutLeft;\r\n}\r\n\r\n@keyframes zoomOutRight {\r\n  40% {\r\n    opacity: 1;\r\n    transform: scale3d(.475, .475, .475) translate3d(-42px, 0, 0);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: scale(.1) translate3d(2000px, 0, 0);\r\n    transform-origin: right center;\r\n  }\r\n}\r\n\r\n.zoomOutRight {\r\n  animation-name: zoomOutRight;\r\n}\r\n\r\n@keyframes zoomOutUp {\r\n  40% {\r\n    opacity: 1;\r\n    transform: scale3d(.475, .475, .475) translate3d(0, 60px, 0);\r\n    animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);\r\n  }\r\n\r\n  to {\r\n    opacity: 0;\r\n    transform: scale3d(.1, .1, .1) translate3d(0, -2000px, 0);\r\n    transform-origin: center bottom;\r\n    animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);\r\n  }\r\n}\r\n\r\n.zoomOutUp {\r\n  animation-name: zoomOutUp;\r\n}\r\n\r\n@keyframes slideInDown {\r\n  from {\r\n    transform: translate3d(0, -100%, 0);\r\n    visibility: visible;\r\n  }\r\n\r\n  to {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n}\r\n\r\n.slideInDown {\r\n  animation-name: slideInDown;\r\n}\r\n\r\n@keyframes slideInLeft {\r\n  from {\r\n    transform: translate3d(-100%, 0, 0);\r\n    visibility: visible;\r\n  }\r\n\r\n  to {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n}\r\n\r\n.slideInLeft {\r\n  animation-name: slideInLeft;\r\n}\r\n\r\n@keyframes slideInRight {\r\n  from {\r\n    transform: translate3d(100%, 0, 0);\r\n    visibility: visible;\r\n  }\r\n\r\n  to {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n}\r\n\r\n.slideInRight {\r\n  animation-name: slideInRight;\r\n}\r\n\r\n@keyframes slideInUp {\r\n  from {\r\n    transform: translate3d(0, 100%, 0);\r\n    visibility: visible;\r\n  }\r\n\r\n  to {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n}\r\n\r\n.slideInUp {\r\n  animation-name: slideInUp;\r\n}\r\n\r\n@keyframes slideOutDown {\r\n  from {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n\r\n  to {\r\n    visibility: hidden;\r\n    transform: translate3d(0, 100%, 0);\r\n  }\r\n}\r\n\r\n.slideOutDown {\r\n  animation-name: slideOutDown;\r\n}\r\n\r\n@keyframes slideOutLeft {\r\n  from {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n\r\n  to {\r\n    visibility: hidden;\r\n    transform: translate3d(-100%, 0, 0);\r\n  }\r\n}\r\n\r\n.slideOutLeft {\r\n  animation-name: slideOutLeft;\r\n}\r\n\r\n@keyframes slideOutRight {\r\n  from {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n\r\n  to {\r\n    visibility: hidden;\r\n    transform: translate3d(100%, 0, 0);\r\n  }\r\n}\r\n\r\n.slideOutRight {\r\n  animation-name: slideOutRight;\r\n}\r\n\r\n@keyframes slideOutUp {\r\n  from {\r\n    transform: translate3d(0, 0, 0);\r\n  }\r\n\r\n  to {\r\n    visibility: hidden;\r\n    transform: translate3d(0, -100%, 0);\r\n  }\r\n}\r\n\r\n.slideOutUp {\r\n  animation-name: slideOutUp;\r\n}\r\nsection{padding:0;}\r\n.banner h3{color:#fff;text-align:right;text-transform:none;margin-bottom:15px;}\r\nh2{text-align:left;}\r\n.about p{text-align:left !important;}\r\n.features p{text-align:left;}\r\n.features h3{text-transform:none;margin-bottom:0;text-align:left !important;margin-bottom:10px;}\r\n.plan-title{\r\n  margin-bottom: 12px;\r\n  font-size: 22px;\r\n  color: #424242;\r\n  padding-top: 20px;\r\n  text-transform: none;\r\n  font-weight: normal;\r\n}\r\n.nav > li > a:hover{    background: none;}\r\n.login-bt > a{    padding-top: 0 !important;    padding-left: 0;}\r\n.btn-login[_ngcontent-c1] {\r\n  background: none;\r\n  border-radius: 40px;\r\n  border: 3px solid #fff;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  margin-left: 4px;\r\n  /* padding-bottom: 12px; */\r\n  line-height: 0 !important;\r\n  padding: 17px;\r\n}\r\n.nav > li > a:hover {\r\n  text-decoration: none;\r\n  background-color: #fdaf00;\r\n  color: #fff;\r\n  border-radius: 40px;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n}\r\n.login-bt > a:hover{background:none !important;background-color:inherit !important;}\r\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/home/home.component.html":
/***/ (function(module, exports) {

module.exports = "\r\n\r\n<!-- <!DOCTYPE html>\r\n<html>\r\n<head>\r\n<title>Taskit</title>\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\r\n\r\n<link href=\"css/homepage.css\" rel=\"stylesheet\">\r\n\r\n<link rel=\"stylesheet\" href=\"css/animate.css\">\r\n<link rel=\"stylesheet\" href=\"css/font-awesome.min.css\">\r\n<link rel=\"stylesheet\" href=\"css/line-awesome-font-awesome.min.css\"> -->\r\n\r\n<!-- </head> -->\r\n<body class=\"home\">\r\n\t\t<nav class=\"navbar navbar-trans navbar-fixed-top\" role=\"navigation\">\r\n\t\t\t  <div class=\"container\">\r\n\t\t\t\t<div class=\"navbar-header\">\r\n\t\t\t\t  <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#navbar-collapsible\">\r\n\t\t\t\t\t<span class=\"sr-only\">Toggle navigation</span>\r\n\t\t\t\t\t<span class=\"icon-bar\"></span>\r\n\t\t\t\t\t<span class=\"icon-bar\"></span>\r\n\t\t\t\t\t<span class=\"icon-bar\"></span>\r\n\t\t\t\t  </button>\r\n\t\t\t\t  <a class=\"navbar-brand\" href=\"#\"><img src=\"./assets/images/logo.png\"/></a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"navbar-collapse collapse pull-right\" id=\"navbar-collapsible\">\r\n\t\t\t\t  <ul class=\"nav navbar-nav navbar-left\">\r\n\t\t\t\t\t<li><a scrollTo href=\"#section1\">Home</a></li>\r\n\t\t\t\t\t<li><a scrollTo href=\"#section2\">About Us</a></li>\r\n\t\t\t\t\t<li><a scrollTo scrollTargetSelector=\"#section3\" scrollYTarget=\"900\">Facilities</a></li>\r\n\t\t\t\t\t<li><a scrollTo href=\"#section4\" scrollYTarget=\"1300\">Plans & Price</a></li>\r\n\t\t\t\t\t<li class=\"login-bt\">\r\n\t\t\t\t\t\t\t<a routerLink=\"/company-login\" >\r\n\t\t\t\t\t\t<input type=\"submit\" name=\"login-submit\" id=\"login-submit\" tabindex=\"4\" class=\"form-control btn btn-login\" value=\"Log In\">\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t </li>\t\t\r\n\t\t\t\t\t<li class=\"login-bt\"><a routerLink=\"/company-signup\" >\r\n\t\t\t\t\t\t<input type=\"submit\" name=\"login-submit\" id=\"login-submit\" tabindex=\"4\" class=\"form-control btn btn-login\" value=\"Signup\">\r\n\t\t\t\t\t</a></li>\r\n\t\t\t\t  </ul>\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t</nav>\r\n\t\t\t\r\n\r\n\t\t\t<section class=\"banner\" id=\"section1\">\r\n\t\t\t\t  \r\n\t\t\t\t \r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-md-3 left-c wow fadeInRight\" data-wow-delay=\"0.4s\">\r\n\t\t\t\t\t\t\t<p><img src=\"./assets/images/logo2.png\"/></p>\r\n\t\t\t\t\t\t\t<h3>helps over 10 million people feel more in control of their lives</h3>\r\n\t\t\t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"col-md-3 left-r pull-right wow fadeInLeft\" data-wow-delay=\"0.5s\">\r\n\t\t\t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t    </div><!--/container-->\r\n\t\t\t\t<div class=\"device wow fadeInLeft\" data-wow-delay=\"0.2s\"></div>\r\n\t\t\t</section>\r\n\r\n\t\t\t<section class=\"about\" id=\"section2\">\r\n\t\t\t  <div class=\"container\">\r\n\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t<div class=\"col-md-6 wow fadeInRight\">\r\n\t\t\t\t\t\t<img src=\"./assets/images/about.jpg\" class=\"img-responsive\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"col-md-6 paddtop wow fadeInLeft\">\r\n\t\t\t\t\t\t<h2>WHAT WE DO</h2>\r\n\t\t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t</section>\r\n\t\t\t<section class=\"features\" id=\"section3\">\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-md-4 col-sm-4\">\r\n\t\t\t\t\t\t  <div class=\"shade wow fadeInRight\">\r\n\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<img src=\"./assets/images/img1.jpg\" class=\"img-responsive\"/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<h3>Facilities</h3>\r\n\t\t\t\t\t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean </p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"col-md-4 col-sm-4 wow fadeInDown\">\r\n\t\t\t\t\t\t  <div class=\"shade\">\r\n\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<img src=\"./assets/images/img2.jpg\" class=\"img-responsive\"/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<h3>Facilities</h3>\r\n\t\t\t\t\t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"col-md-4 col-sm-4 wow fadeInLeft\">\r\n\t\t\t\t\t\t  <div class=\"shade\">\r\n\t\t\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<img src=\"./assets/images/img3.jpg\" class=\"img-responsive\"/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"col-md-6\">\r\n\t\t\t\t\t\t\t\t\t<h3>Facilities</h3>\r\n\t\t\t\t\t\t\t\t\t<p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>  \r\n\t\t\t    </div>\r\n\t\t\t</section>\r\n\t\t\t\r\n\t\t\t<div class=\"clearfix\"></div>\r\n\t\t\t\r\n\r\n\t\t\t<section class=\"planz\" id=\"section4\">\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t<h2>PLANS & PRICE</h2>\r\n\t\t\t\t\t<div class=\"carry\">\r\n\t\t\t\t\t    <div class=\"plan wow fadeInRight\" data-wow-delay=\"0.2s\" *ngFor=\"let plan of plans\" [ngClass]=\"{'hilight': plan.is_best_value}\">\r\n\t\t\t\t\t\t  <h3 class=\"plan-title\">{{plan?.plan_name}}</h3>\r\n\t\t\t\t\t\t  <p class=\"plan-price\">&#8377;{{plan?.plan_price | number : '1.2-2'}} <span class=\"plan-unit\">per month</span></p>\r\n\t\t\t\t\t\t  <ul class=\"plan-features\">\r\n\t\t\t\t\t\t\t<li class=\"plan-feature\"><h4>{{plan?.no_projects}} </h4><span class=\"plan-feature-name\">Projects</span></li>\r\n\t\t\t\t\t\t\t<li class=\"plan-feature\"><h4>{{plan?.no_members}} </h4><span class=\"plan-feature-name\">Members</span></li>\r\n\t\t\t\t\t\t\t<li class=\"plan-feature\"><h4>{{plan?.no_modules}} </h4><span class=\"plan-feature-name\">Modules</span></li>\r\n\t\t\t\t\t\t\t<li class=\"plan-feature\"><h4>{{plan?.no_tasks}} </h4><span class=\"plan-feature-name\">Tasks</span></li>\r\n\t\t\t\t\t\t  </ul>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<!-- <div class=\"plan hilight\">\r\n\t\t\t\t\t\t  <h3 class=\"plan-title\">Premium</h3>\r\n\t\t\t\t\t\t  <p class=\"plan-price\">&#8377;500 <span class=\"plan-unit\">per month</span></p>\r\n\t\t\t\t\t\t  <ul class=\"plan-features\">\r\n\t\t\t\t\t\t\t<li class=\"plan-feature\"><h4>50 </h4><span class=\"plan-feature-name\">Projects</span></li>\r\n\t\t\t\t\t\t\t<li class=\"plan-feature\"><h4>50 </h4><span class=\"plan-feature-name\">Members</span></li>\r\n\t\t\t\t\t\t\t<li class=\"plan-feature\"><h4>50 </h4><span class=\"plan-feature-name\">Modules</span></li>\r\n\t\t\t\t\t\t\t<li class=\"plan-feature\"><h4>100 </h4><span class=\"plan-feature-name\">Tasks</span></li>\r\n\t\t\t\t\t\t  </ul>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t</div> -->\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t<!-- <div class=\"plan mr-lft wow fadeInLeft\" data-wow-delay=\"0.4s\">\r\n\t\t\t\t\t\t  <h3 class=\"plan-title\">Ultra</h3>\r\n\t\t\t\t\t\t  <p class=\"plan-price\">&#8377;1000 <span class=\"plan-unit\">per month</span></p>\r\n\t\t\t\t\t\t  <ul class=\"plan-features\">\r\n\t\t\t\t\t\t\t<li class=\"plan-feature\"><h4>70 </h4><span class=\"plan-feature-name\">Projects</span></li>\r\n\t\t\t\t\t\t\t<li class=\"plan-feature\"><h4>70 </h4><span class=\"plan-feature-name\">Members</span></li>\r\n\t\t\t\t\t\t\t<li class=\"plan-feature\"><h4>70 </h4><span class=\"plan-feature-name\">Modules</span></li>\r\n\t\t\t\t\t\t\t<li class=\"plan-feature\"><h4>120 </h4><span class=\"plan-feature-name\">Tasks</span></li>\r\n\t\t\t\t\t\t  </ul>\r\n\t\t\t\t\t\t  \r\n\t\t\t\t\t\t</div> -->\r\n\t\t\t\t\t  </div>\r\n\t\t\t    </div>\r\n\t\t\t</section>\r\n<br>\r\n<br>\r\n\t\t<footer>\r\n\t\t\t<div class=\"container\">\r\n\t\t\t\tTaskit © 2018, All Rights Reserved \r\n\t\t\t</div>\r\n\t\t</footer>\r\n    <!-- Modal -->\r\n \r\n\t <!-- <script src=\"http://code.jquery.com/jquery-1.11.1.js\"></script>\r\n\t<script src=\"js/bootstrap.min.js\"></script>\r\n\t <script src=\"js/wow.js\"></script>\r\n\t <script>\r\n\t\twow = new WOW({\r\n    boxClass: 'wow', // default\r\n    animateClass: 'animated', // default\r\n    offset: 0, // default\r\n    mobile: true, // default\r\n    live: true // default\r\n\t\t})\r\n\t\twow.init();\r\n\t</script>\r\n\t<script>\r\n\t\t$('body').scrollspy({\r\n\t\t  target: '#navbar-collapsible',\r\n\t\t  offset: 50\r\n\t\t});\r\n\r\n\t\t/* smooth scrolling sections */\r\n\t\t$('a[href*=#]:not([href=#])').click(function() {\r\n\t\t\tif (location.pathname.replace(/^\\//,'') == this.pathname.replace(/^\\//,'') && location.hostname == this.hostname) {\r\n\t\t\t  var target = $(this.hash);\r\n\t\t\t  target = target.length ? target : $('[name=' + this.hash.slice(1) +']');\r\n\t\t\t  if (target.length) {\r\n\t\t\t\t$('html,body').animate({\r\n\t\t\t\t  scrollTop: target.offset().top - 50\r\n\t\t\t\t}, 1000);\r\n\t\t\t\treturn false;\r\n\t\t\t  }\r\n\t\t\t}\r\n         });\r\n\r\n\t</script> -->\r\n\r\n</body>\r\n\r\n\r\n<!-- </html> -->"

/***/ }),

/***/ "../../../../../src/app/components/home/home.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return HomeComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var HomeComponent = (function () {
    function HomeComponent(config, adminService, routes) {
        this.config = config;
        this.adminService = adminService;
        this.routes = routes;
        this.socket = __WEBPACK_IMPORTED_MODULE_3_socket_io_client__(config.siteUrl);
    }
    HomeComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.socket.on('addPlan', function (data) {
            _this.getPlans();
        });
        this.socket.on('bestPlan', function (data) {
            _this.getPlans();
        });
        this.socket.on('deletePlan', function (data) {
            _this.getPlans();
        });
        this.socket.on('updatePlan', function (data) {
            _this.getPlans();
        });
        this.getPlans();
    };
    HomeComponent.prototype.getPlans = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : get all plans without default
        // Params        : 
        // Returns       : 
        // Author        : Rinsha
        // Date          : 06-03-2018
        // Last Modified : 06-03-2018, Rinsha
        // Desc          : getAllplans without default
        this.adminService.getPlansWithoutDefault().subscribe(function (res) {
            // console.log(res);
            _this.plans = [];
            res.forEach(function (element) {
                // if(element.is_default_plan == false){
                _this.plans.push(element);
                // }
            });
        });
        // ---------------------------------End-------------------------------------------
    };
    HomeComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-home',
            template: __webpack_require__("../../../../../src/app/components/home/home.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/home/home.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_4__config_config__["a" /* Config */], __WEBPACK_IMPORTED_MODULE_1__services_admin_service__["a" /* AdminService */], __WEBPACK_IMPORTED_MODULE_2__angular_router__["Router"]])
    ], HomeComponent);
    return HomeComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/reference-component/reference-component.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\n.home {\n    background: #f6f7fa;\n    height: 100%;\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/reference-component/reference-component.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\n        <div class=\"container-fluid display-table\">\n            <div class=\"row display-table-row\">\n          \n                <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\n                     <!-- sidebar-->\n                   \n                     <admin-sidebar></admin-sidebar> \n                     <!-- end sidebar-->\n                </div>\n                \n                <div class=\"col-md-12 col-xs-12\">\n                    <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\n                    <!-- topbar-->\n                    <admin-topbar></admin-topbar> \n                    \n                        <!-- end topbar-->\n                    \n                    \n                    <div class=\"user-dashboard\">\n                        <h1>Hello, JS</h1>\n                        <div class=\"row\">\n                            <div class=\"col-md-5 col-sm-5 col-xs-12 gutter\">\n    \n                                <div class=\"sales\">\n                                    <h2>Your Sale</h2>\n    \n                                    <div class=\"btn-group\">\n                                        <button class=\"btn btn-secondary btn-lg dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                            <span>Period:</span> Last Year\n                                        </button>\n                                        <div class=\"dropdown-menu\">\n                                            <a href=\"#\">2012</a>\n                                            <a href=\"#\">2014</a>\n                                            <a href=\"#\">2015</a>\n                                            <a href=\"#\">2016</a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-7 col-sm-7 col-xs-12 gutter\">\n    \n                                <div class=\"sales report\">\n                                    <h2>Report</h2>\n                                    <div class=\"btn-group\">\n                                        <button class=\"btn btn-secondary btn-lg dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                            <span>Period:</span> Last Year\n                                        </button>\n                                        <div class=\"dropdown-menu\">\n                                            <a href=\"#\">2012</a>\n                                            <a href=\"#\">2014</a>\n                                            <a href=\"#\">2015</a>\n                                            <a href=\"#\">2016</a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                </div>\n                    <!-- footer-->\n                    <admin-footer></admin-footer>\n           <!-- end footer-->\n            </div>\n             </div>\n            <!-- Modal -->\n         </body>"

/***/ }),

/***/ "../../../../../src/app/components/reference-component/reference-component.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ReferenceComponentComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var ReferenceComponentComponent = (function () {
    function ReferenceComponentComponent() {
    }
    ReferenceComponentComponent.prototype.ngOnInit = function () {
    };
    ReferenceComponentComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-reference-component',
            template: __webpack_require__("../../../../../src/app/components/reference-component/reference-component.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/reference-component/reference-component.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], ReferenceComponentComponent);
    return ReferenceComponentComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/spinner/spinner.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".loader{\n    margin: 0 0 2em;\n    height: 100px;\n    width: 20%;\n    text-align: center;\n    padding: 1em;\n    margin: 0 auto 1em;\n    display: inline-block;\n    vertical-align: top;\n  }\n  \n  /*\n    Set the color of the icon\n  */\n  svg path,\n  svg rect{\n    fill: #FF6700;\n  }", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/spinner/spinner.component.html":
/***/ (function(module, exports) {

module.exports = "<!-- 8 -->\n<div class=\"loader loader--style8\" title=\"7\">\n    <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n       width=\"24px\" height=\"30px\" viewBox=\"0 0 24 30\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\n      <rect x=\"0\" y=\"10\" width=\"4\" height=\"10\" fill=\"#333\" opacity=\"0.2\">\n        <animate attributeName=\"opacity\" attributeType=\"XML\" values=\"0.2; 1; .2\" begin=\"0s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        <animate attributeName=\"height\" attributeType=\"XML\" values=\"10; 20; 10\" begin=\"0s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        <animate attributeName=\"y\" attributeType=\"XML\" values=\"10; 5; 10\" begin=\"0s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n      </rect>\n      <rect x=\"8\" y=\"10\" width=\"4\" height=\"10\" fill=\"#333\"  opacity=\"0.2\">\n        <animate attributeName=\"opacity\" attributeType=\"XML\" values=\"0.2; 1; .2\" begin=\"0.15s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        <animate attributeName=\"height\" attributeType=\"XML\" values=\"10; 20; 10\" begin=\"0.15s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        <animate attributeName=\"y\" attributeType=\"XML\" values=\"10; 5; 10\" begin=\"0.15s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n      </rect>\n      <rect x=\"16\" y=\"10\" width=\"4\" height=\"10\" fill=\"#333\"  opacity=\"0.2\">\n        <animate attributeName=\"opacity\" attributeType=\"XML\" values=\"0.2; 1; .2\" begin=\"0.3s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        <animate attributeName=\"height\" attributeType=\"XML\" values=\"10; 20; 10\" begin=\"0.3s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n        <animate attributeName=\"y\" attributeType=\"XML\" values=\"10; 5; 10\" begin=\"0.3s\" dur=\"0.6s\" repeatCount=\"indefinite\" />\n      </rect>\n    </svg>\n  </div>"

/***/ }),

/***/ "../../../../../src/app/components/spinner/spinner.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SpinnerComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var SpinnerComponent = (function () {
    function SpinnerComponent() {
    }
    SpinnerComponent.prototype.ngOnInit = function () {
    };
    SpinnerComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-spinner',
            template: __webpack_require__("../../../../../src/app/components/spinner/spinner.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/spinner/spinner.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], SpinnerComponent);
    return SpinnerComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/test-user/test-user.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "* {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  \r\n  html {\r\n    background: #333;\r\n    color: #bbb;\r\n    font-family: Menlo;\r\n  }\r\n  \r\n  .controls {\r\n    position: fixed;\r\n    text-align: center;\r\n    top: 1em;\r\n    width: 100%;\r\n  }\r\n  \r\n  .button {\r\n    color: #bbb;\r\n    font-size: 4vw;\r\n    margin: 0 0.5em;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .button:first-child {\r\n      margin-left: 0;\r\n  }\r\n  \r\n  .button:last-child {\r\n      margin-right: 0;\r\n  }\r\n  \r\n  .button:hover {\r\n    color: white;\r\n  }\r\n  \r\n  .stopwatch {\r\n    font-size: 20vw;\r\n    height: 100%;\r\n    line-height: 100vh;\r\n    text-align: center;\r\n  }\r\n  \r\n  .results {\r\n    border-color: lime;\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/test-user/test-user.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n    <div class=\"container-fluid display-table\">\r\n      <div class=\"row display-table-row\">\r\n        <div class=\"col-md-1 col-xs-2 display-table-cell v-align box\" id=\"navigation\">\r\n          <user-sidebar></user-sidebar>\r\n        </div>\r\n        <div class=\"col-md-12 col-xs-12\">\r\n          <user-topbar></user-topbar>\r\n          <br>\r\n          <div class=\"col-md-12\">\r\n            <h3>Test Page</h3>\r\n          </div>\r\n          <!-- <div class=\"example-container mat-elevation-z8\">\r\n            <mat-table #table [dataSource]=\"dataSource\" matSort>\r\n          \r\n              <ng-container matColumnDef=\"id\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Id </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\r\n              </ng-container>\r\n          \r\n              <ng-container matColumnDef=\"project_name\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Name </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.project_name}} </mat-cell>\r\n              </ng-container>\r\n          \r\n              <ng-container matColumnDef=\"project_type\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Type </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.project_type}} </mat-cell>\r\n              </ng-container>\r\n          \r\n              <ng-container matColumnDef=\"project_code\">\r\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Code </mat-header-cell>\r\n                <mat-cell *matCellDef=\"let element\"> {{element.project_code}} </mat-cell>\r\n              </ng-container> \r\n          \r\n              <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n              <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n            </mat-table>\r\n          </div> -->\r\n  \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </body>"

/***/ }),

/***/ "../../../../../src/app/components/test-user/test-user.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TestUserComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var TestUserComponent = (function () {
    function TestUserComponent() {
        this.displayedColumns = ['id', 'project_name', 'project_type', 'project_code'];
    }
    TestUserComponent.prototype.ngOnInit = function () {
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](ELEMENT_DATA);
    };
    TestUserComponent.prototype.ngAfterViewInit = function () {
        this.dataSource.sort = this.sort;
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], TestUserComponent.prototype, "sort", void 0);
    TestUserComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-test-user',
            template: __webpack_require__("../../../../../src/app/components/test-user/test-user.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/test-user/test-user.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], TestUserComponent);
    return TestUserComponent;
}());

var ELEMENT_DATA = [
    {
        id: 61,
        project_name: 'sss',
        project_type: 'ss Billable',
        project_code: 'sysPR/032/3/29/2018',
        status: 'Drafted'
    },
    {
        id: 60,
        project_name: 'aaa',
        project_type: ' aa Billable',
        project_code: 'sysPR/031/3/29/2018',
        status: 'Drafted'
    },
    {
        id: 80,
        project_name: 'dd',
        project_type: 'ABc',
        project_code: 'daPR/44/3/29/34',
        status: 'Comple'
    }
];


/***/ }),

/***/ "../../../../../src/app/components/user-activity-log/user-activity-log.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}\r\nul.breadcrumb {\r\n    padding: 10px 0;\r\n    list-style: none;\r\n\r\n    text-align: left;\r\n    color: #d68956;\r\n}\r\nul.breadcrumb li {\r\n    display: inline;\r\n    font-size: 15px;\r\n}\r\nul.breadcrumb li+li:before {\r\n    padding: 8px;\r\n    color: black;\r\n    content: \"/\\A0\";\r\n}\r\nul.breadcrumb li a {\r\n    color: #bbbbbb;\r\n    text-decoration: none;\r\n}\r\nul.breadcrumb li a:hover {\r\n    color: #d68956;\r\n    text-decoration: none;\r\n\r\n}\r\n.breadcrumb{    background-color: #f6f7fa;}\r\n.form-control2{border:none;border-bottom:1px solid #ccc;border-radius:0;box-shadow:none;    margin-top: 12px;}\r\n.mr-top{     padding-top: 20px;\r\n  font-weight: 500;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-activity-log/user-activity-log.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n\r\n      <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n        <!-- sidebar-->\r\n\r\n        <user-sidebar></user-sidebar>\r\n        <!-- end sidebar-->\r\n      </div>\r\n\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n        <!-- topbar-->\r\n        <user-topbar></user-topbar>\r\n\r\n        <!-- end topbar-->\r\n        <div class=\"user-dashboard\">\r\n          <h2>Activity Log </h2>\r\n          <ul class=\"breadcrumb\">\r\n            <li><a href=\"#\">Activity Log</a></li>\r\n\r\n\r\n            <li>Activity Log list </li>\r\n          </ul>\r\n          <div class=\"\">\r\n            <!-----------------------------------------------------------------table-------------------------------------->\r\n\r\n\r\n\r\n\r\n            <div class=\"col-md-12\">\r\n              <div class=\"row\">\r\n                <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\" >\r\n          <div class=\"\"  >\r\n              <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n              width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n          <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n            <animateTransform attributeType=\"xml\"\r\n              attributeName=\"transform\"\r\n              type=\"rotate\"\r\n              from=\"0 25 25\"\r\n              to=\"360 25 25\"\r\n              dur=\"0.6s\"\r\n              repeatCount=\"indefinite\"/>\r\n            </path>\r\n          </svg>\r\n      </div>\r\n      </div> -->\r\n\r\n\r\n                <div class=\"col-md-12 optionz\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-4\">\r\n                      <div class=\"example-header\">\r\n                        <mat-form-field>\r\n                          <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"col-md-5 col-xs-6 col-md-push-2\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-3 col-xs-4\">\r\n                          <label class=\"mr-top\">Date Range Filter</label>\r\n                        </div>\r\n                        <div class=\"col-md-5 col-xs-8\">\r\n                          <input type=\"text\" class=\"form-control form-control2\" name=\"daterangeInput\" daterangepicker [options]=\"options\" (selected)=\"selectedStartDate($event, daterange)\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div class=\"example-container mat-elevation-z8 \">\r\n                  <div *ngIf=\"preloader\">\r\n                    <app-spinner></app-spinner>\r\n                  </div>\r\n\r\n                  <mat-table [dataSource]=\"dataSource\" matSort>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"slno\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header>Sl_No </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row;let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}} </mat-cell>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"date\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header>DATE </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\">{{row.createdAt | date:'EEE, d MMM,y'}}</mat-cell>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"time\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header>TIME </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.createdAt | date:'shortTime'}} </mat-cell>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"action\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header>ACTION </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.action}} </mat-cell>\r\n                    </ng-container>\r\n\r\n\r\n\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                  </mat-table>\r\n                  <div class=\"col-md-15 \">\r\n\r\n                  </div>\r\n                  <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n                    <div class=\"col-md-4 col-md-offset-4\">\r\n                      <mat-toolbar class=\"back-color\">No item found!</mat-toolbar>\r\n                    </div>\r\n                  </div>\r\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                </div>\r\n\r\n\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n            <!-----------------------------------------------------------------end table-------------------------------------->\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <!-- footer-->\r\n      <user-footer></user-footer>\r\n      <!-- end footer-->\r\n    </div>\r\n  </div>\r\n  <!-- Modal -->\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/user-activity-log/user-activity-log.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserActivityLogComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var UserActivityLogComponent = (function () {
    // ---------------------------------Start-------------------------------------------
    // Function      : UserActivitylog
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 16-03-2018
    // Last Modified : 
    // Desc          : UserActivitylog
    function UserActivityLogComponent(userService, routes, snackBar) {
        this.userService = userService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.preloader = false;
        this.displayedColumns = ['slno', 'date', 'time', 'action'];
        this.notExist = false;
        this.showSpinner = false;
        this.options = {
            locale: { format: 'DD-MM-YYYY' },
            alwaysShowCalendars: false,
        };
    }
    UserActivityLogComponent.prototype.refresh = function () {
        var _this = this;
        this.showSpinner = true;
        this.userService.getSingleUserActivitylog().subscribe(function (data) {
            _this.preloader = false;
            console.log(data);
            _this.loadToDataTable(data);
            _this.showSpinner = false;
        });
    };
    UserActivityLogComponent.prototype.loadToDataTable = function (data) {
        this.notExist = false;
        if (data.length == 0) {
            this.notExist = true;
        }
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
        // console.log(this.dataSource);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    UserActivityLogComponent.prototype.ngOnInit = function () {
        this.preloader = true;
        this.refresh();
    };
    UserActivityLogComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    UserActivityLogComponent.prototype.selectedStartDate = function (value, datepicker) {
        var _this = this;
        this.startDate = value.start;
        this.endDate = value.end;
        var data = { startDate: this.startDate, endDate: this.endDate };
        this.userService.getDatefilterforlog(data).subscribe(function (res) {
            console.log(res);
            _this.loadToDataTable(res);
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], UserActivityLogComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], UserActivityLogComponent.prototype, "sort", void 0);
    UserActivityLogComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'user-activity-log',
            template: __webpack_require__("../../../../../src/app/components/user-activity-log/user-activity-log.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-activity-log/user-activity-log.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_user_service__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], UserActivityLogComponent);
    return UserActivityLogComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-bar-graph/user-bar-graph.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-bar-graph/user-bar-graph.component.html":
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "../../../../../src/app/components/user-bar-graph/user-bar-graph.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserBarGraphComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var UserBarGraphComponent = (function () {
    function UserBarGraphComponent() {
        this.containerId = '';
        this.actual = '';
        this.planning = '';
    }
    // ngOnInit() {
    UserBarGraphComponent.prototype.ngOnInit = function () { };
    UserBarGraphComponent.prototype.ngAfterViewInit = function () {
        var offenseNames = [
            "Hours",
        ];
        var years = ["Planned", "Actual"];
        var offensesByYear = [
            {
                "Hours": this.planning,
            },
            { "Hours": this.actual,
            },
        ];
        var generateClassStr = function (str) {
            return str.replace(/\s+/g, '-').toLowerCase();
        };
        var n = offenseNames.length, // number of layers
        m = offensesByYear.length, // number of samples per layer
        stack = d3.stack().keys(offenseNames);
        var layers = stack(offensesByYear); // calculate the stack layout
        layers.forEach(function (d, i) {
            // add keys to every datapoint
            d.forEach(function (dd, j) {
                dd.year = years[j];
                dd.offenseName = offenseNames[i];
                dd.class = generateClassStr(dd.offenseName);
                dd.value = dd.data[dd.offenseName];
            });
        });
        var yStackMax = d3.max(layers, function (layer) {
            return d3.max(layer, function (d) {
                return d[1];
            });
        });
        var margin = { top: 70, right: 15, bottom: 40, left: 50 }, fullChartWidth = 300, fullChartHeight = 150, width = fullChartWidth - margin.left - margin.right, height = fullChartHeight - margin.top - margin.bottom;
        d3.select("#" + this.containerId)
            .style("width", fullChartWidth)
            .style("height", fullChartHeight);
        var x = d3
            .scaleBand()
            .domain(years)
            .rangeRound([0, width])
            .padding(0.08);
        var y = d3
            .scaleLinear()
            .domain([0, yStackMax])
            .range([height, 0]);
        var z = d3
            .scaleBand()
            .domain(offenseNames)
            .rangeRound([0, x.bandwidth()]);
        var color = ["#beaed4", "#7fc97f", "#fdc086"];
        var svg = d3
            .select("#" + this.containerId)
            .append("svg")
            .attr("width", width + margin.left + margin.right + 20)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + (margin.left + 20) + "," + margin.top + ")");
        var mycount = 1;
        var layer = svg
            .selectAll(".layer")
            .data(layers)
            .enter()
            .append("g")
            .attr("class", "layer")
            .style("fill", function (d, i) {
            // mycount++;
            //  alert(mycount);
            // alert(i);
            // if(mycount == 0){
            //   mycount++;
            //   return '#7fc97f';
            // }else{
            //   mycount++;
            //   return  '#279428';
            // }
            //   alert(d);
            //  // alert(i);
            return '#7fc97f';
        });
        var tooltip = d3.select("body")
            .append("div")
            .style("position", "absolute")
            .style("z-index", "10")
            .style("background", "#96A7B9")
            .style("display", "none")
            .text("a simple tooltip");
        var rect = layer
            .selectAll(".bar")
            .data(function (d) {
            return d;
        })
            .enter()
            .append("rect")
            .attr("x", function (d) {
            return x(d.year);
        })
            .attr("y", height)
            .attr("width", x.bandwidth())
            .attr("height", 0)
            .on("mouseover", function (d) {
            tooltip.text("Total " + d.year + " Hour: " + d.data.Hours + " Hr");
            return tooltip.style("display", "block");
        })
            .on("mousemove", function () { return tooltip.style("top", (d3.event.pageY - 10) + "px").style("left", (d3.event.pageX + 10) + "px"); })
            .on("mouseout", function () { return tooltip.style("display", "none"); });
        rect
            .transition()
            .delay(function (d, i) {
            return i * 10;
        })
            .attr("y", function (d) {
            return y(d[1]);
        })
            .attr("height", function (d) {
            return y(d[0]) - y(d[1]);
        });
        svg
            .append("g")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x));
    };
    UserBarGraphComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'user-bar-graph',
            template: __webpack_require__("../../../../../src/app/components/user-bar-graph/user-bar-graph.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-bar-graph/user-bar-graph.component.css")],
            inputs: ['containerId', 'actual', 'planning']
        }),
        __metadata("design:paramtypes", [])
    ], UserBarGraphComponent);
    return UserBarGraphComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-dashboard-bar/user-dashboard-bar.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "\r\n\r\n.bar {\r\n  fill: #FE6896;\r\n}\r\n\r\n.bar:hover {\r\n  fill: #FE4980;\r\n}\r\n\r\n.axis-title {\r\n  fill: none;\r\n  stroke: rgb(30, 18, 190);\r\n  stroke-width: 0.5px;\r\n}\r\n.no-g-data{\r\n  text-align: center;\r\n  /* min-height: 550px;\r\n  padding: 72px 0 55px 0; */\r\n}\r\n.no-g-data h4{\r\n  font-size: 30px;\r\n  font-weight: 800;\r\n  color: #4F657D\r\n}\r\n.no-g-data img{\r\n\r\n  width: 62px;\r\n  margin: 100px 0 0 0;\r\n}\r\n.bg-g{background:#17a88f;color:#fff; padding: 10px;margin-bottom:10px;}\r\n.bg-hash{background:#E9E9E9;padding: 10px;margin-bottom:10px;}\r\n.bg-hash select{background:none;border:none;width:100%;}\r\nh1{text-align:center;}\r\n.sales{margin-bottom: 25px;}\r\n  .legend-text {\r\n    fill: #fff;\r\n  }\r\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-dashboard-bar/user-dashboard-bar.component.html":
/***/ (function(module, exports) {

module.exports = "<!-- <h2>{{title}}</h2> -->\r\n\r\n        <!-- <span>Project:</span>\r\n   <mat-form-field class=\"filter\"> \r\n        \r\n          <mat-select  (change)=\"refresh()\" [(value)]=\"selected\"> \r\n         \r\n            <mat-option value=\"Select Project\">*Select Project</mat-option>\r\n            <mat-option value=\"Active\">Active</mat-option>\r\n            <mat-option value=\"Block\">Block</mat-option>\r\n            <mat-option value=\"Delete\">Delete </mat-option>\r\n\r\n          </mat-select>\r\n        </mat-form-field> -->\r\n        <h1>Task Vs Status</h1>\r\n        <div class=\"col-md-4 bg-g\">*Select Person</div>\r\n         <div class=\"col-md-4 bg-hash\">\r\n           <select>\r\n               <option value=\"\">sd</option>\r\n               <!-- <option *ngFor=\"let usr of users\" value=\"{{usr.id}}\">{{usr.f_name}} {{usr.l_name}}</option> -->\r\n           </select>\r\n         </div> \r\n\r\n<div   class=\"no-g-data\">\r\n   <!-- <svg  width=\"960\" height=\"500\"></svg> -->\r\n   <div id=\"bchart\"></div> \r\n\r\n</div>\r\n   \r\n<ng-template #empty>\r\n   <div class=\"col-md-12 no-g-data\">\r\n       <img src=\"assets/images/sad.png\" alt=\"sad\">\r\n       <h4>No Data Available!</h4>\r\n   </div>\r\n</ng-template>"

/***/ }),

/***/ "../../../../../src/app/components/user-dashboard-bar/user-dashboard-bar.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserDashboardBarComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_admin_service__ = __webpack_require__("../../../../../src/app/services/admin.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_socket_io_client__);
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





// declare var $:any;
var UserDashboardBarComponent = (function () {
    function UserDashboardBarComponent(adminService, routes, config) {
        this.adminService = adminService;
        this.routes = routes;
        this.config = config;
        this.title = 'No of task vs Status';
        this.selected = 'Select Project';
        // subtitle = 'Bar Chart';
        this.barchart = [];
        this.margin = { top: 20, right: 20, bottom: 30, left: 40 };
        this.graphData = false;
        this.socket = __WEBPACK_IMPORTED_MODULE_4_socket_io_client__(config.siteUrl);
    }
    UserDashboardBarComponent.prototype.refresh = function () {
        //this.adminService.getchartbar().subscribe(data=>{
        // if(data.length <= 0){
        //   this.graphData = true;
        // }
        // console.log(this.graphData)
        // this.barchart= [];
        // data.forEach(elm =>{
        // console.log(elm);
        // if (elm.count != 0){
        this.barchart.push({ company: 'a', count: 2 });
        this.barchart.push({ company: 'b', count: 2 });
        this.barchart.push({ company: 'a', count: 2 });
        this.barchart.push({ company: 'b', count: 2 });
        // this.initSvg();
        // this.initAxis();
        // this.drawAxis();
        // this.drawBars();
        this.drawBar();
        // }
        //});
        //  console.log(data);
        //});
    };
    /*_____________________________________BAR CHART____________________________________*/
    UserDashboardBarComponent.prototype.drawBar = function () {
        // var mydata = 
        // [
        //   {
        //     "State":"Alaska",
        //     "Population":735132
        //   },
        //   {
        //     "State":"Arizona",
        //     "Population":6626624
        //   }
        // ]
        // d3.select("#pieChart2").selectAll("svg").remove();
        d3.select("#bchart").selectAll("svg").remove();
        var mydata = this.barchart;
        var dataMax = d3.max(mydata, function (d) { return d.count; });
        var margin = { top: 15, right: 30, bottom: 85, left: 45 };
        var width = 600 - margin.left - margin.right, height = 290 - margin.top - margin.bottom, barWidth = 10;
        var tempColor; //for mouseover effect
        var yScale = d3.scale.linear()
            .domain([0, dataMax])
            .range([0, height]);
        var xScale = d3.scale.ordinal()
            .domain(d3.range(0, mydata.length))
            .rangeBands([0, width], .2);
        var vGuideScale = d3.scale.linear()
            .domain([0, dataMax]) //guide numbering will be in the millions
            .range([height, 0]);
        var vAxis = d3.svg.axis()
            .scale(vGuideScale)
            .orient('left')
            .ticks(10);
        var hAxis = d3.svg.axis()
            .scale(xScale)
            .orient('bottom');
        var tooltip = d3.select('body').append('div')
            .style('position', 'absolute')
            .style('padding', '0 10px')
            .style('background', '#333')
            .style('opacity', '.7')
            .style('color', '#fff')
            .style('border-radius', '3px');
        ////CHART////
        this.chart = d3.select('#bchart').append('svg')
            .style('background', '#fff')
            .attr('width', width + margin.left + margin.right)
            .attr('height', height + margin.top + margin.bottom)
            .append('g')
            .attr('transform', 'translate(' + margin.left + ', ' + margin.top + ')');
        // chart.exit().remove()
        var bars = this.chart.selectAll('rect')
            .data(mydata).enter()
            .append('rect')
            .style('fill', '#3EAE9A')
            .attr('width', xScale.rangeBand())
            .attr('x', function (d, i) { return xScale(i); })
            .attr('height', 0)
            .attr('y', height)
            .attr('class', 'barhvr')
            .on('mouseover', function (d) {
            tempColor = this.style.fill;
            d3.select(this)
                .attr('cursor', 'pointer');
            tooltip.html("Company: " + d.company)
                .style('left', (d3.event.pageX + 10) + 'px')
                .style('top', (d3.event.pageY - 20) + 'px');
            tooltip
                .style('opacity', .9);
        })
            .on('mouseout', function (d) {
            d3.select(this);
            // .attr('fill', tempColor)
            // .attr('opacity', 1)
            tooltip.style('opacity', 0)
                .style('left', '0px')
                .style('top', '0px');
        });
        // .on("click", this.mouseclick)  
        // .on('click', (d, i) => {
        //       // this.svg.remove();
        //       this.piechart = []
        //       this.quest[i].ans.forEach((val) => {
        //         // console.log("****************");
        //         // console.log(this.quest[i]);
        //         // console.log("****************");
        //       if (val.count != 0) {
        //           this.piechart.push({ name: val.value, percent: val.count,answeredUser:val.answeredUser, ans_type : this.quest[i].ans_type });
        //       }
        //   });
        //   this.setgraph();
        // });
        var vGuide = d3.select('svg').append('g');
        vAxis(vGuide);
        vGuide.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');
        vGuide.selectAll('path')
            .style({ fill: 'none', stroke: '#000' });
        vGuide.selectAll('line')
            .style({ stroke: '#000' });
        vGuide.selectAll('text')
            .attr('font-size', '.8em');
        var hGuide = d3.select('svg').append('g');
        hAxis(hGuide);
        hGuide.attr('transform', 'translate(' + margin.left + ',' + (height + margin.top) + ')');
        hGuide.selectAll('path')
            .style({ fill: 'none', stroke: '#000' });
        hGuide.selectAll('line')
            .style({ stroke: '#000' });
        hGuide.selectAll('text')
            .attr('transform', 'translate(12,5) rotate(55)')
            .attr('font-size', '12px')
            .style('text-anchor', 'start')
            .text(function (d) {
            return mydata[d].company;
        });
        //Label on left of Y axis
        d3.select('svg').append('text')
            .text('No. of Tasks')
            .style('text-anchor', 'middle')
            .style('font-weight', 'bold')
            .attr('transform', 'translate(12,' + ((height + margin.top + margin.bottom) * .45) + ') rotate(-90)')
            .attr('font-size', '12px').attr('letter-spacing', "4");
        //chart animation
        bars.transition()
            .attr('height', function (d) {
            return yScale(d.count);
        })
            .attr('y', function (d) {
            return height - yScale(d.count);
        })
            .delay(function (d, i) {
            return i * 10;
        })
            .duration(800)
            .ease('cubic-out');
        // d3.select('#bchart').append('div').append('p')
        //   .html('* Data from 2013')
        //   .style('font-size', '.6em')
    };
    /*______________________________________________BAR CHART ENDS____________________________________________*/
    UserDashboardBarComponent.prototype.ngOnInit = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : get logged user details
        // Params        : 
        // Returns       : user details
        // Author        : Rinsha
        // Date          : 16-1-2018
        // Last Modified : 16-1-2018, Rinsha
        // Desc          :
        // this.adminService.getLoggedUSerDetails().subscribe(info =>{
        //   if(info == null || info == ''){
        //     this.routes.navigate(['/admin-login']); 
        //   }
        //   if(info.role == "user"){
        //     if(info.delete_status == true || info.block_status == true){
        //       this.routes.navigate(['/404']); 
        //     }
        //     this.routes.navigate(['/survey', info.surveyId]); 
        //   }
        //   if(info.role == "company"){
        //     if(info.delete_status == true || info.block_status == true || info.cmp_status == "Not Verified"){
        //       this.routes.navigate(['/clogin']); 
        //     }
        //     if(info.cmp_status == "Expired"){
        //       this.routes.navigate(['/expired']);
        //     }
        //     if(info.is_profile_completed == false){
        //       this.routes.navigate(['/additnInfo', info._id]);
        //     }
        //     this.routes.navigate(['/dashboard']);
        //   }
        // });
        // ---------------------------------End-------------------------------------------
        this.refresh();
        this.socket.on('new survey created', function (data) {
            _this.refresh();
        });
        // this.initSvg();
        // this.initAxis();
        // this.drawAxis();
        // this.drawBars();
    };
    UserDashboardBarComponent.prototype.initSvg = function () {
        // this.svg = d3.select("svg");
        // this.width = +this.svg.attr("width") - this.margin.left - this.margin.right;
        // this.height = +this.svg.attr("height") - this.margin.top - this.margin.bottom;
        // this.g = this.svg.append("g")
        //                  .attr("transform", "translate(" + this.margin.left + "," + this.margin.top + ")");
    };
    UserDashboardBarComponent.prototype.initAxis = function () {
        // this.x = d3Scale.scaleBand().rangeRound([0, this.width]).padding(0.1);
        // this.y = d3Scale.scaleLinear().rangeRound([this.height, 0]);
        // this.x.domain(this.barchart.map((d) => d.company));
        // this.y.domain([0, d3Array.max(this.barchart, (d) => d.count)]);
    };
    UserDashboardBarComponent.prototype.drawAxis = function () {
        // this.g.append("g")
        //       .attr("class", "axis axis--x")
        //       .attr("transform", "translate(0," + this.height + ")")
        //       .call(d3Axis.axisBottom(this.x));
        // this.g.append("g")
        //       .attr("class", "axis axis--y")
        //       .call(d3Axis.axisLeft(this.y))
        //       .append("text")
        //       .attr("class", "axis-title")
        //       .attr("transform", "rotate(-90)")
        //       .attr("y", 6)
        //       .attr("dy", "0.71em")
        //       .attr("text-anchor", "end")
        //       .text("count");
    };
    UserDashboardBarComponent.prototype.drawBars = function () {
        // this.g.selectAll(".bar")
        //       .data(this.barchart)
        //       .enter().append("rect")
        //       .attr("class", "bar")
        //       .attr("x", (d) => this.x(d.company) )
        //       .attr("y", (d) => this.y(d.count) )
        //       .attr("width", this.x.bandwidth())
        //       .attr("height", (d) => this.height - this.y(d.count) );
    };
    UserDashboardBarComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'user-dashboard-bar',
            template: __webpack_require__("../../../../../src/app/components/user-dashboard-bar/user-dashboard-bar.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-dashboard-bar/user-dashboard-bar.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_admin_service__["a" /* AdminService */],
            __WEBPACK_IMPORTED_MODULE_2__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_3__config_config__["a" /* Config */]])
    ], UserDashboardBarComponent);
    return UserDashboardBarComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-dashboard/user-dashboard.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".graph-ul li{\r\n    float :left;\r\n    padding: 10px 2px;\r\n    border: 1px solid #ddd;\r\n    margin-top: 10px;\r\n    width: 300px;\r\n    display: table;\r\n    overflow:hidden;\r\n    padding-top: 0px;\r\n    text-align: center;\r\n}\r\n.graph-ul li .divModule{\r\n    background:#ccc;\r\n    padding: 20px 5px;\r\n    margin-bottom: 10px;\r\n}\r\n.graph-ul{\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    overflow-x: scroll;\r\n    max-width:1170px;\r\n    float: none;\r\n    margin: 0 auto;\r\n}\r\n.bg-g{background:#17a88f;color:#fff; padding: 10px;}\r\n.bg-hash{background:#E9E9E9;padding: 10px; }\r\n.bg-hash select{background:none;border:none;width:100%;}\r\n.total{font-weight:700;padding-top: 20px; line-height: 36px;}\r\n.sales{margin-bottom: 25px;border:none;    box-shadow: 4px 7px 31px #e8e8e8;}\r\n.label-bg{background:#ccc;padding:20px;position:relative;margin-bottom: 15px;}\r\n.label-bg .number{width:50px;height:50px;border-radius:50%;background:#fff;left:0;right:0;position:absolute;z-index:10;margin:0 auto;text-align:center;    top: -4px;\r\n    box-shadow: 10px 4px 18px #b1b1b1;\r\n    border: 1px solid #b5b3b3;    font-size: 20px;\r\n    font-weight: bold;\r\n    color: #05b8cc;\r\n    padding-top: 15px;}\r\n\r\n    .graph-ul-hour li .divModule{\r\n        background:#ccc;\r\n        padding: 20px 5px;\r\n        margin-bottom: 10px;\r\n    }\r\n    .graph-ul-hour{\r\n        display: -ms-flexbox;\r\n        display: flex;\r\n        overflow-x: scroll;\r\n        max-width:1170px;\r\n        float: none;\r\n        margin: 0 auto;\r\n    }\r\n\r\n    .firstColumn{\r\n        background: #e4e4e4;\r\n        padding:0 40px;\r\n    }\r\n\r\n    .firstRow{\r\n        \r\n        font-weight:bold;\r\n        font-weight: bold;\r\n        min-height: 125px;\r\n        border-bottom: 1px solid #ccc;\r\n        text-transform:uppercase;\r\n        padding-top: 35%;\r\n    }\r\n    .secondRow{\r\n       \r\n        font-weight:bold;\r\n        min-height: 256px;\r\n        border-bottom: 1px solid #ccc;\r\n        text-transform:uppercase;\r\n        padding-top: 64%;\r\n    }\r\n    .ThirdRow{\r\n        \r\n        font-weight:bold;\r\n        min-height: 200px;\r\n        text-align:uppercase;\r\n        padding-top: 43%;\r\n    }\r\n    .prjtitle1{\r\n        background: #237cbe;\r\n        padding: 10px;\r\n        color:#fff;\r\n    }\r\n    .prjtitle2{\r\n       \r\n        padding: 10px;\r\n    }\r\n    .hash{    background: #f3f3f3;}\r\n    .datelabel{font-weight:bold;padding-bottom: 10px;}\r\n    .user-dashboard h1{text-align:center; font-size: 22px;margin-top:0px;}\r\n    .mr-top{margin-top: 10px; max-height: 200px;}\r\n    .text-center2{\r\n        text-align: center !important\r\n    }\r\n    \r\n    .tsk-sts{\r\n        text-align: center;\r\n    padding: 126px 0;\r\n    font-size: 30px;\r\n    font-weight: 800;\r\n    color: #a2a2a2;\r\n    }\r\n    .mat-tab-label-active {\r\n        color: #fff !important;\r\n        font-weight: bold;\r\n    } \r\n    h2{text-align:center;}\r\n    .graph-ul{float:left;}\r\n.mat-tab-header{margin-bottom:20px;}\r\n@media only screen and (max-width : 1920px) {\r\n    \r\n    \r\n    \r\n    }\r\n    \r\n    @media only screen and (max-width : 1600px) {\r\n    \r\n    }\r\n    \r\n    \r\n    @media only screen and (max-width : 1366px) {\r\n        .spaz{padding: 11px 10px !important;}\r\n        .graph-pland{max-width: 1032px;}\r\n    }\r\n    \r\n    @media only screen and (max-width : 1280px) {\r\n        .spaz{padding: 11px 10px !important;}\r\n        .graph-pland{max-width: 1032px;}\r\n    }\r\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-dashboard/user-dashboard.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n    <div class=\"container-fluid display-table\">\r\n        <div class=\"row display-table-row\">\r\n\r\n            <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n                <!-- sidebar-->\r\n                <user-sidebar></user-sidebar>\r\n                <!-- end sidebar-->\r\n            </div>\r\n            <div class=\"col-md-12 col-xs-12\">\r\n                <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n                <!-- topbar-->\r\n                <user-topbar></user-topbar>\r\n                <!-- end topbar-->\r\n                <div class=\"user-dashboard\">\r\n                        <h2 _ngcontent-c14=\"\">Dashboard</h2>\r\n                        <ul _ngcontent-c14=\"\" class=\"breadcrumb\">\r\n                          <li _ngcontent-c14=\"\"><a _ngcontent-c14=\"\" href=\"#\">Dashboard</a></li>\r\n                          \r\n                          \r\n                          \r\n                        </ul>\r\n                    <mat-tab-group (selectedTabChange)=\"onLinkClick($event)\">\r\n                        <mat-tab label=\"Task Vs Status\">\r\n                            <div class=\"row\">\r\n                                <div *ngIf=\"preloader\">\r\n                                    <app-spinner></app-spinner>\r\n                                </div>\r\n                \r\n                                <div class=\"col-md-5 col-sm-5 col-xs-12 gutter\">\r\n                                    <div class=\"sales\">\r\n                                        <!-- <div id=\"projct-3-bar\"></div>\r\n                                       {{newyetstart}}\r\n                                        <user-taskstatus-graph [containerId]=\"'projct-3-bar'\" [hold]=\"countaskhold2.length\" [inprogress]=\"countaskinprogress2.length\" [done]=\"countaskdone2.length\" [newy]=\"selectedValue1\" ></user-taskstatus-graph> -->\r\n                                        <user-taskstatus-graph></user-taskstatus-graph>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-7  col-xs-12 gutter\">\r\n                                    <div class=\"sales\">\r\n                                        <user-task-vs-status></user-task-vs-status>\r\n                                    </div>\r\n                                </div>\r\n                               \r\n                            </div>\r\n                        </mat-tab>\r\n                        <mat-tab label=\"Project Progress\">\r\n                                <div *ngIf=\"preloader\">\r\n                                        <app-spinner></app-spinner>\r\n                                    </div>\r\n                                <div class=\"col-md-12 col-sm-12 col-xs-12 \">\r\n                                    <div class=\"sales\">\r\n                                        <h1> <b>Project Progress</b></h1>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-8 col-md-push-1\">\r\n                                                <div class=\"col-md-3 bg-g\">*Select Project</div>\r\n                                                <div class=\"col-md-3 bg-hash\">\r\n                                                    <select (change)=\"taskstatus()\" [(ngModel)]=\"selectedValue\">\r\n                                                        <option *ngFor=\"let prj of projects\" value=\"{{prj.id}}\">{{prj.project_name}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                                <div class=\"col-md-3\">\r\n                                                    <span class=\"total\">Total {{modulecount}} Milestone</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <ul class=\"graph-ul\" *ngIf=\"projectProExist else empty2\">\r\n                                                <li *ngFor=\"let proj of projectmodule; let i = index \">\r\n                                                    <div class=\"divModule\">{{proj.module_name}}</div>\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-md-6\">Planned Hour\r\n                                                            <br>{{proj.totalplaned_hr}}</div>\r\n                                                        <div class=\"col-md-6\">Actual Hour\r\n                                                            <br>{{proj.totalactual_hr}} </div>\r\n                                                        <div id=\"module-progress-{{i}}\"></div>\r\n                                                        <user-progress-graph [containerId]=\"'module-progress-'+ i\" [progper]=\"proj?.totalprogress1\"></user-progress-graph>\r\n                                                        <div class=\"clearfix\"></div>\r\n                                                        <div class=\"col-md-12 label-bg\">\r\n                                                            <div class=\"number\">{{proj.totalmoduletask }}</div>\r\n                                                        </div>\r\n                                                        <div id=\"module-status-{{i}}\"></div>\r\n                                                        <user-status-graph [containerId]=\"'module-status-'+ i\" [pieData]=\"proj?.pieData\"></user-status-graph>\r\n                                                        <!-- <user-status-graph [containerId]=\"'module-status-'+ i\" [New]=\"proj.countasknew\" [Progress]=\"proj.countaskinprogress\" [Completed]=\"proj.countaskdone\"\r\n                                                                    [Hold]=\"proj.countaskhold\"></user-status-graph> -->\r\n                                                    </div>\r\n                                                </li>\r\n    \r\n                                            </ul>\r\n                                            <ng-template #empty2>\r\n                                                <h4 class=\"tsk-sts\">No data to display!</h4>\r\n                                            </ng-template>\r\n                                        </div>\r\n                                    </div>\r\n    \r\n                                </div>\r\n                            </mat-tab>\r\n                        <mat-tab label=\"Planned hours vs Actual hours\">\r\n                                <div *ngIf=\"preloader\">\r\n                                        <app-spinner></app-spinner>\r\n                                    </div>\r\n                                      \r\n                                \r\n                            <div class=\"col-md-12 col-sm-12 col-xs-12 sales\">\r\n                                 \r\n                                <div class=\"whitebg\">\r\n                                    <h1 ><b>Planned hours vs Actual Hours</b></h1>\r\n                                    <div class=\"graph-pland\">\r\n                                        <ul class=\"graph-ul-hour leftaligned\" *ngIf=\"projectProExist else empty3\">\r\n                                            <li class=\"text-center2\">\r\n                                                <div class=\"firstRow firstColumn\">PROJECTS</div>\r\n                                                <div class=\"secondRow firstColumn\">Progress</div>\r\n                                                <div class=\"ThirdRow firstColumn\">Planned\r\n                                                    <br>vs\r\n                                                    <br> Actual Hours</div>\r\n                                            </li>\r\n                                            <li class=\"text-center2\" *ngFor=\"let project of allproject; let i = index\">\r\n                                                <div class=\"prjtitle1\">{{project.project_name}}</div>\r\n                                                <div class=\"col-md-8 mr-top\">\r\n                                                    <div class=\"datelabel\">Start\r\n                                                        <span class=\"pull-right\"> {{project.planned_start_date | date: 'dd-MM-yyyy' }}</span>\r\n                                                    </div>\r\n                                                    <div class=\"datelabel\">End\r\n                                                        <span class=\"pull-right\"> {{project.planned_end_date | date: 'dd-MM-yyyy' }}</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"clearfix\"></div>\r\n\r\n                                                <hr>\r\n                                                <div id=\"projct-{{i}}-progress\"></div>\r\n                                                <user-progress-graph [containerId]=\"'projct-'+ i+'-progress'\" [progper]=\"project.per\"></user-progress-graph>\r\n                                                <label>{{project.in_progress_tasks}}/{{project?.tasktotal}} In Progress</label>\r\n                                                <hr>\r\n                                                <div id=\"projct-{{i}}-bar\"></div>\r\n                                                <user-bar-graph [containerId]=\"'projct-'+ i+'-bar'\" [actual]=\"project.actualhr\" [planning]=\"project.totalplannedhr\"></user-bar-graph>\r\n                                            </li>\r\n\r\n                                        </ul>\r\n                                        <ng-template #empty3>\r\n                                            <h4 class=\"tsk-sts\">No data to display!</h4>\r\n                                        </ng-template>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </mat-tab>\r\n                    </mat-tab-group>\r\n                    <!-- <div class=\"row\">\r\n                        <div class=\"col-md-5 col-sm-5 col-xs-12 gutter\">\r\n                            <div class=\"sales\"> -->\r\n                    <!-- <div id=\"projct-3-bar\"></div>\r\n                                   {{newyetstart}}\r\n                                    <user-taskstatus-graph [containerId]=\"'projct-3-bar'\" [hold]=\"countaskhold2.length\" [inprogress]=\"countaskinprogress2.length\" [done]=\"countaskdone2.length\" [newy]=\"selectedValue1\" ></user-taskstatus-graph> -->\r\n                    <!-- <user-taskstatus-graph></user-taskstatus-graph>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-7  col-xs-12 gutter\">\r\n                            <div class=\"sales\">\r\n                                <user-task-vs-status></user-task-vs-status>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"clearfix\"></div> -->\r\n\r\n\r\n                    <!-- <div class=\"col-md-12 col-sm-12 col-xs-12 \">\r\n                        <div class=\"sales\">\r\n                            <h1> Project Progress</h1>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-8 col-md-push-1\">\r\n                                    <div class=\"col-md-3 bg-g\">*Select Project</div>\r\n                                    <div class=\"col-md-3 bg-hash\">\r\n                                        <select (change)=\"taskstatus()\" [(ngModel)]=\"selectedValue\">\r\n                                            <option *ngFor=\"let prj of projects\" value=\"{{prj.id}}\">{{prj.project_name}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div class=\"col-md-3\">\r\n                                        <span class=\"total\">Total {{modulecount}} Milestone</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <ul class=\"graph-ul\" *ngIf=\"projectProExist else empty2\">\r\n                                    <li *ngFor=\"let proj of projectmodule; let i = index \">\r\n                                        <div class=\"divModule\">{{proj.module_name}}</div>\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-6\">Planned Hour\r\n                                                <br>{{proj.totalplaned_hr}}</div>\r\n                                            <div class=\"col-md-6\">Actual Hour\r\n                                                <br>{{proj.totalactual_hr}} </div>\r\n                                            <div id=\"module-progress-{{i}}\"></div>\r\n                                            <user-progress-graph [containerId]=\"'module-progress-'+ i\" [progper]=\"totalprogress1\"></user-progress-graph>\r\n                                            <div class=\"clearfix\"></div>\r\n                                            <div class=\"col-md-12 label-bg\">\r\n                                                <div class=\"number\">{{proj.totalmoduletask }}</div>\r\n                                            </div>\r\n                                            <div id=\"module-status-{{i}}\"></div>\r\n                                            <user-status-graph [containerId]=\"'module-status-'+ i\" [pieData]=\"proj?.pieData\"></user-status-graph>\r\n                                         \r\n                                        </div>\r\n                                    </li>\r\n\r\n                                </ul>\r\n                                <ng-template #empty2>\r\n                                    <h4 class=\"tsk-sts\">No data to display!</h4>\r\n                                </ng-template>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div> -->\r\n\r\n\r\n                    <!-- <div class=\"col-md-12 col-sm-12 col-xs-12 \">\r\n                        <div class=\"sales\">\r\n                            <h1>Planned hours vs Actual hours</h1>\r\n                            <div>\r\n                                <ul class=\"graph-ul-hour\" *ngIf=\"projectProExist else empty3\">\r\n                                    <li class=\"text-center2\">\r\n                                        <div class=\"firstRow firstColumn\">PROJECTS</div>\r\n                                        <div class=\"secondRow firstColumn\">Progress</div>\r\n                                        <div class=\"ThirdRow firstColumn\">Planned\r\n                                            <br>vs\r\n                                            <br> Actual Hours</div>\r\n                                    </li>\r\n                                    <li class=\"text-center2\" *ngFor=\"let project of allproject; let i = index\">\r\n                                        <div class=\"prjtitle1\">{{project.project_name}}</div>\r\n                                        <div class=\"col-md-8 mr-top\">\r\n                                            <div class=\"datelabel\">Start\r\n                                                <span class=\"pull-right\"> {{project.planned_start_date | date: 'dd-MM-yyyy' }}</span>\r\n                                            </div>\r\n                                            <div class=\"datelabel\">End\r\n                                                <span class=\"pull-right\"> {{project.planned_end_date | date: 'dd-MM-yyyy' }}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"clearfix\"></div>\r\n\r\n                                        <hr>\r\n                                        <div id=\"projct-{{i}}-progress\"></div>\r\n                                        <user-progress-graph [containerId]=\"'projct-'+ i+'-progress'\" [progper]=\"project.per\"></user-progress-graph>\r\n                                        <label>{{project.in_progress_tasks}}/{{project?.tasktotal}} In Progress</label>\r\n                                        <hr>\r\n                                        <div id=\"projct-{{i}}-bar\"></div>\r\n                                        <user-bar-graph [containerId]=\"'projct-'+ i+'-bar'\" [actual]=\"project.actualhr\" [planning]=\"project.totalplannedhr\"></user-bar-graph>\r\n                                    </li>\r\n\r\n                                </ul>\r\n                                <ng-template #empty3>\r\n                                    <h4 class=\"tsk-sts\">No data to display!</h4>\r\n                                </ng-template>\r\n                            </div>\r\n                        </div>\r\n                    </div> -->\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <!-- footer-->\r\n            <user-footer></user-footer>\r\n            <!-- end footer-->\r\n        </div>\r\n    </div>\r\n    <!-- Modal -->\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/user-dashboard/user-dashboard.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserDashboardComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var UserDashboardComponent = (function () {
    function UserDashboardComponent(userService, config) {
        this.userService = userService;
        this.config = config;
        this.preloader = false;
        this.tasktotal = 0;
        this.countaskdone = [];
        this.countaskinprogress = [];
        this.countasknew = [];
        this.countaskhold = [];
        this.moduletaskcount = [];
        this.modulecount = 0;
        this.tt = 6;
        this.actualhr = [];
        this.plannedhr = [];
        this.taskpercentage = [];
        this.task1percentage = [];
        this.taskcount = [];
        this.countaskdone2 = [];
        this.countaskhold2 = [];
        this.countaskinprogress2 = [];
        this.countasknew2 = [];
        this.countask = [];
        this.disp = false;
        this.projectProExist = false;
        this.socket = __WEBPACK_IMPORTED_MODULE_2_socket_io_client__(config.siteUrl);
    }
    UserDashboardComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.preloader = true;
        // this.newyetstart=8;
        this.socket.on('new', function (data) {
            _this.getAllProjects();
            _this.projectsvsstatus();
        });
        this.socket.on('paused', function (data) {
            _this.getAllProjects();
            _this.projectsvsstatus();
        });
        this.socket.on('completed', function (data) {
            _this.getAllProjects();
            _this.projectsvsstatus();
        });
        this.socket.on('hold', function (data) {
            _this.getAllProjects();
            _this.projectsvsstatus();
        });
        this.socket.on('inProgress', function (data) {
            _this.getAllProjects();
            _this.projectsvsstatus();
        });
        this.getAllProjects();
        this.projectsvsstatus();
        // console.log("dffff")
        // console.log(this.projectProExist)
    };
    UserDashboardComponent.prototype.onLinkClick = function (event) {
        this.preloader = true;
        this.getAllProjects();
        this.projectsvsstatus();
    };
    UserDashboardComponent.prototype.getAllProjects = function () {
        var _this = this;
        this.userService.getAllProject().subscribe(function (data) {
            _this.preloader = false;
            // this.selectedValue=data[0].id
            //  console.log(data[0].id);
            // console.log(data[0].id)
            _this.projects = data;
            if (data.length > 0) {
                _this.projectProExist = true;
                _this.selectedValue = data[0].id;
            }
            // else{
            //   console.log('no projects');
            // }
            _this.taskstatus();
        });
    };
    //#########Percentage of Projects###############
    UserDashboardComponent.prototype.taskstatus = function () {
        var _this = this;
        this.userService.getallprojectspercentage(this.selectedValue).subscribe(function (res) {
            // console.log(res);
            if (res.length > 0) {
                _this.projectProExist = true;
            }
            else {
                _this.projectsingle = res;
                _this.projectmodule = [];
                _this.projectmodule = _this.projectsingle.tbl_project_modules;
                // console.log(this.projectmodule);
                _this.modulecount = 0;
                _this.modulecount = _this.projectmodule.length;
                _this.projectmodule.forEach(function (elm_mod, key1) {
                    // console.log(elm_mod.tbl_project_tasks.length);
                    // this.modulecount.push(elm_mod.id);
                    _this.module_totalplaned_hr = 0;
                    _this.module_totalactual_hr = 0;
                    var new_tasks = 0;
                    var paused_tasks = 0;
                    var in_progress_tasks = 0;
                    var onHold_tasks = 0;
                    var completed_tasks = 0;
                    // this.countmodule.push(elm_mod.id);
                    elm_mod.tbl_project_tasks.forEach(function (elm_task) {
                        // console.log(elm_task);
                        //   this.moduletaskcount.push(elm_task.id);
                        if (elm_task.planned_hour != null) {
                            _this.module_totalplaned_hr = _this.module_totalplaned_hr + elm_task.planned_hour + elm_task.buffer_hour;
                        }
                        if (elm_task.actual_hour != null) {
                            _this.module_totalactual_hr = _this.module_totalactual_hr + elm_task.actual_hour;
                        }
                        //   // console.log(this.moduletaskcount.length);
                        var last_status_id = 0;
                        _this.lastStatus1 = {};
                        elm_task.tbl_task_status_assocs.forEach(function (statuses) {
                            if (statuses.id > last_status_id) {
                                last_status_id = statuses.id;
                                _this.lastStatus1 = statuses;
                            }
                        });
                        //   this.lastStatus1 = elm_task.st[elm_task.st.length - 1];
                        // console.log(this.lastStatus1.st)
                        if (_this.lastStatus1 !== undefined) {
                            if ((_this.lastStatus1 && _this.lastStatus1.status_id == 1) || (_this.lastStatus1 && _this.lastStatus1.st == 1)) {
                                new_tasks = new_tasks + 1;
                            }
                            if ((_this.lastStatus1 && _this.lastStatus1.status_id == 2) || (_this.lastStatus1 && _this.lastStatus1.st == 2)) {
                                paused_tasks = paused_tasks + 1;
                            }
                            if ((_this.lastStatus1 && _this.lastStatus1.status_id == 3) || (_this.lastStatus1 && _this.lastStatus1.st == 3)) {
                                in_progress_tasks = in_progress_tasks + 1;
                            }
                            if ((_this.lastStatus1 && _this.lastStatus1.status_id == 4) || (_this.lastStatus1 && _this.lastStatus1.st == 4)) {
                                onHold_tasks = onHold_tasks + 1;
                            }
                            if ((_this.lastStatus1 && _this.lastStatus1.status_id == 5) || (_this.lastStatus1 && _this.lastStatus1.st == 5)) {
                                completed_tasks = completed_tasks + 1;
                            }
                        }
                    });
                    _this.projectmodule[key1].totalplaned_hr = _this.module_totalplaned_hr;
                    _this.projectmodule[key1].totalactual_hr = _this.module_totalactual_hr;
                    // this.projectmodule[key1].countasknew = this.moduletaskcount.length - (this.countaskdone.length + this.countaskhold.length + this.countaskinprogress.length);
                    _this.projectmodule[key1].countasknew = new_tasks;
                    // this.projectmodule[key1].countaskdone = this.countaskdone.length;
                    _this.projectmodule[key1].countaskdone = completed_tasks;
                    // this.projectmodule[key1].countaskhold = this.countaskhold.length;
                    _this.projectmodule[key1].countaskhold = onHold_tasks;
                    _this.projectmodule[key1].countaskinprogress = in_progress_tasks;
                    // this.projectmodule[key1].countaskinprogress = this.countaskinprogress.length;
                    _this.projectmodule[key1].totalmoduletask = elm_mod.tbl_project_tasks.length;
                    // console.log(this.countasknew.length);
                    _this.projectmodule[key1].totalprogress1 = completed_tasks / (_this.projectmodule[key1].totalmoduletask) * 100;
                    _this.projectmodule[key1].pieData = [
                        { name: 'New - Yet to Start', value: new_tasks, color: '#2778a7' },
                        { name: 'In Progress', value: in_progress_tasks, color: '#99b745' },
                        { name: 'Done', value: completed_tasks, color: '#17a88f' },
                        { name: 'On Hold', value: onHold_tasks, color: '#f2ac37' },
                        { name: 'Paused', value: paused_tasks, color: '#b74549' },
                    ];
                });
            }
            // this.totalprogress1 = ((this.task1percentage.reduce((a, b) => a + b, 0)) / (this.moduletaskcount.length));
        });
        //  console.log(this.modulecount.length)
        // this.disp = true;
    };
    UserDashboardComponent.prototype.projectsvsstatus = function () {
        var _this = this;
        this.userService.getallprojectsvsstatus().subscribe(function (res) {
            _this.preloader = false;
            _this.allproject = res;
            _this.allproject.forEach(function (elm_proj, key) {
                var tasktotal = 0;
                var planned_hour = 0;
                var actual_hour = 0;
                var completed_tasks = 0;
                var in_progress_tasks = 0;
                elm_proj.tbl_project_modules.forEach(function (elm_mod) {
                    tasktotal = tasktotal + elm_mod.tbl_project_tasks.length;
                    elm_mod.tbl_project_tasks.forEach(function (elm_task) {
                        if (elm_task.planned_hour != null) {
                            planned_hour = planned_hour + elm_task.planned_hour + elm_task.buffer_hour;
                        }
                        if (elm_task.actual_hour != null) {
                            actual_hour = actual_hour + elm_task.actual_hour;
                        }
                        var last_status_id = 0;
                        var last_status = {};
                        elm_task.tbl_task_status_assocs.forEach(function (statuses) {
                            if (statuses.id > last_status_id) {
                                last_status_id = statuses.id;
                                _this.lastStatus2 = statuses;
                            }
                        });
                        // console.log(this.lastStatus2)
                        if (_this.lastStatus2 !== undefined) {
                            if ((_this.lastStatus2 && _this.lastStatus2.status_id == 3) || (_this.lastStatus2 && _this.lastStatus2.st == 3)) {
                                in_progress_tasks = in_progress_tasks + 1;
                            }
                            if ((_this.lastStatus2 && _this.lastStatus2.status_id == 5) || (_this.lastStatus2 && _this.lastStatus2.st == 5)) {
                                completed_tasks = completed_tasks + 1;
                            }
                        }
                    });
                    // console.log(tasktotal)
                    _this.allproject[key].tasktotal = tasktotal;
                    _this.allproject[key].totalplannedhr = planned_hour;
                    _this.allproject[key].actualhr = actual_hour;
                    _this.allproject[key].completed_tasks = completed_tasks;
                    _this.allproject[key].in_progress_tasks = in_progress_tasks;
                    _this.allproject[key].per = completed_tasks / _this.allproject[key].tasktotal * 100;
                });
            });
            // console.log(this.allproject)
        });
    };
    UserDashboardComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'user-dashboard',
            template: __webpack_require__("../../../../../src/app/components/user-dashboard/user-dashboard.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-dashboard/user-dashboard.component.css")],
            encapsulation: __WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewEncapsulation"].None
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_3__config_config__["a" /* Config */]])
    ], UserDashboardComponent);
    return UserDashboardComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-edit-profile/user-edit-profile.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".photo {\n    width: 140px;\n    height: 140px;\n    border-radius: 50%;\n    background: #ccc;\n    float: left;\n    overflow: hidden;\n}\n.inputfile + label {\n    width: auto;\n    font-size: 1.25rem;\n    font-weight: 700;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    cursor: pointer;\n    display: inline-block;\n    overflow: hidden;\n    padding: 4px 0px;\n    position: absolute;\n    right: 36px;\n    bottom: 0;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n\tbackground: #fe6c07e0;\n}\n.label2 {\n    color: #909090;\n    font-size: 15px;\n}\nlabel {\n    font-size: 15px;\n    color: #4a4a4a;\n    font-weight: normal;\n    padding: 5px 0;\n}\n.fa-camera {\n     padding-top: 8px;\n    color: #fff;\n    font-size: 18px !important;\n    text-align: center;\n    padding-left: 40x;\n    margin-left: 11px;\n}\n.relatve {\n    position: relative;\n    max-width: 180px;\n    margin: 0 auto;\n    overflow: hidden;\n    margin-bottom: 20px;\n}\n.inputfile {\n    width: 0.1px;\n    height: 0.1px;\n    opacity: 0;\n    overflow: hidden;\n    position: absolute;\n    z-index: -1;\n}\n.employ-pic .inputfile-1 + label {\n    color: #ffffff;\n    background-color: #32c5d2;\n}\n.mrg-tp {\n    margin-top: 15px !important;\n}\n.style2 {\n    border: none;\n    border-bottom: 1px solid #ccc;\n\twidth:100%;\n}\n.center-bt {\n    margin: 20px auto 10px auto;\n    float: none;\n}\n.photo img{width:100%;}\n.form-group{margin-bottom:12px;overflow:hidden;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-edit-profile/user-edit-profile.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n      <div class=\"col-md-1 col-xs-2 display-table-cell v-align box\" id=\"navigation\">\r\n        <user-sidebar></user-sidebar>\r\n      </div>\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <user-topbar></user-topbar>\r\n        <br>\r\n        <div class=\"user-dashboard\">\r\n          <!-- <h1>Hello, JS</h1> -->\r\n          <div class=\"row\">\r\n\r\n            <div class=\"col-md-12 col-sm-12 col-xs-12 gutter\">\r\n\r\n              <div class=\"white\">\r\n                <!-- img start -->\r\n                <div class=\"col-md-6 col-md-offset-3\">\r\n                  <div class=\"relatve\">\r\n                    <input type=\"file\" accept=\".jpeg, .jpg, .png, .gif\" (change)=\"displayPhoto($event)\" name=\"file\" id=\"file-1\" class=\"inputfile inputfile-1\"\r\n                      data-multiple-caption=\"{count} files selected\" multiple=\"\">\r\n                    <label for=\"file-1\"> <span> <i class=\"fa fa-camera\"></i></span></label>\r\n                    <div class=\"photo\"><img *ngIf=\"profile.imgSrc\" [src]=\"profile.imgSrc\"></div>\r\n                  </div>\r\n                  <div *ngIf=\"preloader\">\r\n                      <app-spinner></app-spinner>\r\n                  </div>\r\n  \r\n                </div>\r\n                <!-- img end -->\r\n                <div class=\"col-md-8 col-md-offset-2 mrg-tp\">\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <div class=\"col-md-6 col-xs-6\"><label for=\"\">First Name</label></div>\r\n                      <div class=\"col-md-6 col-xs-6\"><input class=\"style\" type=\"text\" [(ngModel)]=\"profile.f_name\" name=\"f_name\"></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <div class=\"col-md-6 col-xs-6\"><label for=\"\">Last Name</label></div>\r\n                      <div class=\"col-md-6 col-xs-6\"><input class=\"style\" type=\"text\" [(ngModel)]=\"profile.l_name\" name=\"l_name\"></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <div class=\"col-md-6 col-xs-6\"><label for=\"\">Email</label></div>\r\n                      <div class=\"col-md-6 col-xs-6\"><label for=\"\" class=\"label2\">{{profile?.email}}</label></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <div class=\"col-md-6 col-xs-6\"><label for=\"\">Gender</label></div>\r\n                      <div class=\"col-md-5 col-xs-6\">\r\n                        <select class=\"style2\" [(ngModel)]=\"profile.gender\" name=\"gender\">\r\n                          <option value=\"Male\">Male</option>\r\n                          <option value=\"Female\">Female</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <div class=\"col-md-6 col-xs-6\"><label for=\"\">Contact Number</label></div>\r\n                      <div class=\"col-md-6 col-xs-6\"><input class=\"style\" type=\"text\" [(ngModel)]=\"profile.contact_no\" name=\"contact_no\"></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <div class=\"col-md-6 col-xs-6\"><label for=\"\">Designation</label></div>\r\n                      <div class=\"col-md-6 col-xs-6\"><label for=\"\" class=\"label2\">{{profile?.tbl_designation?.designation}}</label></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <div class=\"col-md-6 col-xs-6\"><label for=\"\">User Group</label></div>\r\n                      <div class=\"col-md-6 col-xs-6\"><label for=\"\" class=\"label2\">{{profile?.tbl_role?.role}}</label></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <div class=\"col-md-6 col-xs-6\"><label for=\"\">Team</label></div>\r\n                      <div class=\"col-md-6 col-xs-6\">\r\n                        <label for=\"\" class=\"label2\">\r\n                        <ul *ngFor=\"let item of profile.tbl_team_assocs\">\r\n                          <li>{{item.tbl_team?.team_name}}</li>\r\n                        </ul>\r\n                      </label></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <div class=\"col-md-6 col-xs-6\"><label for=\"\">Previous Experience</label></div>\r\n                      <div class=\"col-md-6 col-xs-6\"><label for=\"\" class=\"label2\">{{profile?.tbl_prev_exp?.exp_range}} Years</label></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                      <div class=\"col-md-6 col-xs-6\"><label for=\"\">Join Date</label></div>\r\n                      <div class=\"col-md-6 col-xs-6\"><label for=\"\" class=\"label2\">{{profile?.join_date| date:'EEE, d MMM,y'}}</label></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <button type=\"button\" class=\"btn center-bt\" data-toggle=\"collapse\" data-target=\"#demo\">Change Password</button>\r\n\r\n                  <div id=\"demo\" class=\"collapse\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <div class=\"col-md-6 col-xs-6\"><label for=\"\">Password</label></div>\r\n                        <div class=\"col-md-6 col-xs-6\"><input class=\"style\" type=\"password\" [(ngModel)]=\"profile.password\" name=\"password\">\r\n                          <span matTooltip=\"Password contain atleast 6 characters and should contain one number,one character and one special character\"><i class=\"material-icons info-icon\">info_outline</i></span></div>\r\n                        <!-- <mat-hint align=\"end\">Password contain atleast 6 characters and should contain one number,one character and one special character</mat-hint> -->\r\n                        \r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"form-group\">\r\n                        <div class=\"col-md-6 col-xs-6\"><label for=\"\">Confirm Password</label></div>\r\n                        <div class=\"col-md-6 col-xs-6\"><input class=\"style\" type=\"password\" [(ngModel)]=\"profile.c_password\" name=\"c_password\"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-12 text-center\">\r\n                    <button type=\"submit\" (click)=\"updateUser(profile)\" class=\"btn round-button center-bt\">Update</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"col-md-12\">\r\n          <h3>Project Estimation</h3>\r\n        </div> -->\r\n        <!-- <div class=\"col-md-5 col-xs-12\">\r\n          <div class=\"panel panel-default\">\r\n            <div class=\"panel-body mrg-top\">\r\n\r\n              <div class=\"row\">\r\n                fff\r\n              </div>\r\n              </div>\r\n              </div>\r\n              </div> -->\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/user-edit-profile/user-edit-profile.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserEditProfileComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_forms__ = __webpack_require__("../../../forms/esm5/forms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var UserEditProfileComponent = (function () {
    function UserEditProfileComponent(userService, _formBuilder, routes, route, snackBar) {
        this.userService = userService;
        this._formBuilder = _formBuilder;
        this.routes = routes;
        this.route = route;
        this.snackBar = snackBar;
        this.preloader = false;
        this.profile = {
            f_name: '',
            l_name: '',
            gender: '',
            contact_no: '',
            password: '',
            c_password: '',
            imgSrc: '',
            imgFile: [],
        };
    }
    UserEditProfileComponent.prototype.ngOnInit = function () {
        this.preloader = true;
        this.getProfile();
    };
    UserEditProfileComponent.prototype.getProfile = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getProfile
        // Params        : 
        // Returns       : logged in user details
        // Author        : Rinsha
        // Date          : 21-03-2018
        // Last Modified : 21-03-2018, Rinsha
        // Desc          : 
        this.userService.getProfile().subscribe(function (info) {
            _this.preloader = false;
            // console.log(info);
            _this.profile = info;
            _this.profile.c_password = '';
            _this.profile.password = '';
            _this.user_id = info.id;
            if (info.tbl_login.profile_image == '') {
                _this.profile.imgSrc = "../assets/images/dp.jpg";
            }
            else {
                _this.profile.imgSrc = "../assets/profile_upload/" + info.tbl_login.profile_image;
            }
        });
        // ---------------------------------End-------------------------------------------
    };
    UserEditProfileComponent.prototype.updateUser = function (profile) {
        var _this = this;
        // console.log(profile);
        // ---------------------------------Start-------------------------------------------
        // Function      : updateUser
        // Params        : user data
        // Returns       : 
        // Author        : Rinsha
        // Date          : 21-03-2018
        // Last Modified : 21-03-2018, Rinsha
        // Desc          : 
        this.userService.updateUser(profile).subscribe(function (info) {
            var snackBarRef = _this.snackBar.open(info.msg, '', {
                duration: 3000
            });
            if (info.success == true) {
                _this.routes.navigate(['/user-dashboard']);
            }
        });
        // ---------------------------------End-------------------------------------------
    };
    UserEditProfileComponent.prototype.displayPhoto = function (fileInput) {
        var _this = this;
        var ext = fileInput.target.files[0].name.split('.').pop().toLowerCase();
        if (['gif', 'png', 'jpg', 'jpeg'].indexOf(ext) < 0) {
            // fileInput.target.files.remove(0);
            this.profile.imgSrc = '';
            alert('Please select a valid image [ jpg | jpeg | gif | png ]');
            return false;
        }
        //this.newUser.imgFile =ext;
        // console.log(fileInput);
        this.profile.imgFile = fileInput.target.files[0];
        if (fileInput.target.files && fileInput.target.files[0]) {
            var reader = new FileReader();
            reader.onload = (function (e) {
                _this.profile.imgSrc = e.target['result'];
            });
            reader.readAsDataURL(fileInput.target.files[0]);
        }
    };
    UserEditProfileComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-user-edit-profile',
            template: __webpack_require__("../../../../../src/app/components/user-edit-profile/user-edit-profile.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-edit-profile/user-edit-profile.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_3__angular_forms__["FormBuilder"], __WEBPACK_IMPORTED_MODULE_1__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_router__["ActivatedRoute"], __WEBPACK_IMPORTED_MODULE_4__angular_material__["z" /* MatSnackBar */]])
    ], UserEditProfileComponent);
    return UserEditProfileComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-footer/user-footer.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-footer/user-footer.component.html":
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "../../../../../src/app/components/user-footer/user-footer.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserFooterComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var UserFooterComponent = (function () {
    function UserFooterComponent() {
    }
    UserFooterComponent.prototype.ngOnInit = function () {
    };
    UserFooterComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'user-footer',
            template: __webpack_require__("../../../../../src/app/components/user-footer/user-footer.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-footer/user-footer.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], UserFooterComponent);
    return UserFooterComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-leave-request/user-leave-request.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".side-bar-menu{background:#fff;}\r\n.side-bar-menu li{    border-bottom: 1px solid #e4e4e4;}\r\n.side-bar-menu li a{color:#111;text-align:left;padding: 20px 23px;}\r\n.side-bar-menu li a:hover{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:focus{background-color: #fe6a07;color:#fff;}\r\n.side-bar-menu li>a:active{background-color: #fe6a07;color:#fff;}\r\n\r\nul.breadcrumb {\r\n    padding: 10px 0;\r\n    list-style: none;\r\n\r\n    text-align: left;\r\n    color: #d68956;\r\n}\r\nul.breadcrumb li {\r\n    display: inline;\r\n    font-size: 15px;\r\n}\r\nul.breadcrumb li+li:before {\r\n    padding: 8px;\r\n    color: black;\r\n    content: \"/\\A0\";\r\n}\r\nul.breadcrumb li a {\r\n    color: #bbbbbb;\r\n    text-decoration: none;\r\n}\r\nul.breadcrumb li a:hover {\r\n    color: #d68956;\r\n    text-decoration: none;\r\n\r\n}\r\n.breadcrumb{    background-color: #f6f7fa;}\r\n\r\n\r\n.example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}\r\n.modal-dialog{max-width:900px !important;width:100%;}\r\n.user{width:280px;height:280px;border-radius:50%;margin:0 auto;float:none;overflow:hidden; background: #d45d0e;margin-top: 20%;\r\n    margin-bottom: 20%;text-align:center;}\r\n    .user:hover{opacity:0.6;cursor:pointer;}\r\n.user img{width:120%;max-width: 287px;min-width: 287px;}\r\n\r\n.brdr-left{    width: 1px;\r\n    height: 155px;\r\n    float: left;\r\n    margin-top: 36%;\r\n    display: inherit;\r\n    background: #efecec;\r\n    margin-right: 21px;}\r\n  .user .fa-camera{color:#fff;font-size:50px;text-align:center;background: #d45d0e;padding-top:204%;}\r\n.disply{width:auto; display: -webkit-inline-box;}\r\nlabel{font-weight: 500;}\r\n.paddtop{padding-top:17px;}\r\n.info-icon{padding-top: 13%;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-leave-request/user-leave-request.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n\r\n      <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n        <!-- sidebar-->\r\n\r\n        <user-sidebar></user-sidebar>\r\n        <!-- end sidebar-->\r\n      </div>\r\n\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n        <!-- topbar-->\r\n        <user-topbar></user-topbar>\r\n\r\n        <!-- end topbar-->\r\n\r\n\r\n        <div class=\"user-dashboard\">\r\n          <h2>Leave Request</h2>\r\n          <ul class=\"breadcrumb\">\r\n            <li><a href=\"#\">Leave Request</a></li>\r\n\r\n\r\n            <li>Leave Request List </li>\r\n          </ul>\r\n          <div class=\"row\">\r\n            <!-----------------------------------------------------------------table-------------------------------------->\r\n\r\n\r\n            <!-- <p>You selected: {{selected}} </p> -->\r\n\r\n            <div class=\"col-md-12\">\r\n              <div class=\"\">\r\n                <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\" >\r\n          <div class=\"\"  >\r\n              <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n              width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n          <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n            <animateTransform attributeType=\"xml\"\r\n              attributeName=\"transform\"\r\n              type=\"rotate\"\r\n              from=\"0 25 25\"\r\n              to=\"360 25 25\"\r\n              dur=\"0.6s\"\r\n              repeatCount=\"indefinite\"/>\r\n            </path>\r\n          </svg>\r\n      </div>\r\n      </div> -->\r\n\r\n\r\n                <div class=\"col-md-12 optionz\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <div class=\"example-header\">\r\n                        <mat-form-field>\r\n                          <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                        </mat-form-field>\r\n                      </div>\r\n                    </div>\r\n\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <!--    \r\n            <div class=\"example-header\" >\r\n                <mat-form-field>\r\n                  <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                </mat-form-field>\r\n            </div> -->\r\n\r\n                <div class=\"example-container mat-elevation-z8 \">\r\n                    <div *ngIf=\"preloader\">\r\n                        <app-spinner></app-spinner>\r\n                    </div>\r\n    \r\n                  <mat-table [dataSource]=\"dataSource\" matSort>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"slno\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header>Sl_No </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row;let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}}</mat-cell>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <!-- <ng-container matColumnDef=\"name\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header> NAME </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.tbl_user_profile.f_name}} </mat-cell>\r\n      </ng-container> -->\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"leave_start_date\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> Leave Start Date </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.start_date}} </mat-cell>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"start_available_hrs\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> Start Available hrs </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.start_available_hrs}} </mat-cell>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"leave_end_date\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> leave end date </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.end_date}} </mat-cell>\r\n                    </ng-container>\r\n                    <!-- Name Column -->\r\n                    <ng-container matColumnDef=\"end_available_hrs\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> end available hrs </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.end_available_hrs}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"status\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> status </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.request_status}} </mat-cell>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"reason\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> View Reason </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\"> {{row.reject_reason}} </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"action\">\r\n                      <mat-header-cell *matHeaderCellDef mat-sort-header> ACTION </mat-header-cell>\r\n                      <mat-cell *matCellDef=\"let row\">\r\n                        <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n                        <mat-menu #menu=\"matMenu\">\r\n                          <button *ngIf=\"row.request_status=='Accepted' || row.request_status=='Rejected'\" mat-menu-item disabled>\r\n                    <i class=\"material-icons\">error</i>\r\n                  <span>No Action</span>\r\n                </button>\r\n                          <button *ngIf=\"row.request_status=='Pending'\" (click)=\"getEditId(row.id)\" data-toggle=\"modal\" data-target=\"#editModal\" mat-menu-item>\r\n                    <i class=\"material-icons\">mode_edit</i>\r\n                  <span>Edit</span>\r\n                </button>\r\n                          <button *ngIf=\"row.request_status=='Pending'\" (click)=\"getId(row.id)\" data-toggle=\"modal\" data-target=\"#deleteModal\" mat-menu-item>\r\n                  <i class=\"material-icons\">delete</i>\r\n                <span>Delete</span>\r\n              </button>\r\n\r\n\r\n\r\n                        </mat-menu>\r\n\r\n                      </mat-cell>\r\n                    </ng-container>\r\n\r\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </mat-row>\r\n                  </mat-table>\r\n                  <div class=\"col-md-15 \">\r\n                    <!-- <div *ngIf=\"showSpinner\" class=\"deletespinner\">\r\n            <mat-spinner></mat-spinner>\r\n           </div> -->\r\n                  </div>\r\n                  <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n                    <div class=\"col-md-4 col-md-offset-4\">\r\n                      <mat-toolbar class=\"back-color\">No item found!</mat-toolbar>\r\n                    </div>\r\n                  </div>\r\n                  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                </div>\r\n\r\n\r\n              </div>\r\n            </div>\r\n            <div class=\"add-button\">\r\n              <button type=\"button\" class=\"add-project\" data-toggle=\"modal\" (click)=\"addNewUserleave()\" data-target=\"#addModal\" data-backdrop=\"static\">+</button>\r\n            </div>\r\n            <!-- --------------------------------------------- delete modal ----------------------------------------------------------------- -->\r\n\r\n            <div id=\"deleteModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn9>&times;</button>\r\n                    <h4 class=\"modal-title\">Delete </h4>\r\n                  </div>\r\n                  <!-- <div class=\"modal-header\"> -->\r\n                  <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n                  <!-- </div> -->\r\n                  <div class=\"modal-body delete-popup\">\r\n                    <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n                    <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n                  </div>\r\n\r\n                  <div class=\"modal-footer\">\r\n                    <button type=\"button\" (click)=\"deleteuserleave(id)\" [disabled]=\"deleteBtnDisable\" class=\"btn round-button\" data-dismiss=\"modal\">Delete</button>\r\n                    <div *ngIf=\"deleteSpinner\">\r\n                      <app-spinner></app-spinner>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <!-----------------------------------------------------------------delete modal-------------------------------------->\r\n            <!-----------------------------------------------------------------add modal-------------------------------------->\r\n            <div id=\"addModal\" class=\"modal fade\">\r\n              <div class=\"modal-dialog\">\r\n\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn>&times;</button>\r\n                    <h4 class=\"modal-title\">Add Leave</h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"addUserleave(newUserleave);\" novalidate>\r\n                      <div class=\"col-md-11\">\r\n\r\n\r\n                        <div class=\"form-group\">\r\n\r\n                          <div class=\"col-md-3 paddtop\">\r\n                            <label>Leave Start Date</label>\r\n                          </div>\r\n                          <div class=\"col-md-3\">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                              <input matInput [matDatepickerFilter]=\"myFilter\" [matDatepicker]=\"picker1\" name=\"startdate\" [(ngModel)]=\"newUserleave.startdate\"\r\n                                placeholder=\"Choose a date\" [min]=\"this.todayDate\">\r\n                              <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                              <mat-datepicker #picker1></mat-datepicker>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"col-md-2 paddtop\">\r\n                            <label>Available hrs(HH:MM)</label>\r\n                          </div>\r\n                          <div class=\"col-md-4\">\r\n                            <div class=\"row\">\r\n                              <ngb-timepicker name=\"startavlhr\" class=\"col-md-9\" [(ngModel)]=\"newUserleave.startavlhr\" required></ngb-timepicker>\r\n                              <i matTooltip=\"Please mention hours, if you are available in office during the first day of leave\" class=\"material-icons info-icon nx-tp nx-flt\">info_outline</i>\r\n                              <!-- <div *ngIf=\"ctrl.valid\" class=\"small form-text text-success\">Great choice{{newEmpleave.startavlhr.hour}}</div>\r\n                              <div class=\"small form-text text-danger\" *ngIf=\"!ctrl.valid\">\r\n                                <div *ngIf=\"ctrl.errors['required']\">Select some time during lunchtime</div>\r\n                                <div *ngIf=\"ctrl.errors['tooLate']\">Oh no, it's way too late</div>\r\n                                <div *ngIf=\"ctrl.errors['tooEarly']\">It's a bit too early</div>\r\n                              </div> -->\r\n\r\n                            </div>\r\n                            <p class=\"example\"><i>eg: You can mention the working hour, if you are present half day of the  leave start  date </i></p>\r\n\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"col-md-12\">\r\n                            <hr>\r\n\r\n                          </div>\r\n\r\n                          <div class=\"col-md-3 paddtop\">\r\n                            <label>Leave End Date</label>\r\n                          </div>\r\n                          <div class=\"col-md-3\">\r\n\r\n                            <mat-form-field class=\"example-full-width\">\r\n                              <input matInput [matDatepickerFilter]=\"myFilter\" [matDatepicker]=\"picker2\" name=\"enddate\" [(ngModel)]=\"newUserleave.enddate\"\r\n                                placeholder=\"Choose a date\" [min]=\"this.todayDate\">\r\n                              <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                              <mat-datepicker #picker2></mat-datepicker>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"col-md-2 paddtop\">\r\n                            <label>Available hrs(HH:MM)</label>\r\n                          </div>\r\n                          <div class=\"col-md-4\">\r\n                            <div class=\"row\">\r\n\r\n\r\n                              <ngb-timepicker name=\"endavlhr\" class=\"col-md-9\" [(ngModel)]=\"newUserleave.endavlhr\" required></ngb-timepicker>\r\n                              <i matTooltip=\"Please mention hours, if you are available in office during the last day of leave \" class=\"material-icons info-icon nx-tp nx-flt\">info_outline</i>\r\n\r\n                              <!-- <div *ngIf=\"ctrl1.valid\" class=\"small form-text text-success\">Great choice{{newEmpleave.endavlhr.hour}}</div>\r\n                            <div class=\"small form-text text-danger\" *ngIf=\"!ctrl1.valid\">\r\n                              <div *ngIf=\"ctrl1.errors['required']\">Select some time during lunchtime</div>\r\n                              <div *ngIf=\"ctrl1.errors['tooLate']\">Oh no, it's way too late</div>\r\n                              <div *ngIf=\"ctrl1.errors['tooEarly']\">It's a bit too early</div>\r\n                            </div> -->\r\n\r\n                            </div>\r\n                            <p class=\"example\"><i>eg: You can mention the working hour, if you are present half day of the leave end date </i></p>\r\n                          </div>\r\n\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"col-md-12\">\r\n                            <hr>\r\n\r\n                          </div>\r\n                          <!-- <div class=\"col-md-12\">\r\n                            <div class=\"col-md-3 paddtop\">\r\n                                <label>Employee</label>\r\n                             </div>\r\n                             <div class=\"col-md-3\">\r\n                                <mat-form-field>\r\n                                    \r\n                                    <mat-select placeholder=\"Select employee \"  name=\"emp_id\"  [(ngModel)]=\"newEmpleave.emp_id\" required>\r\n                                    \r\n                                        <mat-option  *ngFor=\"let item of companyemployee\"  [value]=\"item.id\" >{{item.f_name}}</mat-option>\r\n                                                                    \r\n                                     </mat-select>\r\n                                </mat-form-field>   \r\n                             </div>\r\n                             \r\n                         </div> -->\r\n\r\n                          <!-- <div class=\"col-md-12\">\r\n                            <div class=\"col-md-3 paddtop\">\r\n                                <label>Leave Hour</label> \r\n                             </div>\r\n                             <div class=\"col-md-3 paddtop\">\r\n                                <label>10</label> \r\n                             </div>\r\n                             \r\n                         </div> -->\r\n\r\n\r\n                        </div>\r\n\r\n                        <br>\r\n\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-4\">\r\n                            <button type=\"submit\" [disabled]=\"addUserBtnDisable\" class=\"btn round-button\">Submit</button>\r\n                            <div *ngIf=\"addUserSpinner\">\r\n                              <app-spinner></app-spinner>\r\n                            </div>\r\n                          </div>\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n\r\n\r\n                    </form>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <!----------------------------------------addModal------------------------------>\r\n            <!-- --------------------------------------------- edit modal ----------------------------------------------------------------- -->\r\n\r\n\r\n            <div id=\"editModal\" class=\"modal fade\">\r\n              <div class=\"modal-dialog\">\r\n\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn1>&times;</button>\r\n                    <h4 class=\"modal-title\">Update Leave</h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"updateUserleave(updateleave);\" novalidate>\r\n\r\n                      <div class=\"col-md-11\">\r\n\r\n\r\n                        <div class=\"form-group\">\r\n\r\n                          <div class=\"col-md-3 paddtop\">\r\n                            <label>Leave Start Date</label>\r\n                          </div>\r\n                          <div class=\"col-md-3\">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                              <input matInput [matDatepickerFilter]=\"myFilter\" [matDatepicker]=\"picker3\" name=\"startdate\" [(ngModel)]=\"updateleave.start_date\"\r\n                                placeholder=\"Choose a date\">\r\n                              <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\r\n                              <mat-datepicker #picker3></mat-datepicker>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"col-md-2 paddtop\">\r\n                            <label>Available hrs(HH:MM)</label>\r\n                          </div>\r\n                          <div class=\"col-md-4\">\r\n                            <div class=\"row\">\r\n                              <ngb-timepicker name=\"startavlhr\" class=\"col-md-9\" [(ngModel)]=\"updateleave.startavlhr\" required></ngb-timepicker>\r\n                              <i matTooltip=\"Please mention hours, if you are available in office during the first day of leave \" class=\"material-icons info-icon nx-tp nx-flt\">info_outline</i>\r\n\r\n                              <!-- <div *ngIf=\"ctrl1.valid\" class=\"small form-text text-success\">Great choice{{newEmpleave.endavlhr.hour}}</div>\r\n                                    <div class=\"small form-text text-danger\" *ngIf=\"!ctrl1.valid\">\r\n                                      <div *ngIf=\"ctrl1.errors['required']\">Select some time during lunchtime</div>\r\n                                      <div *ngIf=\"ctrl1.errors['tooLate']\">Oh no, it's way too late</div>\r\n                                      <div *ngIf=\"ctrl1.errors['tooEarly']\">It's a bit too early</div>\r\n                                    </div> -->\r\n\r\n                            </div>\r\n                            <p class=\"example\"><i>eg: You can mention the working hour, if you are present half day of the leave start date </i></p>\r\n                          </div>\r\n\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"col-md-12\">\r\n                            <hr>\r\n\r\n                          </div>\r\n\r\n\r\n                          <div class=\"col-md-3 paddtop\">\r\n                            <label>Leave End Date</label>\r\n                          </div>\r\n                          <div class=\"col-md-3\">\r\n                            <mat-form-field class=\"example-full-width\">\r\n                              <input matInput [matDatepickerFilter]=\"myFilter\" [matDatepicker]=\"picker4\" name=\"enddate\" [(ngModel)]=\"updateleave.end_date\"\r\n                                placeholder=\"Choose a date\">\r\n                              <mat-datepicker-toggle matSuffix [for]=\"picker4\"></mat-datepicker-toggle>\r\n                              <mat-datepicker #picker4></mat-datepicker>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"col-md-2 paddtop\">\r\n                            <label>Available hrs(HH:MM)</label>\r\n                          </div>\r\n                          <div class=\"col-md-4\">\r\n                            <div class=\"row\">\r\n                              <ngb-timepicker name=\"endavlhr\" class=\"col-md-9\" [(ngModel)]=\"updateleave.endavlhr\" required></ngb-timepicker>\r\n                              <i matTooltip=\"Please mention hours, if you are available in office during the last day of leave \" class=\"material-icons info-icon nx-tp nx-flt\">info_outline</i>\r\n                              <!-- <div *ngIf=\"ctrl1.valid\" class=\"small form-text text-success\">Great choice{{newEmpleave.endavlhr.hour}}</div>\r\n                                      <div class=\"small form-text text-danger\" *ngIf=\"!ctrl1.valid\">\r\n                                        <div *ngIf=\"ctrl1.errors['required']\">Select some time during lunchtime</div>\r\n                                        <div *ngIf=\"ctrl1.errors['tooLate']\">Oh no, it's way too late</div>\r\n                                        <div *ngIf=\"ctrl1.errors['tooEarly']\">It's a bit too early</div>\r\n                                      </div> -->\r\n\r\n                            </div>\r\n                            <p class=\"example\"><i>eg: You can mention the working hour, if you are present half day of the leave end date </i></p>\r\n                          </div>\r\n\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"col-md-12\">\r\n                            <hr>\r\n\r\n                          </div>\r\n\r\n                          <!-- <div class=\"col-md-12\">\r\n                                      <div class=\"col-md-3 paddtop\">\r\n                                          <label>Employee</label>\r\n                                       </div>\r\n                                       <div class=\"col-md-3\">\r\n                                          <mat-form-field>\r\n                                              \r\n                                              <mat-select placeholder=\"Select employee \"  name=\"emp_id\"  [(ngModel)]=\"updateleave.user_profile_id\" required>\r\n                                              \r\n                                                  <mat-option  *ngFor=\"let item of companyemployee\"  [value]=\"item.id\" >{{item.f_name}}</mat-option>\r\n                                                                              \r\n                                               </mat-select>\r\n                                          </mat-form-field>   \r\n                                       </div>\r\n                                       \r\n                                   </div> -->\r\n                          <!-- <div class=\"col-md-12\">\r\n                                      <div class=\"col-md-3 paddtop\">\r\n                                          <label>Leave Hour</label> \r\n                                       </div>\r\n                                       <div class=\"col-md-3 paddtop\">\r\n                                          <label>10</label> \r\n                                       </div>\r\n                                       \r\n                                   </div> -->\r\n\r\n                        </div>\r\n                        <br>\r\n                        <div class=\"row\">\r\n                          <div class=\"col-md-4\">\r\n                            <button type=\"submit\" [disabled]=\"editUserBtnDisable\" class=\"btn round-button\">Submit</button>\r\n                            <div *ngIf=\"editUserSpinner\">\r\n                              <app-spinner></app-spinner>\r\n                            </div>\r\n                          </div>\r\n                          <!-- <div class=\"col-md-8\" *ngIf=\"showSpinner\">\r\n                            <svg class=\"svgclass\" version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n                              x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\"\r\n                              xml:space=\"preserve\">\r\n                              <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n                                <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"\r\n                                />\r\n                              </path>\r\n                            </svg>\r\n                          </div> -->\r\n\r\n                        </div>\r\n\r\n\r\n                      </div>\r\n\r\n\r\n\r\n                    </form>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <!-----------------------------------------------------------------edit modal-------------------------------------->\r\n\r\n            <!-----------------------------------------------------------------end table-------------------------------------->\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <!-- footer-->\r\n      <user-footer></user-footer>\r\n      <!-- end footer-->\r\n    </div>\r\n  </div>\r\n  <!-- Modal -->\r\n\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/user-leave-request/user-leave-request.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserLeaveRequestComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var UserLeaveRequestComponent = (function () {
    // myFilter = (d: Date): boolean => {
    //   const day = d.getDay();
    //   // Prevent Saturday and Sunday from being selected.
    //   return day !== 0 && day !== 6;
    // }
    // ---------------------------------Start-------------------------------------------
    // Function      : project category master setting
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 12-03-2018
    // Last Modified : 
    // Desc          : All category
    function UserLeaveRequestComponent(userService, routes, snackBar, config) {
        this.userService = userService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.config = config;
        this.displayedColumns = ['slno', 'leave_start_date', 'start_available_hrs', 'leave_end_date', 'end_available_hrs', 'status', 'reason', 'action'];
        this.preloader = false;
        this.notExist = false;
        this.all_value = false;
        this.showSpinner = false;
        this.todayDate = new Date();
        this.updateleave = {
            start_date: '',
            id: '',
            end_date: '',
            startavlhr: '',
            endavlhr: '',
            // user_profile_id: '',
            leave_hrs: ''
        };
        this.addUserBtnDisable = false;
        this.addUserSpinner = false;
        this.editUserBtnDisable = false;
        this.editUserSpinner = false;
        this.deleteBtnDisable = false;
        this.deleteSpinner = false;
        this.newUserleave = {
            startdate: '',
            startavlhr: { hour: 0, minute: 0, second: 0 },
            endavlhr: { hour: 0, minute: 0, second: 0 },
            enddate: '',
            //  emp_id: '',
            leave_hr: ''
        };
        this.time = { hour: 13, minute: 30 };
        this.socket = __WEBPACK_IMPORTED_MODULE_4_socket_io_client__(config.socketURL);
    }
    UserLeaveRequestComponent.prototype.refresh = function () {
        var _this = this;
        // console.log("hj");
        this.showSpinner = true;
        //  console.log(this.selected);
        var company = [];
        this.userService.getSingleUserallleaves().subscribe(function (data) {
            _this.preloader = false;
            // console.log(data);
            // console.log(data[0].tbl_user_profile.f_name);
            _this.loadToDataTable(data);
            _this.showSpinner = false;
        });
    };
    UserLeaveRequestComponent.prototype.loadToDataTable = function (data) {
        console.log(data);
        this.notExist = false;
        if (data.length == 0) {
            this.notExist = true;
        }
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
        // console.log(this.dataSource);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    UserLeaveRequestComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.preloader = true;
        this.newUserleave.startavlhr = { hour: 0, minute: 0, second: 0 },
            this.newUserleave.endavlhr = { hour: 0, minute: 0, second: 0 },
            this.refresh();
        this.socket.on('Rejectedleave', function (data) {
            _this.refresh();
        });
        this.socket.on('Acceptedleave', function (data) {
            _this.refresh();
        });
        // this.userService.getAllcompanyemployee().subscribe(res => {
        //   this.companyemployee = res;
        //  });
        this.todayDate.setDate(this.todayDate.getDate() + 1);
    };
    UserLeaveRequestComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    //tme validation
    // ctrl = new FormControl('', (control: FormControl) => {
    //   const value = control.value;
    //   if (!value) {
    //     return null;
    //   }
    //   if (value.hour < 12) {
    //     return {tooEarly: true};
    //   }
    //   if (value.hour > 13) {
    //     return {tooLate: true};
    //   }
    //   return null;
    // });
    // ctrl1 = new FormControl('', (control: FormControl) => {
    //   const value1 = control.value;
    //   if (!value1) {
    //     return null;
    //   }
    //   if (value1.hour < 12) {
    //     return {tooEarly: true};
    //   }
    //   if (value1.hour > 13) {
    //     return {tooLate: true};
    //   }
    //   // console.log(value1.hour);
    //   return null;
    // });
    //add empleave
    UserLeaveRequestComponent.prototype.addNewUserleave = function () {
        //this.showSpinner =false;
        //this.showSpinnerDelete =false;
        this.newUserleave = {
            startdate: '',
            startavlhr: { hour: 0, minute: 0, second: 0 },
            enddate: '',
            endavlhr: { hour: 0, minute: 0, second: 0 },
            // emp_id: '',
            leave_hr: ''
        };
    };
    UserLeaveRequestComponent.prototype.getId = function (id) {
        // this.showSpinner =false
        // this.showSpinnerDelete =false
        this.id = id;
        //  console.log(this.id)
    };
    //delete Employee leave
    UserLeaveRequestComponent.prototype.deleteuserleave = function (id) {
        var _this = this;
        this.deleteBtnDisable = true;
        this.deleteSpinner = true;
        // console.log(id);
        this.showSpinner = true;
        this.userService.deleteuserleave(id).subscribe(function (data) {
            // console.log(data);
            if (data.success) {
                _this.deleteBtnDisable = false;
                _this.deleteSpinner = false;
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.closeBtn9.nativeElement.click();
                _this.refresh();
            }
            else {
                _this.deleteBtnDisable = false;
                _this.deleteSpinner = false;
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    UserLeaveRequestComponent.prototype.addUserleave = function (newUserleave) {
        var _this = this;
        // console.log(newUserleave);
        this.addUserBtnDisable = true;
        this.addUserSpinner = true;
        // this.showSpinner = true;
        // console.log(newCategory);
        this.userService.addUserleave(newUserleave).subscribe(function (data) {
            if (!data.success) {
                _this.addUserBtnDisable = false;
                _this.addUserSpinner = false;
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else if (data.success) {
                _this.addUserBtnDisable = false;
                _this.addUserSpinner = false;
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.closeBtn.nativeElement.click();
                _this.refresh();
            }
        });
    };
    UserLeaveRequestComponent.prototype.getEditId = function (id) {
        var _this = this;
        // console.log(id);
        this.showSpinner = false;
        this.userService.getSingleuserleave(id).subscribe(function (data) {
            // console.log( data);
            _this.updateleave = data;
            // console.log(this.updateleave);
            var start = data.start_available_hrs.split(':');
            var end = data.end_available_hrs.split(':');
            //  console.log(start[0]);
            // console.log(data.start_available_hrs)
            data.startavlhr = { hour: start[0], minute: start[1], second: start[2] };
            data.endavlhr = { hour: end[0], minute: end[1], second: end[2] };
            //this.id = data.id;
            // console.log(this.updateleave);
            if (data.success == false) {
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.refresh();
            }
            else {
            }
        });
    };
    UserLeaveRequestComponent.prototype.updateUserleave = function (updateleave) {
        var _this = this;
        this.editUserBtnDisable = true;
        this.editUserSpinner = true;
        // console.log(updateleave);
        this.showSpinner = true;
        this.userService.updateUserleave(this.updateleave).subscribe(function (data) {
            if (!data.success) {
                _this.editUserBtnDisable = false;
                _this.editUserSpinner = false;
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
            else if (data.success) {
                _this.editUserBtnDisable = false;
                _this.editUserSpinner = false;
                _this.showSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
                _this.closeBtn1.nativeElement.click();
                _this.refresh();
            }
        });
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], UserLeaveRequestComponent.prototype, "closeBtn", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn1'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], UserLeaveRequestComponent.prototype, "closeBtn1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn9'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], UserLeaveRequestComponent.prototype, "closeBtn9", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], UserLeaveRequestComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], UserLeaveRequestComponent.prototype, "sort", void 0);
    UserLeaveRequestComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'user-leave-request',
            template: __webpack_require__("../../../../../src/app/components/user-leave-request/user-leave-request.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-leave-request/user-leave-request.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__services_user_service__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_2__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */], __WEBPACK_IMPORTED_MODULE_5__config_config__["a" /* Config */]])
    ], UserLeaveRequestComponent);
    return UserLeaveRequestComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-my-request-mytask/user-my-request-mytask.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}\r\nul.breadcrumb {\r\n    padding: 10px 0;\r\n    list-style: none;\r\n\r\n    text-align: left;\r\n    color: #d68956;\r\n}\r\nul.breadcrumb li {\r\n    display: inline;\r\n    font-size: 15px;\r\n}\r\nul.breadcrumb li+li:before {\r\n    padding: 8px;\r\n    color: black;\r\n    content: \"/\\A0\";\r\n}\r\nul.breadcrumb li a {\r\n    color: #bbbbbb;\r\n    text-decoration: none;\r\n}\r\nul.breadcrumb li a:hover {\r\n    color: #d68956;\r\n    text-decoration: none;\r\n\r\n}\r\n.breadcrumb{    background-color: #f6f7fa;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-my-request-mytask/user-my-request-mytask.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n    <div class=\"container-fluid display-table\">\r\n        <div class=\"row display-table-row\">\r\n      \r\n            <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n                 <!-- sidebar-->\r\n               \r\n                 <user-sidebar></user-sidebar> \r\n                 <!-- end sidebar-->\r\n            </div>\r\n            \r\n            <div class=\"col-md-12 col-xs-12\">\r\n                <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n                <!-- topbar-->\r\n                <user-topbar></user-topbar> \r\n                \r\n                    <!-- end topbar-->\r\n                \r\n                \r\n                <div class=\"user-dashboard\">\r\n                        <h2>My Request</h2>\r\n                        <ul class=\"breadcrumb\">\r\n                          <li><a href=\"#\">My Request</a></li>\r\n                          \r\n                          \r\n                          <li>My New Task Request list </li>\r\n                        </ul>\r\n                    <div class=\"row\">\r\n     <!-----------------------------------------------------------------table-------------------------------------->\r\n   \r\n  \r\n   \r\n  \r\n  <div class=\"col-md-12\">\r\n      <div class=\"row\">\r\n      <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\" >\r\n          <div class=\"\"  >\r\n              <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n              width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n          <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n            <animateTransform attributeType=\"xml\"\r\n              attributeName=\"transform\"\r\n              type=\"rotate\"\r\n              from=\"0 25 25\"\r\n              to=\"360 25 25\"\r\n              dur=\"0.6s\"\r\n              repeatCount=\"indefinite\"/>\r\n            </path>\r\n          </svg>\r\n      </div>\r\n      </div> -->\r\n      \r\n  \r\n      <div class=\"col-md-12 optionz\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"example-header\">\r\n                    <mat-form-field>\r\n                      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                    </mat-form-field>\r\n                  </div>\r\n            </div>\r\n   \r\n        </div>\r\n      </div>\r\n  \r\n  \r\n  \r\n         \r\n      <div class=\"example-container mat-elevation-z8 \">\r\n            <div *ngIf=\"preloader\">\r\n                    <app-spinner></app-spinner>\r\n                </div>\r\n\r\n    <mat-table [dataSource]=\"dataSource\" matSort>\r\n   <!-- Name Column -->\r\n   <ng-container matColumnDef=\"slno\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Sl_No </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row;let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}}</mat-cell>\r\n    </ng-container>\r\n      <!-- Name Column -->\r\n      <ng-container matColumnDef=\"taskname\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header>TASK NAME </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\">  {{row.task_name}}</mat-cell>\r\n      </ng-container>\r\n  \r\n     <!-- Progress Column -->\r\n     <ng-container matColumnDef=\"date\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> DATE </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.createdAt | date:'EEE, d MMM,y'}}</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"time\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> REQUESTED TIME </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">{{row.planned_hours+row.buffer_hours}} Hr</mat-cell>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"status\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header> STATUS </mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.request_status}}  </mat-cell>\r\n      </ng-container>\r\n  \r\n  \r\n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n      </mat-row>\r\n    </mat-table>\r\n    <div class=\"col-md-15 \">\r\n        <!-- <div *ngIf=\"showSpinner\" class=\"deletespinner\">\r\n            <mat-spinner></mat-spinner>\r\n           </div> -->\r\n    </div>\r\n    <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n        <div class=\"col-md-4 col-md-offset-4\">\r\n            <mat-toolbar   class=\"back-color\">No item found!</mat-toolbar>\r\n        </div>\r\n      </div>\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n  </div>\r\n  \r\n  \r\n  </div>\r\n  </div>\r\n  \r\n  \r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n                <!-- footer-->\r\n                <user-footer></user-footer>\r\n       <!-- end footer-->\r\n        </div>\r\n         </div>\r\n        <!-- Modal -->\r\n     </body>"

/***/ }),

/***/ "../../../../../src/app/components/user-my-request-mytask/user-my-request-mytask.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserMyRequestMytaskComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var UserMyRequestMytaskComponent = (function () {
    // ---------------------------------Start-------------------------------------------
    // Function      :  MY REQUEST
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 29-03-2018
    // Last Modified : 
    // Desc          : my request status
    function UserMyRequestMytaskComponent(userService, routes, snackBar) {
        this.userService = userService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.preloader = false;
        this.displayedColumns = ['slno', 'taskname', 'date', 'time', 'status'];
        this.notExist = false;
        this.all_value = false;
        this.showSpinner = false;
    }
    UserMyRequestMytaskComponent.prototype.refresh = function () {
        var _this = this;
        this.showSpinner = true;
        this.userService.getAllMyNewTaskrequest().subscribe(function (data) {
            _this.preloader = false;
            console.log(data);
            _this.loadToDataTable(data);
            _this.showSpinner = false;
        });
    };
    UserMyRequestMytaskComponent.prototype.loadToDataTable = function (data) {
        this.notExist = false;
        if (data.length == 0) {
            this.notExist = true;
        }
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
        // console.log(this.dataSource);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    UserMyRequestMytaskComponent.prototype.ngOnInit = function () {
        this.preloader = true;
        this.refresh();
    };
    UserMyRequestMytaskComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], UserMyRequestMytaskComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], UserMyRequestMytaskComponent.prototype, "sort", void 0);
    UserMyRequestMytaskComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'user-my-request-mytask',
            template: __webpack_require__("../../../../../src/app/components/user-my-request-mytask/user-my-request-mytask.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-my-request-mytask/user-my-request-mytask.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_user_service__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], UserMyRequestMytaskComponent);
    return UserMyRequestMytaskComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-my-request/user-my-request.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".example-container {\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    min-width: 300px;\r\n  }\r\n  \r\n  .example-header {\r\n    min-height: 64px;\r\n    padding: 8px 24px 0;\r\n  }\r\n  \r\n  .mat-form-field {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n  \r\n  .mat-table {\r\n    overflow: auto;\r\n    max-height: 500px;\r\n  }\r\n  .example-tooltip-host {\r\n    display: -ms-inline-flexbox;\r\n    display: inline-flex;\r\n    -ms-flex-align: center;\r\n        align-items: center;\r\n    margin: 50px;\r\n  }\r\n  \r\n  .example-select {\r\n    margin: 0 10px;\r\n  }\r\n  .filter{\r\n    /* width: 5%; */\r\n    /* float: right;\r\n    clear: left; */\r\n    /* padding-bottom: 25px; */\r\n    margin-top: 10px;\r\n   \r\n  }\r\n  /* h4{\r\n    text-align: center;\r\n} */\r\n.noItemFound{\r\n  text-align: center;\r\n  background-color: #ffffff;\r\n  border-bottom: 1px solid lightgray;\r\n\r\n}\r\n.back-color{\r\n  color: #757575;\r\n  background-color: #ffffff;\r\n}\r\nsvg path,\r\nsvg rect{\r\n  fill: #EC0C0C;\r\n}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.close {\r\n   \r\n    font-size: 21px;\r\n    font-weight: 400;\r\n    line-height: 28px;\r\n    color: #fff;\r\n    text-shadow: none;\r\n    filter: alpha(opacity=20);\r\n    opacity: inherit;\r\n    padding-top:0px;\r\n}\r\n.optionz{background:#fff;}\r\n.mat-select-panel{margin-top:39px;}\r\n\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n  min-width: 300px;\r\n}\r\n\r\n.example-header {\r\n  min-height: 64px;\r\n  padding: 8px 24px 0;\r\n}\r\n\r\n\r\n.mat-form-field {\r\n  /* font-size: 14px; */\r\n  width: 100%;\r\n}\r\n\r\n.mat-table {\r\n  overflow: auto;\r\n  max-height: 500px;\r\n}\r\n.example-container {\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -ms-flex-direction: column;\r\n      flex-direction: column;\r\n}\r\n.modal{top:0;}\r\n.example-container > * {\r\n  width: 100%;\r\n}\r\n.add-project{\r\n  float: right;\r\n  margin-right: 50px;\r\n  margin-top: 50px;\r\n  border: none;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  font-size: 28px;\r\n  line-height: 42px;\r\n  box-shadow: 4px 7px 31px #ffbb8e;\r\n}\r\n.modal-header {\r\n  padding: 10px 30px;\r\n  border-bottom: 1px solid #e5e5e5;\r\n  background: #fe6a07;\r\n}\r\n.modal-content{\r\nbox-shadow:none;\r\nborder-radius: 9px;\r\noverflow: hidden;\r\n\r\n}\r\n.modal-title{color:#fff;}\r\n.modal-body{    padding:20px 30px;}\r\n.modal-body input{border:none;}\r\n.modal-body input{padding: 0;}\r\n.mat-form-field-infix {\r\ndisplay: block;\r\nposition: relative;\r\n-ms-flex: auto;\r\n    flex: auto;\r\nmin-width: 0;\r\nwidth: 180px;\r\n}\r\n\r\n\r\n\r\n.mat-form-field-infix {\r\npadding-top: 0px;\r\n}\r\n/* .mat-select-panel:not{z-index:10000000000000 !important;} */\r\n\r\n\r\nbody { \r\nfont-family: Roboto, Arial, sans-serif;\r\nmargin: 0;\r\n}\r\n\r\n.basic-container {\r\npadding: 5px;\r\n}\r\n\r\n.version-info {\r\nfont-size: 8pt;\r\nfloat: right;\r\n}\r\n.round-button{\r\nfloat:none !important;\r\n}\r\n.center-bt {\r\n  margin: 20px auto 10px auto;\r\n  float: none;\r\n}\r\n.round-button {\r\n  border-radius: 20px;\r\n  margin: 0;\r\n  float: left;\r\n  background: #f37600;\r\n  color: #fff;\r\n  padding: 7px 15px;\r\n  transition: background 2s;\r\n  margin-bottom: 15px;\r\n}\r\n.round-button:hover {\r\n  background: #ffaa05;\r\n  color: #fff;}\r\n  .fa-exclamation {\r\n    text-align: center;\r\n    font-size: 36px !important;\r\n    color: #d9534f;\r\n    border-radius: 50%;\r\n    border: 3px solid;\r\n    margin-top: 23px;\r\n    width: 60px;\r\n    height: 60px;\r\n    padding-top: 10px;\r\n}\r\nul.breadcrumb {\r\n    padding: 10px 0;\r\n    list-style: none;\r\n\r\n    text-align: left;\r\n    color: #d68956;\r\n}\r\nul.breadcrumb li {\r\n    display: inline;\r\n    font-size: 15px;\r\n}\r\nul.breadcrumb li+li:before {\r\n    padding: 8px;\r\n    color: black;\r\n    content: \"/\\A0\";\r\n}\r\nul.breadcrumb li a {\r\n    color: #bbbbbb;\r\n    text-decoration: none;\r\n}\r\nul.breadcrumb li a:hover {\r\n    color: #d68956;\r\n    text-decoration: none;\r\n\r\n}\r\n.breadcrumb{    background-color: #f6f7fa;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-my-request/user-my-request.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n      <div class=\"row display-table-row\">\r\n    \r\n          <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n               <!-- sidebar-->\r\n             \r\n               <user-sidebar></user-sidebar> \r\n               <!-- end sidebar-->\r\n          </div>\r\n          \r\n          <div class=\"col-md-12 col-xs-12\">\r\n              <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n              <!-- topbar-->\r\n              <user-topbar></user-topbar> \r\n              \r\n                  <!-- end topbar-->\r\n              \r\n              \r\n              <div class=\"user-dashboard\">\r\n                      <h2>My Request</h2>\r\n                      <ul class=\"breadcrumb\">\r\n                        <li><a href=\"#\">My Request</a></li>\r\n                        \r\n                        \r\n                        <li>Time extension Request list </li>\r\n                      </ul>\r\n                  <div class=\"row\">\r\n                    <!-----------------------------------------------------------------table-------------------------------------->\r\n \r\n<div class=\"col-md-12\">\r\n    <div class=\"row\">\r\n    <!-- <div class=\"col-md-12 preloader2\" *ngIf=\"showSpinner\" >\r\n        <div class=\"\"  >\r\n            <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n            width=\"50%\" height=\"59px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n        <path fill=\"#000\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\">\r\n          <animateTransform attributeType=\"xml\"\r\n            attributeName=\"transform\"\r\n            type=\"rotate\"\r\n            from=\"0 25 25\"\r\n            to=\"360 25 25\"\r\n            dur=\"0.6s\"\r\n            repeatCount=\"indefinite\"/>\r\n          </path>\r\n        </svg>\r\n    </div>\r\n    </div> -->\r\n    \r\n\r\n    <div class=\"col-md-12 optionz\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n              <div class=\"example-header\">\r\n                  <mat-form-field>\r\n                    <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\r\n                  </mat-form-field>\r\n                </div>\r\n          </div>\r\n \r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n       \r\n    <div class=\"example-container mat-elevation-z8 \">\r\n        <div *ngIf=\"preloader\">\r\n            <app-spinner></app-spinner>\r\n        </div>\r\n  <mat-table [dataSource]=\"dataSource\" matSort>\r\n    \r\n\r\n <!-- Name Column -->\r\n <ng-container matColumnDef=\"slno\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Sl_No </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row;let i = index\"> {{(paginator.pageIndex * paginator.pageSize) + (i+1)}} </mat-cell>\r\n  </ng-container>\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"taskname\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header>TASK NAME </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\">  {{row.tbl_project_task.task_name}}</mat-cell>\r\n    </ng-container>\r\n\r\n   <!-- Progress Column -->\r\n   <ng-container matColumnDef=\"date\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> DATE </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\"> {{row.createdAt | date:'EEE, d MMM,y'}}</mat-cell>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"time\">\r\n    <mat-header-cell *matHeaderCellDef mat-sort-header> REQUESTED TIME </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let row\">{{row.additional_hours}} Hr</mat-cell>\r\n  </ng-container>\r\n  <ng-container matColumnDef=\"status\">\r\n      <mat-header-cell *matHeaderCellDef mat-sort-header> STATUS </mat-header-cell>\r\n      <mat-cell *matCellDef=\"let row\"> {{row.req_status}}  </mat-cell>\r\n    </ng-container>\r\n\r\n\r\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n    </mat-row>\r\n  </mat-table>\r\n  <div class=\"col-md-15 \">\r\n      <!-- <div *ngIf=\"showSpinner\" class=\"deletespinner\">\r\n          <mat-spinner></mat-spinner>\r\n         </div> -->\r\n  </div>\r\n  <div class=\"col-md-12 noItemFound\" *ngIf=\"notExist\">\r\n      <div class=\"col-md-4 col-md-offset-4\">\r\n          <mat-toolbar   class=\"back-color\">No item found!</mat-toolbar>\r\n      </div>\r\n    </div>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n</div>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n\r\n                  </div>\r\n              </div>\r\n              \r\n          </div>\r\n              <!-- footer-->\r\n              <user-footer></user-footer>\r\n     <!-- end footer-->\r\n      </div>\r\n       </div>\r\n      <!-- Modal -->\r\n   </body>"

/***/ }),

/***/ "../../../../../src/app/components/user-my-request/user-my-request.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserMyRequestComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var UserMyRequestComponent = (function () {
    // ---------------------------------Start-------------------------------------------
    // Function      :  MY REQUEST
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 29-03-2018
    // Last Modified : 
    // Desc          : my request status
    function UserMyRequestComponent(userService, routes, snackBar) {
        this.userService = userService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.preloader = false;
        this.displayedColumns = ['slno', 'taskname', 'date', 'time', 'status'];
        this.notExist = false;
        this.all_value = false;
        this.showSpinner = false;
    }
    UserMyRequestComponent.prototype.refresh = function () {
        var _this = this;
        this.showSpinner = true;
        this.userService.getAllMyTimeextensionrequest().subscribe(function (data) {
            _this.preloader = false;
            console.log(data);
            _this.loadToDataTable(data);
            _this.showSpinner = false;
        });
    };
    UserMyRequestComponent.prototype.loadToDataTable = function (data) {
        this.notExist = false;
        if (data.length == 0) {
            this.notExist = true;
        }
        this.dataSource = new __WEBPACK_IMPORTED_MODULE_1__angular_material__["E" /* MatTableDataSource */](data);
        // console.log(this.dataSource);
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    UserMyRequestComponent.prototype.ngOnInit = function () {
        this.preloader = true;
        this.refresh();
    };
    UserMyRequestComponent.prototype.applyFilter = function (filterValue) {
        filterValue = filterValue.trim(); // Remove whitespace
        filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches
        this.dataSource.filter = filterValue;
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["p" /* MatPaginator */])
    ], UserMyRequestComponent.prototype, "paginator", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])(__WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */]),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_1__angular_material__["B" /* MatSort */])
    ], UserMyRequestComponent.prototype, "sort", void 0);
    UserMyRequestComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'user-my-request',
            template: __webpack_require__("../../../../../src/app/components/user-my-request/user-my-request.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-my-request/user-my-request.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_user_service__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], UserMyRequestComponent);
    return UserMyRequestComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-progress-graph/user-progress-graph.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports
exports.push([module.i, "@import url(https://fonts.googleapis.com/css?family=Open+Sans:400,600,700);", ""]);

// module
exports.push([module.i, "body {\r\n  background: white;\r\n}\r\n\r\n* {\r\n  font-family: \"Open Sans\";\r\n}\r\n\r\n#slider {\r\n  width: 75%;\r\n  margin: 2em auto 1em;\r\n}\r\n\r\n.svg-container {\r\n  /* margin: 3em auto 0; */\r\n  width: 250px;\r\n  /* height: 250px; */\r\n}\r\n\r\nsvg {\r\n  width: 100%;\r\n  height: auto;\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-progress-graph/user-progress-graph.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"svg-container\" >\r\n</div>\r\n"

/***/ }),

/***/ "../../../../../src/app/components/user-progress-graph/user-progress-graph.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserProgressGraphComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var UserProgressGraphComponent = (function () {
    function UserProgressGraphComponent() {
    }
    UserProgressGraphComponent.prototype.ngOnInit = function () { };
    UserProgressGraphComponent.prototype.ngAfterViewInit = function () {
        // console.log(this.containerId);
        var colors = {
            'pink': '#E1499A',
            'yellow': '#f0ff08',
            'green': '#47e495',
            'blue': '#4795e4',
        };
        var color = colors.blue;
        var radius = 75;
        var border = 20;
        var padding = 10;
        var startPercent = 0;
        var endPercent = this.progper / 100;
        //var endPercent = 0.85;
        var twoPi = Math.PI * 2;
        var formatPercent = d3.format('.0%');
        var boxSize = (radius + padding) * 2;
        var count = Math.abs((endPercent - startPercent) / 0.01);
        var step = endPercent < startPercent ? -0.01 : 0.01;
        var arc = d3.svg.arc()
            .startAngle(0)
            .innerRadius(radius)
            .outerRadius(radius - border);
        var parent = d3.select('div#' + this.containerId);
        var svg = parent.append('svg')
            .attr('width', boxSize)
            .attr('height', boxSize);
        var defs = svg.append('defs');
        var filter = defs.append('filter')
            .attr('id', 'blur');
        filter.append('feGaussianBlur')
            .attr('in', 'SourceGraphic')
            .attr('stdDeviation', '0');
        var g = svg.append('g')
            .attr('transform', 'translate(' + boxSize / 2 + ',' + boxSize / 2 + ')');
        var meter = g.append('g')
            .attr('class', 'progress-meter');
        meter.append('path')
            .attr('class', 'background')
            .attr('fill', '#ccc')
            .attr('fill-opacity', 0.5)
            .attr('d', arc.endAngle(twoPi));
        var foreground = meter.append('path')
            .attr('class', 'foreground')
            .attr('fill', color)
            .attr('fill-opacity', 1)
            .attr('stroke', color)
            .attr('stroke-width', 5)
            .attr('stroke-opacity', 1)
            .attr('filter', 'url(#blur)');
        var front = meter.append('path')
            .attr('class', 'foreground')
            .attr('fill', color)
            .attr('fill-opacity', 1);
        var numberText = meter.append('text')
            .attr('fill', '#000')
            .attr('text-anchor', 'middle')
            .attr('dy', '.35em');
        function updateProgress(progress) {
            foreground.attr('d', arc.endAngle(twoPi * progress));
            front.attr('d', arc.endAngle(twoPi * progress));
            numberText.text(formatPercent(progress));
        }
        var progress = startPercent;
        (function loops() {
            updateProgress(progress);
            if (count > 0) {
                count--;
                progress += step;
                setTimeout(loops, 50);
            }
        })();
        // var τ = Math.PI; // http://tauday.com/tau-manifesto
        // var arc = d3.svg.arc()
        //     .innerRadius(250)
        //     .outerRadius(0)
        //     .startAngle(0);
        // // Draw the thing!
        // drawBadge("#candidscore");
        // updateScore(60, "#candidscore");
        // // Pass DOM selector to function, set up Canvas size
        // function drawBadge(svgID) {
        //   var width = 500,
        //     height = 500,
        //     aspect = width / height;
        // // Create the SVG container, and apply a transform such that the origin is the
        // // center of the canvas. This way, we don't need to position arcs individually.
        // var svg = d3.select(svgID)
        //     .attr("preserveAspectRatio", "xMidYMid")
        //     .attr("viewBox", "0 0 500 500")
        //     .attr("width", "100%")
        //     .attr("height", "100%")
        //     .append("g")
        //     .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")")
        // // Add the background arc, from 0 to 100% (τ).
        // var background = svg.append("path")
        //     .datum({endAngle: 2*τ})
        //     .style("fill", "#f2f2f2")
        //     .attr("transform", "rotate(-90)")
        //     .attr("d", arc);
        // // Add the top arc in orange
        // var foreground_top = svg.append("path")
        //     .attr("id", "foreground_top")
        //     .datum({endAngle: 0 * τ})
        //     .style("fill", "#fab923")
        //     .attr("d", arc)
        //     .attr("transform", "rotate(-90)");
        // // Add bottom arc in orange
        // var foreground_bottom = svg.append("path")
        //     .attr("id", "foreground_bottom")
        //     .datum({endAngle: 0 * -τ })
        //     .style("fill", "#fab923")
        //     .attr("d", arc)
        //     .attr("transform", "rotate(-90)");
        // var trans_circ = svg.append("circle")
        //     .attr("cx", 0)
        //     .attr("cy", 0)
        //     .attr("r", 210)
        //     .attr("fill", "rgba(255,255,255, .25)");
        // // Create "def" element that will contain our drop shadow filter
        // var defs = svg.append("defs");
        // // Create our filter with an id of "#drop-shadow"
        // var filter = defs.append("filter")
        //   .attr("id", "drop-shadow")
        //   .attr("height", "130%");
        // // Create our Gaussian Blur with a standard deviation of 8
        // filter.append("feGaussianBlur")
        //   .attr("in", "SourceAlpha")
        //   .attr("stdDeviation", 8)
        //   .attr("result", "blur");
        // // Translate the output of Gaussian Blur to (0,0), and store result in var offsetBlur
        // filter.append("feOffset")
        //   .attr("in", "blur")
        //   .attr("dx", 0)
        //   .attr("dy", 0)
        //   .attr("result", "offsetBlur");
        // // Control the opacity of the actual drop shadow with 'feComponentTransfer and SLOPE'
        // var comptransf = filter.append("feComponentTransfer");
        // comptransf.append("feFuncA")
        //   .attr("type", "linear")
        //   .attr("slope", .2);
        // // Overlay original SourceGraphic over translated blurred opacity by using feMerge filter ***ORDER IS IMPORTANT***
        // var feMerge = filter.append("feMerge");
        // feMerge.append("feMergeNode")
        // /*	.attr("in", "offsetBlur")*/
        // feMerge.append("feMergeNode")
        //   .attr("in", "SourceGraphic");
        // var white_circ = svg.append("circle")
        //     .attr("cx", 0)
        //     .attr("cx", 0)
        //     .attr("r", 180)
        //     .attr("id", "white_circ")
        //     .style("filter", "url(#drop-shadow)")
        //     .attr("fill", "white");
        // var stroke_circ = svg.append("circle")
        //     .attr("cx", 0)
        //     .attr("cy", 0)
        //     .attr("r", 160)
        //     .attr("fill", "none")
        //     .attr("stroke", "rgba(0,0,0,.125")
        //     .attr("stroke-width", "1px");
        // var candidlogo = svg.append("g")
        // /*  .attr('transform-origin', '0 0')*/
        //   .attr("transform", "translate(-295,-285), scale(1.75)");
        //   candidlogo.append("path")
        //    .attr("d", "M134.3,233.2L134.3,233.2c0-3.3,2.6-6.2,6-6.2c2.2,0,3.6,1,4.7,2.2l-0.8,0.8c-1-1-2.2-1.9-3.9-1.9c-2.7,0-4.7,2.2-4.7,5v0c0,2.8,2.1,5.1,4.8,5.1c1.7,0,2.9-0.9,3.9-2l0.8,0.7c-1.2,1.4-2.6,2.3-4.8,2.3 C136.9,239.3,134.3,236.5,134.3,233.2z" )
        //      .attr("fill", "#A7A8AD");
        //    candidlogo.append("path")
        //         .attr("d", "M147.3,235.6L147.3,235.6c0-2.5,2.1-3.9,5.1-3.9c1.6,0,2.8,0.2,3.9,0.5v-0.5c0-2.4-1.4-3.6-3.9-3.6 c-1.4,0-2.6,0.4-3.7,0.9l-0.4-1c1.3-0.6,2.6-1,4.2-1c1.6,0,2.8,0.4,3.7,1.3c0.8,0.8,1.2,1.9,1.2,3.3v7.3h-1.1v-2 c-0.8,1.1-2.3,2.2-4.5,2.2C149.6,239.3,147.3,238,147.3,235.6z M156.3,234.6v-1.3c-1-0.3-2.3-0.5-4-0.5c-2.5,0-3.9,1.1-3.9,2.7v0 c0,1.7,1.6,2.7,3.4,2.7C154.2,238.2,156.3,236.8,156.3,234.6z" )
        //        .attr("fill", "#A7A8AD");
        //   candidlogo.append("path")
        //      .attr("d", "M161.4,227.3h1.1v2.2c0.8-1.4,2.1-2.5,4.2-2.5c3,0,4.7,2,4.7,4.8v7.2h-1.1v-7c0-2.4-1.4-4-3.7-4 c-2.3,0-4.1,1.7-4.1,4.2v6.8h-1.1V227.3z")
        //      .attr("fill", "#A7A8AD");
        //   candidlogo.append("path")
        //     .attr("d", "M174.7,233.2L174.7,233.2c0-3.9,2.9-6.2,5.7-6.2c2.3,0,3.9,1.3,4.8,2.8v-7.6h1.1V239h-1.1v-2.6 c-1,1.5-2.5,2.9-4.8,2.9C177.6,239.3,174.7,237,174.7,233.2z M185.3,233.2L185.3,233.2c0-3.1-2.3-5.1-4.8-5.1 c-2.6,0-4.6,1.9-4.6,5v0c0,3.1,2.1,5.1,4.6,5.1C183,238.2,185.3,236.2,185.3,233.2z")
        //     .attr("fill", "#A7A8AD");
        //   candidlogo.append("path")
        //     .attr("d", "M190.7,222.7h1.4v1.5h-1.4V222.7z M190.8,227.3h1.1V239h-1.1V227.3z")
        //     .attr("fill", "#A7A8AD");
        //     candidlogo.append("path")
        //     .attr("d", "M195.6,233.2L195.6,233.2c0-3.9,2.9-6.2,5.7-6.2c2.3,0,3.9,1.3,4.8,2.8v-7.6h1.1V239h-1.1v-2.6 c-1,1.5-2.5,2.9-4.8,2.9C198.5,239.3,195.6,237,195.6,233.2z M206.2,233.2L206.2,233.2c0-3.1-2.3-5.1-4.8-5.1 c-2.6,0-4.6,1.9-4.6,5v0c0,3.1,2.1,5.1,4.6,5.1C203.9,238.2,206.2,236.2,206.2,233.2z")
        //     .attr("fill", "#A7A8AD");
        // var text_score = svg.append("text")
        //   /*.text("50")*/
        //   .attr("id", "scorenum")
        //   .attr("x", 0)
        //   .attr("y", 60)
        //   .attr("font-family", "proxima nova")
        //   .attr("text-anchor", "middle")
        //   .attr("font-weight", "bold")
        //   .attr("font-size", 195)
        //   .attr("fill", "#555555");
        // }
        // function arcTween(transition, newAngle) {
        //   transition.attrTween("d", function(d) {
        //     var interpolate = d3.interpolate(d.endAngle, newAngle);
        //     return function(t) {
        //       d.endAngle = interpolate(t);
        //       return arc(d);
        //     };
        //   });
        // }
        // function updateScore(score, svgID) {
        //   console.log(score);
        //   var decimalized = score / 100.0;
        //   console.log(decimalized);
        //   var our_svg = d3.select(svgID);
        //   var foreground_top = our_svg.select("path#foreground_top");
        //   var scorenum = our_svg.select("text#scorenum");
        //   var foreground_bottom = our_svg.select("path#foreground_bottom");
        //   scorenum.text(score);
        //   foreground_top.transition()
        //       .duration(1500)
        //       .ease("elastic")
        //       .call(arcTween, decimalized * τ );
        //   foreground_bottom.transition()
        //       .duration(1500)
        //       .ease("elastic")
        //       .call(arcTween, decimalized * -τ );
        // }
    };
    UserProgressGraphComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'user-progress-graph',
            template: __webpack_require__("../../../../../src/app/components/user-progress-graph/user-progress-graph.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-progress-graph/user-progress-graph.component.css")],
            inputs: ['containerId', 'progper']
        }),
        __metadata("design:paramtypes", [])
    ], UserProgressGraphComponent);
    return UserProgressGraphComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-project-estimation/user-project-estimation.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".panel-body {\r\n    padding: 50px;\r\n}\r\n.mrg-top label{padding-top: 20px;}\r\n.round-button{\r\n    float:none !important;\r\n  }\r\n  .center-bt {\r\n      margin: 20px auto 10px auto;\r\n      float: none;\r\n  }\r\n  .no-edit{font-weight: 400 !important;}\r\n .line-breaker {\r\n    white-space: pre-line;\r\n  }\r\n  label{\r\n    font-weight: 700 !important;\r\n}\r\n\r\n  .task{background:#fbf6f1;width:100%;padding:6px 0;display: inline-block;margin-bottom:6px;}\r\n  button, input, optgroup, select, textarea{outline:none !important;}\r\n  .taskedit{border-left:1px solid #ccc;    display: inline-block;width:100%;margin-top: 5px;}\r\n  .task ul li{width:auto;float:left;padding: 8px;}\r\n      a{color:#111;}\r\n  .task h5{padding-top:13px;padding-top: 6px;}\r\n  .hash{background:#f7f6f4;}\r\n  .round-button {\r\n      border-radius: 20px;\r\n      margin: 0;\r\n      float: left;\r\n      background: #f37600;\r\n      color: #fff;\r\n      padding: 7px 15px;\r\n      transition: background 2s;\r\n      margin-bottom:15px;\r\n  }\r\n  .round-button:hover {\r\n      background: #ffaa05;\r\n      color: #fff;\r\n  }\r\n  .dropdown ul.dropdown-menu:before {\r\n      content: \"\";\r\n      border-bottom: 10px solid #fff;\r\n      border-right: 10px solid transparent;\r\n      border-left: 10px solid transparent;\r\n      position: absolute;\r\n      top: -10px;\r\n      right: 16px;\r\n      z-index: 10;\r\n  }\r\n  .round-button:hover, .round-button:focus, .round-button.focus{color:#fff;}\r\n  button, input, optgroup, select, textarea{outline:none;}\r\n  .effect-1 ~ .focus-border{position: absolute; bottom: 0; left: 15px; width: 0; height: 2px;background-color: #bba28b; transition: 0.4s;right:15px;}\r\n  .effect-1:focus ~ .focus-border{width: 95%; transition: 0.4s;}\r\n  .effect-1{border: 0; padding: 7px 0; border-bottom: 1px solid #ccc;width:100%;}\r\n  .style{width:100%;}\r\n  label{font-size:15px;color:#4a4a4a;font-weight:normal;padding:5px 0;}\r\n  .mrg-2{margin-bottom:10px;}\r\n  .dropdown-menu > li > a {\r\n      display: block;\r\n      padding: 3px 20px;\r\n      clear: both;\r\n      font-weight: normal;\r\n      line-height: 25px;\r\n      color: #333333;\r\n      white-space: nowrap;\r\n  }\r\n  .addmodule {\r\n      padding: 20px 10px!important;\r\n      min-width: 357px;\r\n      right: 0px;\r\n      left: inherit;\r\n  }\r\n  .style{border:none;border-bottom: 1px solid #ccc;}\r\n  .white {\r\n      background: #ffffff none repeat scroll 0 0;\r\n      \r\n      display: inline-block;\r\n      padding: 33px 25px;\r\n      width: 100%;\r\n  }\r\n  .btn-file{padding:0;}\r\n  .white {\r\n      background: #ffffff none repeat scroll 0 0;\r\n      \r\n      display: inline-block;\r\n      padding: 33px 25px;\r\n      width: 100%;\r\n      margin-bottom:20px;\r\n  }\r\n  .center-bt{margin:20px auto 10px auto;float:none;}\r\n  @media only screen and (max-width : 767px) {\r\n  .mrg-2 {\r\n      margin-bottom: 37px;\r\n  }\r\n  \r\n  .task ul li{    padding: 2px;}\t\r\n  .addmodule{    min-width: 274px;}\r\n  }\r\n  .round-button{float:inherit !important;}  \r\n  .right-btn{float:right !important;}\r\n\r\n\r\n .dwnload{ background: #f39f00;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  clear: left;\r\n  margin-right: 10px;\r\n}\r\n.mr-top{margin-top:20px;}\r\n.modal-content{border-radius:0;box-shadow:none;}\r\n.modal-header {\r\n    padding: 7px 15px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #da524f;\r\n}\r\n.modal-title {\r\n    margin: 0;\r\n    line-height: 26px;\r\n    font-size: 15px;\r\n    color: #fff;\r\n}\r\n.modal{top:0;}\r\n.modal-header {\r\n    padding: 10px 30px;\r\n    border-bottom: 1px solid #e5e5e5;\r\n    background: #fe6a07;\r\n  }\r\n  .modal-content{\r\n  box-shadow:none;\r\n  border-radius: 9px;\r\n  overflow: hidden;\r\n  \r\n  }\r\n  .modal-title{color:#fff;}\r\n  .modal-body{    padding:20px 30px;}\r\n  .modal-body input{border:none;}\r\n  .modal-body input{padding: 0;}\r\n  .pad-top{padding-top:20px;}\r\n  .wdth{width:100% !important;}\r\n  .brd{    border: none;\r\n    height: 54px;}\r\n    .pull-right{float:right !important;}\r\n.dis{display: -webkit-box;\r\npadding-left: 16px;\r\npadding-top: 12px;\r\n}\r\n.dis h5{padding-left: 10px;\r\n    padding-top: 0;\r\n    margin-top: 2px;}\r\n.reason{padding: 13px 23px;\r\n  \r\n    border-radius: 17px; \r\n    margin-bottom: 45px;\r\n    border: 1px solid #f376004d;}\r\n.overflows{overflow: hidden;}\r\n.line{margin-top:0;}\r\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-project-estimation/user-project-estimation.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n      <div class=\"col-md-1 col-xs-2 display-table-cell v-align box\" id=\"navigation\">\r\n        <user-sidebar></user-sidebar>\r\n      </div>\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <user-topbar></user-topbar>\r\n        <br>\r\n        <div class=\"col-md-12\">\r\n          <h2>Project Estimation</h2>\r\n        </div>\r\n        <div class=\"col-md-5 col-xs-12\">\r\n          <div class=\"panel panel-default\">\r\n            <div class=\"panel-body mrg-top\">\r\n\r\n              <!-- <h3>Project Estimation</h3> -->\r\n              <div class=\"row\">\r\n\r\n                <div class=\"col-md-4 col-xs-6\">\r\n                  <label>Project Name :</label>\r\n                </div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\">\r\n                    <label class=\"no-edit\">{{project?.project_name}}</label>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\">\r\n                  <label>Project Code :</label>\r\n                </div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\">\r\n                    <label class=\"no-edit\">{{project?.project_code}}</label>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\">\r\n                  <label>Assignee :</label>\r\n                </div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\">\r\n                    <label class=\"no-edit\">{{pm}}</label>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\">\r\n                  <label>Category :</label>\r\n                </div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\">\r\n                    <label class=\"no-edit\">{{category?.category_name}}</label>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\">\r\n                  <label>Priority :</label>\r\n                </div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\">\r\n                    <label class=\"no-edit\">{{project?.priority}}</label>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\">\r\n                  <label>Description :</label>\r\n                </div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\">\r\n                    <label class=\"no-edit\">\r\n                      {{project?.description}}\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n\r\n                <div class=\"col-md-4 col-xs-6\">\r\n                  <label>Date :</label>\r\n                </div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\">\r\n                    <label class=\"no-edit\">{{pro_date}}</label>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n                <div class=\"col-md-4 col-xs-6\"><label>Team Members :</label></div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <mat-form-field class=\"inputfileds\">\r\n                    <mat-select name='selected' multiple [(ngModel)]=\"team_member\">\r\n                      <mat-option [value]=\"members.id\" *ngFor=\"let members of team_members;\">{{members.f_name}} {{members.l_name}}</mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n                </div>\r\n                <br>\r\n\r\n\r\n                <div class=\"col-md-4 col-xs-6\">\r\n                  <label>Requirement Summary :</label>\r\n                </div>\r\n                <div class=\"col-md-7 col-xs-6\">\r\n                  <div class=\"col-md-12 col-xs-6\">\r\n                    <label class=\"no-edit\">{{project?.requirement_summary}}</label>\r\n                  </div>\r\n                </div>\r\n                <br>\r\n\r\n\r\n                <div class=\"col-md-4 col-xs-6\">\r\n                  <label>Attatchment :</label>\r\n                </div>\r\n                <div class=\"col-md-7 col-xs-6 mr-top\">\r\n                  <a data-toggle=\"tooltip\" title=\"Download\" href=\"../assets/docs/{{project?.requirement_attatchment}}\" class=\"download-link\"\r\n                    download=\"\">\r\n                    <button class=\"dwnload\">\r\n                      <i class=\"fa fa-download\"></i>\r\n                    </button>Download</a>\r\n                  <br>\r\n                </div>\r\n                <br>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-7 col-sm-12 col-xs-12 gutter\">\r\n          <div *ngFor=\"let item of previousEstimations\">\r\n            <div class=\"white\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"col-md-6\">\r\n                  <label>\r\n                    <b>{{item.team_name}}</b>\r\n                  </label>\r\n                  <div class=\"clearfix\"></div>\r\n                  <label>Team Lead : {{item.tbl_project_estimation_team.tbl_user_profile.f_name}} {{item.tbl_project_estimation_team.tbl_user_profile.l_name}}</label>\r\n                </div>\r\n                <div class=\"col-md-6 text-right\">\r\n                  Total Hours : {{item.estimation_hour}} Hrs\r\n                </div>\r\n                <br>\r\n                <div class=\"clearfix\"></div>\r\n                <br>\r\n              </div>\r\n              <div class=\"clearfix\"></div>\r\n              <div class=\"col-md-12\">\r\n                <button type=\"button\" (click)=\"expand()\" class=\"btn round-button pull-right right-btn\" data-toggle=\"collapse\" attr.data-target=\"#demo{{item.id}}\">{{labelToExpand}}</button>\r\n              </div>\r\n              <div class=\"clearfix\"></div>\r\n              <div id=\"demo{{item.id}}\" class=\"collapse\">\r\n\r\n                <form (ngSubmit)=\"copyModule()\">\r\n                  <div *ngFor=\"let modules of item.tbl_estimation_modules\">\r\n                    <div class=\"col-md-10 col-xs-12 pull-right\">\r\n                      <div class=\"task\">\r\n                        <div class=\"col-md-8 col-xs-7 dis\">\r\n                          <mat-checkbox name=\"copyModules_{{modules.id}}\" [value]=\"modules\" [(ngModel)]=\"copyModules[modules.id]\"></mat-checkbox>\r\n                          <!-- <mat-checkbox  name=\"data_{{i}}\" [(ngModel)]=\"surveyattenders[i].check\">{{data.name}}</mat-checkbox> -->\r\n                          <h5>{{modules.module_name}}</h5>\r\n                        </div>\r\n                        <div class=\"col-md-4 col-xs-5\">\r\n                          <ul class=\"taskedit\">\r\n                            <li>{{modules.module_time}} Hr</li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div *ngFor=\"let tasks of modules.tbl_estimation_tasks\">\r\n                      <div class=\"col-md-9 col-xs-12 pull-right\">\r\n                        <div class=\"task hash\">\r\n                          <div class=\"col-md-8 col-xs-7\">\r\n                            <h5>{{tasks.task_name}}</h5>\r\n                          </div>\r\n                          <div class=\"col-md-4 col-xs-5\">\r\n                            <ul class=\"taskedit\">\r\n                              <li>{{tasks.planned_hour + tasks.buffer_hour}} Hr</li>\r\n                            </ul>\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"clearfix\"></div>\r\n                  <div class=\"col-md-12\">\r\n                    <button type=\"submit\" class=\"btn round-button pull-right\">Copy Modules</button>\r\n                  </div>\r\n                </form>\r\n                <div class=\"clearfix\"></div>\r\n              </div>\r\n              <br>\r\n              <div class=\"clearfix\"></div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          <div class=\"white\">\r\n            <div class=\"col-md-12\" *ngIf=\"rejectReasonShow\">\r\n              <label class=\"pull-right reason\">Reason for rejecting the previous estimation :\r\n                <span style=\"color:#7e7d7d\"> {{reasonforReject}}</span>\r\n              </label>\r\n            </div>\r\n            <div class=\"col-md-8 mrg-2 pull-right\">\r\n\r\n              <br>\r\n              <div class=\"col-md-4\">\r\n                <label>Total Estimated Hours</label>\r\n              </div>\r\n              <div class=\"col-md-5 col-xs-5\">\r\n                <!-- <input class=\"effect-1 style\" type=\"text\" placeholder=\"44:00 Hr\"> -->\r\n                <label class=\"effect-1 style\">{{estimated_hour}} </label>\r\n                <span class=\"focus-border\"></span>\r\n              </div>\r\n              <div class=\"col-md-3 col-xs-7\" *ngIf=\"!disabled\">\r\n                <div class=\"row\">\r\n                  <button type=\"button\" class=\"btn round-button pull-right dropdown-toggle right-btn\" data-toggle=\"dropdown\">Add Module</button>\r\n\r\n                  <ul class=\"dropdown-menu addmodule\" role=\"menu\">\r\n                    <form class=\"form-horizontal\" (ngSubmit)=\"addModule()\" novalidate>\r\n                      <div class=\"col-md-8\">\r\n                        <input class=\"style\" required autofocus [(ngModel)]=\"module.name\" name=\"module\" type=\"text\" placeholder=\"Module Name\">\r\n                      </div>\r\n                      <div class=\"col-md-4\">\r\n                        <button type=\"submit\" class=\"btn round-button pull-right\">Save</button>\r\n                      </div>\r\n                    </form>\r\n                  </ul>\r\n\r\n                </div>\r\n              </div>\r\n              <br>\r\n            </div>\r\n\r\n            <div *ngFor=\"let module of modules; let i = index\">\r\n              <div class=\"col-md-10 col-xs-12 pull-right\">\r\n                <div class=\"task\">\r\n                  <div class=\"col-md-8 col-xs-7\">\r\n                    <h5 *ngIf=\"!show[i]\">{{module.name}}</h5>\r\n                    <div *ngIf=\"show[i]\">\r\n                      <form class=\"form-horizontal\" (ngSubmit)=\"editModule(i)\" novalidate>\r\n                        <div class=\"col-md-8\">\r\n                          <mat-form-field>\r\n                            <input matInput name=\"name\" autofocus [(ngModel)]=\"module.name\" required>\r\n                          </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-4\">\r\n                          <button type=\"submit\" class=\"btn round-button pull-right\">Save</button>\r\n                        </div>\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4 col-xs-5\" *ngIf=\"!show[i]\">\r\n                    <ul class=\"taskedit\">\r\n                      <li>{{module.time}} Hr</li>\r\n                      <li class=\"pull-right\">\r\n                        <a href=\"#\" data-toggle=\"modal\" data-target=\"#deleteModuleModal\" (click)=\"getId(i)\" data-backdrop=\"static\" data-keyboard=\"false\">\r\n                          <i class=\"fa fa-close\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                      </li>\r\n                      <li class=\"pull-right\">\r\n                        <a>\r\n                          <i (click)=\"editModules(i)\" class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div *ngFor=\"let task of module.tasks; let j = index\">\r\n                <div class=\"col-md-9 col-xs-12 pull-right\">\r\n                  <div class=\"task hash\">\r\n                    <div class=\"col-md-8 col-xs-7\">\r\n                      <h5>{{task.name}}</h5>\r\n                    </div>\r\n                    <div class=\"col-md-4 col-xs-5\">\r\n                      <ul class=\"taskedit\">\r\n                        <li>{{task.planned_hour + task.buffer_time}} Hr</li>\r\n                        <li class=\"pull-right\">\r\n                          <a href=\"#\" data-toggle=\"modal\" data-target=\"#deleteTaskModal\" (click)=\"getId1(i,j)\" data-backdrop=\"static\" data-keyboard=\"false\">\r\n                            <i class=\"fa fa-close\" aria-hidden=\"true\"></i>\r\n                          </a>\r\n                        </li>\r\n                        <li class=\"pull-right\">\r\n                          <a href=\"#\" data-toggle=\"modal\" data-target=\"#editTaskModal\" (click)=\"getId1(i,j)\">\r\n                            <i class=\"fa fa-pencil\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\"></i>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div class=\"clearfix\"></div>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"clearfix\"></div>\r\n              <div class=\"col-md-12\">\r\n                <button type=\"button\" *ngIf=\"!disabled\" (click)=\"getId(i)\" data-toggle=\"modal\" data-target=\"#addTaskModal\" class=\"btn round-button pull-right right-btn\"\r\n                  data-backdrop=\"static\" data-keyboard=\"false\">Add Task</button>\r\n              </div>\r\n            </div>\r\n            <!-- --------------------------------------------- add task modal ----------------------------------------------------------------- -->\r\n            <div id=\"addTaskModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn1>&times;</button>\r\n                    <h4 class=\"modal-title\">Add Task </h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"addTask(index);\" novalidate>\r\n\r\n                      <div>\r\n                        <div class=\"example-container\">\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <label class=\"pad-top\">Task Name* :</label>\r\n                          </div>\r\n                          <div class=\"col-md-7 col-xs-6\">\r\n                            <mat-form-field>\r\n                              <input matInput name=\"name\" autofocus [(ngModel)]=\"task.name\" required>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <br>\r\n\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <label class=\"pad-top\">Planned Hours* :</label>\r\n                          </div>\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput name=\"planned_hour\" min=\"0\" [(ngModel)]=\"task.planned_hour\" (keypress)=\"_keyPress($event)\"\r\n                                required>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <label class=\"pad-top\">Buffer Time* :</label>\r\n                          </div>\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n\r\n                            <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput name=\"buffer_time\" min=\"0\" [(ngModel)]=\"task.buffer_time\" (keypress)=\"_keyPress($event)\" required>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <label class=\"pad-top\">Verification Hour* :</label>\r\n                          </div>\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput name=\"verification_hour\" min=\"0\" [(ngModel)]=\"task.verification_hour\" (keypress)=\"_keyPress($event)\"\r\n                                required>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <label class=\"pad-top\">Description* :</label>\r\n                          </div>\r\n                          <div class=\"col-md-7 col-xs-6\">\r\n                            <mat-form-field class=\"wdth\">\r\n                              <!-- <mat-select name=\"description\" [(ngModel)]=\"task.description\" required>\r\n                                <mat-option value=\"Billable\">Billable</mat-option>\r\n                                <mat-option value=\"Non-billable\">Non-billable</mat-option>\r\n                              </mat-select> -->\r\n                              <textarea matInput [(ngModel)]=\"task.description\" name=\"description\" required matAutosizeMinRows=\"3\" class=\"brd\" matAutosizeMaxRows=\"6\"></textarea>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <br>\r\n\r\n                        </div>\r\n                      </div>\r\n                      <br>\r\n\r\n                      <div class=\"\">\r\n                        <div class=\"col-md-12\">\r\n                          <button type=\"submit\" class=\"btn round-button right-btn\">Submit</button>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </form>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n            <!-- ----------------------------------------------------------------------add task modal------------------------------------------------------------------\r\n           \r\n              <!-- --------------------------------------------- delete module modal ----------------------------------------------------------------- -->\r\n            <div id=\"deleteModuleModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">Delete </h4>\r\n                  </div>\r\n                  <!-- <div class=\"modal-header\"> -->\r\n                  <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n                  <!-- </div> -->\r\n                  <div class=\"modal-body delete-popup\">\r\n                    <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n                    <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n                  </div>\r\n\r\n                  <div class=\"modal-footer\" style=\"text-align:center;\">\r\n                    <button type=\"button\" (click)=\"deleteModule(index)\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Delete</button>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <!-- ----------------------------------------------------------------------delete module modal--------------------------------------------------------------------- -->\r\n\r\n            <!-- --------------------------------------------- delete task modal ----------------------------------------------------------------- -->\r\n            <div id=\"deleteTaskModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n\r\n                <!-- Modal content-->\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">Delete </h4>\r\n                  </div>\r\n                  <!-- <div class=\"modal-header\"> -->\r\n                  <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n                  <!-- </div> -->\r\n                  <div class=\"modal-body delete-popup\">\r\n                    <i class=\"fa fa-exclamation\"></i>\r\n\r\n\r\n                    <h4 class=\"textalign\">Are you sure?</h4>\r\n\r\n                  </div>\r\n\r\n                  <div class=\"modal-footer\" style=\"text-align:center;\">\r\n                    <button type=\"button\" (click)=\"deleteTask(i,j)\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Delete</button>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <!-- ----------------------------------------------------------------------delete task modal--------------------------------------------------------------------- -->\r\n\r\n            <!-- --------------------------------------------- edit task modal ----------------------------------------------------------------- -->\r\n            <div id=\"editTaskModal\" class=\"modal fade\" role=\"dialog\">\r\n              <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                  <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn2></button>\r\n                    <h4 class=\"modal-title\">Edit Task </h4>\r\n                  </div>\r\n                  <div class=\"modal-body\">\r\n                    <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"editTask(i, j);\" novalidate>\r\n\r\n                      <div>\r\n                        <div class=\"example-container\">\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <label class=\"pad-top\">Task Name :</label>\r\n                          </div>\r\n                          <div class=\"col-md-7 col-xs-6\">\r\n                            <mat-form-field>\r\n                              <input matInput name=\"name\" autofocus [(ngModel)]=\"selectedTask.name\" required>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <br>\r\n\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <label class=\"pad-top\">Planned Hours:</label>\r\n                          </div>\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput name=\"planned_hour\" min=\"0\" [(ngModel)]=\"selectedTask.planned_hour\" required>\r\n                            </mat-form-field>\r\n                          </div>\r\n\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <label class=\"pad-top\">Buffer Time :</label>\r\n                          </div>\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput name=\"buffer_time\" min=\"0\" [(ngModel)]=\"selectedTask.buffer_time\" required>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <label class=\"pad-top\">Verification Hour* :</label>\r\n                          </div>\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput name=\"verification_hour\" min=\"0\" [(ngModel)]=\"selectedTask.verification_hour\" (keypress)=\"_keyPress($event)\"\r\n                                required>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <label class=\"pad-top\">Description :</label>\r\n                          </div>\r\n                          <div class=\"col-md-7 col-xs-6\">\r\n                            <mat-form-field class=\"wdth\">\r\n                              <!-- <mat-select name=\"description\" [(ngModel)]=\"task.description\" required>\r\n                              <mat-option value=\"Billable\">Billable</mat-option>\r\n                              <mat-option value=\"Non-billable\">Non-billable</mat-option>\r\n                            </mat-select> -->\r\n                              <textarea matInput [(ngModel)]=\"selectedTask.description\" name=\"description\" required matAutosizeMinRows=\"3\" class=\"brd\"\r\n                                matAutosizeMaxRows=\"6\"></textarea>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <br>\r\n\r\n                        </div>\r\n                      </div>\r\n                      <br>\r\n\r\n                      <div class=\"\">\r\n                        <div class=\"col-md-12\">\r\n                          <button type=\"submit\" class=\"btn round-button right-btn\">Submit</button>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </form>\r\n                  </div>\r\n                  <div class=\"modal-footer\">\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <!-- ----------------------------------------------------------------------edit task modal------------------------------------------------------------------ -->\r\n\r\n            <div class=\"clearfix\"></div>\r\n            <div class=\"pull-right\">\r\n              <div class=\"col-md-6\">\r\n                <label>Time taken for estimation:</label>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                <!-- <input class=\"effect-1 style\" type=\"text\" placeholder=\"44:00 Hr\"> -->\r\n                <mat-form-field>\r\n                  <input type=\"number\" matInput name=\"time_for_estimation\" min=\"0\" [(ngModel)]=\"time_for_estimation\" required>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"clearfix\"></div>\r\n            <div class=\"\">\r\n              <div class=\"col-md-12\">\r\n                <button type=\"submit\" *ngIf=\"!disabled\" [disabled]=\"estimateProject\" (click)=\"estimate()\" class=\"btn round-button pull-right right-btn\">Submit</button>\r\n                <div *ngIf=\"estimateSpinner\">\r\n                  <app-spinner></app-spinner>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/user-project-estimation/user-project-estimation.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserProjectEstimationComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_forms__ = __webpack_require__("../../../forms/esm5/forms.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var UserProjectEstimationComponent = (function () {
    function UserProjectEstimationComponent(userService, route, router, snackBar, companyService, routes, _formBuilder) {
        var _this = this;
        this.userService = userService;
        this.route = route;
        this.router = router;
        this.snackBar = snackBar;
        this.companyService = companyService;
        this.routes = routes;
        this._formBuilder = _formBuilder;
        this.estimateProject = false;
        this.estimateSpinner = false;
        this.teamhead = [];
        this.team_member = [];
        this.modules = [];
        this.isError = false;
        this.estimated_hour = 0;
        this.module = {
            name: '',
            time: 0,
            tasks: [],
        };
        this.task = {
            name: '',
            planned_hour: 0,
            buffer_time: 0,
            verification_hour: 0,
            description: '',
        };
        this.datafromForm = {
            project_id: '',
            team_id: '',
            modules: [],
            team_member: [],
            estimated_hour: 0,
            notif_id: '',
            time_for_estimation: 0
        };
        this.selectedTask = {
            name: '',
            planned_hour: 0,
            buffer_time: 0,
            verification_hour: 0,
            description: '',
        };
        this.show = [];
        this.disabled = false;
        this.previousEstimations = [];
        this.selected = [];
        this.copyModules = [];
        this.copiedModules = [];
        this.btnDisabled = false;
        this.rejectReasonShow = false;
        // override the route reuse strategy
        this.router.routeReuseStrategy.shouldReuseRoute = function () {
            return false;
        };
        this.router.events.subscribe(function (evt) {
            if (evt instanceof __WEBPACK_IMPORTED_MODULE_4__angular_router__["NavigationEnd"]) {
                // trick the Router into believing it's last link wasn't previously loaded
                _this.router.navigated = false;
                // if you need to scroll back to top, here is the right place
                window.scrollTo(0, 0);
            }
        });
        this.filesToUpload = [];
    }
    UserProjectEstimationComponent.prototype.ngOnInit = function () {
        var _this = this;
        console.log("ngoninit");
        this.labelToExpand = "View More";
        // ---------------------------------Start-------------------------------------------
        // Function      : Get logged in entity
        // Params        : 
        // Returns       : Get logged in entity
        // Author        : Rinsha
        // Date          : 08-03-2018
        // Last Modified : 08-03-2018, Rinsha
        // Desc          :  
        this.companyService.getLoggedinEntity().subscribe(function (data) {
            _this.entity = data;
        });
        // -----------------------------------End------------------------------------------
        this.sub = this.route.params.subscribe(function (params) {
            _this.p_id = params['id1'];
            _this.notif_id = params['id2'];
            // ---------------------------------Start-------------------------------------------
            // Function      : get notif by id
            // Params        : id
            // Returns       : notification
            // Author        : Rinsha
            // Date          : 14-03-2018
            // Last Modified : 14-03-2018, Rinsha
            // Desc          : check whether the logged in member is the suitable person to estimate
            _this.userService.getNotif(_this.notif_id).subscribe(function (notif) {
                if (notif.success == false) {
                    var snackBarRef = _this.snackBar.open(notif.msg, '', {
                        duration: 2000
                    });
                    _this.routes.navigate(['/user-dashboard']);
                }
            });
            // ---------------------------------End-------------------------------------------
            // ---------------------------------Start-------------------------------------------
            // Function      : getCurrentEstimation
            // Params        : notification id
            // Returns       : estimation
            // Author        : Rinsha
            // Date          : 15-03-2018
            // Last Modified : 15-03-2018, Rinsha
            // Desc          : get Current Estimation from notification id
            _this.userService.getCurrentEstimation(_this.notif_id).subscribe(function (est) {
                console.log(est);
                if (!est || est == [] || est == null || est == '' || est.data == null) {
                }
                else {
                    if (est.data.time_tacken_for_estimation) {
                        _this.time_for_estimation = est.data.time_tacken_for_estimation;
                    }
                    _this.team_member = [];
                    est.team_members.forEach(function (mbr) {
                        _this.team_member.push(mbr.user_profile_id);
                    });
                    _this.rejectReasonShow = false;
                    _this.reasonforReject = "";
                    // console.log(est);
                    if (est.data !== null) {
                        // then it is resubmitted estimation
                        if (est.data.reason != '') {
                            _this.rejectReasonShow = true;
                            _this.reasonforReject = est.data.reason;
                        }
                        else {
                            _this.rejectReasonShow = false;
                            _this.reasonforReject = "";
                        }
                        _this.modules = [];
                        _this.module = {
                            name: '',
                            time: 0,
                            tasks: [],
                        };
                        _this.task = {
                            name: '',
                            planned_hour: 0,
                            buffer_time: 0,
                            verification_hour: 0,
                            description: '',
                        };
                        _this.estimated_hour = 0;
                        est.data.tbl_estimation_modules.forEach(function (estimatedModule) {
                            _this.module.name = estimatedModule.module_name;
                            _this.module.tasks = [];
                            estimatedModule.tbl_estimation_tasks.forEach(function (estimatedTask) {
                                _this.task = {
                                    name: estimatedTask.task_name,
                                    planned_hour: estimatedTask.planned_hour,
                                    buffer_time: estimatedTask.buffer_hour,
                                    verification_hour: estimatedTask.verification_hour,
                                    description: estimatedTask.description,
                                };
                                _this.module.tasks.push(_this.task);
                                _this.module.time = _this.module.time + _this.task.planned_hour + _this.task.buffer_time;
                                _this.estimated_hour = _this.estimated_hour + _this.task.planned_hour + _this.task.buffer_time;
                            });
                            _this.modules.push(_this.module);
                            // console.log(estimatedModule)
                            _this.module = {
                                name: '',
                                time: 0,
                                tasks: [],
                            };
                            _this.task = {
                                name: '',
                                planned_hour: 0,
                                buffer_time: 0,
                                verification_hour: 0,
                                description: '',
                            };
                        });
                    }
                    else {
                        _this.modules = [];
                        _this.estimated_hour = 0;
                    }
                }
                // console.log(this.modules);
            });
            // ---------------------------------End-------------------------------------------
            // ---------------------------------Start-------------------------------------------
            // Function      : get project by id
            // Params        : id
            // Returns       : project
            // Author        : Rinsha
            // Date          : 08-03-2018
            // Last Modified : 08-03-2018, Rinsha
            // Desc          : getProject
            _this.companyService.getProject(_this.p_id).subscribe(function (res1) {
                console.log("fffffff");
                _this.project = [];
                _this.project = res1;
                _this.pro_date = _this.project.createdAt.substring(0, 10);
                _this.category_id = _this.project.category_id;
                _this.pm_id = _this.project.pm_id;
                // ---------------------------------Start-------------------------------------------
                // Function      : get category by id
                // Params        : id
                // Returns       : category
                // Author        : Rinsha
                // Date          : 08-03-2018
                // Last Modified : 08-03-2018, Rinsha
                // Desc          : getCategoryById
                _this.companyService.getCategoryById(_this.category_id).subscribe(function (res2) {
                    _this.category = res2;
                });
                // ---------------------------------End-------------------------------------------
                // ---------------------------------Start-------------------------------------------
                // Function      : get pm by id
                // Params        : login id
                // Returns       : user info
                // Author        : Rinsha
                // Date          : 13-03-2018
                // Last Modified : 13-03-2018, Rinsha
                // Desc          : getPmByLoginid
                _this.userService.getPmByLoginid(_this.pm_id).subscribe(function (res3) {
                    _this.pm = res3;
                });
                // ---------------------------------End-------------------------------------------
            });
            // ---------------------------------End-------------------------------------------
            // ---------------------------------Start-------------------------------------------
            // Function      : getTeamMembers
            // Params        : login id, project id
            // Returns       : team members
            // Author        : Rinsha
            // Date          : 13-03-2018
            // Last Modified : 13-03-2018, Rinsha
            // Desc          :  Find user profile id of head from tbl_user_profie using login id. Then find the team id from tbl_estimation_teams using head id. Then team members from tbl_team_assocs. 
            _this.userService.getTeamMembers(_this.p_id).subscribe(function (data1) {
                _this.team_members = data1.slice(0, data1.length - 1);
                _this.team_id = data1[data1.length - 1].team_id;
            });
            // -----------------------------------End------------------------------------------
            _this.getPreviousEstimations();
        });
    };
    UserProjectEstimationComponent.prototype.addModule = function () {
        // console.log(this.module.name);
        if (this.module.name == '') {
            var snackBarRef = this.snackBar.open("Module Name cannot be blank", '', {
                duration: 2000
            });
        }
        else {
            this.modules.push(this.module);
            this.module = {
                name: '',
                time: 0,
                tasks: [],
            };
        }
    };
    UserProjectEstimationComponent.prototype.getId = function (index) {
        // console.log(index);
        this.index = index;
    };
    UserProjectEstimationComponent.prototype.addTask = function (index) {
        // console.log(this.task);
        if (this.task.name == '' || this.task.planned_hour == 0 || this.task.description == '') {
            var snackBarRef = this.snackBar.open("All fields are required", '', {
                duration: 2000
            });
        }
        else {
            this.modules[index].tasks.push(this.task);
            this.modules[index].time = this.modules[index].time + this.task.planned_hour + this.task.buffer_time;
            this.estimated_hour = this.estimated_hour + this.task.planned_hour + this.task.buffer_time;
            // this.module_time = this.module_time + this.task.planned_hour + this.task.buffer_time;
            // console.log(index);
            // console.log("module time:"+this.modules[index].time);
            // console.log("estimated time:"+this.estimated_hour);
            this.task = {
                name: '',
                planned_hour: 0,
                buffer_time: 0,
                verification_hour: 0,
                description: '',
            };
            this.closeBtn1.nativeElement.click();
        }
    };
    UserProjectEstimationComponent.prototype.estimate = function () {
        var _this = this;
        console.log(this.time_for_estimation);
        this.estimateProject = true;
        this.estimateSpinner = true;
        this.btnDisabled = true;
        this.isError = false;
        // if (this.team_members && this.team_members.length != 0 && this.team_member.length == 0) {
        //   this.isError = true;
        //   let snackBarRef = this.snackBar.open("Please select members on your team!", '', {
        //     duration: 2000
        //   });
        //   this.estimateProject =false;
        //   this.estimateSpinner =false;
        //   this.btnDisabled = false;
        // }
        // else 
        if (this.time_for_estimation == 0 || this.time_for_estimation == undefined) {
            var snackBarRef = this.snackBar.open("Time tacken for estimation is required!", '', {
                duration: 2000
            });
            this.estimateProject = false;
            this.estimateSpinner = false;
            this.btnDisabled = false;
        }
        else if (this.modules.length == 0) {
            this.isError = true;
            var snackBarRef = this.snackBar.open("Atleast one module is required!", '', {
                duration: 2000
            });
            this.estimateProject = false;
            this.estimateSpinner = false;
            this.btnDisabled = false;
        }
        else {
            this.modules.forEach(function (element) {
                if (element.tasks.length == 0) {
                    _this.isError = true;
                    var snackBarRef = _this.snackBar.open("Each module should contain atleast one task!", '', {
                        duration: 3000
                    });
                    _this.estimateProject = false;
                    _this.estimateSpinner = false;
                    _this.btnDisabled = false;
                }
            });
        }
        if (this.isError == false) {
            this.datafromForm = {
                project_id: this.p_id,
                team_id: this.team_id,
                modules: this.modules,
                team_member: this.team_member,
                estimated_hour: this.estimated_hour,
                notif_id: this.notif_id,
                time_for_estimation: this.time_for_estimation
            };
            // console.log(this.datafromForm);
            // ---------------------------------Start-------------------------------------------
            // Function      : add estimation
            // Params        : data from form
            // Returns       : 
            // Author        : Rinsha
            // Date          : 13-03-2018
            // Last Modified : 13-03-2018, Rinsha
            // Desc          :  
            this.userService.addEstimation(this.datafromForm).subscribe(function (data) {
                _this.estimateProject = false;
                _this.estimateSpinner = false;
                // console.log(data)
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 4000
                });
                if (data.success == true) {
                    _this.routes.navigate(['/user-dashboard']);
                }
            });
            // -----------------------------------End------------------------------------------
        }
    };
    UserProjectEstimationComponent.prototype.deleteModule = function (i) {
        this.estimated_hour = this.estimated_hour - this.modules[i].time;
        this.modules.splice(i, 1);
    };
    UserProjectEstimationComponent.prototype.getId1 = function (i, j) {
        this.i = i;
        this.j = j;
        this.selectedTask = this.modules[i].tasks[j];
        this.modules[i].time = this.modules[i].time - this.modules[i].tasks[j].planned_hour - this.modules[i].tasks[j].buffer_time;
        this.estimated_hour = this.estimated_hour - this.modules[i].tasks[j].planned_hour - this.modules[i].tasks[j].buffer_time;
    };
    UserProjectEstimationComponent.prototype.deleteTask = function (i, j) {
        this.modules[i].tasks.splice(j, 1);
    };
    UserProjectEstimationComponent.prototype.editTask = function (i, j) {
        // console.log(this.modules[i].tasks[j]);
        if (this.selectedTask.name == '' || this.selectedTask.planned_hour == 0 || this.selectedTask.description == '') {
            var snackBarRef = this.snackBar.open("All fields are required", '', {
                duration: 2000
            });
        }
        else {
            this.modules[i].tasks[j] = this.selectedTask;
            this.modules[i].time = this.modules[i].time + this.selectedTask.planned_hour + this.selectedTask.buffer_time;
            this.estimated_hour = this.estimated_hour + this.selectedTask.planned_hour + this.selectedTask.buffer_time;
            this.closeBtn2.nativeElement.click();
        }
    };
    UserProjectEstimationComponent.prototype.editModules = function (i) {
        this.show[i] = true;
        this.disabled = true;
    };
    UserProjectEstimationComponent.prototype.editModule = function (i) {
        this.show[i] = false;
        this.disabled = false;
    };
    UserProjectEstimationComponent.prototype.getPreviousEstimations = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getProjectstimations
        // Params        : project id
        // Returns       : estimations
        // Author        : Rinsha
        // Date          : 15-03-2018
        // Last Modified : 15-03-2018, Rinsha
        // Desc          :
        this.companyService.getProjectstimations(this.p_id).subscribe(function (esti) {
            _this.previousEstimations = [];
            _this.previousEstimations = esti;
            _this.previousEstimations.forEach(function (element) {
                if (element.tbl_project_estimation_team.team_id == 1) {
                    _this.team_name = "Developer";
                }
                else if (element.tbl_project_estimation_team.team_id == 2) {
                    _this.team_name = "Designer";
                }
                else if (element.tbl_project_estimation_team.team_id == 3) {
                    _this.team_name = "QC";
                }
                element.team_name = _this.team_name;
                element.tbl_estimation_modules.forEach(function (modules) {
                    _this.task_time = 0;
                    modules.tbl_estimation_tasks.forEach(function (tasks) {
                        _this.task_time = _this.task_time + tasks.planned_hour + tasks.buffer_hour;
                    });
                    modules.module_time = _this.task_time;
                });
            });
        });
        console.log(this.previousEstimations);
        // console.log(this.previousEstimations);
        // console.log("this")
    };
    UserProjectEstimationComponent.prototype.copyModule = function () {
        var _this = this;
        // console.log(this.copyModules)
        this.copyModules.forEach(function (key, module_id) {
            if (key == true) {
                // console.log("value:" + module_id)
                _this.previousEstimations.forEach(function (est) {
                    est.tbl_estimation_modules.forEach(function (module) {
                        if (module.id == module_id) {
                            _this.module.time = 0;
                            // this.estimated_hour = 0;
                            _this.copiedModules = module;
                            _this.module.name = module.module_name;
                            module.tbl_estimation_tasks.forEach(function (task) {
                                _this.task = {
                                    name: task.task_name,
                                    planned_hour: task.planned_hour,
                                    buffer_time: task.buffer_hour,
                                    verification_hour: task.verification_hour,
                                    description: task.description,
                                };
                                _this.module.time = _this.module.time + task.planned_hour + task.buffer_hour;
                                // this.estimated_hour = this.estimated_hour + this.module.time;
                                _this.module.tasks.push(_this.task);
                                _this.task = {
                                    name: '',
                                    planned_hour: 0,
                                    buffer_time: 0,
                                    verification_hour: 0,
                                    description: '',
                                };
                            });
                            _this.estimated_hour = _this.estimated_hour + _this.module.time;
                            _this.modules.push(_this.module);
                            var snackBarRef = _this.snackBar.open("Copied", '', {
                                duration: 2000
                            });
                            _this.module = {
                                name: '',
                                time: 0,
                                tasks: [],
                            };
                        }
                    });
                });
            }
        });
        this.copyModules = [];
        // console.log(this.copiedModules);
    };
    UserProjectEstimationComponent.prototype.expand = function () {
        if (this.labelToExpand == "View Less") {
            this.labelToExpand = "View More";
        }
        else {
            this.labelToExpand = "View Less";
        }
    };
    UserProjectEstimationComponent.prototype._keyPress = function (event) {
        var pattern = /[0-9/ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (!pattern.test(inputChar) && event.charCode != 0) {
            // invalid character, prevent input
            event.preventDefault();
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn1'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], UserProjectEstimationComponent.prototype, "closeBtn1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn2'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], UserProjectEstimationComponent.prototype, "closeBtn2", void 0);
    UserProjectEstimationComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-user-project-estimation',
            template: __webpack_require__("../../../../../src/app/components/user-project-estimation/user-project-estimation.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-project-estimation/user-project-estimation.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_3__services_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_4__angular_router__["ActivatedRoute"], __WEBPACK_IMPORTED_MODULE_4__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_5__angular_material__["z" /* MatSnackBar */], __WEBPACK_IMPORTED_MODULE_2__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_4__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_1__angular_forms__["FormBuilder"]])
    ], UserProjectEstimationComponent);
    return UserProjectEstimationComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-projects/user-projects.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".pro-container{\r\n    box-shadow: 0px 0px 18px -1px #ccc;\r\n    min-height: 277px;\r\n    padding: 40px;\r\n    margin-bottom: 35px;\r\n}\r\n.viw-btn{\r\n    background: #fe6a07 none repeat scroll 0 0;\r\n    border-radius: 100px;\r\n    color: #ffffff;\r\n    font-size: 14px;\r\n    font-weight: normal;\r\n    padding: 10px 27px 10px 27px;\r\n    border: none\r\n}\r\n.loader-cont{\r\n    position: absolute;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    top: 47%;\r\n\r\n}\r\n#no-projects{\r\n    font-size: 30px;\r\n    text-transform: uppercase;\r\n    font-weight: 800;\r\n    color: #ccc;\r\n    margin: 128px 0;\r\n}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-projects/user-projects.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n\r\n      <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n        <!-- sidebar-->\r\n\r\n        <user-sidebar></user-sidebar>\r\n        <!-- end sidebar-->\r\n      </div>\r\n\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n        <!-- topbar-->\r\n        <user-topbar></user-topbar>\r\n        <!-- end topbar-->\r\n\r\n\r\n        <div class=\"user-dashboard\">\r\n          <!-- <h1>Hello, JS</h1> -->\r\n          <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                        <h2 _ngcontent-c14=\"\">Projects</h2>\r\n                        <ul _ngcontent-c14=\"\" class=\"breadcrumb\">\r\n                          <li _ngcontent-c14=\"\"><a _ngcontent-c14=\"\" href=\"#\">Dashboard</a></li>\r\n                          \r\n                          \r\n                          <li _ngcontent-c14=\"\">Projects</li>\r\n                        </ul>\r\n                    </div>\r\n            <div class=\"col-md-12 col-sm-12 col-xs-12 gutter \">\r\n              <div class=\"white\" >\r\n                  <div class=\"col-md-12\" *ngIf=\"showxData\">\r\n                      <div class=\"col-md-4\">\r\n                          <mat-form-field>\r\n                              <mat-select placeholder=\"Status\" (change)=\"getProjects()\" [(value)]=\"statusSelected\">\r\n                                  <mat-option [value]=\"'All'\" >\r\n                                      All\r\n                                  </mat-option>\r\n                                <mat-option [value]=\"'Drafted'\" >\r\n                                    Drafted\r\n                                </mat-option>\r\n                                <mat-option  [value]=\"'In Progress'\">\r\n                                    In Progress\r\n                                </mat-option>\r\n                                <mat-option  [value]=\"'Planned'\">\r\n                                    Planned\r\n                                </mat-option>\r\n                                <mat-option  [value]=\"'Completed'\">\r\n                                    Completed\r\n                                </mat-option>\r\n                                <mat-option  [value]=\"'Cancelled'\">\r\n                                    Cancelled\r\n                                </mat-option>\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                      </div>\r\n                      <div class=\"col-md-4\" >\r\n                        <mat-form-field>\r\n                            <mat-select placeholder=\"Projects\" (change)=\"getSelectedProjects()\" [(ngModel)]=\"ProjectSelected\">\r\n                                <mat-option [value]=\"'All'\" >\r\n                                    All\r\n                                </mat-option>\r\n                                <mat-option [value]=\"item.id\" *ngFor=\"let item of proSelector    \">\r\n                                    {{item?.project_name}}\r\n                                </mat-option>\r\n                            \r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                            \r\n                      </div>\r\n\r\n                      <div class=\"col-md-4\" >\r\n                        <mat-form-field class=\"example-full-width\">\r\n                            <input matInput placeholder=\"Filter\" value=\"\" [(ngModel)]=\"searchTerm\">\r\n                          </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                <div class=\"text-center loader-cont\">\r\n                  <app-spinner *ngIf=\"spinner\"></app-spinner>\r\n\r\n                </div>\r\n                <div class=\"col-md-12\" *ngIf=\"!noItems else noDisp\">\r\n                    <ng-container *ngFor=\"let i of projects | project:searchTerm\">\r\n                  \r\n                        <div class=\"col-md-3  text-center\"  >\r\n                            <div class=\"pro-container\">\r\n                                <h4 ><strong>{{i?.project_name}}</strong></h4>\r\n                                <p>{{i?.project_code}}</p>\r\n                                <p >Status: <span>{{i?.status}}</span></p>\r\n                                <p >Planned Start Date: <span>{{i?.planned_start_date |date: 'yyyy-MM-dd HH:mm a'}}</span></p>\r\n                                <p >Planned End Date: <span>{{i?.planned_end_date | date: 'yyyy-MM-dd HH:mm a'}}</span></p>\r\n                                <p >Description: <span>{{i?.description }}</span></p>\r\n                                <button class=\"viw-btn\" (click)=\"viewProject(i.id)\">View More</button>\r\n                                <ng-template #noDate><span [innerHTML]=\"text\"></span>-</ng-template>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    \r\n                  \r\n                  </ng-container>\r\n                </div>\r\n               <ng-template #noDisp>\r\n                   <!-- <div class=\"clear-fix\"></div> -->\r\n                    <div class=\"col-md-12 text-center\">\r\n                        <h4 class=\"text-center\" id=\"no-projects\">No Projects</h4>\r\n                    </div>\r\n               </ng-template>\r\n              </div>\r\n              <!--white-->\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <!-- footer-->\r\n        <!-- <admin-footer></admin-footer> -->\r\n        <!-- end footer-->\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- Modal -->\r\n\r\n\r\n\r\n\r\n  <!--delete modal------>\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/user-projects/user-projects.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserProjectsComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var UserProjectsComponent = (function () {
    function UserProjectsComponent(userService, routes, snackBar) {
        this.userService = userService;
        this.routes = routes;
        this.snackBar = snackBar;
        this.spinner = false;
        this.text = "&nbsp;&nbsp;";
        this.statusSelected = 'All';
        this.showData = false;
        this.showxData = false;
        this.noItems = false;
        this.ProjectSelected = '';
    }
    UserProjectsComponent.prototype.ngOnInit = function () {
        this.getUserProjects();
    };
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Manu Prasad 
    // Desc          : Get Teams from database
    UserProjectsComponent.prototype.getUserProjects = function () {
        var _this = this;
        this.spinner = true;
        this.ProjectSelected = 'All';
        // console.log(this.ProjectSelected);
        this.userService.getUserProjects().subscribe(function (resProjects) {
            console.log(resProjects);
            _this.projects = resProjects;
            // if(resProjects[0].tbl_project_member_assocs.length>0){
            if (resProjects) {
                if (resProjects.length > 0) {
                    _this.noItems = false;
                    _this.showxData = true;
                    _this.spinner = false;
                    _this.proSelector = resProjects;
                    // this.proCheckbox = resProjects[0].tbl_project_member_assocs;
                }
                else {
                    _this.noItems = true;
                    _this.showxData = true;
                    _this.spinner = false;
                }
            }
            // console.log(resProjects)
        });
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Manu Prasad 
    // Desc          : Get Teams from database
    UserProjectsComponent.prototype.viewProject = function (id) {
        // console.log("dsa");
        this.routes.navigate(['/user-view-project', id]);
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Manu Prasad 
    // Desc          : Get Teams from database
    UserProjectsComponent.prototype.setDate = function (date1) {
        if (date1) {
            var time = date1.split(':');
            // this.routes.navigate(['/user-view-project', id])
            // console.log(date)
            var xdate = time[0];
            var actualDate = xdate.split('T');
            return actualDate[0];
        }
        else {
            return '';
        }
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Manu Prasad 
    // Desc          : Get Teams from database
    UserProjectsComponent.prototype.getProjects = function () {
        var _this = this;
        this.spinner = true;
        // this.showxData = false;  
        // console.log(this.statusSelected)
        if (this.statusSelected == 'All') {
            this.ProjectSelected = 'All';
            // console.log(this.ProjectSelected)
            this.getUserProjects();
        }
        else {
            this.userService.getUserProjectsOnStatus(this.statusSelected).subscribe(function (resProjects) {
                console.log(resProjects);
                if (resProjects.status == 0) {
                    _this.noItems = true;
                    _this.projects = [];
                    _this.proSelector = [];
                    // this.projects.push({tbl_project_member_assocs: []})
                    // this.projects
                    _this.spinner = false;
                    var snackBarRef = _this.snackBar.open(resProjects.message, '', {
                        duration: 2000
                    });
                }
                else {
                    _this.noItems = false;
                    // this.proSelector = resProjects[0].tbl_project_member_assocs;
                    // this.proCheckbox = resProjects[0].tbl_project_member_assocs;
                    _this.projects = resProjects;
                    _this.proSelector = resProjects;
                    _this.spinner = false;
                }
            });
        }
    };
    //  ---------------------------------end-----------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Manu Prasad 
    // Desc          : Get Teams from database
    UserProjectsComponent.prototype.getSelectedProjects = function () {
        var _this = this;
        this.spinner = true;
        // this.showxData = false;        
        if (this.ProjectSelected == 'All') {
            console.log(this.ProjectSelected);
            this.getUserProjectsonStatusandName();
        }
        else {
            this.userService.getUserProjectSelected(this.ProjectSelected).subscribe(function (resProjects) {
                // console.log(resProjects)
                if (resProjects.status == 0) {
                    _this.noItems = true;
                    _this.projects = [];
                    _this.projects.push({ tbl_project_member_assocs: [] });
                    _this.projects;
                    _this.spinner = false;
                    var snackBarRef = _this.snackBar.open(resProjects.message, '', {
                        duration: 2000
                    });
                }
                else {
                    _this.noItems = false;
                    // this.proSelector = resProjects[0].tbl_project_member_assocs;
                    _this.projects = resProjects;
                    _this.spinner = false;
                }
            });
        }
    };
    //  ---------------------------------end-----------------------------------------------
    UserProjectsComponent.prototype.checkProject = function (pro1) {
        // console.log(pro1)
        // console.log(pro2)
        var x = pro1.project_id;
        var y = 0;
        if (x != 0) {
            y = pro1.project_id;
            console.log(x);
            console.log(y);
            if (x == y) {
                return false;
            }
            else {
                return true;
            }
        }
        // if(x!=0 || y!=0){
        // }
    };
    UserProjectsComponent.prototype.getUserProjectsonStatusandName = function () {
        this.getProjects();
    };
    UserProjectsComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-user-projects',
            template: __webpack_require__("../../../../../src/app/components/user-projects/user-projects.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-projects/user-projects.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_user_service__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"],
            __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */]])
    ], UserProjectsComponent);
    return UserProjectsComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-sidebar/user-sidebar.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-sidebar/user-sidebar.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"logo\">\r\n    <a ><img src=\"./assets/images/logo.jpg\" alt=\"\" class=\"\">\r\n   \r\n</a>\r\n</div>\r\n\r\n<nav class=\"navbar navbar-default\">\r\n\r\n<!-- Brand and toggle get grouped for better mobile display -->\r\n<div class=\"navbar-header\">\r\n  <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\r\n    <span class=\"sr-only\">Toggle navigation</span>\r\n    <span class=\"icon-bar\"></span>\r\n    <span class=\"icon-bar\"></span>\r\n    <span class=\"icon-bar\"></span>\r\n  </button>\r\n \r\n</div>\r\n\r\n<!-- Collect the nav links, forms, and other content for toggling -->\r\n<div class=\"collapse navbar-collapse navi\" id=\"bs-example-navbar-collapse-1\">\r\n    <ul class=\"zx nav navbar-nav\">\r\n        <li  [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\r\n          <a routerLink=\"/user-dashboard\"><i class=\"fa fa-desktop\" aria-hidden=\"true\"></i><span class=\"\">Dashboard</span></a></li>\r\n        <li  [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\r\n          <a routerLink=\"/user-projects\"><i class=\"fa fa-suitcase\" aria-hidden=\"true\"></i><span class=\"\">Projects</span></a></li>\r\n        <li  [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\r\n          <a routerLink=\"/user-task-management\"><i class=\"fa fa-tasks\" aria-hidden=\"true\"></i><span class=\"\">My Tasks</span></a></li>\r\n       \r\n         <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\r\n              <a routerLink=\"/user-leave-request\"><i class=\"fa fa-bed\"></i> Leave Request</a></li>\r\n\r\n          <li class=\"dropdown\"><a class=\"dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fa fa-file-text-o\" aria-hidden=\"true\"></i><span class=\"\">My Request</span></a>\r\n            \r\n              <ul class=\"dropdown-menu\" role=\"menu\" data-animations=\"fadeInDown fadeInRight fadeInUp fadeInLeft\">\r\n              \r\n                <li><a routerLink=\"/user-my-request\">Time Extension Requests</a></li>\r\n                <li><a routerLink=\"/user-my-request-mytask\">New Task Requests</a></li>\r\n              </ul>\r\n            \r\n          </li>      \r\n          <li *ngIf=\"isAssigned\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\r\n            <a routerLink=\"/user-task-verification\"><i class=\"fa fa-list-alt\"></i> Task Verification</a></li>     \r\n        <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\r\n             <a routerLink=\"/user-activity-log\"><i class=\"fa fa-list-alt\"></i> Activity Log</a></li>     \r\n       \r\n       \r\n    </ul>\r\n \r\n \r\n</div><!-- /.navbar-collapse -->\r\n\r\n</nav>\r\n\r\n<div class=\"footerlink\">\r\n    <i class=\"fa fa-facebook\" aria-hidden=\"true\"></i>\r\n    <i class=\"fa fa-twitter\" aria-hidden=\"true\"></i>\r\n    <i class=\"fa fa-google\" aria-hidden=\"true\"></i>\r\n    <p>Copyright 2018  All Rights Reserved.</p>\r\n   </div>\r\n\r\n   <style>\r\n@media only screen and (max-width: 1366px){\r\n.navbar-default {\r\n    min-height: 769px;\r\n}\r\n}\r\n   \r\n   </style>\r\n"

/***/ }),

/***/ "../../../../../src/app/components/user-sidebar/user-sidebar.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserSidebarComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var UserSidebarComponent = (function () {
    function UserSidebarComponent(userService, routes) {
        this.userService = userService;
        this.routes = routes;
        this.isAssigned = false;
    }
    UserSidebarComponent.prototype.ngOnInit = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : Get logged in entity
        // Params        : 
        // Returns       : Get logged in entity
        // Author        : Rinsha
        // Date          : 20-04-2018
        // Last Modified : 20-04-2018, Rinsha
        // Desc          :  
        this.userService.getLoggedinEntity().subscribe(function (data) {
            if (data == null || data == '') {
                _this.routes.navigate(['/home']);
            }
            if (data.role_id == 2) {
                //super admin
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/home']);
                }
                _this.routes.navigate(['/admin-dashboard']);
            }
            if (data.role_id == 3 || data.role_id == 1) {
                //company admin or pm
                if (data.delete_status == true || data.block_status == true || data.cmp_status == "Not Verified") {
                    _this.routes.navigate(['/company-login']);
                }
                if (data.cmp_status == "Expired") {
                    _this.routes.navigate(['/expired']);
                }
                if (data.is_profile_completed == false) {
                    _this.routes.navigate(['/compay-aditninfo', data.cmp_id]);
                }
                _this.routes.navigate(['/company-dashboard']);
            }
            if (data.role_id == 4) {
                //user
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/company-login']);
                }
                // this.routes.navigate(['/user-dashboard']);
            }
            _this.isTeamHeadForAnyTasks();
        });
        // -----------------------------------End------------------------------------------
    };
    UserSidebarComponent.prototype.isTeamHeadForAnyTasks = function () {
        var _this = this;
        this.userService.isTeamHeadForAnyTasks().subscribe(function (data) {
            _this.isAssigned = data.isAssigned;
        });
    };
    UserSidebarComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'user-sidebar',
            template: __webpack_require__("../../../../../src/app/components/user-sidebar/user-sidebar.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-sidebar/user-sidebar.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_2__angular_router__["Router"]])
    ], UserSidebarComponent);
    return UserSidebarComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-status-graph/user-status-graph.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-status-graph/user-status-graph.component.html":
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "../../../../../src/app/components/user-status-graph/user-status-graph.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserStatusGraphComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var UserStatusGraphComponent = (function () {
    function UserStatusGraphComponent() {
        this.containerId = '';
        this.New = '';
    }
    // ngOnInit() {
    UserStatusGraphComponent.prototype.ngOnInit = function () { };
    UserStatusGraphComponent.prototype.ngAfterViewInit = function () {
        // console.log(this.pieData);
        // const pieData = [
        //   {name: 'New - Yet to Start', value: this.New, color: '#2778a7'},
        //   {name: 'In Progress', value: this.Progress, color: '#99b745'},
        //   {name: 'Completed', value: this.Completed, color: '#17a88f'},
        //   {name: 'On Hold', value: this.Hold, color: '#f2ac37'},
        //   // {name: 'Cancelled', value: 3, color: '#b74549'},
        //   // {name: 'Un Planned', value: 1, color: '#4d5d6e'},
        // ];
        // this.bakeDonut(pieData);
        this.bakeDonut(this.pieData);
    };
    UserStatusGraphComponent.prototype.bakeDonut = function (d) {
        var containerId = this.containerId;
        var activeSegment;
        var data = d.sort(function (a, b) { return b['value'] - a['value']; }), viewWidth = 210, viewHeight = 210, svgWidth = viewHeight, svgHeight = viewHeight, thickness = 30, colorArray = data.map(function (k) { return k.color; }), el = d3.select('#' + containerId), radius = Math.min(svgWidth, svgHeight) / 2, color = d3.scaleOrdinal()
            .range(colorArray);
        var max = d3.max(data, function (maxData) { return maxData.value; });
        var svg = el.append('svg')
            .attr('viewBox', "0 0 " + (viewWidth + thickness) + " " + (viewHeight + thickness))
            .attr('class', 'pie')
            .attr('width', viewWidth)
            .attr('height', svgHeight);
        var g = svg.append('g')
            .attr('transform', "translate( " + ((svgWidth / 2) + (thickness / 2)) + ", " + ((svgHeight / 2) + (thickness / 2)) + ")");
        var arc = d3.arc()
            .innerRadius(radius - thickness)
            .outerRadius(radius);
        var arcHover = d3.arc()
            .innerRadius(radius - (thickness + 5))
            .outerRadius(radius + 8);
        var pie = d3.pie()
            .value(function (pieData) { return pieData.value; })
            .sort(null);
        var maxAssigned = false;
        var maxArcAssigned = false;
        var path = g.selectAll('path')
            .attr('class', 'data-path')
            .data(pie(data))
            .enter()
            .append('g')
            .attr('class', 'data-group')
            .each(function (pathData, i) {
            var group = d3.select(this);
            group.append('text')
                .text("" + pathData.data.value)
                .attr('class', 'data-text data-text__value')
                .attr('text-anchor', 'middle')
                .attr('dy', '0em')
                .style("font-size", "25px");
            group.append('text')
                .text("" + pathData.data.name)
                .attr('class', 'data-text data-text__name')
                .attr('text-anchor', 'middle')
                .attr('dy', '1.5em')
                .style("font-size", "15px");
            // Set default active segment
            if (pathData.value === max && !maxAssigned) {
                var textVal = d3.select(this).select('.data-text__value')
                    .classed('data-text--show', true);
                var textName = d3.select(this).select('.data-text__name')
                    .classed('data-text--show', true);
                maxAssigned = true;
            }
        })
            .append('path')
            .attr('d', arc)
            .attr('fill', function (fillData, i) { return color(fillData.data.name); })
            .attr('class', 'data-path')
            .on('mouseover', function () {
            var _thisPath = this, parentNode = _thisPath.parentNode;
            if (_thisPath !== activeSegment) {
                activeSegment = _thisPath;
                //  alert('#' + containerId + ' .data-text');
                var dataTexts = d3.selectAll('#' + containerId + ' .data-text')
                    .classed('data-text--show', false);
                var paths = d3.selectAll('#' + containerId + ' .data-path')
                    .transition()
                    .duration(250)
                    .attr('d', arc);
                d3.select(_thisPath)
                    .transition()
                    .duration(250)
                    .attr('d', arcHover);
                var thisDataValue = d3.select(parentNode).select('.data-text__value')
                    .classed('data-text--show', true);
                var thisDataText = d3.select(parentNode).select('.data-text__name')
                    .classed('data-text--show', true);
            }
        })
            .each(function (v, i) {
            if (v.value === max && !maxArcAssigned) {
                var maxArc = d3.select(this)
                    .attr('d', arcHover);
                activeSegment = this;
                maxArcAssigned = true;
            }
            this._current = i;
        });
        // const legendRectSize = 15;
        // const legendSpacing = 10;
        //   const legend = svg.selectAll('.legend')
        //   .data(color.domain())
        //   .enter()
        //   .append('g')
        //   .attr('class', 'legend')
        //   .attr('transform', function(legendData, i) {
        //     const itemHeight =    legendRectSize + legendSpacing;
        //     const offset =        legendRectSize * color.domain().length;
        //     const horz =          svgWidth + 80;
        //     const vert =          (i * itemHeight) + legendRectSize + (svgHeight - offset) / 2;
        //     return `translate(${horz}, ${vert})`;
        //   });
        //   legend.append('circle')
        //     .attr('r', legendRectSize / 2)
        //     .style('fill', color);
        //   legend.append('text')
        //     .attr('x', legendRectSize + legendSpacing)
        //     .attr('y', legendRectSize - legendSpacing)
        //     .attr('class', 'legend-text')
        //     .text( (legendData) => legendData )
    };
    UserStatusGraphComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'user-status-graph',
            template: __webpack_require__("../../../../../src/app/components/user-status-graph/user-status-graph.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-status-graph/user-status-graph.component.css")],
            // inputs: ['containerId','New','Progress','Completed','Hold']
            inputs: ['containerId', 'pieData']
        }),
        __metadata("design:paramtypes", [])
    ], UserStatusGraphComponent);
    return UserStatusGraphComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-task-management/user-task-management.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".home{position:relative;}\r\n.task{background:#fbf6f1;width:100%;padding:6px 0;display: inline-block;margin-bottom:6px;}\r\nbutton, input, optgroup, select, textarea{outline:none !important;}\r\n.taskedit{border-left:1px solid #ccc;    display: inline-block;width:100%;margin-top: 0px;display: -webkit-inline-box;    margin-top: 0px;\r\n    margin-right: 20px;}\r\n.task ul li{width:auto;float:left;padding: 8px;}\r\n\ta{color:#111;}\r\n.task h5{padding-top:13px;padding-top: 6px;}\r\n.hash{background:#f7f6f4;}\r\n.assigned{background:#f3f8f2;border-left:3px solid #6fa93b;}\r\n.unassigned{background:#fbf1ef;border-left:3px solid #e5553d;}\r\n\r\n.assigned h5 {\r\n    padding-top: 13px;\r\n    padding-top: 6px;\r\n    display: table-cell;\r\n    padding-right: 15px;\r\n}\r\n.assigned ul li{padding: 6px}\r\n.mrg-tp{margin-top:15px !important;}\r\n.round-button {\r\n    border-radius: 20px;\r\n    margin: 0;\r\n    float: left;\r\n    background: #f37600;\r\n    color: #fff;\r\n    padding: 7px 15px;\r\n    transition: background 2s;\r\n\tmargin-bottom:15px;\r\n}\r\n.round-button:hover {\r\n    background: #ffaa05;\r\n    color: #fff;\r\n}\r\n.dropdown ul.dropdown-menu:before {\r\n    content: \"\";\r\n    border-bottom: 10px solid #fff;\r\n    border-right: 10px solid transparent;\r\n    border-left: 10px solid transparent;\r\n    position: absolute;\r\n    top: -10px;\r\n    right: 16px;\r\n    z-index: 10;\r\n}\r\n.round-button:hover, .round-button:focus, .round-button.focus{color:#fff;}\r\nbutton, input, optgroup, select, textarea{outline:none;}\r\n.effect-1 ~ .focus-border{position: absolute; bottom: 0; left: 15px; width: 0; height: 2px;background-color: #bba28b; transition: 0.4s;right:15px;}\r\n.effect-1:focus ~ .focus-border{width: 95%; transition: 0.4s;}\r\n.effect-1{border: 0; padding: 7px 0; border-bottom: 1px solid #ccc;width:100%;}\r\n.style{width:100%;}\r\nlabel{font-size:15px;color:#4a4a4a;font-weight:normal;padding:5px 0;}\r\n.mrg-2{margin-bottom:10px;}\r\n.dropdown-menu > li > a {\r\n    display: block;\r\n    padding: 3px 20px;\r\n    clear: both;\r\n    font-weight: normal;\r\n    line-height: 25px;\r\n    color: #333333;\r\n    white-space: nowrap;\r\n}\r\n.addmodule {\r\n    padding: 20px 10px!important;\r\n    min-width: 357px;\r\n    right: inherit;\r\n    left: 20px;\r\n}\r\n.round{width:14px;height:14px;border-radius:50%;background:#70a93e;float:left;margin-right:7px;}\r\n.round2{background:#e4573c;}\r\n.notice p{font-size:11px;}\r\n.style{border:none;border-bottom: 1px solid #ccc;}\r\n.white {\r\n    background: #ffffff none repeat scroll 0 0;\r\n    \r\n    display: inline-block;\r\n    padding: 33px 25px;\r\n    width: 100%;\r\n}\r\n.btn-file{padding:0;}\r\n.white {\r\n    background: #ffffff none repeat scroll 0 0;\r\n    \r\n    display: inline-block;\r\n    padding: 33px 25px;\r\n    width: 100%;\r\n\tmargin-bottom:20px;\r\n}\r\n.center-bt{margin:20px auto 10px auto;float:none;}\r\n.project-planning .table > thead > tr > th{border:none;font-weight:normal;}\r\n.project-planning .table{margin-bottom:0;}\r\n@media only screen and (max-width : 767px) {\r\n.mrg-2 {\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.task ul li{    padding: 2px;}\t\r\n.addmodule{    min-width: 274px;}\r\n.martop {\r\n    margin-top: 35px;\r\n}\r\n.taskedit {\r\n    border-left: 1px solid #ccc;\r\n    display: inline-block;\r\n    width: 78%;\r\n    margin-top: 5px;\r\n    float: right;\r\n}\r\n.task{padding-bottom: 20px;}\r\n.addmodule .style{    margin-bottom: 18px;}\r\n}\r\n.request-bt{font-size:10px;    padding: 4px 8px;\r\n    margin-top: 2px;\r\n    margin-bottom: 0;margin-left: 4px;}\r\n    .taskedit-request {\r\n        \r\n        display: inline-block;\r\n        width:100%;\r\n        margin-top: 5px;\r\n        \r\n    }\r\n    .add-project {\r\n        float: right;\r\n        margin-right:0px;\r\n        margin-top:0px;\r\n        border: none;\r\n        width: 30px;\r\n        height: 30px;\r\n        border-radius: 50%;\r\n        padding: 0;\r\n        font-size: 24px;\r\n        line-height: 29px;\r\n        box-shadow: 4px 7px 31px #ffbb8e;\r\n        text-align: center;\r\n    }\r\n\r\n    .add-project {\r\n        background: #fe6a07 none repeat scroll 0 0;\r\n        border-radius: 100px;\r\n        color: #ffffff;\r\n        font-size: 14px;\r\n        font-weight: normal;\r\n        \r\n        position: relative;\r\n    }\r\n    .home{position:relative;}\r\n    .task{background:#fbf6f1;width:100%;padding:6px 0;display: inline-block;margin-bottom:6px;}\r\n    button, input, optgroup, select, textarea{outline:none !important;}\r\n    .taskedit{border-left:1px solid #ccc;    display: inline-block;width:100%;margin-top: 5px;}\r\n    .task ul li{width:auto;float:left;padding: 8px;}\r\n        a{color:#111;}\r\n    .task h5{padding-top:13px;padding-top: 6px;}\r\n    .hash{background:#f7f6f4;}\r\n    .assigned{background:#f3f8f2;border-left:3px solid #6fa93b;}\r\n    .unassigned{background:#fbf1ef;border-left:3px solid #e5553d;}\r\n    \r\n    .assigned h5 {\r\n        padding-top: 13px;\r\n        padding-top: 6px;\r\n        display: table-cell;\r\n        padding-right: 15px;\r\n    }\r\n    .assigned ul li{padding: 6px}\r\n    .mrg-tp{margin-top:15px !important;}\r\n    .round-button {\r\n        border-radius: 20px;\r\n        margin: 0;\r\n        float: left;\r\n        background: #f37600;\r\n        color: #fff;\r\n        padding: 7px 15px;\r\n        transition: background 2s;\r\n        margin-bottom:15px;\r\n    }\r\n    .round-button:hover {\r\n        background: #ffaa05;\r\n        color: #fff;\r\n    }\r\n    .dropdown ul.dropdown-menu:before {\r\n        content: \"\";\r\n        border-bottom: 10px solid #fff;\r\n        border-right: 10px solid transparent;\r\n        border-left: 10px solid transparent;\r\n        position: absolute;\r\n        top: -10px;\r\n        right: 16px;\r\n        z-index: 10;\r\n    }\r\n    .round-button:hover, .round-button:focus, .round-button.focus{color:#fff;}\r\n    button, input, optgroup, select, textarea{outline:none;}\r\n    .effect-1 ~ .focus-border{position: absolute; bottom: 0; left: 15px; width: 0; height: 2px;background-color: #bba28b; transition: 0.4s;right:15px;}\r\n    .effect-1:focus ~ .focus-border{width: 95%; transition: 0.4s;}\r\n    .effect-1{border: 0; padding: 7px 0; border-bottom: 1px solid #ccc;width:100%;}\r\n    .style{width:100%;}\r\n    label{font-size:15px;color:#4a4a4a;font-weight:normal;padding:5px 0;}\r\n    .mrg-2{margin-bottom:10px;}\r\n    .dropdown-menu > li > a {\r\n        display: block;\r\n        padding: 3px 20px;\r\n        clear: both;\r\n        font-weight: normal;\r\n        line-height: 25px;\r\n        color: #333333;\r\n        white-space: nowrap;\r\n    }\r\n    .addmodule {\r\n        padding: 20px 10px!important;\r\n        min-width: 357px;\r\n        right: inherit;\r\n        left: 20px;\r\n    }\r\n    .round{width:14px;height:14px;border-radius:50%;background:#70a93e;float:left;margin-right:7px;}\r\n    .round2{background:#e4573c;}\r\n    .notice p{font-size:11px;}\r\n    .style{border:none;border-bottom: 1px solid #ccc;}\r\n    .white {\r\n        background: #ffffff none repeat scroll 0 0;\r\n        \r\n        display: inline-block;\r\n        padding: 33px 25px;\r\n        width: 100%;\r\n    }\r\n    .btn-file{padding:0;}\r\n    .white {\r\n        background: #ffffff none repeat scroll 0 0;\r\n        \r\n        display: inline-block;\r\n        padding: 33px 25px;\r\n        width: 100%;\r\n        margin-bottom:20px;\r\n    }\r\n    .center-bt{margin:20px auto 10px auto;float:none;}\r\n    .project-planning .table > thead > tr > th{border:none;font-weight:normal;}\r\n    .project-planning .table{margin-bottom:0;}\r\n    @media only screen and (max-width : 767px) {\r\n    .mrg-2 {\r\n        margin-bottom: 15px;\r\n    }\r\n    \r\n    .task ul li{    padding: 2px;}\t\r\n    .addmodule{    min-width: 274px;}\r\n    .martop {\r\n        margin-top: 35px;\r\n    }\r\n    .taskedit {\r\n        border-left: 1px solid #ccc;\r\n        display: inline-block;\r\n        width: 78%;\r\n        margin-top: 5px;\r\n        float: right;\r\n    }\r\n    .task{padding-bottom: 20px;}\r\n    .addmodule .style{    margin-bottom: 18px;}\r\n    }\r\n    .padd-bt{padding-bottom: 20px;}\r\n    .psh-left{padding-left:5% ;}\r\n    .psh-left .form-group{margin-bottom:0px;}\r\n    .modal-content{border-radius:0;box-shadow:none;}\r\n    .modal-header {\r\n        padding: 7px 15px;\r\n        border-bottom: 1px solid #e5e5e5;\r\n        background: #da524f;\r\n    }\r\n    .modal-title {\r\n        margin: 0;\r\n        line-height: 26px;\r\n        font-size: 15px;\r\n        color: #fff;\r\n    }\r\n    .modal{top:0;}\r\n    .modal-header {\r\n        padding: 10px 30px;\r\n        border-bottom: 1px solid #e5e5e5;\r\n        background: #fe6a07;\r\n      }\r\n      .modal-content{\r\n      box-shadow:none;\r\n      border-radius: 9px;\r\n      overflow: hidden;\r\n      \r\n      }\r\n      .modal-title{color:#fff;}\r\n      .modal-body{    padding:20px 30px;}\r\n      .modal-body input{border:none;}\r\n      .modal-body input{padding: 0;}\r\n      .pad-top{padding-top:20px;}\r\n      .wdth{width:100% !important;}\r\n      .brd{    border: none;\r\n        height: 54px;}\r\n        .material-icons{\r\n            font-size: 20px;\r\n            float: left;\r\n            padding-right: 12px;\r\n            padding-top: 5px;\r\n        }\r\n        .close-bt{    width: 10px;\r\n            background: none;\r\n            float: right;\r\n            margin-top: 31px;\r\n            color: #111;\r\n            font-size: 11px;}\r\n        .padd-bt{    padding: 7px 6px !important;\r\n            font-size: 12px !important;\r\n            margin-top: 24px;}\r\n      .center{text-align: center;}\r\n      .center .round-button{margin:0 auto;float:none ;}\r\n      .editz{min-width: 100px;width: 100%;\r\n        top: 30px;}\r\n        .editz li{padding:0 !important;    width: 100% !important;}\r\n        .editz2 {\r\n            min-width: 522px;\r\n            width: 346%;\r\n            top: 30px;\r\n            left: 0;\r\n            max-width: 492px;\r\n            overflow: hidden;\r\n        }\r\n        .no-brdr{border:none !important;}\r\n        .am{\r\n            float: left;\r\n            background: none;\r\n            border: 2px solid #e6cebe;\r\n            margin-top: 23%;\r\n        }\r\n        \r\n        .date-time{}\r\n        \r\n        .iconButton {\r\n            background-color: transparent;\r\n            border: none;\r\n        }\r\n        .puase-popup{    top: 42%;\r\n            left: 12%;width:auto;}\r\n            .tooltip {\r\n                position: relative;\r\n                display: inline-block;\r\n                border-bottom: 1px dotted black;\r\n            }\r\n            \r\n            .tooltip .tooltiptext {\r\n                visibility: hidden;\r\n                width: 120px;\r\n                background-color: black;\r\n                color: #fff;\r\n                text-align: center;\r\n                border-radius: 6px;\r\n                padding: 5px 0;\r\n            \r\n                /* Position the tooltip */\r\n                position: absolute;\r\n                z-index: 1;\r\n            }\r\n            \r\n            .tooltip:hover .tooltiptext {\r\n                visibility: visible;\r\n            }\r\n            .basic-container {\r\n                padding: 5px;\r\n              }\r\n              \r\n              .version-info {\r\n                font-size: 8pt;\r\n                float: right;\r\n              }\r\n        \r\n              .bx-shdw{\r\n                border-radius: 4px;\r\n                box-shadow: 0px 5px 34px -6px #333;\r\n              }\r\n              .martop h5{\r\n                  color: #fff;\r\n                  text-transform: capitalize;\r\n              }\r\n              .task {\r\n                background: #d25453;\r\n                color: #fff;\r\n                border-radius: 6px;\r\n                box-shadow: 3px 9px 12px -9px #333;\r\n              }\r\n              .add-project{\r\n                box-shadow: 2px 5px 16px -4px #333\r\n              }\r\n              textarea{\r\n                  color: #333;\r\n              }\r\n              \r\n              .pse{\r\n                color: #aeb385;\r\n                font-weight: 800;\r\n              }\r\n              .rnng{\r\n                color: #1b1a0d !important;\r\n                font-weight: 800;\r\n                margin-bottom:0;\r\n                text-align: left;\r\n                padding-left: 6px;\r\n              }\r\n              .fa{\r\n                font-weight: 800;\r\n              }\r\n              .mdl-name{\r\n                  text-transform: capitalize;\r\n              }\r\n              .icn-rnd{\r\n                  background-color: #ccc;\r\n                  border-radius: 50%;\r\n                  width: 11px;\r\n                  height: 11px;\r\n                  margin: 0;\r\n                  padding: 0;\r\n                  display: inline-block;\r\n              }\r\n              .rnd-lbl{\r\n                  display: inline;\r\n              }\r\n              .mdl-clr{\r\n                background-color: #d25453;\r\n              }\r\n              .new-clr{\r\n                background-color: #0294a5;\r\n              }\r\n              .in-clr{\r\n                background-color: #48a97c;\r\n              }\r\n              .hld-clr{\r\n                background-color: #ab2e48;\r\n\r\n              }\r\n              .done-clr{\r\n                background-color: #616c70\r\n              }\r\n              .pause-clr{\r\n                  background-color: #3e4d73;\r\n              }\r\n              .rnng-bx-shdw{\r\n                  box-shadow: 10px 10px 10px 10px #333;\r\n              }\r\n              .blinking{\r\n                animation:blinkingText 1.3s infinite;\r\n            }\r\n            @keyframes blinkingText{\r\n                0%{     color: #fffb44;    }\r\n                /* 49%{    color: transparent; } */\r\n                50%{    color: transparent; }\r\n                /* 99%{    color:transparent;  } */\r\n                100%{   color: #fffb44;    }\r\n            }\r\n            .tsk-lbl{\r\n                color: #e4c6c6;\r\n                font-size: 11px;\r\n                padding-top: 4px;\r\n                float: left;\r\n                white-space: pre;\r\n            }\r\n            .tsk-dt{\r\n                margin: 0;\r\n                padding-top: 0 !important;\r\n            }\r\n            .martop h5{float:left;}\r\n            .align-task{width:auto;float:left;}\r\n\r\n\r\n\r\n            .task-main{background:#fff;width:100%;padding:20px;overflow: hidden;margin-bottom: 13px;}\r\n            .subtasks{    background: #fbfbfb;padding:15px 20px;margin-bottom:10px;}\r\n            .task-main h3{font-size: 16px;\r\n                color: #3d3c3c;\r\n                text-align: left;\r\n                text-transform: capitalize;\r\n                margin: 0;\r\n                padding-bottom: 2px;\r\n                float: left;\r\n                font-weight: 400;\r\n                font-family: arial;\r\n                line-height: 34px;}\r\n            #demo{margin:10px 0;}\r\n            .statusbt{    border: 1px solid #5bc0de;\r\n                color: #5bc0de;\r\n                border-radius: 5px;\r\n                font-size: 12px;\r\n                background: none;\r\n                padding: 11px 29px;}\r\n            .morebt{    color: #ffffff;\r\n                border-radius: 43px;\r\n                font-size: 12px;\r\n                background: #de894f;\r\n                padding: 11px 18px;\r\n                margin-left: 5px;\r\n                transition: opacity 2s;\r\n                -webkit-transition: opacity 2s;\r\n                margin-left:26px;}\r\n            .morebt .fa{margin-right:4px;}\r\n            .morebt:hover{opacity:0.5;text-decoration:none;}\r\n            a:focus, a:hover{text-decoration:none;}\r\n            \r\n            .timebox .fa{font-size: 40px;}\r\n            .timedate p{font-size: 12px;}\r\n            .timedate h5 {\r\n                line-height: 20px;\r\n                font-size: 16px;\r\n                margin-top: 0px;\r\n                float: left;\r\n                text-align: left;\r\n                color: #636161;\r\n                margin-left: -2px;\r\n                margin-bottom: 0;\r\n            }\r\n            .timebox{    margin: 0px 10px;\r\n                margin-top: 0px;\r\n                float: right;\r\n                margin-right: 21px;}\r\n            .topborder {\r\n                min-height: 31px;\r\n                width: 1px;\r\n                background: #ccc;\r\n                float: left;\r\n                margin-left: 10px;\r\n                margin-top: 4px;\r\n                margin-right: 9px;\r\n            }\r\n            .colz{float:left;margin-right:28px;}\r\n            .colz p{margin-bottom:3px;float:left;width:auto;color: #b9b9b9;clear:left;}\r\n            .colz h4{clear: left;color: #755f5f;\r\n                    font-size: 15px;margin-bottom: 0;}\r\n            .colz h5 {\r\n                        clear: left;\r\n                        color: #de894f;\r\n                        font-size: 18px;\r\n                        margin-bottom: 0;    margin-top: -9px;\r\n                        line-height: 13px;\r\n                    }\r\n            .hrtotal .fa{font-size:31px;}\r\n            .hrtotal h2{font-size: 21px;margin-bottom:0px;margin-top: 0;}\r\n            .hrtotal .topborder{    margin-right: 8px;    min-height: 26px;    margin-left: 20px;}\r\n            .hrtotal{    margin-top: 4px;}\r\n            .marginr20{margin-right:20px;}\r\n            \r\n            \r\n            .colz h2{    float: left;\r\n                clear:left;\r\n                margin-bottom: 0;\r\n                margin-top: 0px;\r\n                font-size: 27px;}\r\n            .amounts h4 {\r\n                font-size: 34px;\r\n                color: #70b735;\r\n                padding-top: 0px;\r\n                 margin-top: 1px;\r\n                }\r\n                .tab-content .tab-pane {\r\n                    padding: 37px 0;\r\n                }\r\n                .audioz{\r\n                height: 36px;\r\n                margin-top: -7px;\r\n                margin-right: 12px;\r\n                }\r\n   .projectnames h3{float:left;width:auto;clear:left;    line-height: 21px;\r\n    margin-bottom: 0;\r\n    padding-bottom: 0;}\r\n   .projectnames p{float:left;width:auto;clear:left;margin-bottom: 0;color: #bdbdbd;}\r\n.playul{float:left;    display: -ms-inline-flexbox;    display: inline-flex;}\r\n.playul .iconButton{    padding: 2px;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-task-management/user-task-management.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n  <div class=\"container-fluid display-table\">\r\n    <div class=\"row display-table-row\">\r\n      <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n        <!-- sidebar-->\r\n        <user-sidebar></user-sidebar>\r\n        <!-- end sidebar-->\r\n      </div>\r\n      <div class=\"col-md-12 col-xs-12\">\r\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n        <!-- topbar-->\r\n        <user-topbar></user-topbar>\r\n        <div class=\"col-md-12\">\r\n          <h2 style=\"text-align:left;\">My Task</h2>\r\n          <ul class=\"breadcrumb\">\r\n            <li>\r\n              <a>My Task</a>\r\n            </li>\r\n            <!-- <li><a routerLink=\"/company-request-management\">Time Extension Request List</a></li> -->\r\n\r\n            <li>Task List</li>\r\n          </ul>\r\n        </div>\r\n        <!-- --------------------------------------------- add task modal ----------------------------------------------------------------- -->\r\n        <div id=\"additionalTask\" class=\"modal fade\" role=\"dialog\">\r\n          <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn>&times;</button>\r\n                <h4 class=\"modal-title\">Additional task request </h4>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"addTask(index);\">\r\n                  <div>\r\n                    <div class=\"example-container\">\r\n                      <div class=\"col-md-4 col-xs-6\">\r\n                        <label class=\"pad-top\">Task Name * :</label>\r\n                      </div>\r\n                      <div class=\"col-md-7 col-xs-6\">\r\n                        <mat-form-field>\r\n                          <input matInput name=\"task_name\" [(ngModel)]=\"newTasks.task_name\" autofocus>\r\n                        </mat-form-field>\r\n                      </div>\r\n                      <br>\r\n                      <div class=\"example-container\">\r\n                        <div class=\"col-md-4 col-xs-6\">\r\n                          <label class=\"pad-top\">Assigned person * :</label>\r\n                        </div>\r\n                        <div class=\"col-md-7 col-xs-6 pad-top\" *ngFor=\"let userdata of userData;\">\r\n                          {{userdata.f_name}} {{userdata.l_name}}\r\n                        </div>\r\n                        <div class=\"clearfix\"></div>\r\n                        <div class=\"example-container\">\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <label class=\"pad-top\">Complexity :</label>\r\n                          </div>\r\n                          <div class=\"col-md-7 col-xs-6\">\r\n                            <mat-form-field class=\"inputfileds\">\r\n                              <mat-select placeholder=\"Complexity\" name='complexity' #group=\"ngModel\" [(ngModel)]=\"newTasks.complexity\">\r\n                                <mat-option [value]=\"complexity.id\" *ngFor=\"let complexity of complexitys;\">{{complexity.percentage}}</mat-option>\r\n                              </mat-select>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n                          <br>\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <label class=\"pad-top\">Planned Hours *:</label>\r\n                          </div>\r\n                          <div class=\"col-md-2 col-xs-6\">\r\n                            <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput name=\"planned_hour\" min=\"0\" name='planned_hour' [(ngModel)]=\"newTasks.planned_hour\" (keypress)=\"_keyPress($event)\"\r\n                                required>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"col-md-3 col-xs-6\">\r\n                            <label class=\"pad-top\">Buffer Hours :</label>\r\n                          </div>\r\n                          <div class=\"col-md-2 col-xs-6\">\r\n                            <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput name=\"buffer_time\" min=\"0\" name='buffer_hour' [(ngModel)]=\"newTasks.buffer_hour\" (keypress)=\"_keyPress($event)\"\r\n                                required>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n                          <br>\r\n\r\n                          <div class=\"clearfix\"></div>\r\n\r\n                          <div class=\"example-container\">\r\n                            <!-- <div class=\"col-md-4 col-xs-6\"><label class=\"pad-top\">Task type :</label></div>\r\n                            <div class=\"col-md-7 col-xs-6\">\r\n                              <mat-form-field class=\"inputfileds\">\r\n                                <mat-select [(value)]=\"selected1\" name='task_type' #group=\"ngModel\" [(ngModel)]=\"newTasks.task_type\">\r\n                           \r\n                                  <mat-option value=\"0\">Billable</mat-option>\r\n                                  <mat-option value=\"1\">Non Billable</mat-option>\r\n                                </mat-select>\r\n                              </mat-form-field>\r\n                            </div> -->\r\n                            <div class=\"clearfix\"></div>\r\n                            <div class=\"example-container\">\r\n                              <!-- <div class=\"col-md-4 col-xs-6\"><label class=\"pad-top\">Priority *:</label></div>\r\n                              <div class=\"col-md-7 col-xs-6\">\r\n                                <mat-form-field class=\"inputfileds\">\r\n                                  <mat-select [(value)]=\"selected2\" name='priority' #group=\"ngModel\" [(ngModel)]=\"newTasks.priority\">\r\n                                \r\n                                    <mat-option value=\"0\">High</mat-option>\r\n                                    <mat-option value=\"1\">Medium</mat-option>\r\n                                    <mat-option value=\"2\">Low</mat-option>\r\n                                  </mat-select>\r\n                                </mat-form-field>\r\n                              </div> -->\r\n                              <div *ngIf=\"showTeam\">\r\n                                <div class=\"col-md-4 col-xs-6\">\r\n                                  <label class=\"pad-top\">Select Team *:</label>\r\n                                </div>\r\n                                <div class=\"col-md-7 col-xs-6\">\r\n                                  <mat-form-field class=\"inputfileds\">\r\n                                    <mat-select placeholder=\"Team\" name=\"team\" [(ngModel)]=\"newTasks.team\">\r\n                                      <mat-option [value]=\"team.id\" *ngFor=\"let team of allteam\">{{team?.team_name}} </mat-option>\r\n                                    </mat-select>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                              </div>\r\n                              <div class=\"clearfix\"></div>\r\n                              <div class=\"example-container\">\r\n                                <div class=\"col-md-4 col-xs-6\">\r\n                                  <label class=\"pad-top\">Description :</label>\r\n                                </div>\r\n                                <div class=\"col-md-7 col-xs-6\">\r\n                                  <mat-form-field>\r\n                                    <textarea matInput name='description' [(ngModel)]=\"newTasks.description\"></textarea>\r\n                                  </mat-form-field>\r\n                                </div>\r\n                                <br>\r\n                                <!-- <div class=\"example-container\">\r\n                                <div class=\"col-md-4 col-xs-5\"><label class=\"pad-top\">Checklist :</label></div>\r\n                                <div class=\"col-md-5 col-xs-5\">\r\n                                  <div *ngFor=\"let item of newTasks.newChecklist; let i = index; trackBy:trackByIndex\">\r\n                                    <mat-form-field class=\"example-form-field\">\r\n                                      <input matInput type=\"text\" name=\"checklist{{i}}\" required [(ngModel)]=\"newTasks.newChecklist[i].name\" />\r\n                                      <button mat-button *ngIf=\"value\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"value=''\">\r\n                                  <mat-icon>close</mat-icon>\r\n                                </button>\r\n                                    </mat-form-field>\r\n                                    <input type=\"button\" value=\"X\" (click)=\"closeChecklist(i)\" class=\"close-bt\">\r\n                                  </div>\r\n                                </div> -->\r\n                                <!-- <div class=\"col-md-3 col-xs-2\"><input type=\"button\" value=\"Add More\" (click)=\"addMore()\" class=\"round-button padd-bt\"></div> -->\r\n                                <div class=\"clearfix\"></div>\r\n                                <div class=\"example-container\">\r\n                                  <div class=\"col-md-3 col-xs-6\">\r\n                                    <label class=\"pad-top\">Attachment :</label>\r\n                                  </div>\r\n                                  <div class=\"col-md-7 col-xs-6\">\r\n                                    <input (change)=\"displayDoc($event)\" name=\"file\" type=\"file\" [(ngModel)]=\"newTasks.file\" />\r\n                                  </div>\r\n                                  <div class=\"clearfix\"></div>\r\n                                  <div class=\"center\">\r\n                                    <button type=\"submit\" [disabled]=\"aditionaltaskBtnDisable\" class=\"btn round-button dropdown-toggle mrg-tp\">Send Request</button>\r\n                                    <div *ngIf=\"aditionaltaskSpinner\">\r\n                                      <app-spinner></app-spinner>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- --------------------------------------------- end add modal ----------------------------------------------------------------- -->\r\n        <!-- --------------------------------------------- add time extension ----------------------------------------------------------------- -->\r\n        <div id=\"extentionTask\" class=\"modal fade\" role=\"dialog\">\r\n          <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n              <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" #closeBtn1>&times;</button>\r\n                <h4 class=\"modal-title\">Time Extension request </h4>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <form role=\"form\" #f=\"ngForm\" (ngSubmit)=\"TimeExtention(newTasks);\">\r\n                  <div>\r\n                    <div class=\"example-container\">\r\n                      <div class=\"col-md-4 col-xs-6\">\r\n                        <label class=\"pad-top\">Task Name :</label>\r\n                      </div>\r\n                      <div class=\"col-md-7 col-xs-6\">\r\n                        <label class=\"pad-top\">\r\n                          {{newTasks.task_name}}\r\n                        </label>\r\n                      </div>\r\n                      <br>\r\n                      <div class=\"example-container\">\r\n                        <div class=\"col-md-4 col-xs-6\">\r\n                          <label class=\"pad-top\">Assigned person :</label>\r\n                        </div>\r\n                        <div class=\"col-md-7 col-xs-6\">\r\n                          <label class=\"pad-top\" *ngFor=\"let userdata of  userData;\">\r\n                            {{userdata.f_name}} {{userdata.l_name}}\r\n                          </label>\r\n                        </div>\r\n                        <div class=\"clearfix\"></div>\r\n                        <div class=\"example-container\">\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <label class=\"pad-top\">Complexity :</label>\r\n                          </div>\r\n                          <div class=\"col-md-7 col-xs-6\">\r\n                            <label class=\"pad-top\" *ngIf=\"newTasks.complexity_id!=null\">\r\n                              {{newTasks.tbl_complexity_percentage.percentage}}\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <label class=\"pad-top\">Planned Hours :</label>\r\n                          </div>\r\n                          <div class=\"col-md-7 col-xs-6\">\r\n\r\n                            <label class=\"pad-top\">\r\n                              {{newTasks.planned_hour}}\r\n                              <!-- <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput name=\"planned_hour\" min=\"0\" name='planned_hour' [(ngModel)]=\"newTasks.planned_hour\" required>\r\n                            </mat-form-field> -->\r\n                            </label>\r\n                          </div>\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <label class=\"pad-top\">Buffer Hours :</label>\r\n                          </div>\r\n                          <div class=\"col-md-7 col-xs-6\">\r\n\r\n                            <label class=\"pad-top\">\r\n                              {{newTasks.buffer_hour}}\r\n                            </label>\r\n                          </div>\r\n                          <!-- <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput name=\"buffer_time\" min=\"0\" name='buffer_hour' [(ngModel)]=\"newTasks.buffer_hour\" required>\r\n                            </mat-form-field> -->\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <label class=\"pad-top\"> Time required in Hrs:*</label>\r\n                          </div>\r\n                          <div class=\"col-md-4 col-xs-6\">\r\n                            <mat-form-field class=\"wdth\">\r\n                              <input type=\"number\" matInput min=\"0\" name='timerequired' [(ngModel)]=\"newTasks.timerequired\" (keypress)=\"_keyPress($event)\"\r\n                                required>\r\n                            </mat-form-field>\r\n                          </div>\r\n                          <div class=\"clearfix\"></div>\r\n\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"clearfix\"></div>\r\n                          <div class=\"center\">\r\n                            <button type=\"submit\" [disabled]=\"sendRequestBtnDisable\" class=\"btn round-button dropdown-toggle mrg-tp\">Send Request</button>\r\n                            <div *ngIf=\"sendRequestSpinner\">\r\n                              <app-spinner></app-spinner>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- --------------------------------------------- end time extension ----------------------------------------------------------------- -->\r\n\r\n\r\n\r\n        <!-- end topbar-->\r\n        <div class=\"user-dashboard\">\r\n          <!-- <h1>Hello, JS</h1> -->\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <mat-tab-group color=\"primary\" (selectedTabChange)=\"onTabLinkClick($event)\">\r\n\r\n                    <mat-tab label=\"Current Task\">\r\n                        <div class=\"tab-content\" *ngFor=\"let myTask of showDetails; let i = index\">\r\n                            <div id=\"home\" class=\"tab-pane fade in active\" *ngIf=\"myTask.curTask.length != 0\">\r\n                              <!-- <div class=\"col-md-12\" *ngIf=\"myTask?.TaskExistForFinishInaModule\">\r\n                                <div class=\"task-main\">\r\n                                  <div class=\"colz\">\r\n                                    <h2>{{myTask?.tbl_project.project_name}}</h2>\r\n                                    <p>{{myTask?.tbl_project.project_code}}</p>\r\n                                  </div>\r\n                                </div>\r\n                              </div> -->\r\n              \r\n                              <div class=\"col-md-12 pull-right\"  >\r\n                                <div class=\"task-main\">\r\n                                  <h3>Module name</h3>\r\n                                  \r\n                                  <div class=\"pull-right\">\r\n                                   \r\n                                    <button class=\"requstnewbt pull-right\" *ngIf=\"myTask.tbl_project.status!== 'Completed'\" (click)=\"getId(i,myTask.id)\" matTooltip=\"New Task Request\"\r\n                                      data-toggle=\"modal\" data-target=\"#additionalTask\">\r\n                                      <i class=\"fa fa-plus\"></i>New Task Request</button>\r\n                                  </div>\r\n                                  <div class=\"topborder pull-right\"></div>\r\n                                  <div class=\"pull-right projectnames\">\r\n                                    <h3>Samana Academy</h3>\r\n                                      <p>PRO323/2018</p>\r\n                                  </div>\r\n                                 \r\n                                </div>\r\n              \r\n              \r\n                                <div id=\"demo{{myTask.id}}\" class=\"\" *ngFor=\"let task of myTask.curTask; let j = index\">\r\n                                  <div class=\"col-md-11 pull-right subtasks\">\r\n                                    <div class=\"colz\">\r\n                                      <p>Task Name</p>\r\n                                      <h4>{{task?.task_name}}</h4>\r\n                                    </div>\r\n              \r\n                                    <div class=\"colz pull-right\">\r\n                                      <p>Total Hours</p>\r\n                                      <h5>{{task?.planned_hour + task?.buffer_hour}} hrs</h5>\r\n                                    </div>\r\n                                    <div class=\"colz pull-right\" *ngIf=\"task?.status.tbl_task_status.id==5\">\r\n                                      <p>Actual Hours</p>\r\n                                      <h5>{{task?.actual_hour }} hrs</h5>\r\n                                    </div>\r\n              \r\n                                    <button class=\"statusbt pull-right marginr20\">{{task?.status.tbl_task_status.status }}</button>\r\n                                    <div class=\"timebox\">\r\n                                      <i class=\"fa fa-clock-o\"></i>\r\n                                      <div class=\"timedate\">\r\n                                        <p>\r\n                                          <span class=\"xx\">{{task?.planned_start_date_time | date:'MMM dd yyyy hh:mm aa'}}</span>\r\n                                        </p>\r\n                                        <h5>{{task?.starttime}}\r\n                                          <!-- <span class=\"xx\">PM</span> -->\r\n                                        </h5>\r\n                                      </div>\r\n                                      <div class=\"topborder\"></div>\r\n                                      <div class=\"timedate\">\r\n                                        <p>\r\n                                          <span class=\"xx\">{{task?.planned_end_date_time | date:'MMM dd yyyy hh:mm aa'}}</span>\r\n                                        </p>\r\n                                        <h5>{{task?.endtime}}\r\n                                          <!-- <span class=\"xx\">PM</span> -->\r\n                                        </h5>\r\n                                      </div>\r\n                                    </div>\r\n              \r\n              \r\n                                    <div class=\"pull-right\" *ngIf=\"task?.showRequest\">\r\n                                      <div class=\"topborder pull-right\"></div>\r\n                                      <button class=\"requstnewbt pull-right\" matTooltip=\"Aditional time request\" (click)=\"getId1(task,i,j)\" type=\"button\"\r\n                                        data-toggle=\"modal\" data-target=\"#extentionTask\">\r\n                                        <i class=\"fa fa-plus\"></i>Time Extention Request</button>\r\n                                    </div>\r\n                                    <div class=\"pull-right\">\r\n                                    <ul class=\"taskedit\">\r\n                                                     \r\n                                        <div class=\"div1\">\r\n                                          <div class=\"div\">\r\n                                        \r\n                                          </div>\r\n                                    \r\n                                          <p class=\"pse\" [ngClass]=\"{'rnng':task?.status?.status_id==3}\">\r\n                                            <span id=\"hr\">{{task?.appendHour}}</span>:\r\n                                            <span id=\"min\">{{task?.appendMinute}}</span>:\r\n                                            <span id=\"sec\">{{task?.appendSecond}}</span>\r\n                                          </p>\r\n                                        \r\n                                          <div class=\"d2\">\r\n              \r\n                                          </div>\r\n                                        </div>\r\n                                        <div class=\"playul\">\r\n                                        <li *ngIf=\"task?.status?.status_id == 3\">\r\n                                          <button matTooltip=\"Pause\" data-target=\"#demoo\" class=\"iconButton\" data-toggle=\"collapse\" (click)=\"clearReason()\">\r\n                                            <i class=\"fa fa-pause\" aria-hidden=\"true\"></i>\r\n                                          </button>\r\n                                          <ul class=\"collapse dropdown-menu puase-popup\" role=\"menu\" id=\"demoo\">\r\n                                            <div class=\"col-md-8\">\r\n                                              <div class=\"col-md-12 col-xs-6 text-left\">\r\n                                                <label class=\"pad-top\">Reason *</label>\r\n                                              </div>\r\n                                              <textarea rows=\"4\" cols=\"50\" name=\"name\" [(ngModel)]=\"newTasks.reason\"> </textarea>\r\n                                            </div>\r\n                                            <div class=\"clearfix\"></div>\r\n                                            <br>\r\n                                            <div class=\"col-md-4\">\r\n                                              <button type=\"submit\" (click)=\"pauseTask(task)\" class=\"btn round-button\">Pause</button>\r\n                                            </div>\r\n                                          </ul>\r\n                                        </li>\r\n                                        <li *ngIf=\"task?.status?.status_id == 3\">\r\n                                          <button matTooltip=\"Completed\" class=\"iconButton\" data-toggle=\"collapse\" data-target=\"#demo\" (click)=\"clearprogress()\">\r\n                                            <i class=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n                                          </button>\r\n                                          <ul class=\"collapse bx-shdw\" id=\"demo\">\r\n                                            <div class=\"col-md-8\">\r\n                                              <mat-form-field class=\"inputfileds\">\r\n                                                <mat-select placeholder=\"Progress\" name='progress' #group=\"ngModel\" [(ngModel)]=\"newTasks.percentage\">\r\n                                                  <mat-option [value]=\"percentage.id\" *ngFor=\"let percentage of percentages;\">{{percentage.percentage}}</mat-option>\r\n                                                </mat-select>\r\n                                              </mat-form-field>\r\n                                            </div>\r\n                                            <div class=\"clearfix\"></div>\r\n                                            <div class=\"col-md-4\">\r\n                                              <button type=\"submit\" (click)=\"complete(task)\" class=\"btn round-button closepanel\">Save</button>\r\n                                            </div>\r\n                                          </ul>\r\n                                        </li>\r\n                                        <li *ngIf=\"task?.status?.status_id == 3\">\r\n                                          <button matTooltip=\"Hold\" class=\"iconButton\" data-toggle=\"collapse\" data-target=\"#demo1\" (click)=\"clearhold()\">\r\n                                            <i class=\"fa fa-stop\" aria-hidden=\"true\"></i>\r\n                                          </button>\r\n                                          <ul class=\"collapse bx-shdw\" id=\"demo1\">\r\n                                            <div class=\"col-md-12 text-left\">\r\n                                              <label class=\"pad-top\">Progress * : </label>\r\n                                              <mat-form-field class=\"inputfileds\">\r\n                                                <mat-select placeholder=\"Progress\" name='progress' #group=\"ngModel\" [(ngModel)]=\"newTasks.percentage\">\r\n                                                  <mat-option [value]=\"percentage.id\" *ngFor=\"let percentage of percentages;\">{{percentage.percentage}}</mat-option>\r\n                                                </mat-select>\r\n                                              </mat-form-field>\r\n                                              <div class=\"clearfix\"></div>\r\n                                              <div class=\"col-md-12 col-xs-6 text-left\">\r\n                                                <div class=\"row\">\r\n                                                  <label class=\"pad-top\">Reason * :</label>\r\n                                                </div>\r\n                                              </div>\r\n                                              <textarea rows=\"4\" cols=\"50\" name=\"name\" [(ngModel)]=\"newTasks.reason\"> </textarea>\r\n                                            </div>\r\n                                            <div class=\"clearfix\"></div>\r\n                                            <br>\r\n                                            <div class=\"col-md-4\">\r\n                                              <button type=\"submit\" (click)=\"holdTask(task)\" class=\"btn round-button closepane\">Save</button>\r\n                                            </div>\r\n                                          </ul>\r\n                                        </li>\r\n                                       \r\n                                        <div *ngIf=\"task?.status?.status_id == 1\">\r\n                                          <li>\r\n                                            <button data-toggle=\"Start\" matTooltip=\"Start\" class=\"iconButton\" (click)=\"start(task, myTask)\">\r\n                                              <i class=\"fa fa-play\" aria-hidden=\"true\"></i>\r\n                                            </button>\r\n                                          </li>\r\n                                        </div>\r\n                                        <li *ngIf=\"task?.status?.status_id == 3\">\r\n                                          <button data-toggle=\"tooltip\" matTooltip=\"Finish\" class=\"iconButton\" (click)=\"Done(task)\">\r\n                                            <i class=\"fa fa-check-circle-o\" aria-hidden=\"true\"></i>\r\n                                          </button>\r\n                                        </li>\r\n                                        <li *ngIf=\"task?.status?.status_id == 2 || task?.status?.status_id == 4\">\r\n                                          <button data-toggle=\"tooltip\" matTooltip=\"Resume\" class=\"iconButton\" (click)=\"resumeTasks(task)\">\r\n                                            <i class=\"fa fa-play\" aria-hidden=\"true\"></i>\r\n                                          </button>\r\n                                        </li>\r\n                                        <li *ngIf=\"task?.status?.status_id == 7\">\r\n                                          <button data-toggle=\"tooltip\" matTooltip=\"Restart\" class=\"iconButton\" (click)=\"restartTasks(task)\">\r\n                                            <i class=\"fa fa-play\" aria-hidden=\"true\"></i>\r\n                                          </button>\r\n                                        </li>\r\n                                      </div>\r\n                                      </ul>\r\n                                    </div>\r\n              \r\n                                  </div>\r\n              \r\n              \r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <!--current tab-->\r\n              \r\n              \r\n              \r\n                          </div>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"Today's Task\">\r\n                    </mat-tab>\r\n                    <mat-tab label=\"View All tasks\">\r\n                    </mat-tab>\r\n                  </mat-tab-group>\r\n              <!-- <ul class=\"nav nav-tabs\" (selectedTabChange)=\"onTabLinkClick($event)\">\r\n                <li class=\"active\">\r\n                  <a data-toggle=\"tab\" href=\"#home\">Current Task</a>\r\n                </li>\r\n                <li>\r\n                  <a data-toggle=\"tab\" href=\"#menu1\">View All Task</a>\r\n                </li>\r\n              </ul> -->\r\n            </div>\r\n\r\n    <ng-container *ngIf=\"showAllContent\">\r\n\r\n            <div class=\"col-md-8 pull-right\">\r\n              <!-- <div class=\"projctlabel colz pull-right margright0\">\r\n            \r\n            </div> -->\r\n              <!-- <div class=\"projctlabel colz pull-right pending\">\r\n         \r\n            </div> -->\r\n              <mat-form-field class=\"filter\">\r\n                <mat-select (change)=\"statusBasedData()\" [(value)]=\"selected\">\r\n                  <mat-option value=\"all\">All</mat-option>\r\n                  <mat-option value=\"1\">New </mat-option>\r\n                  <mat-option value=\"2\">Paused</mat-option>\r\n                  <mat-option value=\"3\">In Progress</mat-option>\r\n                  <mat-option value=\"4\">Hold</mat-option>\r\n                  <mat-option value=\"5\">Done</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n\r\n            </div>\r\n\r\n\r\n            <div class=\"tab-content\" *ngFor=\"let myTask of showDetails; let i = index\">\r\n              <div id=\"home\" class=\"tab-pane fade in active\">\r\n                <!-- <div class=\"col-md-12\" *ngIf=\"myTask?.TaskExistForFinishInaModule\">\r\n                  <div class=\"task-main\">\r\n                    <div class=\"colz\">\r\n                      <h2>{{myTask?.tbl_project.project_name}}</h2>\r\n                      <p>{{myTask?.tbl_project.project_code}}</p>\r\n                    </div>\r\n                  </div>\r\n                </div> -->\r\n\r\n                <div class=\"col-md-12 pull-right\" *ngIf=\"myTask?.TaskExistForFinishInaModule\">\r\n                  <div class=\"task-main\">\r\n                    <h3>Module name</h3>\r\n                    <!-- <a href=\"{{myTask.id}}\" class=\"morebt pull-right\">\r\n                      <i class=\"fa fa-chevron-down\"></i> View Taks</a> -->\r\n                    <!-- <button class=\"statusbtcompleted pull-right\">Completed</button> -->\r\n                    \r\n                    <div class=\"pull-right\">\r\n                     \r\n                      <button class=\"requstnewbt pull-right\" *ngIf=\"myTask.tbl_project.status!== 'Completed'\" (click)=\"getId(i,myTask.id)\" matTooltip=\"New Task Request\"\r\n                        data-toggle=\"modal\" data-target=\"#additionalTask\">\r\n                        <i class=\"fa fa-plus\"></i>New Task Request</button>\r\n                    </div>\r\n                    <div class=\"topborder pull-right\"></div>\r\n                    <div class=\"pull-right projectnames\">\r\n                      <h3>Samana Academy</h3>\r\n                        <p>PRO323/2018</p>\r\n                    </div>\r\n                   \r\n                  </div>\r\n\r\n\r\n                  <div id=\"demo{{myTask.id}}\" class=\"\" *ngFor=\"let task of myTask.tbl_project_tasks; let j = index\">\r\n                    <div class=\"col-md-11 pull-right subtasks\">\r\n                      <div class=\"colz\">\r\n                        <p>Task Name</p>\r\n                        <h4>{{task?.task_name}}</h4>\r\n                      </div>\r\n\r\n                      <div class=\"colz pull-right\">\r\n                        <p>Total Hours</p>\r\n                        <h5>{{task?.planned_hour + task?.buffer_hour}} hrs</h5>\r\n                      </div>\r\n                      <div class=\"colz pull-right\" *ngIf=\"task?.status.tbl_task_status.id==5\">\r\n                        <p>Actual Hours</p>\r\n                        <h5>{{task?.actual_hour }} hrs</h5>\r\n                      </div>\r\n\r\n                      <button class=\"statusbt pull-right marginr20\">{{task?.status.tbl_task_status.status }}</button>\r\n                      <div class=\"timebox\">\r\n                        <i class=\"fa fa-clock-o\"></i>\r\n                        <div class=\"timedate\">\r\n                          <p>\r\n                            <span class=\"xx\">{{task?.planned_start_date_time | date:'MMM dd yyyy hh:mm aa'}}</span>\r\n                          </p>\r\n                          <h5>{{task?.starttime}}\r\n                            <!-- <span class=\"xx\">PM</span> -->\r\n                          </h5>\r\n                        </div>\r\n                        <div class=\"topborder\"></div>\r\n                        <div class=\"timedate\">\r\n                          <p>\r\n                            <span class=\"xx\">{{task?.planned_end_date_time | date:'MMM dd yyyy hh:mm aa'}}</span>\r\n                          </p>\r\n                          <h5>{{task?.endtime}}\r\n                            <!-- <span class=\"xx\">PM</span> -->\r\n                          </h5>\r\n                        </div>\r\n                      </div>\r\n\r\n\r\n                      <div class=\"pull-right\" *ngIf=\"task?.showRequest\">\r\n                        <div class=\"topborder pull-right\"></div>\r\n                        <button class=\"requstnewbt pull-right\" matTooltip=\"Aditional time request\" (click)=\"getId1(task,i,j)\" type=\"button\"\r\n                          data-toggle=\"modal\" data-target=\"#extentionTask\">\r\n                          <i class=\"fa fa-plus\"></i>Time Extention Request</button>\r\n                      </div>\r\n                      <div class=\"pull-right\">\r\n                      <ul class=\"taskedit\">\r\n                                       \r\n                          <div class=\"div1\">\r\n                            <div class=\"div\">\r\n                          \r\n                            </div>\r\n                      \r\n                            <p class=\"pse\" [ngClass]=\"{'rnng':task?.status?.status_id==3}\">\r\n                              <span id=\"hr\">{{task?.appendHour}}</span>:\r\n                              <span id=\"min\">{{task?.appendMinute}}</span>:\r\n                              <span id=\"sec\">{{task?.appendSecond}}</span>\r\n                            </p>\r\n                          \r\n                            <div class=\"d2\">\r\n\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"playul\">\r\n                          <li *ngIf=\"task?.status?.status_id == 3\">\r\n                            <button matTooltip=\"Pause\" data-target=\"#demoo\" class=\"iconButton\" data-toggle=\"collapse\" (click)=\"clearReason()\">\r\n                              <i class=\"fa fa-pause\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                            <ul class=\"collapse dropdown-menu puase-popup\" role=\"menu\" id=\"demoo\">\r\n                              <div class=\"col-md-8\">\r\n                                <div class=\"col-md-12 col-xs-6 text-left\">\r\n                                  <label class=\"pad-top\">Reason *</label>\r\n                                </div>\r\n                                <textarea rows=\"4\" cols=\"50\" name=\"name\" [(ngModel)]=\"newTasks.reason\"> </textarea>\r\n                              </div>\r\n                              <div class=\"clearfix\"></div>\r\n                              <br>\r\n                              <div class=\"col-md-4\">\r\n                                <button type=\"submit\" (click)=\"pauseTask(task)\" class=\"btn round-button\">Pause</button>\r\n                              </div>\r\n                            </ul>\r\n                          </li>\r\n                          <li *ngIf=\"task?.status?.status_id == 3\">\r\n                            <button matTooltip=\"Completed\" class=\"iconButton\" data-toggle=\"collapse\" data-target=\"#demo\" (click)=\"clearprogress()\">\r\n                              <i class=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                            <ul class=\"collapse bx-shdw\" id=\"demo\">\r\n                              <div class=\"col-md-8\">\r\n                                <mat-form-field class=\"inputfileds\">\r\n                                  <mat-select placeholder=\"Progress\" name='progress' #group=\"ngModel\" [(ngModel)]=\"newTasks.percentage\">\r\n                                    <mat-option [value]=\"percentage.id\" *ngFor=\"let percentage of percentages;\">{{percentage.percentage}}</mat-option>\r\n                                  </mat-select>\r\n                                </mat-form-field>\r\n                              </div>\r\n                              <div class=\"clearfix\"></div>\r\n                              <div class=\"col-md-4\">\r\n                                <button type=\"submit\" (click)=\"complete(task)\" class=\"btn round-button closepanel\">Save</button>\r\n                              </div>\r\n                            </ul>\r\n                          </li>\r\n                          <li *ngIf=\"task?.status?.status_id == 3\">\r\n                            <button matTooltip=\"Hold\" class=\"iconButton\" data-toggle=\"collapse\" data-target=\"#demo1\" (click)=\"clearhold()\">\r\n                              <i class=\"fa fa-stop\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                            <ul class=\"collapse bx-shdw\" id=\"demo1\">\r\n                              <div class=\"col-md-12 text-left\">\r\n                                <label class=\"pad-top\">Progress * : </label>\r\n                                <mat-form-field class=\"inputfileds\">\r\n                                  <mat-select placeholder=\"Progress\" name='progress' #group=\"ngModel\" [(ngModel)]=\"newTasks.percentage\">\r\n                                    <mat-option [value]=\"percentage.id\" *ngFor=\"let percentage of percentages;\">{{percentage.percentage}}</mat-option>\r\n                                  </mat-select>\r\n                                </mat-form-field>\r\n                                <div class=\"clearfix\"></div>\r\n                                <div class=\"col-md-12 col-xs-6 text-left\">\r\n                                  <div class=\"row\">\r\n                                    <label class=\"pad-top\">Reason * :</label>\r\n                                  </div>\r\n                                </div>\r\n                                <textarea rows=\"4\" cols=\"50\" name=\"name\" [(ngModel)]=\"newTasks.reason\"> </textarea>\r\n                              </div>\r\n                              <div class=\"clearfix\"></div>\r\n                              <br>\r\n                              <div class=\"col-md-4\">\r\n                                <button type=\"submit\" (click)=\"holdTask(task)\" class=\"btn round-button closepane\">Save</button>\r\n                              </div>\r\n                            </ul>\r\n                          </li>\r\n                         \r\n                          <div *ngIf=\"task?.status?.status_id == 1\">\r\n                            <li>\r\n                              <button data-toggle=\"Start\" matTooltip=\"Start\" class=\"iconButton\" (click)=\"start(task, myTask)\">\r\n                                <i class=\"fa fa-play\" aria-hidden=\"true\"></i>\r\n                              </button>\r\n                            </li>\r\n                          </div>\r\n                          <li *ngIf=\"task?.status?.status_id == 3\">\r\n                            <button data-toggle=\"tooltip\" matTooltip=\"Finish\" class=\"iconButton\" (click)=\"Done(task)\">\r\n                              <i class=\"fa fa-check-circle-o\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                          </li>\r\n                          <li *ngIf=\"task?.status?.status_id == 2 || task?.status?.status_id == 4\">\r\n                            <button data-toggle=\"tooltip\" matTooltip=\"Resume\" class=\"iconButton\" (click)=\"resumeTasks(task)\">\r\n                              <i class=\"fa fa-play\" aria-hidden=\"true\"></i>\r\n                            </button>\r\n                          </li>\r\n                        </div>\r\n                        </ul>\r\n                      </div>\r\n\r\n                    </div>\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!--current tab-->\r\n\r\n\r\n\r\n            </div>\r\n            <!--tab content close-->\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/user-task-management/user-task-management.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserTaskManagementComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_ng2_simple_timer__ = __webpack_require__("../../../../ng2-simple-timer/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_ng2_simple_timer___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_ng2_simple_timer__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var UserTaskManagementComponent = (function () {
    function UserTaskManagementComponent(route, config, userService, companyService, snackBar, st) {
        this.route = route;
        this.config = config;
        this.userService = userService;
        this.companyService = companyService;
        this.snackBar = snackBar;
        this.st = st;
        this.done = [];
        this.hold = [];
        this.Resume = [];
        this.completed = [];
        this.viewAll1 = true;
        this.selectbox = false;
        this.showTasks = false;
        this.preloader = false;
        this.finishedAllTaskInaModule = true;
        this.pause = [];
        this.alltask = [];
        this.show = [];
        this.play = [];
        this.showselectedtasks = [];
        this.showTeam = false;
        this.disabled = false;
        this.showComplexity = false;
        this.showNoDataExist = false;
        this.disableTask = [];
        this.disable = false;
        this.sendRequestBtnDisable = false;
        this.sendRequestSpinner = false;
        this.aditionaltaskBtnDisable = false;
        this.aditionaltaskSpinner = false;
        this.count = 0;
        this.Projects = {
            name: '',
            code: '',
            start_date: '',
            developer: [],
            designer: [],
            qc: [],
            start_time: ''
        };
        this.modules = [];
        this.module = {
            module_name: '',
            time: 0,
            tbl_estimation_tasks: [],
        };
        this.userData = [{
                f_name: '',
                l_name: '',
                id: '',
                tbl_team_assocs: []
            }];
        this.newTasks = {
            id: '',
            task_name: '',
            assigned_person: '',
            complexity: '',
            percentage: '',
            planned_hour: 0,
            buffer_hour: 0,
            start_date: '',
            start_time: '',
            end_date: '',
            end_time: 0,
            task_type: '',
            priority: '',
            assigned: '',
            assigned1: '',
            module_id: '',
            docFile: [],
            docSrc: '',
            file: '',
            team: '',
            time: 0,
            description: '',
            timerequired: '',
            reason: '',
            newChecklist: [{ name: '' }],
            status: '',
            timestatus: '',
            tbl_complexity_percentage: { percentage: '' },
            hour: 0,
            minutes: 0,
            seconds: 0,
            totalhour: ''
        };
        this.showAddModuleBtn = false;
        this.appendHour = 0;
        this.appendMinute = 0;
        this.appendSecond = 0;
        // ----------------stopwatch-----------
        // b: any;
        this.b = [];
        this.hour = 0;
        this.miniutes = 0;
        this.second = 0;
        // a: any;
        this.a = [];
        // countt: any;
        this.countt = [];
        this.intervel = 0;
        // ----------------stopwatch-----------
        this.time = {
            hour: 0,
            minutes: 0,
            seconds: 0,
            id: 0
        };
        this.showthisTask = [];
        this.showRequest = [];
        this.viewAllTasks = false;
        this.inProgressTaskId = '';
        this.showAllContent = false;
        this.socket = __WEBPACK_IMPORTED_MODULE_6_socket_io_client__(config.siteUrl);
    }
    UserTaskManagementComponent.prototype.getId = function (index, id) {
        this.module_id = id;
        this.index = index;
        // console.log(index + "  index");
        this.newTasks = {
            id: '',
            task_name: '',
            assigned_person: '',
            complexity: '',
            percentage: '',
            planned_hour: 0,
            buffer_hour: 0,
            start_date: '',
            assigned: '',
            start_time: '',
            end_date: '',
            assigned1: '',
            module_id: '',
            end_time: 0,
            task_type: '',
            priority: '',
            docFile: [],
            time: 0,
            docSrc: '',
            file: '',
            team: '',
            description: '',
            timerequired: '',
            reason: '',
            status: '',
            timestatus: '',
            newChecklist: [{ name: '' }],
            tbl_complexity_percentage: { percentage: '' },
            hour: 0,
            minutes: 0,
            seconds: 0,
            totalhour: ''
        };
    };
    UserTaskManagementComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.preloader = true;
        this.showAddModuleBtn = true;
        this.userService.getUserProjects().subscribe(function (resProjects) {
            _this.projects = resProjects;
        });
        this.socket.on('newtaskrequestAccepted', function (data) {
            _this.getmytasks();
        });
        this.socket.on('approvetimeextentionrequest', function (data) {
            _this.getmytasks();
        });
        this.userService.getAllTasksInModule().subscribe(function (alltasks) {
            _this.alltask = alltasks;
            // this.alltask.forEach(element => {
            // });
        });
        this.userService.getTaskTime().subscribe(function (taskTime) {
            _this.alltask = taskTime;
        });
        this.miliSec = 0;
        this.min = 0;
        this.userService.getUserProfile().subscribe(function (data1) {
            // console.log(data1);
            _this.userData = data1;
            _this.userData.forEach(function (element) {
                _this.assigned_id = element.id;
                element.tbl_team_assocs.forEach(function (team) {
                    _this.count = _this.count + 1;
                });
            });
            console.log(_this.count);
            if (_this.count > 1) {
                _this.showTeam = true;
            }
        });
        this.companyService.getComplexity().subscribe(function (complexity) {
            _this.complexitys = complexity;
        });
        this.selected = 'all';
        this.getmytasks();
        this.userService.getPercentage().subscribe(function (percentage) {
            _this.percentages = percentage;
        });
        this.companyService.getallTeamsforassign().subscribe(function (res) {
            _this.allteam = res;
            // console.log(this.allteam)
        });
    };
    UserTaskManagementComponent.prototype.viewAll = function () {
        this.viewAllTasks = true;
        this.getmytasks();
    };
    UserTaskManagementComponent.prototype.todayTask = function () {
        this.viewAllTasks = false;
        this.getmytasks();
    };
    UserTaskManagementComponent.prototype.addTask = function (index) {
        var _this = this;
        // this.aditionaltaskBtnDisable =true
        // this.aditionaltaskSpinner = true;
        this.newTasks.assigned_person = this.assigned_id;
        this.newTasks.module_id = this.module_id;
        // console.log(this.newTasks);
        this.userService.newTaskRequest(this.newTasks).subscribe(function (data) {
            if (data.success) {
                _this.aditionaltaskBtnDisable = false;
                _this.aditionaltaskSpinner = false;
                _this.closeBtn.nativeElement.click();
                var snackBarRef = _this.snackBar.open('Request send successfully', '', {
                    duration: 2000
                });
            }
            else {
                _this.aditionaltaskBtnDisable = false;
                _this.aditionaltaskSpinner = false;
                var snackBarRef = _this.snackBar.open(data.msg, '', {
                    duration: 2000
                });
            }
        });
    };
    UserTaskManagementComponent.prototype.getId1 = function (task, i, j) {
        this.taskId = task.id;
        this.i = i;
        this.j = j;
        this.newTasks = task;
        this.newTasks.timerequired = '';
        // console.log(this.newTasks);
        //   this.myTasks.forEach(element => {
        //     element.tbl_project_tasks.forEach(project_tasks => {
        //       console.log(project_tasks.tbl_complexity_percentage.percentage);
        //     });
        //   });
    };
    UserTaskManagementComponent.prototype.TimeExtention = function (newTasks) {
        var _this = this;
        this.sendRequestBtnDisable = true;
        this.sendRequestSpinner = true;
        if (!newTasks.timerequired || typeof (newTasks.timerequired) !== 'number') {
            var snackBarRef = this.snackBar.open('Invalid!, Please fill the required time', '', {
                duration: 2000
            });
            this.sendRequestBtnDisable = false;
            this.sendRequestSpinner = false;
        }
        else {
            // console.log(newTasks)
            this.userService.newTimeExtention(newTasks).subscribe(function (data) {
                if (data.success) {
                    _this.closeBtn1.nativeElement.click();
                    var snackBarRef = _this.snackBar.open(' Request send successfully', '', {
                        duration: 2000
                    });
                    _this.sendRequestBtnDisable = false;
                    _this.sendRequestSpinner = false;
                }
                else {
                    var snackBarRef = _this.snackBar.open(data.msg, '', {
                        duration: 2000
                    });
                    _this.sendRequestBtnDisable = false;
                    _this.sendRequestSpinner = false;
                }
            });
        }
    };
    UserTaskManagementComponent.prototype.closeChecklist = function (index) {
        if (this.newTasks.newChecklist.length > 1) {
            this.newTasks.newChecklist.splice(index, 1);
        }
        else {
            var snackBarRef = this.snackBar.open('* Atleast one item required!', '', {
                duration: 2000
            });
            return false;
        }
    };
    UserTaskManagementComponent.prototype.displayDoc = function (fileInput) {
        var _this = this;
        var ext = fileInput.target.files[0].name.split('.').pop().toLowerCase();
        this.newTasks.docFile = fileInput.target.files[0];
        if (fileInput.target.files && fileInput.target.files[0]) {
            var reader = new FileReader();
            reader.onload = (function (e) {
                _this.newTasks.docSrc = e.target['result'];
            });
            reader.readAsDataURL(fileInput.target.files[0]);
        }
    };
    UserTaskManagementComponent.prototype.inArray = function (needle, haystack) {
        var count = haystack.length;
        for (var i = 0; i < count; i++) {
            if (haystack[i] === needle) {
                return true;
            }
        }
        return false;
    };
    UserTaskManagementComponent.prototype.taskStatus = function () {
        var _this = this;
        this.myTasks.forEach(function (element) {
            element.tbl_project_tasks.forEach(function (tasks) {
                if (_this.inArray(tasks.id, tasks.tbl_task_status_assocs) == false) {
                    _this.newTasks.status = 'New';
                    // console.log("if");
                }
                else {
                    // console.log("else");
                    // this.userService.getMyTasks(tasks.id).subscribe(status => {
                    // });
                }
            });
        });
    };
    UserTaskManagementComponent.prototype.callTimer = function () {
        this.miliSec++;
        if (this.miliSec < 100) {
            if (this.miliSec === 99) {
                this.miliSec = 0;
                this.sec++;
                if (this.sec === 60) {
                    this.sec = 0;
                    this.min++;
                }
            }
        }
        else {
            this.miliSec = 0;
        }
        document.getElementById("timer").innerHTML = this.min + ":" + this.sec + ":" + this.miliSec;
    };
    UserTaskManagementComponent.prototype.statusBasedData = function () {
        this.preloader = true;
        this.selectbox = true;
        this.getmytasks();
        if (this.selected == 'all') {
            this.viewAll1 = true;
        }
        else {
            this.viewAll1 = false;
        }
    };
    UserTaskManagementComponent.prototype.onTabLinkClick = function (event) {
        // View All tasks
        this.preloader = true;
        this.selected = 'all';
        this.showAllContent = true;
        if (event.tab.textLabel == 'View All tasks') {
            this.viewAllTasks = true;
            this.getmytasks();
        }
        else if (event.tab.textLabel == "Today's Task") {
            this.viewAllTasks = false;
            this.getmytasks();
        }
        else if (event.tab.textLabel == "Current Task") {
            this.viewAllTasks = true;
            this.showAllContent = false;
            this.getmytasks();
        }
    };
    UserTaskManagementComponent.prototype.getmytasks = function () {
        var _this = this;
        this.myTasks = [];
        this.showDetails = [];
        this.lastStatus = "";
        this.taskToShow = "";
        this.userService.getMyTasks().subscribe(function (data) {
            _this.preloader = false;
            _this.myTasks = data;
            data.forEach(function (module, mdKey) {
                var newTask = [];
                var curTask = [];
                module.tbl_project_tasks.forEach(function (task, key) {
                    console.log(task);
                    var d = new Date(task.planned_start_date_time);
                    var e = new Date(task.planned_end_date_time);
                    task.starttime = d.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });
                    task.endtime = e.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });
                    _this.lastStatus = task.tbl_task_status_assocs[0];
                    if (_this.lastStatus.status_id == _this.selected || _this.selected == 'all') {
                        task.projectId = module.project_id;
                        task.showRequest = (_this.lastStatus.status_id == 5) ? false : true;
                        task.planned_start_date_time = new Date(task.planned_start_date_time);
                        var nowDateTime = new Date();
                        nowDateTime.setHours(0, 0, 0, 0);
                        task.planned_start_date_time = task.planned_start_date_time.setHours(0, 0, 0, 0);
                        task.showThisTask = true;
                        if (_this.viewAllTasks == false) {
                            module.TaskExistForFinishInaModule = false;
                            module.tbl_project_tasks.forEach(function (task) {
                                if (task.tbl_task_status_assocs[0].status_id !== 5 && new Date(task.planned_start_date_time) <= nowDateTime) {
                                    module.TaskExistForFinishInaModule = true;
                                }
                            });
                            if ((new Date(task.planned_start_date_time)) > nowDateTime || _this.lastStatus.status_id == 5) {
                                task.showThisTask = false;
                            }
                        }
                        if (_this.viewAllTasks == true) {
                            module.TaskExistForFinishInaModule = true;
                        }
                        var totalHour_1 = 0;
                        var totalMinutes_1 = 0;
                        var totalSecond_1 = 0;
                        var totalHrinMS = 0;
                        var totalMinutesinMS = 0;
                        var totalSecondinMS = 0;
                        // this.lastStatusEndDate = task.tbl_task_time_assocs[0].end_date_time;
                        task.tbl_task_time_assocs.forEach(function (element) {
                            totalHour_1 += element.hour;
                            totalMinutes_1 += element.minute;
                            totalSecond_1 += element.second;
                        });
                        totalSecondinMS = totalSecond_1 * 1000;
                        totalMinutesinMS = totalMinutes_1 * 1000 * 60;
                        totalHrinMS = totalHour_1 * 1000 * 60 * 60;
                        // });
                        _this.diff = 0;
                        if (_this.lastStatus.status_id == 3) {
                            var taskStartTime1 = new Date(task.tbl_task_time_assocs[0].date_time);
                            _this.diff = Math.abs(Date.now() - taskStartTime1);
                        }
                        var ttlSec = _this.diff + totalHrinMS + totalMinutesinMS + totalSecondinMS;
                        task.appendSecond = Math.floor((ttlSec / 1000) % 60);
                        task.appendMinute = Math.floor((ttlSec / (1000 * 60)) % 60);
                        task.appendHour = Math.floor((ttlSec / (1000 * 60 * 60)) % 24);
                        if (_this.lastStatus.status_id == 3) {
                            _this.inProgressTaskId = task.id;
                            _this.starttime(task);
                        }
                        else if (_this.lastStatus.status_id == 2) {
                            _this.inProgressTaskId = task.id;
                        }
                        task.status = _this.lastStatus;
                        newTask.push(task);
                        if (task.tbl_task_status_assocs[0].status_id == 2 || task.tbl_task_status_assocs[0].status_id == 3 || task.tbl_task_status_assocs[0].status_id == 4 || task.tbl_task_status_assocs[0].status_id == 7) {
                            curTask.push(task);
                        }
                    }
                });
                module.tbl_project_tasks = newTask;
                module.curTask = curTask;
                _this.showDetails.push(module);
            });
        });
    };
    UserTaskManagementComponent.prototype.clearReason = function () {
        this.newTasks.reason = '';
    };
    UserTaskManagementComponent.prototype.clearhold = function () {
        this.newTasks.reason = '';
        this.newTasks.percentage = '';
    };
    UserTaskManagementComponent.prototype.clearprogress = function () {
        this.newTasks.percentage = '';
    };
    // -------------------------stopwatch----------------
    UserTaskManagementComponent.prototype.start = function (task, myTask) {
        var _this = this;
        if (this.inProgressTaskId == '' || task.id == this.inProgressTaskId) {
            this.a = [];
            this.b = [];
            this.countt = [];
            // this.hour = 0
            // this.miniutes = 0
            // this.second = 0
            // console.log(task)
            this.a[task.id] = 0;
            this.b[task.id] = 0;
            this.countt[task.id] = 0;
            this.intervel = 0;
            this.task_id = task.id;
            this.inProgressTaskId = task.id;
            this.userService.startAtask(task).subscribe(function (status) {
                _this.getmytasks();
                //   this.inProgressTaskId = task.id;
                // this.userService.addTimeAssoc(this.time).subscribe(assTimeAssocs => {
                // this.userService.changeStausColor(task.id).subscribe(data => {
                //   console.log("-----------")
                //   console.log(data);
                //   if(data.length > 0){
                //     task.status = data[data.length-1];
                //   }
                //   this.starttime(task);
                // });
                // });
            });
            this.Resume[this.task_id] = false;
            this.completed[this.task_id] = true;
            this.pause[this.task_id] = true;
            this.hold[this.task_id] = true;
            this.done[this.task_id] = true;
            this.time.hour = task.appendHour;
            this.time.minutes = task.appendMinute;
            this.time.seconds = task.appendSecond;
            this.time.id = task.id;
        }
        else {
            var snackBarRef = this.snackBar.open(' Another task alreay Started', '', {
                duration: 2000
            });
        }
    };
    UserTaskManagementComponent.prototype.starttime = function (task) {
        var _this = this;
        this.a[task.id] = 0;
        this.b[task.id] = 0;
        this.countt[task.id] = 0;
        if (this.countt[task.id] == 0 && this.a[task.id] == 0 || this.b[task.id] == 1) {
            this.secondcheck(task);
            this.miniutecheck(task);
            this.intervel = 1000;
            this.showAns(task);
            this.s_id = setInterval(function () {
                _this.showAns(task);
            }, 1000);
        }
    };
    UserTaskManagementComponent.prototype.showAns = function (task) {
        if (this.countt[task.id] == 0 && this.a[task.id] == 0 || this.b[task.id] == 1) {
            // this.second = this.second + 1;
            this.secondcheck(task);
            this.miniutecheck(task);
            task.appendSecond = task.appendSecond + 1;
            // console.log(task)
        }
    };
    UserTaskManagementComponent.prototype.secondcheck = function (task) {
        if (task.appendSecond == 59) {
            task.appendMinute = task.appendMinute + 1;
            task.appendSecond = 0;
        }
    };
    UserTaskManagementComponent.prototype.miniutecheck = function (task) {
        if (task.appendMinute == 59) {
            task.appendHour = task.appendHour + 1;
            task.appendMinute = 0;
        }
    };
    UserTaskManagementComponent.prototype.pause1 = function (task) {
        this.a[task.id] = this.a[task.id] + 1;
        this.b[task.id] = 0;
    };
    UserTaskManagementComponent.prototype.pauseTask = function (task) {
        var _this = this;
        // console.log(this.newTasks.reason);
        this.task_id = task.id;
        // this.userService.getAllTasksInModule().subscribe(alltasks => {
        //   this.alltask = alltasks;
        //   this.alltask.forEach((element, index) => {
        //     // console.log(this.task_id)
        //     if (element.id == this.task_id) {
        //       // this.show[j] = true;
        //       this.disableTask[this.task_id] = false;
        //     } else {
        //       this.disableTask[element.id] = true;
        //     }
        //   });
        // });
        // this.Resume[this.task_id] = true;
        // this.play[this.task_id] = false;
        // this.pause[this.task_id] = false;
        // this.hold[this.task_id] = false;
        // this.done[this.task_id] = false;
        // this.completed[this.task_id] = false;
        this.a[task.id] = this.a[task.id] + 1;
        this.b[task.id] = 0;
        task.reason = this.newTasks.reason;
        // this.newTasks.id = task.id;
        // this.newTasks.hour = task.appendHour;
        // this.newTasks.minutes = task.appendMinute;
        // this.newTasks.seconds = task.appendSecond;
        if (this.newTasks.reason == '') {
            var snackBarRef = this.snackBar.open(' Please fill the reason!', '', {
                duration: 2000
            });
        }
        else {
            this.userService.pauseTask(task).subscribe(function (status) {
                _this.getmytasks();
                // this.userService.changeStausColor(task.id).subscribe(data => {
                //   task.status = data[data.length - 1];
                // });
            });
        }
    };
    UserTaskManagementComponent.prototype.holdTask = function (task) {
        var _this = this;
        this.a[task.id] = this.a[task.id] + 1;
        this.b[task.id] = 0;
        task.reason = this.newTasks.reason;
        task.percentage = this.newTasks.percentage;
        // this.newTasks.id = task.id;
        // this.newTasks.hour = task.appendHour;
        // this.newTasks.minutes = task.appendMinute;
        // this.newTasks.seconds = task.appendSecond;
        if (this.newTasks.percentage == '' || this.newTasks.percentage == null || this.newTasks.reason == '' || this.newTasks.reason == null) {
            var snackBarRef = this.snackBar.open(' Please fill all the fields', '', {
                duration: 2000
            });
        }
        else {
            this.userService.holdTask(task).subscribe(function (status) {
                _this.inProgressTaskId = '';
                _this.getmytasks();
                // this.userService.changeStausColor(task.id).subscribe(data => {
                //   task.status = data[data.length - 1];
                // });
            });
        }
    };
    UserTaskManagementComponent.prototype.timeConversion = function (millisec) {
        var seconds = (millisec / 1000).toFixed(1);
        var minutes = (millisec / (1000 * 60)).toFixed(1);
        var hours = (millisec / (1000 * 60 * 60)).toFixed(1);
        if (seconds < 60) {
            return seconds;
        }
        else if (minutes < 60) {
            return minutes;
        }
        else if (hours < 24) {
            return hours;
        }
    };
    UserTaskManagementComponent.prototype.Done = function (task) {
        var _this = this;
        console.log(task);
        this.a[task.id] = this.a[task.id] + 1;
        this.b[task.id] = 0;
        this.userService.donetask(task).subscribe(function (status) {
            _this.inProgressTaskId = '';
            if (status.success && !task.is_verif_task) {
                var snackBarRef = _this.snackBar.open('Congratulations!!! , your task is submitted for verification', '', {
                    duration: 3000
                });
            }
            if (status.success && task.is_verif_task) {
                var snackBarRef = _this.snackBar.open('Congratulations!!! , Project Completed', '', {
                    duration: 3000
                });
            }
            if (!status.success) {
                var snackBarRef = _this.snackBar.open(status.msg, '', {
                    duration: 3000
                });
            }
            _this.getmytasks();
        });
    };
    UserTaskManagementComponent.prototype.complete = function (task) {
        var _this = this;
        this.task_id = task.id;
        this.a[task.id] = this.a[task.id] + 1;
        this.b[task.id] = 0;
        task.percentage = this.newTasks.percentage;
        // this.newTasks.id = task.id;
        // this.newTasks.hour = task.appendHour;
        // this.newTasks.minutes = task.appendMinute;
        // this.newTasks.seconds = task.appendSecond;
        if (this.newTasks.percentage == '' || this.newTasks.percentage == null) {
            var snackBarRef = this.snackBar.open(' Please select percentage of task', '', {
                duration: 2000
            });
        }
        else {
            this.userService.completeTask(task).subscribe(function (status) {
                _this.inProgressTaskId = '';
                _this.getmytasks();
                // this.userService.changeStausColor(task.id).subscribe(data => {
                //   task.status = data[data.length - 1];
                // });
            });
            // this.Resume[this.task_id] = false;
            // this.play[this.task_id] = false;
            // this.completed[this.task_id] = false;
            // this.pause[this.task_id] = false;
            // this.hold[this.task_id] = false;
            // this.done[this.task_id] = false;
        }
    };
    UserTaskManagementComponent.prototype.resumeTasks = function (task) {
        var _this = this;
        if (this.inProgressTaskId == '' || task.id == this.inProgressTaskId) {
            this.b[task.id] = this.b[task.id] + 1;
            this.showAns(task);
            this.newTasks.id = task.id;
            this.newTasks.hour = task.appendHour;
            this.newTasks.minutes = task.appendMinute;
            this.newTasks.seconds = task.appendSecond;
            this.Resume[this.task_id] = false;
            this.inProgressTaskId = task.id;
            this.userService.resumeTasks(this.newTasks).subscribe(function (status) {
                _this.getmytasks();
                // this.inProgressTaskId = task.id;
                // this.userService.changeStausColor(task.id).subscribe(data => {
                //   task.status = data[data.length - 1];
                // });
            });
        }
        else {
            var snackBarRef = this.snackBar.open(' Another task alreay Started' + this.lastStatus.status_id, '', {
                duration: 2000
            });
        }
    };
    UserTaskManagementComponent.prototype.restartTasks = function (task) {
        var _this = this;
        if (this.inProgressTaskId == '' || task.id == this.inProgressTaskId) {
            this.b[task.id] = this.b[task.id] + 1;
            // this.showAns(task);
            this.newTasks.id = task.id;
            this.newTasks.hour = task.appendHour;
            this.newTasks.minutes = task.appendMinute;
            this.newTasks.seconds = task.appendSecond;
            this.Resume[this.task_id] = false;
            this.inProgressTaskId = task.id;
            this.userService.resumeTasks(this.newTasks).subscribe(function (status) {
                _this.getmytasks();
                // this.inProgressTaskId = task.id;
                // this.userService.changeStausColor(task.id).subscribe(data => {
                //   task.status = data[data.length - 1];
                // });
            });
        }
        else {
            var snackBarRef = this.snackBar.open(' Another task alreay Started' + this.lastStatus.status_id, '', {
                duration: 2000
            });
        }
    };
    UserTaskManagementComponent.prototype._keyPress = function (event) {
        var pattern = /[0-9/ ]/;
        var inputChar = String.fromCharCode(event.charCode);
        if (!pattern.test(inputChar) && event.charCode != 0) {
            // invalid character, prevent input
            event.preventDefault();
        }
    };
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], UserTaskManagementComponent.prototype, "closeBtn", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn1'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], UserTaskManagementComponent.prototype, "closeBtn1", void 0);
    __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["ViewChild"])('closeBtn2'),
        __metadata("design:type", __WEBPACK_IMPORTED_MODULE_0__angular_core__["ElementRef"])
    ], UserTaskManagementComponent.prototype, "closeBtn2", void 0);
    UserTaskManagementComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'user-task-management',
            template: __webpack_require__("../../../../../src/app/components/user-task-management/user-task-management.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-task-management/user-task-management.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__angular_router__["ActivatedRoute"], __WEBPACK_IMPORTED_MODULE_7__config_config__["a" /* Config */], __WEBPACK_IMPORTED_MODULE_3__services_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_4__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */], __WEBPACK_IMPORTED_MODULE_5_ng2_simple_timer__["SimpleTimer"]])
    ], UserTaskManagementComponent);
    return UserTaskManagementComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-task-verification/user-task-verification.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".home{position:relative;}\r\n.task{background:#fbf6f1;width:100%;padding:6px 0;display: inline-block;margin-bottom:6px;}\r\nbutton, input, optgroup, select, textarea{outline:none !important;}\r\n.taskedit{border-left:1px solid #ccc;    display: inline-block;width:100%;margin-top: 5px;}\r\n.task ul li{width:auto;float:left;padding: 8px;}\r\n\ta{color:#111;}\r\n.task h5{padding-top:13px;padding-top: 6px;}\r\n.hash{background:#f7f6f4;}\r\n.assigned{background:#f3f8f2;border-left:3px solid #6fa93b;}\r\n.unassigned{background:#fbf1ef;border-left:3px solid #e5553d;}\r\n\r\n.assigned h5 {\r\n    padding-top: 13px;\r\n    padding-top: 6px;\r\n    display: table-cell;\r\n    padding-right: 15px;\r\n}\r\n.assigned ul li{padding: 6px}\r\n.mrg-tp{margin-top:15px !important;}\r\n.round-button {\r\n    border-radius: 20px;\r\n    margin: 0;\r\n    float: left;\r\n    background: #f37600;\r\n    color: #fff;\r\n    padding: 7px 15px;\r\n    transition: background 2s;\r\n\tmargin-bottom:15px;\r\n}\r\n.round-button:hover {\r\n    background: #ffaa05;\r\n    color: #fff;\r\n}\r\n.dropdown ul.dropdown-menu:before {\r\n    content: \"\";\r\n    border-bottom: 10px solid #fff;\r\n    border-right: 10px solid transparent;\r\n    border-left: 10px solid transparent;\r\n    position: absolute;\r\n    top: -10px;\r\n    right: 16px;\r\n    z-index: 10;\r\n}\r\n.round-button:hover, .round-button:focus, .round-button.focus{color:#fff;}\r\nbutton, input, optgroup, select, textarea{outline:none;}\r\n.effect-1 ~ .focus-border{position: absolute; bottom: 0; left: 15px; width: 0; height: 2px;background-color: #bba28b; transition: 0.4s;right:15px;}\r\n.effect-1:focus ~ .focus-border{width: 95%; transition: 0.4s;}\r\n.effect-1{border: 0; padding: 7px 0; border-bottom: 1px solid #ccc;width:100%;}\r\n.style{width:100%;}\r\nlabel{font-size:15px;color:#4a4a4a;font-weight:normal;padding:5px 0;}\r\n.mrg-2{margin-bottom:10px;}\r\n.dropdown-menu > li > a {\r\n    display: block;\r\n    padding: 3px 20px;\r\n    clear: both;\r\n    font-weight: normal;\r\n    line-height: 25px;\r\n    color: #333333;\r\n    white-space: nowrap;\r\n}\r\n.addmodule {\r\n    padding: 20px 10px!important;\r\n    min-width: 357px;\r\n    right: inherit;\r\n    left: 20px;\r\n}\r\n.round{width:14px;height:14px;border-radius:50%;background:#70a93e;float:left;margin-right:7px;}\r\n.round2{background:#e4573c;}\r\n.notice p{font-size:11px;}\r\n.style{border:none;border-bottom: 1px solid #ccc;}\r\n.white {\r\n    background: #ffffff none repeat scroll 0 0;\r\n    \r\n    display: inline-block;\r\n    padding: 33px 25px;\r\n    width: 100%;\r\n}\r\n.btn-file{padding:0;}\r\n.white {\r\n    background: #ffffff none repeat scroll 0 0;\r\n    \r\n    display: inline-block;\r\n    padding: 33px 25px;\r\n    width: 100%;\r\n\tmargin-bottom:20px;\r\n}\r\n.center-bt{margin:20px auto 10px auto;float:none;}\r\n.project-planning .table > thead > tr > th{border:none;font-weight:normal;}\r\n.project-planning .table{margin-bottom:0;}\r\n@media only screen and (max-width : 767px) {\r\n.mrg-2 {\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.task ul li{    padding: 2px;}\t\r\n.addmodule{    min-width: 274px;}\r\n.martop {\r\n    margin-top: 35px;\r\n}\r\n.taskedit {\r\n    border-left: 1px solid #ccc;\r\n    display: inline-block;\r\n    width: 78%;\r\n    margin-top: 5px;\r\n    float: right;\r\n}\r\n.task{padding-bottom: 20px;}\r\n.addmodule .style{    margin-bottom: 18px;}\r\n}\r\n.request-bt{font-size:10px;    padding: 4px 8px;\r\n    margin-top: 2px;\r\n    margin-bottom: 0;margin-left: 4px;}\r\n    .taskedit-request {\r\n        \r\n        display: inline-block;\r\n        width:100%;\r\n        margin-top: 5px;\r\n        \r\n    }\r\n    .add-project {\r\n        float: right;\r\n        margin-right:0px;\r\n        margin-top:0px;\r\n        border: none;\r\n        width: 30px;\r\n        height: 30px;\r\n        border-radius: 50%;\r\n        padding: 0;\r\n        font-size: 24px;\r\n        line-height: 29px;\r\n        box-shadow: 4px 7px 31px #ffbb8e;\r\n        text-align: center;\r\n    }\r\n\r\n    .add-project {\r\n        background: #fe6a07 none repeat scroll 0 0;\r\n        border-radius: 100px;\r\n        color: #ffffff;\r\n        font-size: 14px;\r\n        font-weight: normal;\r\n        \r\n        position: relative;\r\n    }\r\n    .home{position:relative;}\r\n    .task{background:#fbf6f1;width:100%;padding:6px 0;display: inline-block;margin-bottom:6px;}\r\n    button, input, optgroup, select, textarea{outline:none !important;}\r\n    .taskedit{border-left:1px solid #ccc;    display: inline-block;width:100%;margin-top: 5px;}\r\n    .task ul li{width:auto;float:left;padding: 8px;}\r\n        a{color:#111;}\r\n    .task h5{padding-top:13px;padding-top: 6px;}\r\n    .hash{background:#f7f6f4;}\r\n    .assigned{background:#f3f8f2;border-left:3px solid #6fa93b;}\r\n    .unassigned{background:#fbf1ef;border-left:3px solid #e5553d;}\r\n    \r\n    .assigned h5 {\r\n        padding-top: 13px;\r\n        padding-top: 6px;\r\n        display: table-cell;\r\n        padding-right: 15px;\r\n    }\r\n    .assigned ul li{padding: 6px}\r\n    .mrg-tp{margin-top:15px !important;}\r\n    .round-button {\r\n        border-radius: 20px;\r\n        margin: 0;\r\n        float: left;\r\n        background: #f37600;\r\n        color: #fff;\r\n        padding: 7px 15px;\r\n        transition: background 2s;\r\n        margin-bottom:15px;\r\n    }\r\n    .round-button:hover {\r\n        background: #ffaa05;\r\n        color: #fff;\r\n    }\r\n    .dropdown ul.dropdown-menu:before {\r\n        content: \"\";\r\n        border-bottom: 10px solid #fff;\r\n        border-right: 10px solid transparent;\r\n        border-left: 10px solid transparent;\r\n        position: absolute;\r\n        top: -10px;\r\n        right: 16px;\r\n        z-index: 10;\r\n    }\r\n    .round-button:hover, .round-button:focus, .round-button.focus{color:#fff;}\r\n    button, input, optgroup, select, textarea{outline:none;}\r\n    .effect-1 ~ .focus-border{position: absolute; bottom: 0; left: 15px; width: 0; height: 2px;background-color: #bba28b; transition: 0.4s;right:15px;}\r\n    .effect-1:focus ~ .focus-border{width: 95%; transition: 0.4s;}\r\n    .effect-1{border: 0; padding: 7px 0; border-bottom: 1px solid #ccc;width:100%;}\r\n    .style{width:100%;}\r\n    label{font-size:15px;color:#4a4a4a;font-weight:normal;padding:5px 0;}\r\n    .mrg-2{margin-bottom:10px;}\r\n    .dropdown-menu > li > a {\r\n        display: block;\r\n        padding: 3px 20px;\r\n        clear: both;\r\n        font-weight: normal;\r\n        line-height: 25px;\r\n        color: #333333;\r\n        white-space: nowrap;\r\n    }\r\n    .addmodule {\r\n        padding: 20px 10px!important;\r\n        min-width: 357px;\r\n        right: inherit;\r\n        left: 20px;\r\n    }\r\n    .round{width:14px;height:14px;border-radius:50%;background:#70a93e;float:left;margin-right:7px;}\r\n    .round2{background:#e4573c;}\r\n    .notice p{font-size:11px;}\r\n    .style{border:none;border-bottom: 1px solid #ccc;}\r\n    .white {\r\n        background: #ffffff none repeat scroll 0 0;\r\n        \r\n        display: inline-block;\r\n        padding: 33px 25px;\r\n        width: 100%;\r\n    }\r\n    .btn-file{padding:0;}\r\n    .white {\r\n        background: #ffffff none repeat scroll 0 0;\r\n        \r\n        display: inline-block;\r\n        padding: 33px 25px;\r\n        width: 100%;\r\n        margin-bottom:20px;\r\n    }\r\n    .center-bt{margin:20px auto 10px auto;float:none;}\r\n    .project-planning .table > thead > tr > th{border:none;font-weight:normal;}\r\n    .project-planning .table{margin-bottom:0;}\r\n    @media only screen and (max-width : 767px) {\r\n    .mrg-2 {\r\n        margin-bottom: 15px;\r\n    }\r\n    \r\n    .task ul li{    padding: 2px;}\t\r\n    .addmodule{    min-width: 274px;}\r\n    .martop {\r\n        margin-top: 35px;\r\n    }\r\n    .taskedit {\r\n        border-left: 1px solid #ccc;\r\n        display: inline-block;\r\n        width: 78%;\r\n        margin-top: 5px;\r\n        float: right;\r\n    }\r\n    .task{padding-bottom: 20px;}\r\n    .addmodule .style{    margin-bottom: 18px;}\r\n    }\r\n    .padd-bt{padding-bottom: 20px;}\r\n    .psh-left{padding-left:5% ;}\r\n    .psh-left .form-group{margin-bottom:0px;}\r\n    .modal-content{border-radius:0;box-shadow:none;}\r\n    .modal-header {\r\n        padding: 7px 15px;\r\n        border-bottom: 1px solid #e5e5e5;\r\n        background: #da524f;\r\n    }\r\n    .modal-title {\r\n        margin: 0;\r\n        line-height: 26px;\r\n        font-size: 15px;\r\n        color: #fff;\r\n    }\r\n    .modal{top:0;}\r\n    .modal-header {\r\n        padding: 10px 30px;\r\n        border-bottom: 1px solid #e5e5e5;\r\n        background: #fe6a07;\r\n      }\r\n      .modal-content{\r\n      box-shadow:none;\r\n      border-radius: 9px;\r\n      overflow: hidden;\r\n      \r\n      }\r\n      .modal-title{color:#fff;}\r\n      .modal-body{    padding:20px 30px;}\r\n      .modal-body input{border:none;}\r\n      .modal-body input{padding: 0;}\r\n      .pad-top{padding-top:20px;}\r\n      .wdth{width:100% !important;}\r\n      .brd{    border: none;\r\n        height: 54px;}\r\n        .material-icons{\r\n            font-size: 20px;\r\n            float: left;\r\n            padding-right: 12px;\r\n            padding-top: 5px;\r\n        }\r\n        .close-bt{    width: 10px;\r\n            background: none;\r\n            float: right;\r\n            margin-top: 31px;\r\n            color: #111;\r\n            font-size: 11px;}\r\n        .padd-bt{    padding: 7px 6px !important;\r\n            font-size: 12px !important;\r\n            margin-top: 24px;}\r\n      .center{text-align: center;}\r\n      .center .round-button{margin:0 auto;float:none ;}\r\n      .editz{min-width: 100px;width: 100%;\r\n        top: 30px;}\r\n        .editz li{padding:0 !important;    width: 100% !important;}\r\n        .editz2 {\r\n            min-width: 522px;\r\n            width: 346%;\r\n            top: 30px;\r\n            left: 0;\r\n            max-width: 492px;\r\n            overflow: hidden;\r\n        }\r\n        .no-brdr{border:none !important;}\r\n        .am{\r\n            float: left;\r\n            background: none;\r\n            border: 2px solid #e6cebe;\r\n            margin-top: 23%;\r\n        }\r\n        \r\n        .date-time{}\r\n        \r\n        .iconButton {\r\n            background-color: transparent;\r\n            border: none;\r\n        }\r\n        .puase-popup{    top: 42%;\r\n            left: 12%;width:auto;}\r\n            .tooltip {\r\n                position: relative;\r\n                display: inline-block;\r\n                border-bottom: 1px dotted black;\r\n            }\r\n            \r\n            .tooltip .tooltiptext {\r\n                visibility: hidden;\r\n                width: 120px;\r\n                background-color: black;\r\n                color: #fff;\r\n                text-align: center;\r\n                border-radius: 6px;\r\n                padding: 5px 0;\r\n            \r\n                /* Position the tooltip */\r\n                position: absolute;\r\n                z-index: 1;\r\n            }\r\n            \r\n            .tooltip:hover .tooltiptext {\r\n                visibility: visible;\r\n            }\r\n            .basic-container {\r\n                padding: 5px;\r\n              }\r\n              \r\n              .version-info {\r\n                font-size: 8pt;\r\n                float: right;\r\n              }\r\n              #demo{position: absolute;\r\n              overflow: hidden;\r\n              background: rgb(255, 255, 255);\r\n              z-index: 100;}\r\n              #demo1{\r\n                overflow: hidden;\r\n                position: absolute;\r\n                background: #fff;\r\n                z-index: 1\r\n              }\r\n              .bx-shdw{\r\n                border-radius: 4px;\r\n                box-shadow: 0px 5px 34px -6px #333;\r\n              }\r\n              .martop h5{\r\n                  color: #fff;\r\n                  text-transform: capitalize;\r\n              }\r\n              .task {\r\n                background: #d25453;\r\n                color: #fff;\r\n                border-radius: 6px;\r\n                box-shadow: 3px 9px 12px -9px #333;\r\n              }\r\n              .add-project{\r\n                box-shadow: 2px 5px 16px -4px #333\r\n              }\r\n              textarea{\r\n                  color: #333;\r\n              }\r\n              \r\n              .pse{\r\n                color: #aeb385;\r\n                font-weight: 800;\r\n              }\r\n              .rnng{\r\n                color: #fffb44 !important;\r\n                font-weight: 800;\r\n              }\r\n              .fa{\r\n                font-weight: 800;\r\n              }\r\n              .mdl-name{\r\n                  text-transform: capitalize;\r\n              }\r\n              .icn-rnd{\r\n                  background-color: #ccc;\r\n                  border-radius: 50%;\r\n                  width: 11px;\r\n                  height: 11px;\r\n                  margin: 0;\r\n                  padding: 0;\r\n                  display: inline-block;\r\n              }\r\n              .rnd-lbl{\r\n                  display: inline;\r\n              }\r\n              .mdl-clr{\r\n                background-color: #d25453;\r\n              }\r\n              .new-clr{\r\n                background-color: #0294a5;\r\n              }\r\n              .in-clr{\r\n                background-color: #48a97c;\r\n              }\r\n              .hld-clr{\r\n                background-color: #ab2e48;\r\n\r\n              }\r\n              .done-clr{\r\n                background-color: #616c70\r\n              }\r\n              .pause-clr{\r\n                  background-color: #3e4d73;\r\n              }\r\n              .rnng-bx-shdw{\r\n                  box-shadow: 10px 10px 10px 10px #333;\r\n              }\r\n              .blinking{\r\n                animation:blinkingText 1.3s infinite;\r\n            }\r\n            @keyframes blinkingText{\r\n                0%{     color: #fffb44;    }\r\n                /* 49%{    color: transparent; } */\r\n                50%{    color: transparent; }\r\n                /* 99%{    color:transparent;  } */\r\n                100%{   color: #fffb44;    }\r\n            }\r\n            .tsk-lbl{\r\n                color: #e4c6c6;\r\n                font-size: 11px;\r\n                padding-top: 4px;\r\n                float: left;\r\n                white-space: pre;\r\n            }\r\n            .tsk-dt{\r\n                margin: 0;\r\n                padding-top: 0 !important;\r\n            }\r\n            .martop h5{float:left;}\r\n            .align-task{width:auto;float:left;}\r\n            ", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-task-verification/user-task-verification.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\n  <div class=\"container-fluid display-table\">\n    <div class=\"row display-table-row\">\n      <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\n        <!-- sidebar-->\n        <user-sidebar></user-sidebar>\n        <!-- end sidebar-->\n      </div>\n      <div class=\"col-md-12 col-xs-12\">\n        <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\n        <!-- topbar-->\n        <user-topbar></user-topbar>\n        <div class=\"col-md-12\">\n            <h2 style=\"text-align:left;\">Verification Task</h2>\n            <ul class=\"breadcrumb\">\n              <li><a>Task</a></li>\n              <!-- <li><a routerLink=\"/company-request-management\">Time Extension Request List</a></li> -->\n              \n              <li>Verification Task</li>\n            </ul>\n          </div>\n \n        <!-- end topbar-->\n        <div class=\"user-dashboard\">\n          <!-- <h1>Hello, JS</h1> -->\n          <div class=\"row\">\n            <div class=\"col-md-10 col-sm-12 col-xs-12 gutter \">\n              <div class=\"white project-planning\">\n                <h4 style=\"background-color: #1cc6dc;color:#fff;padding: 10px;\" class=\"text-center\">Verification Task</h4>\n                <div class=\"pull-right\" *ngIf=\"isProjects\">\n\n                  <mat-form-field class=\"filter\">\n                    <mat-select (change)=\"getVerificationTasks()\" [(ngModel)]=\"info.projectId\" >\n                      <mat-option value=\"all\">All Project</mat-option>\n                      <mat-option *ngFor=\"let proj of projects\" value=\"{{proj.id}}\">{{proj.project_name}}</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                </div>\n                <div *ngIf=\"preloader\">\n                    <app-spinner></app-spinner>\n                </div>\n                <div *ngIf=\"!isProjects\">\n                    <div>Presently there is no completed task to verify.</div>\n                </div>\n\n                <div *ngIf=\"isProjects\" style=\"margin-top: 65px;\">\n                <div *ngFor=\"let myTask of showDetails; let i = index\" >\n                  <div class=\"form-group\" *ngIf=\"myTask?.showModule\">\n                    <div class=\"col-md-2\">\n                      <label for=\"\">\n                        <b>Project Name </b>\n                      </label>\n                      <span> : </span>\n                    </div>\n                    <div class=\"col-md-2\">\n                      <div class=\"row\">\n                        <label for=\"\" class=\"label2\">\n                          <b>{{myTask.tbl_project.project_name}}</b>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                \n\n                     \n                        <div class=\"col-md-12 col-xs-12 pull-right\" *ngIf=\"myTask?.showModule\">\n                          <div class=\"task\">\n                            <div class=\"col-md-10 col-xs-12\">\n                              <!-- <p>dfd</p> -->\n                              <h5 class=\"mdl-name\">{{myTask.module_name}}</h5>\n                            </div>\n                          </div>\n                        </div>\n                        <!-- <div [dragula]=\"'myBag'\"> -->\n                        <!-- <div *ngFor=\"let task of myTasks[i].tbl_project_tasks; let j = index\" > -->\n                        <div *ngFor=\"let task of myTask.tbl_project_tasks; let j = index\">\n                          <!-- <div *ngFor=\"let task1 of myTasks[i].tbl_project_tasks[j].tbl_task_status_assocs; let y = index\"> -->\n                          <div class=\"col-md-11 col-xs-12 pull-right\">\n                            <!-- <div class=\"task assigned\" ng-style=\"background-color :task.status?.tbl_task_status?.color\" > -->\n                            <div class=\"task assigned\" *ngIf=\"task.showThisTask\" [ngStyle]=\"{'background-color': task.status?.tbl_task_status.color}\">\n\n                              <div>\n                                <div class=\"col-md-8 col-xs-7 martop\">\n                                  <!-- <h5> {{task.status?.tbl_task_status.color }}</h5>-->\n                                  <label class=\"tsk-lbl\">Task:</label>\n                                  <h5 class=\"tsk-dt\">{{task.task_name}}</h5>\n                                  <div class=\"clearfix\"></div>\n                                  <label class=\"tsk-lbl\">Total hour :</label>\n                                  <h5 class=\"tsk-dt\">{{task.planned_hour + task.buffer_hour}} hrs</h5>\n                                  <div class=\"align-task\">\n                                    <label class=\"tsk-lbl\">Planned hour :</label>\n                                    <h5 class=\"tsk-dt\">{{task.planned_hour}} hrs</h5>\n                                  </div>\n                                  <div class=\"align-task\">\n                                    <label class=\"tsk-lbl\">Buffer hour :</label>\n                                    <h5 class=\"tsk-dt\">{{task.buffer_hour}} hrs</h5>\n                                  </div>\n                                  <div class=\"align-task\" *ngIf=\"task?.status.tbl_task_status.id==5\">\n                                    <label class=\"tsk-lbl\">Actual Hour :</label>\n                                    <h5 class=\"tsk-dt\">{{task?.actual_hour }} Hrs</h5>\n                                  </div>\n                                  <div class=\"align-task\">\n                                    <label class=\"tsk-lbl\">Assigned planned start date :</label>\n                                    <h5 class=\"tsk-dt\">{{task.planned_start_date_time | date:'MMM dd yyyy hh:mm aa'}}</h5>\n                                  </div>\n                                  <div class=\"align-task\">\n                                    <label class=\"tsk-lbl\">Assigned planned end date :</label>\n                                    <h5 class=\"tsk-dt\">{{task.planned_end_date_time | date:'MMM dd yyyy hh:mm aa'}}</h5>\n                                  </div>\n                                  <div class=\"align-task\">\n                                    <label class=\"tsk-lbl\">Status :</label>\n                                    <h5 class=\"tsk-dt\">{{task?.status.tbl_task_status.status }}</h5>\n                                  </div>\n\n                                </div>\n                                <div class=\"col-md-4\">\n                                  <div class=\"row\">\n                                    <div class=\"col-md-4 col-xs-5\" *ngIf=\"task.showRequest\">\n                                      <ul class=\"taskedit-request\">\n                                        <button matTooltip=\"Aditional time request\" (click)=\"getId1(task,i,j)\" type=\"button\" class=\"btn round-button request-bt\"\n                                          data-toggle=\"modal\" data-target=\"#extentionTask\">Request</button>\n                                      </ul>\n                                    </div>\n                                    <div class=\"col-md-8 col-xs-5\">\n                                      <!-- ---------------------------------------------------------------------------------------------------- -- -->\n                                      <ul class=\"taskedit\">\n                                        <app-spinner class=\"loadingImg{{task.id}}\" style=\"display: none\"></app-spinner>\n                                \n                                        <li *ngIf=\"task.status?.status_id == 5\">\n                                          <button matTooltip=\"Re-submit\" class=\"iconButton verButtons{{task.id}}\" data-toggle=\"collapse\" data-target=\"#demo1\" (click)=\"clearReTask()\">\n                                            <i class=\"fa fa-stop\" aria-hidden=\"true\"></i>\n                                          </button>\n                                          <ul class=\"collapse bx-shdw\" id=\"demo1\">\n                                            <div class=\"col-md-12 text-left\">\n                                              <label class=\"pad-top\">Category * : </label>\n                                              <mat-form-field class=\"inputfileds\">\n                                                <mat-select placeholder=\"Category\" name='reason' [(ngModel)]=\"reTask.category\"  >\n                                                  <mat-option value=\"billable\" >Billable</mat-option>\n                                                  <mat-option value=\"Non-Billable\" >Non Billable</mat-option>\n                                                </mat-select>\n                                              </mat-form-field>\n                                              <div class=\"clearfix\"></div>\n                                              <div class=\"col-md-12 col-xs-6 text-left\">\n                                                <div class=\"row\">\n                                                  <label class=\"pad-top\">Reason * :</label>\n                                                </div>\n                                              </div>\n                                              <textarea rows=\"4\" cols=\"50\" name=\"name\" [(ngModel)]=\"reTask.reason\"> </textarea>\n                                            </div>\n                                            <div class=\"clearfix\"></div>\n                                            <br>\n                                            <div class=\"col-md-4\">\n                                              <button type=\"submit\" (click)=\"resubmit(task)\" class=\"btn round-button closepane\">Resubmit</button>\n                                            </div>\n                                          </ul>\n                                        </li>\n                                        \n                                     \n                                        <li *ngIf=\"task.status?.status_id == 5\">\n                                          <button data-toggle=\"tooltip\" matTooltip=\"Verify\" class=\"iconButton verButtons{{task.id}}\" (click)=\"verifyTask(task)\">\n                                            <i class=\"fa fa-check-circle-o\" aria-hidden=\"true\"></i>\n                                          </button>\n                                        </li>\n                                  \n                                      </ul>\n                                    </div>\n                                  </div>\n                                </div>\n                                <div class=\"clearfix\"></div>\n                              </div>\n                            </div>\n                            <!-- </div> -->\n                          </div>\n                          <!-- </div> -->\n                        </div>\n                    \n                  \n                </div>\n                </div>\n                <!-- <div class=\"col-md-12\" *ngIf=\"!viewAllTasks\">\n                  <button type=\"button\" class=\"btn round-button dropdown-toggle mrg-tp pull-right\" data-toggle=\"dropdown\" (click)=\"viewAll()\">View All</button>\n                  <button type=\"button\" (click)=\"getId(i)\" data-toggle=\"modal\" data-target=\"#addTaskModal\" class=\"btn round-button pull-right right-btn\">Add Task</button>\n                </div>\n                <div class=\"col-md-12\" *ngIf=\"viewAllTasks\">\n                  <button type=\"button\" class=\"btn round-button dropdown-toggle mrg-tp pull-right\" data-toggle=\"dropdown\" (click)=\"todayTask()\">Show Today's Task Only</button>\n                  <button type=\"button\" (click)=\"getId(i)\" data-toggle=\"modal\" data-target=\"#addTaskModal\" class=\"btn round-button pull-right right-btn\">Add Task</button>\n                </div> -->\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</body>"

/***/ }),

/***/ "../../../../../src/app/components/user-task-verification/user-task-verification.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserTaskVerificationComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_ng2_simple_timer__ = __webpack_require__("../../../../ng2-simple-timer/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_ng2_simple_timer___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_ng2_simple_timer__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var UserTaskVerificationComponent = (function () {
    function UserTaskVerificationComponent(route, routes, config, userService, companyService, snackBar, st) {
        this.route = route;
        this.routes = routes;
        this.config = config;
        this.userService = userService;
        this.companyService = companyService;
        this.snackBar = snackBar;
        this.st = st;
        this.showDetails = [];
        this.info = {
            projectId: 'all'
        };
        this.reTask = {
            reason: '',
            category: ''
        };
        this.isProjects = false;
        this.socket = __WEBPACK_IMPORTED_MODULE_6_socket_io_client__(config.siteUrl);
    }
    // constructor() { }
    UserTaskVerificationComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.socket.on('newtaskdone', function (data) {
            _this.refresh();
        });
        this.refresh();
    };
    UserTaskVerificationComponent.prototype.refresh = function () {
        var _this = this;
        this.userService.getUserProjects().subscribe(function (data) {
            _this.projects = data;
        });
        this.getVerificationTasks();
    };
    UserTaskVerificationComponent.prototype.getVerificationTasks = function () {
        var _this = this;
        this.userService.getVerificationTasks(this.info).subscribe(function (data) {
            _this.showDetails = [];
            // console.log(data);
            data.forEach(function (modul, mdKey) {
                var newTask = [];
                modul.showModule = false;
                modul.tbl_project_tasks.forEach(function (task, key) {
                    console.log(modul);
                    var lastStatus = task.tbl_task_status_assocs[0];
                    if ((lastStatus.status_id == 5 || lastStatus.status_id == 6) && !task.is_verif_task) {
                        modul.showModule = true;
                        task.showThisTask = true;
                        _this.isProjects = true;
                        task.status = lastStatus;
                        newTask.push(task);
                    }
                });
                modul.tbl_project_tasks = newTask;
                _this.showDetails.push(modul);
            });
        });
    };
    UserTaskVerificationComponent.prototype.verifyTask = function (task) {
        var _this = this;
        $('.verButtons' + task.id).hide();
        $('.loadingImg' + task.id).show();
        this.userService.verifyTask(task).subscribe(function (status) {
            var snackBarRef = _this.snackBar.open(status.msg, '', {
                duration: 2000
            });
            _this.getVerificationTasks();
        });
    };
    UserTaskVerificationComponent.prototype.clearReTask = function () {
        this.reTask.reason = '';
        this.reTask.category = '';
    };
    UserTaskVerificationComponent.prototype.resubmit = function (task) {
        var _this = this;
        if (this.reTask.category == '') {
            var snackBarRef = this.snackBar.open("Please Choose Category", '', {
                duration: 2000
            });
        }
        else if (this.reTask.reason == '') {
            var snackBarRef = this.snackBar.open("Please Enter Reason", '', {
                duration: 2000
            });
        }
        else {
            $('.verButtons' + task.id).hide();
            $('.loadingImg' + task.id).show();
            task.reason = this.reTask.reason;
            task.category = this.reTask.category;
            this.userService.resubmitTask(task).subscribe(function (status) {
                var snackBarRef = _this.snackBar.open(status.msg, '', {
                    duration: 2000
                });
                _this.getVerificationTasks();
            });
        }
    };
    UserTaskVerificationComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'user-task-verification',
            template: __webpack_require__("../../../../../src/app/components/user-task-verification/user-task-verification.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-task-verification/user-task-verification.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__angular_router__["ActivatedRoute"], __WEBPACK_IMPORTED_MODULE_2__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_7__config_config__["a" /* Config */], __WEBPACK_IMPORTED_MODULE_3__services_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_4__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */], __WEBPACK_IMPORTED_MODULE_5_ng2_simple_timer__["SimpleTimer"]])
    ], UserTaskVerificationComponent);
    return UserTaskVerificationComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-task-vs-status/user-task-vs-status.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, "html, body {\r\n  height: 100%;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n}\r\n\r\nbody {\r\n  background: linear-gradient(to bottom, #606c88 0%, #3f4c6b 100%);\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n}\r\n@media only screen and (max-width : 1920px) {\r\n  \r\n  \r\n  \r\n  }\r\n  \r\n  @media only screen and (max-width : 1600px) {\r\n  \r\n  }\r\n  \r\n  \r\n  @media only screen and (max-width : 1366px) {\r\n  \r\n  \r\n  }\r\n  \r\n  @media only screen and (max-width : 1280px) {\r\n\r\n.gutter .tasklabel{    background: #efefef;\r\n  padding: 17px 0px;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  margin: 10px 0;\r\n  border: 1px solid #ccc;\r\n  font-weight: bold;\r\n  font-size: 10px;\r\n  \r\n}  \r\n.mrg-rht2{    margin-left: -10%;}\r\n  }\r\n  \r\n  @media only screen and (max-width : 1024px) {\r\n  \r\n  }\r\n  @media only screen and (max-width : 768px) {\r\n\r\n\r\n  }\r\n.bg-g{background:#17a88f;color:#fff; padding: 10px;margin-bottom:10px;}\r\n.bg-hash{background:#E9E9E9;padding: 10px;margin-bottom:10px;}\r\n.bg-hash select{background:none;border:none;width:100%;}\r\n.total{font-weight:700;padding-top: 20px; line-height: 36px;}\r\n.widget{margin-top:9%;}\r\n.tasklabel{       background: #efefef;\r\n  \r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  margin: 10px 0;\r\n  border: 1px solid #ccc;\r\n  font-weight: bold;\r\n \r\n}\r\n.pie {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  -webkit-filter: drop-shadow(0 2px 0px #333);\r\n          filter: drop-shadow(0 2px 0px #333);\r\n}\r\n\r\n.data-path:hover {\r\n  cursor: pointer;\r\n}\r\n\r\n.data-text {\r\n  transition: transform .2s ease-in-out;\r\n  fill: #fff;\r\n}\r\n.data-text__value {\r\n  font-size: 7rem;\r\n  transform: translateY(-0.5rem);\r\n  opacity: 0;\r\n}\r\n.data-text__name {\r\n  font-size: 2rem;\r\n  transform: translateY(0.5rem);\r\n  opacity: 0;\r\n}\r\n.data-text--show {\r\n  transform: translateY(0);\r\n  animation: fadeGraphTextIn 0.5s forwards;\r\n}\r\n.data-text:hover {\r\n  -webkit-user-select: none;\r\n     -moz-user-select: none;\r\n      -ms-user-select: none;\r\n          user-select: none;\r\n}\r\nh1{text-align:center;}\r\n.sales{margin-bottom: 25px;}\r\n.legend-text {\r\n  fill: #fff;\r\n}\r\n\r\n@keyframes fadeGraphTextIn {\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n}\r\n.sales{    margin-bottom: 20px;}\r\n", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-task-vs-status/user-task-vs-status.component.html":
/***/ (function(module, exports) {

module.exports = "<div>\r\n  <h1><b>No.of  tasks vs status</b></h1>\r\n  <div class=\"row\">\r\n      <div class=\"col-md-5 col-sm-5 col-xs-12\">\r\n        <div class=\"col-md-10 col-md-offset-1\">\r\n        <div class=\"col-md-6 bg-g\">*Select Project</div>\r\n        <div class=\"col-md-6 bg-hash\">\r\n          <select  (change)=\"taskstatus()\" [(ngModel)]=\"selectedValue\">\r\n            <option *ngFor=\"let prj of projects\" value=\"{{prj.id}}\">{{prj.project_name}}</option>\r\n          </select>\r\n          <!-- <mat-form-field>\r\n            <mat-select placeholder=\"Favorite food\" (change)=\"getAllProjects()\" [(ngModel)]=\"selectedValue\" name=\"food\">\r\n              <mat-option*ngFor=\"let prj of projects\" [value]=\"{{prj.id}}\">\r\n                {{prj.project_name}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field> -->\r\n        </div> \r\n        <br>\r\n        <br>\r\n        <!-- <div class=\"col-md-6 bg-g\">*Select Person</div>\r\n        <div class=\"col-md-6 bg-hash\">\r\n          <select>\r\n              <option *ngFor=\"let usr of users\" value=\"{{usr.id}}\">{{usr.f_name}} {{usr.l_name}}</option>\r\n          </select>\r\n        </div>  -->\r\n        <div class=\"clearfix\"></div>\r\n        <div class=\"row\"> \r\n          <div class=\"col-md-6\">\r\n            <div class=\"tasklabel\">\r\n            START DATE\r\n            <br>\r\n            {{projectsingle?.planned_start_date |  date: 'dd/MM/yyyy' }}\r\n          </div>\r\n          </div>\r\n  \r\n          <div class=\"col-md-6\">\r\n              <div class=\"row\">\r\n              <div class=\"tasklabel\">\r\n               END DATE\r\n              <br>\r\n              {{projectsingle?.planned_end_date |  date: 'dd/MM/yyyy' }}\r\n             </div>\r\n             </div>\r\n            </div>\r\n          \r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"tasklabel\">\r\n            NO OF TASKS\r\n            <br>\r\n            {{total_task}}\r\n          </div>\r\n          </div>\r\n  \r\n          <div class=\"col-md-6\">\r\n              <div class=\"row\">\r\n              <div class=\"tasklabel\">\r\n             TASK COMPLETED\r\n              <br>\r\n              {{completedTaskCount}}\r\n             </div>\r\n            </div>\r\n             \r\n            </div>\r\n        </div>\r\n        <!-- <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"tasklabel\">\r\n            DUE THIS MONTH\r\n            <br>\r\n            10\r\n          </div>\r\n          </div>\r\n  \r\n          <div class=\"col-md-6\">\r\n              <div class=\"tasklabel\">\r\n              DUE THIS YEAR\r\n              <br>\r\n              10\r\n             </div>\r\n            </div>\r\n        </div> -->\r\n      </div>\r\n      </div>\r\n  \r\n      <div class=\"col-md-7 col-sm-7 col-xs-12\">\r\n          <div class=\"widget mrg-rht2\">\r\n             \r\n              <div id=\"taskstatus\" class=\"chart-container\">\r\n          \r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n"

/***/ }),

/***/ "../../../../../src/app/components/user-task-vs-status/user-task-vs-status.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserTaskVsStatusComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var UserTaskVsStatusComponent = (function () {
    function UserTaskVsStatusComponent(userService, config) {
        this.userService = userService;
        this.config = config;
        this.projects = [];
        this.users = [];
        this.countask = [];
        this.countaskdone = [];
        this.countaskhold = [];
        this.countaskinprogress = [];
        this.countasknew = [];
        this.taskVstatExist = false;
        this.completedTaskCount = 0;
        this.newTaskCount = 0;
        this.holdTaskCount = 0;
        this.pausedTaskCount = 0;
        this.inProgressTaskCount = 0;
        this.total_task = 0;
        this.socket = __WEBPACK_IMPORTED_MODULE_2_socket_io_client__(config.socketURL);
    }
    UserTaskVsStatusComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.pieData = [
            { name: 'New - Yet to Start', value: this.newTaskCount, color: '#2778a7' },
            { name: 'In Progress', value: this.inProgressTaskCount, color: '#99b745' },
            { name: 'Completed', value: this.completedTaskCount, color: '#17a88f' },
            { name: 'On Hold', value: this.holdTaskCount, color: '#f2ac37' },
            { name: 'Paused', value: this.pausedTaskCount, color: '#b74549' },
        ];
        this.bakeDonut(this.pieData);
        this.socket.on('new', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('paused', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('completed', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('hold', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('inProgress', function (data) {
            _this.getAllProjects();
        });
        this.getAllProjects();
    };
    UserTaskVsStatusComponent.prototype.getAllProjects = function () {
        var _this = this;
        this.userService.getAllProject().subscribe(function (data) {
            // this.selectedValue=data[0].id
            //  console.log(data[0].id);
            _this.projects = data;
            if (data.length > 0) {
                _this.taskVstatExist = true;
                _this.selectedValue = data[0].id;
            }
            // else{
            //   console.log('no projects');
            // }
            _this.taskstatus();
            // });
        });
    };
    UserTaskVsStatusComponent.prototype.taskstatus = function () {
        var _this = this;
        // this.projects.forEach(element => {
        // console.log(this.selectedValue);
        // this.selectedValue=element.id
        // console.log(this.selectedValue);
        this.total_task = 0;
        this.userService.getProjectdetails(this.selectedValue).subscribe(function (res) {
            // console.log(res)
            _this.inProgressTaskCount = 0;
            _this.newTaskCount = 0;
            _this.holdTaskCount = 0;
            _this.pausedTaskCount = 0;
            _this.completedTaskCount = 0;
            _this.projectsingle = res.singleproject;
            _this.projecttask = res.myTasks;
            _this.projecttask.forEach(function (elm_mod) {
                // console.log(elm_mod)
                _this.total_task = _this.total_task + elm_mod.tbl_project_tasks.length;
                elm_mod.tbl_project_tasks.forEach(function (elm_task) {
                    _this.countask.push(elm_task.id);
                    _this.lastStatus = elm_task.tbl_task_status_assocs[elm_task.tbl_task_status_assocs.length - 1];
                    // console.log(this.lastStatus.tbl_task_status.status)
                    // console.log(this.lastStatus.tbl_task_status.id)
                    // });
                    if (_this.lastStatus !== undefined) {
                        if (_this.lastStatus.tbl_task_status.status == 'Done') {
                            _this.countaskdone.push(elm_task.id);
                            _this.completedTaskCount = _this.completedTaskCount + 1;
                        }
                        if (_this.lastStatus.tbl_task_status.status == 'Paused') {
                            _this.countaskdone.push(elm_task.id);
                            _this.pausedTaskCount = _this.pausedTaskCount + 1;
                        }
                        if (_this.lastStatus.tbl_task_status.status == 'Hold') {
                            _this.countaskhold.push(elm_task.id);
                            _this.holdTaskCount = _this.holdTaskCount + 1;
                        }
                        if (_this.lastStatus.tbl_task_status.status == 'In Progress') {
                            _this.countaskinprogress.push(elm_task.id);
                            _this.inProgressTaskCount = _this.inProgressTaskCount + 1;
                        }
                        if (_this.lastStatus.tbl_task_status.status == 'New yet to start') {
                            _this.countasknew.push(elm_task.id);
                            _this.newTaskCount = _this.newTaskCount + 1;
                        }
                    }
                    // console.log(elm_task)
                    //  console.log(this.countaskhold.length)
                });
            });
            // this.newyetstart = (this.countask.length) - (this.countaskdone.length + this.countaskinprogress.length + this.countaskhold.length)
            var pieData = [
                // { name: 'New - Yet to Start', value: this.newyetstart, color: '#2778a7' },
                // { name: 'In Progress', value: this.countaskinprogress.length, color: '#99b745' },
                // { name: 'Completed', value: this.countaskdone.length, color: '#17a88f' },
                // { name: 'On Hold', value: this.countaskhold.length, color: '#f2ac37' },
                { name: 'New - Yet to Start', value: _this.newTaskCount, color: '#2778a7' },
                { name: 'In Progress', value: _this.inProgressTaskCount, color: '#99b745' },
                { name: 'Completed', value: _this.completedTaskCount, color: '#17a88f' },
                { name: 'On Hold', value: _this.holdTaskCount, color: '#f2ac37' },
                { name: 'Paused', value: _this.pausedTaskCount, color: '#b74549' },
            ];
            d3.select('#taskstatus').selectAll("svg").remove();
            _this.bakeDonut(pieData);
        });
    };
    // console.log(this.countask)
    // getUsers(projId){
    //   this.companyService.getUsers(projId).subscribe(data=>{
    //     this.users = data;
    //   });
    // }
    UserTaskVsStatusComponent.prototype.bakeDonut = function (d) {
        var activeSegment;
        var data = d.sort(function (a, b) { return b['value'] - a['value']; }), viewWidth = 400, viewHeight = 300, svgWidth = viewHeight, svgHeight = viewHeight, shuhaibPading = 110, thickness = 40, colorArray = data.map(function (k) { return k.color; }), el = d3.select('#taskstatus'), radius = Math.min(svgWidth, svgHeight) / 2, color = d3.scaleOrdinal()
            .range(colorArray);
        var max = d3.max(data, function (maxData) { return maxData.value; });
        var svg = el.append('svg')
            .attr('viewBox', "0 0 " + (viewWidth + thickness + shuhaibPading) + " " + (viewHeight + thickness + shuhaibPading))
            .attr('class', 'pie')
            .attr('width', viewWidth)
            .attr('height', svgHeight);
        var g = svg.append('g')
            .attr('transform', "translate( " + ((svgWidth / 2) + (thickness / 2)) + ", " + ((svgHeight / 2) + (thickness / 2)) + ")");
        var arc = d3.arc()
            .innerRadius(radius - thickness)
            .outerRadius(radius);
        var arcHover = d3.arc()
            .innerRadius(radius - (thickness + 5))
            .outerRadius(radius + 8);
        var pie = d3.pie()
            .value(function (pieData) { return pieData.value; })
            .sort(null);
        var maxAssigned = false;
        var maxArcAssigned = false;
        var path = g.selectAll('path')
            .attr('class', 'data-path')
            .data(pie(data))
            .enter()
            .append('g')
            .attr('class', 'data-group')
            .each(function (pathData, i) {
            var group = d3.select(this);
            group.append('text')
                .text("" + pathData.data.value)
                .attr('class', 'data-text data-text__value')
                .attr('text-anchor', 'middle')
                .attr('dy', '0em');
            group.append('text')
                .text("" + pathData.data.name)
                .attr('class', 'data-text data-text__name')
                .attr('text-anchor', 'middle')
                .attr('dy', '1.5em');
            // Set default active segment
            if (pathData.value === max && !maxAssigned) {
                var textVal = d3.select(this).select('.data-text__value')
                    .classed('data-text--show', true);
                var textName = d3.select(this).select('.data-text__name')
                    .classed('data-text--show', true);
                maxAssigned = true;
            }
        })
            .append('path')
            .attr('d', arc)
            .attr('fill', function (fillData, i) { return color(fillData.data.name); })
            .attr('class', 'data-path')
            .on('mouseover', function () {
            var _thisPath = this, parentNode = _thisPath.parentNode;
            if (_thisPath !== activeSegment) {
                activeSegment = _thisPath;
                var dataTexts = d3.selectAll('#taskstatus .data-text')
                    .classed('data-text--show', false);
                var paths = d3.selectAll('#taskstatus .data-path')
                    .transition()
                    .duration(250)
                    .attr('d', arc);
                d3.select(_thisPath)
                    .transition()
                    .duration(250)
                    .attr('d', arcHover);
                var thisDataValue = d3.select(parentNode).select('.data-text__value')
                    .classed('data-text--show', true);
                var thisDataText = d3.select(parentNode).select('.data-text__name')
                    .classed('data-text--show', true);
            }
        })
            .each(function (v, i) {
            if (v.value === max && !maxArcAssigned) {
                var maxArc = d3.select(this)
                    .attr('d', arcHover);
                activeSegment = this;
                maxArcAssigned = true;
            }
            this._current = i;
        });
        var legendRectSize = 15;
        var legendSpacing = 10;
        var legend = svg.selectAll('.legend')
            .data(color.domain())
            .enter()
            .append('g')
            .attr('class', 'legend')
            .attr('transform', function (legendData, i) {
            var itemHeight = legendRectSize + legendSpacing;
            var offset = legendRectSize * color.domain().length;
            var horz = svgWidth + 80;
            var vert = (i * itemHeight) + legendRectSize + (svgHeight - offset) / 2;
            return "translate(" + horz + ", " + vert + ")";
        });
        legend.append('circle')
            .attr('r', legendRectSize / 2)
            .style('fill', color);
        legend.append('text')
            .attr('x', legendRectSize + legendSpacing)
            .attr('y', legendRectSize - legendSpacing)
            .attr('class', 'legend-text')
            .text(function (legendData) { return legendData; });
    };
    UserTaskVsStatusComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'user-task-vs-status',
            template: __webpack_require__("../../../../../src/app/components/user-task-vs-status/user-task-vs-status.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-task-vs-status/user-task-vs-status.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_3__config_config__["a" /* Config */]])
    ], UserTaskVsStatusComponent);
    return UserTaskVsStatusComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-taskstatus-graph/user-taskstatus-graph.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".graph-ul li{\r\n    float :left;\r\n    padding: 10px 2px;\r\n    border: 1px solid #ddd;\r\n    margin-top: 10px;\r\n    width: 300px;\r\n    display: table;\r\n    overflow:hidden;\r\n    padding-top: 0px;\r\n   \r\n}\r\n.graph-ul li .divModule{\r\n    background:#ccc;\r\n    padding: 20px 5px;\r\n    margin-bottom: 10px;\r\n}\r\n.graph-ul{\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    overflow-x: scroll;\r\n    max-width:1170px;\r\n    float: none;\r\n    margin: 0 auto;\r\n}\r\n.bg-g{background:#17a88f;color:#fff; padding: 10px;}\r\n.bg-hash{background:#E9E9E9;padding: 10px;}\r\n.bg-hash select{background:none;border:none;width:100%;}\r\n.total{font-weight:700;padding-top: 20px; line-height: 36px;}\r\n.sales{margin-bottom: 25px;border:none;    box-shadow: 4px 7px 31px #e8e8e8;}\r\n.label-bg{background:#ccc;padding:20px;position:relative;margin-bottom: 15px;}\r\n.label-bg .number{width:50px;height:50px;border-radius:50%;background:#fff;left:0;right:0;position:absolute;z-index:10;margin:0 auto;text-align:center;    top: -4px;\r\n    box-shadow: 10px 4px 18px #b1b1b1;\r\n    border: 1px solid #b5b3b3;    font-size: 20px;\r\n    font-weight: bold;\r\n    color: #05b8cc;\r\n    padding-top: 15px;}\r\n\r\n    .graph-ul-hour li .divModule{\r\n        background:#ccc;\r\n        padding: 20px 5px;\r\n        margin-bottom: 10px;\r\n    }\r\n    .graph-ul-hour{\r\n        display: -ms-flexbox;\r\n        display: flex;\r\n        overflow-x: scroll;\r\n        max-width:1170px;\r\n        float: none;\r\n        margin: 0 auto;\r\n    }\r\n\r\n    .firstColumn{\r\n        background: #e4e4e4;\r\n        padding:0 40px;\r\n    }\r\n\r\n    .firstRow{\r\n        \r\n        font-weight:bold;\r\n        font-weight: bold;\r\n        min-height: 135px;\r\n        border-bottom: 1px solid #ccc;\r\n        text-transform:uppercase;\r\n        padding-top: 35%;\r\n    }\r\n    .secondRow{\r\n       \r\n        font-weight:bold;\r\n        min-height: 330px;\r\n        border-bottom: 1px solid #ccc;\r\n        text-transform:uppercase;\r\n        padding-top: 64%;\r\n    }\r\n    .ThirdRow{\r\n        \r\n        font-weight:bold;\r\n        min-height: 224px;\r\n        text-align:uppercase;\r\n        padding-top: 43%;\r\n    }\r\n    .prjtitle1{\r\n        background: #237cbe;\r\n        padding: 10px;\r\n        color:#fff;\r\n    }\r\n    .prjtitle2{\r\n       \r\n        padding: 10px;\r\n    }\r\n    .hash{    background: #f3f3f3;}\r\n    .datelabel{font-weight:bold;padding-bottom: 10px;}\r\n    .user-dashboard h1{text-align:center;}\r\n    .mr-top{margin-top: 20px;}\r\n    .tsk-sts{\r\n        text-align: center;\r\n    padding: 126px 0;\r\n    font-size: 30px;\r\n    font-weight: 800;\r\n    color: #a2a2a2;\r\n    }", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-taskstatus-graph/user-taskstatus-graph.component.html":
/***/ (function(module, exports) {

module.exports = "<h1><b>No.of task vs status</b></h1>\r\n<div class=\"row\">\r\n    <div class=\"col-md-6 col-md-push-1\">\r\n        <div class=\"col-md-6 bg-g\">*Select Project</div>\r\n        <div class=\"col-md-6 bg-hash\">\r\n            <select  (change)=\"taskstatus1()\" [(ngModel)]=\"selectedValue1\">\r\n                <option *ngFor=\"let prj of projects\" value=\"{{prj.id}}\">{{prj.project_name}}</option>\r\n              </select>\r\n        </div> \r\n        \r\n    </div> \r\n</div>\r\n<div id=\"containerId\" *ngIf=\"taskVstatExist else empty\"></div>\r\n<ng-template #empty>\r\n        <h4 class=\"tsk-sts\">No data to display!</h4>\r\n</ng-template>"

/***/ }),

/***/ "../../../../../src/app/components/user-taskstatus-graph/user-taskstatus-graph.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserTaskstatusGraphComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var UserTaskstatusGraphComponent = (function () {
    function UserTaskstatusGraphComponent(userService, config) {
        this.userService = userService;
        this.config = config;
        this.countask = [];
        this.countaskdone2 = [];
        this.countaskhold2 = [];
        this.countaskinprogress2 = [];
        this.countasknew2 = [];
        this.completedTaskCount = 0;
        this.newTaskCount = 0;
        this.holdTaskCount = 0;
        this.pausedTaskCount = 0;
        this.inProgressTaskCount = 0;
        // countask=[];
        // containerId = '';
        this.hold = '';
        this.inprogress = '';
        this.done = '';
        this.newy = '';
        this.taskVstatExist = false;
        this.socket = __WEBPACK_IMPORTED_MODULE_2_socket_io_client__(config.socketURL);
    }
    UserTaskstatusGraphComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.socket.on('new', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('paused', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('completed', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('hold', function (data) {
            _this.getAllProjects();
        });
        this.socket.on('inProgress', function (data) {
            _this.getAllProjects();
        });
        this.getAllProjects();
    };
    UserTaskstatusGraphComponent.prototype.getAllProjects = function () {
        var _this = this;
        this.userService.getAllProject().subscribe(function (data) {
            _this.projects = data;
            if (data.length > 0) {
                _this.taskVstatExist = true;
                _this.selectedValue1 = data[0].id;
                _this.taskstatus1();
            }
            // else{
            //   console.log('no projects');
            // }
            // });
        });
    };
    //#########No.of task vs status###############
    UserTaskstatusGraphComponent.prototype.taskstatus1 = function () {
        var _this = this;
        // this.newyetstart=8;
        this.inProgressTaskCount = 0;
        this.newTaskCount = 0;
        this.holdTaskCount = 0;
        this.pausedTaskCount = 0;
        this.completedTaskCount = 0;
        this.userService.getProjectdetails(this.selectedValue1).subscribe(function (res) {
            // console.log(res)
            // this.projectsingle=res.singleproject;
            _this.projecttask = res.myTasks;
            _this.projecttask.forEach(function (elm_mod) {
                elm_mod.tbl_project_tasks.forEach(function (elm_task) {
                    _this.countask.push(elm_task.id);
                    _this.lastStatus2 = elm_task.tbl_task_status_assocs[elm_task.tbl_task_status_assocs.length - 1];
                    // console.log(this.lastStatus2);
                    if (_this.lastStatus2 !== undefined) {
                        if (_this.lastStatus2.tbl_task_status.status == 'Done') {
                            _this.countaskdone2.push(elm_task.id);
                            _this.completedTaskCount = _this.completedTaskCount + 1;
                        }
                        if (_this.lastStatus2.tbl_task_status.status == 'Paused') {
                            _this.countaskdone2.push(elm_task.id);
                            _this.pausedTaskCount = _this.pausedTaskCount + 1;
                        }
                        if (_this.lastStatus2.tbl_task_status.status == 'Hold') {
                            _this.countaskhold2.push(elm_task.id);
                            _this.holdTaskCount = _this.holdTaskCount + 1;
                        }
                        if (_this.lastStatus2.tbl_task_status.status == 'In Progress') {
                            _this.countaskinprogress2.push(elm_task.id);
                            _this.inProgressTaskCount = _this.inProgressTaskCount + 1;
                        }
                        if (_this.lastStatus2.tbl_task_status.status == 'New yet to start') {
                            _this.countasknew2.push(elm_task.id);
                            _this.newTaskCount = _this.newTaskCount + 1;
                        }
                    }
                });
            });
            // this.newyetstart = (this.countask.length) - (this.countaskdone2.length + this.countaskinprogress2.length + this.countaskhold2.length)
            // console.log(this.newyetstart+"uu") 
            _this.bargraph();
        });
    };
    UserTaskstatusGraphComponent.prototype.bargraph = function () {
        d3.select('#containerId').selectAll("svg").remove();
        var offenseNames = [
            "count",
        ];
        // console.log(this.newy)
        var years = ["New-Yet to Star", "On Hold", "In Progress", "Paused", "Completed"];
        var offensesByYear = [
            {
                // "count": this.countasknew2,
                "count": this.newTaskCount,
            },
            {
                // "count": this.countaskhold2.length,
                "count": this.holdTaskCount,
            },
            {
                // "count": this.countaskinprogress2.length,
                "count": this.inProgressTaskCount,
            },
            {
                // "count": this.newyetstart,
                "count": this.pausedTaskCount,
            },
            {
                // "count": this.countaskdone2.length,
                "count": this.completedTaskCount,
            },
        ];
        var generateClassStr = function (str) {
            return str.replace(/\s+/g, '-').toLowerCase();
        };
        var n = offenseNames.length, // number of layers
        m = offensesByYear.length, // number of samples per layer
        stack = d3.stack().keys(offenseNames);
        var layers = stack(offensesByYear); // calculate the stack layout
        layers.forEach(function (d, i) {
            // add keys to every datapoint
            d.forEach(function (dd, j) {
                dd.year = years[j];
                dd.offenseName = offenseNames[i];
                dd.class = generateClassStr(dd.offenseName);
                dd.value = dd.data[dd.offenseName];
            });
        });
        var yStackMax = d3.max(layers, function (layer) {
            return d3.max(layer, function (d) {
                return d[1];
            });
        });
        var margin = { top: 70, right: 15, bottom: 110, left: 50 }, fullChartWidth = 350, fullChartHeight = 300, width = fullChartWidth - margin.left - margin.right, height = fullChartHeight - margin.top - margin.bottom;
        d3.select("#containerId")
            .style("width", fullChartWidth)
            .style("height", fullChartHeight);
        var x = d3
            .scaleBand()
            .domain(years)
            .rangeRound([0, width])
            .padding(0.08);
        var y = d3
            .scaleLinear()
            .domain([0, yStackMax])
            .range([height, 0]);
        var z = d3
            .scaleBand()
            .domain(offenseNames)
            .rangeRound([0, x.bandwidth()]);
        var color = ["#2778a7", "#99b745", "#17a88f", , "#f2ac37", , "#b74549"];
        var svg = d3
            .select("#containerId")
            .append("svg")
            .attr("width", width + margin.left + margin.right + 20)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(" + (margin.left + 20) + "," + margin.top + ")");
        var mycount = 1;
        svg.selectAll('.tick text').attr("transform", "translate(10) rotate(42 -17 31)");
        var layer = svg
            .selectAll(".layer")
            .data(layers)
            .enter()
            .append("g")
            .attr("class", "layer")
            .style("fill", function (d, i) {
            // mycount++;
            //  alert(mycount);
            // alert(i);
            // if(mycount == 0){
            //   mycount++;
            //   return '#7fc97f';
            // }else{
            //   mycount++;
            //   return  '#279428';
            // }
            //   alert(d);
            //  // alert(i);
            return '#7fc97f';
        });
        var tooltip = d3.select("body").append("div")
            .attr("class", "tooltip")
            .style("opacity", 0);
        // alert(x.bandwidth());
        // alert(m);
        var myLPadd = 250;
        // var myTPadd = 620;
        var myTPadd = 820;
        var rect = layer
            .selectAll(".bar")
            .data(function (d) {
            return d;
        })
            .enter()
            .append("rect")
            .attr("x", function (d) {
            return x(d.year);
        })
            .attr("y", height)
            .attr("width", x.bandwidth())
            .attr("height", 0)
            .on("mouseover", function (d) {
            //   d3.select(this)
            //   // .filter(dd => dd.class != d.class)
            //   //  .style("opacity", 0.6)
        })
            .on("mousemove", function (d) {
            // console.log(d);
            tooltip
                .html("<b>" + d.data.count + "</b> tasks")
                .style("left", (d3.mouse(this)[0]) + myLPadd + "px")
                .style("top", (d3.mouse(this)[1]) + myTPadd + "px");
        })
            .on("mouseout", function (d) {
            d3.selectAll(".bar").style("opacity", 1);
            tooltip.style("opacity", 0);
        });
        rect
            .transition()
            .delay(function (d, i) {
            return i * 10;
        })
            .attr("y", function (d) {
            return y(d[1]);
        })
            .attr("height", function (d) {
            return y(d[0]) - y(d[1]);
        });
        svg
            .append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x))
            .selectAll("text")
            .style("text-anchor", "end")
            .attr("dx", "-.8em")
            .attr("dy", ".15em")
            .attr("transform", "rotate(-65)");
        // add the Y gridlines
        // svg.append("g")     
        // .attr("class", "grid")
        // .call(d3.axisLeft(y)
        //   .ticks(10)
        //   .tickSize(-width)
        //   .tickFormat("")
        // )
        // Add the y Axis
        svg.append("g")
            .call(d3.axisLeft(y));
        // text label for the y axis    
        svg.append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", 0 - margin.left - 30)
            .attr("x", 0 - (height / 2))
            .attr("dy", "3em")
            .style("text-anchor", "middle")
            .text("No of Tasks");
    };
    UserTaskstatusGraphComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'user-taskstatus-graph',
            template: __webpack_require__("../../../../../src/app/components/user-taskstatus-graph/user-taskstatus-graph.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-taskstatus-graph/user-taskstatus-graph.component.css")],
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__services_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_3__config_config__["a" /* Config */]])
    ], UserTaskstatusGraphComponent);
    return UserTaskstatusGraphComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-topbar/user-topbar.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".drp2 .dropdown-menu{padding:0;right:-3%;left:inherit;max-width: 297px;}\r\n.drp2 .dropdown-menu li a{padding:15px 20px;}\r\n.drp2 .navbar-content{text-align:left;}\r\n.drp2 .dropdown-menu li{width:100%;}\r\n.drp2 .dropdown-menu > li > a:hover p{color:#fff !important;}\r\n.dropdown-menu{margin-bottom:0;}\r\nheader .dropdown-menu{top: 207%;}\r\n.dropdown-menu p {\r\n    margin: 0 0 0px;\r\n}\r\n.drp2 .dropdown-menu h4{margin-bottom: 2px;\r\n    color: #000;\r\n    font-weight: 500;\r\n    font-family: arial;}\r\n.media-heading{font-size:16px;}\r\n.closbtn{\r\n    border-radius: 50%;\r\n    height: 15px;\r\n    width: 15px;\r\n    padding-top: 0; \r\n    margin-right: 12px;\r\n    line-height: 13px;\r\n    font-size: 9px;\r\n    padding: 0;\r\n    text-align: center;\r\n    margin-top: 0;\r\n    background: #fe6a07;\r\n    border: none;\r\n}\r\n.dropdown-menu .divider {\r\n    height: 1px;\r\n    margin: 0px 0;\r\n    overflow: hidden;\r\n    background-color: #e5e5e5;\r\n}\r\n.head{background: #FFFFFF;color:#fff !important;}\r\n.head>a{color:#686868 !important;}\r\n.content{\r\n    text-decoration: none;\r\n}\r\n.dropdown-menu>li>a:hover h4{color:#fff;}\r\n.drp2 .dropdown-menu > li > a{white-space:normal !important;}\r\n.drp2 .dropdown-menu{    min-width: 324px;}\r\n.drp2 p{line-height: 18px;margin-top: 10px;}\r\n.drp2 li{padding: 0px 0;}\r\n.media-heading {font-size: 15px;\r\ncolor: #8a8a8a;\r\nfont-weight: 600;    margin-top: 2px;}\r\n.drp2 li a{padding:7px 0px !important;color:#909090;}\r\n.ng-star-inserted:hover{background:#f3f3f3;}\r\n.ng-star-inserted{padding: 10px 20px; border-bottom: 1px solid #ececec;}\r\n.drp2 h4{padding: 0px 20px;    font-weight: 700 !important;\r\n    font-family: arial;\r\n    font-size: 15px;\r\n    color:#ffffff !important;\r\n    margin-top:0px;\r\n    margin-bottom:0;\r\n    background: #919aa0;\r\n    padding: 14px 20px;\r\n    \r\n}\r\n.list-inline li a{cursor:pointer;}\r\n\r\n.overlay{    position: fixed;\r\n    z-index: 100;\r\n    background: rgba(0,0,0, 0.6);\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    padding: 10% 20%;}\r\n    .overlay:hover{background: rgba(0,0,0, 0.6);}\r\nbody{position:relative;}", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-topbar/user-topbar.component.html":
/***/ (function(module, exports) {

module.exports = "<div class=\"overlay\" *ngIf=\"(countOverlay-overlaynotfSrv.notifReadCount) > 0\" >\r\n        <div class=\"row\">\r\n            <div class=\"alert-group\">\r\n \r\n                <div *ngFor=\"let item of teamheadNotif\" class=\"alert alert-warning alert-dismissable\" >\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\" (click)=\"closeoverlayNotif('Alert Viewed : Assignd as team leader for project ' + item.tbl_project.project_name, item.tbl_project.id)\">×</button>\r\n                    <h4>Project Estimation </h4>\r\n                    <div >\r\n                            <h5 class=\"media-heading\">You are assignd as team leader for project <b>{{item.tbl_project.project_name}}</b></h5>\r\n                    </div>\r\n                </div>\r\n               \r\n                <div *ngFor=\"let item1 of newTaskNotif\" class=\"alert alert-warning alert-dismissable\" >\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\" (click)=\"closeoverlayNotif('Alert Viewed : New Task Request for new task, ' + item1.tbl_new_task_request.task_name + ' , is ' +item1.tbl_new_task_request.request_status, item1.tbl_new_task_request.id)\">×</button>\r\n                    <h4>New Task Request Approval</h4>\r\n                    <div >\r\n                        <h5 class=\"media-heading\">Your request for new task, <b>{{item1.tbl_new_task_request.task_name}}</b>, is {{item1.tbl_new_task_request.request_status}}</h5>\r\n                    </div>\r\n                </div>\r\n              \r\n               \r\n                <div *ngFor=\"let list of timeExtNotif\" class=\"alert alert-warning alert-dismissable\" >\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\" (click)=\"closeoverlayNotif('Alert Viewed : Time Extension request for ' + list?.xt.tbl_project_task.task_name + ' , is ' + list.xt.req_status, list.xt.id)\">×</button>\r\n                    <h4>Time Extension Request Approval </h4>\r\n                    <div >\r\n                        <h5 class=\"media-heading\">Your time extension request for <b>{{list?.xt.tbl_project_task.task_name}}</b> is {{list.xt.req_status}}</h5>    \r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngFor=\"let list of taskVerfNotif\" class=\"alert alert-warning alert-dismissable\" >\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\" (click)=\"closeoverlayNotif('Alert Viewed : Task ' + list?.task_name + ' ( ' + list?.tbl_project_module.module_name +' )  of Project ' + list?.tbl_project_module.tbl_project.project_name + ' Completed, Please Verify', list.id)\">×</button>\r\n                    <h4>New Task Verification</h4>\r\n                    <div >\r\n                        <h5 class=\"media-heading\">Task <b>{{list?.task_name}} ( {{list?.tbl_project_module.module_name}} )</b> of Project {{list?.tbl_project_module.tbl_project.project_name}} Completed, Please Verify</h5>    \r\n                    </div>\r\n                </div>\r\n              \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n<div class=\"row\">\r\n    <header>\r\n<!-- --------------------------------------------- logout confirmation ----------------------------------------------------------------- -->\r\n<div id=\"confirmation\" class=\"modal fade\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n            <!-- Modal content-->\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n                    <h4 class=\"modal-title\">Logout </h4>\r\n                </div>\r\n                <!-- <div class=\"modal-header\"> -->\r\n                <!-- <h4 class=\"modal-title\">Are you sure to delete?</h4> -->\r\n                <!-- </div> -->\r\n                <div class=\"modal-body delete-popup\">\r\n                    <i class=\"fa fa-exclamation\"></i>\r\n                    <h4 class=\"textalign\">Are you sure?</h4>\r\n                </div>\r\n                <div class=\"modal-footer\" style=\"text-align:center;\">\r\n                    <button type=\"button\" (click)=\"logout()\" class=\"btn round-button center-bt\" data-dismiss=\"modal\">Logout</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- --------------------------------------------- logout confirmation  ----------------------------------------------------------------- -->\r\n        <div class=\"col-md-5 pull-right\">\r\n            <div class=\"header-rightside\">\r\n                <ul class=\"list-inline header-top pull-right\">\r\n\r\n                    <li class=\"dropdown drp2\">\r\n                        <a class=\"icon-info dropdown-toggle\" data-toggle=\"dropdown\">\r\n                          <i class=\"fa fa-bell\" aria-hidden=\"true\"></i>\r\n                          <span class=\"label label-primary\">{{count}}</span>\r\n\r\n                      </a>\r\n                        <ul class=\"dropdown-menu\">\r\n\r\n                            <li class=\"head\">\r\n                                <div class=\"navbar-content\">\r\n                                    <h4>Project Estimation Notification</h4>\r\n                                    <div *ngFor=\"let item of teamheadNotif\" class=\"ng-star-inserted\">\r\n                                        <a [routerLink]=\"['/estimate-project', item.tbl_project.id, item.id]\">\r\n                                            <div></div>\r\n                                            <h5 class=\"media-heading\">{{item.tbl_project.project_name}}</h5>\r\n                                            <p><a class=\"content\">You are assignd as team leader for project <b>{{item.tbl_project.project_name}}</b>. Click here to Estimate.</a></p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <div class=\"divider\"> </div>\r\n\r\n                            <li class=\"head\">\r\n                                <div class=\"navbar-content\">\r\n                                    <h4 >New Task Request Approval Notification</h4>\r\n                                    <div >\r\n                                    <div *ngFor=\"let item1 of newTaskNotif\" class=\"ng-star-inserted\">\r\n                                        <a (click)=\"closeNotif1(item1.id)\" [routerLink]=\"['/user-task-management']\">\r\n                                            <div class='exclusaoNotificacao pull-right'><button class='btn btn-danger btn-xs button_exclusao closbtn' (click)=\"closeNotif1(item1.id)\">x</button>\r\n                                            </div>\r\n                                            <h5 class=\"media-heading\">{{item1.tbl_new_task_request.task_name}}</h5>\r\n                                            <p><a class=\"content\">Your request for new task, <b>{{item1.tbl_new_task_request.task_name}}</b>, is {{item1.tbl_new_task_request.request_status}}. Click here.</a></p>\r\n                                        </a>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <div class=\"divider\"> </div>\r\n\r\n                            <li class=\"head\">\r\n                                <div class=\"navbar-content\">\r\n                                    <h4>Time Extension Request Approval Notification</h4>\r\n                                    <div *ngFor=\"let list of timeExtNotif\" class=\"ng-star-inserted\">\r\n                                        <a (click)=\"closeNotif(list.id)\" [routerLink]=\"['/user-task-management']\">\r\n                                            <div class='exclusaoNotificacao pull-right'><button class='btn btn-danger btn-xs button_exclusao closbtn' (click)=\"closeNotif(list.id)\">x</button>\r\n                                            </div>\r\n                                            <h5 class=\"media-heading\">{{list.xt.tbl_project_task.task_name}}</h5>\r\n                                            <p><a class=\"content\">Your time extension request for <b>{{list?.xt.tbl_project_task.task_name}}</b> is {{list.xt.req_status}}. Click here.</a></p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <div class=\"divider\"> </div>\r\n\r\n                            <li class=\"head\">\r\n                                <div class=\"navbar-content\">\r\n                                    <h4>Verification Tasks </h4>\r\n                                    <div *ngFor=\"let list of taskVerfNotif\" class=\"ng-star-inserted\">\r\n                                        <a (click)=\"taskverfRead(list.id)\" [routerLink]=\"['/user-task-verification']\">\r\n                                            <div class='exclusaoNotificacao pull-right'><button class='btn btn-danger btn-xs button_exclusao closbtn' (click)=\"taskverfRead(list.id)\">x</button>\r\n                                            </div>\r\n                                            <h5 class=\"media-heading\">Verify Completed Task {{list.task_name}}</h5>\r\n                                            <p><a class=\"content\">Project : {{list?.tbl_project_module.tbl_project.project_name}} , Module : {{list?.tbl_project_module.module_name}}.</a></p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <div class=\"divider\"> </div>\r\n                            <li class=\"head\">\r\n                                <div class=\"navbar-content\">\r\n                                    <h4>Leave Request Approval Notification</h4>\r\n                                    <div *ngFor=\"let item2 of leaveNotif\" class=\"ng-star-inserted\">\r\n                                        <a (click)=\"closeNotif2(item2.id)\" [routerLink]=\"['/user-leave-request']\">\r\n                                            <div class='exclusaoNotificacao pull-right'><button class='btn btn-danger btn-xs button_exclusao closbtn' (click)=\"closeNotif2(item2.id)\">x</button>\r\n                                            </div>\r\n                                            <h5 class=\"media-heading\"></h5>\r\n                                            <p><a class=\"content\">Your leave request for <b>{{item2?.leave_hrs}} Hr </b> is {{item2?.request_status}}. Click here.</a></p>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <div class=\"divider\"> </div>\r\n\r\n                            <div *ngIf=\"count == 0\">\r\n\r\n                                <h5 style=\"color : red; margin-left:20px; \">No Data</h5>\r\n                            </div>\r\n                        </ul>\r\n                    </li>\r\n                    <li class=\"dropdown\" *ngIf=\"disp\">\r\n                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\"><i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                          <b class=\"caret\"></b></a>\r\n                        <ul class=\"dropdown-menu\">\r\n                            <li >\r\n                                <div class=\"navbar-content\">\r\n                                    <span>{{profile?.f_name}} {{profile?.l_name}}</span>\r\n                                    <p class=\"text-muted small\">\r\n                                        {{profile?.email}}\r\n                                    </p>\r\n                                    <div class=\"divider\">\r\n                                    </div>\r\n                                    <a *ngIf=\"exist(8)\" [routerLink]=\"['/edit-profile']\" class=\"view btn-sm active\">View Profile</a>\r\n                                    <!-- <a  [routerLink]=\"['/edit-profile']\" class=\"view btn-sm active\">View Profile</a> -->\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li><a data-toggle=\"modal\" data-target=\"#confirmation\"  ><i class=\"fa fa-power-off\" aria-hidden=\"true\"></i></a></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </header>\r\n</div>"

/***/ }),

/***/ "../../../../../src/app/components/user-topbar/user-topbar.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserTopbarComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_socket_io_client__ = __webpack_require__("../../../../socket.io-client/lib/index.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_socket_io_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_socket_io_client__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__services_company_service__ = __webpack_require__("../../../../../src/app/services/company.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__services_overlay_notifcount_service__ = __webpack_require__("../../../../../src/app/services/overlay-notifcount.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var UserTopbarComponent = (function () {
    function UserTopbarComponent(config, userService, companyService, snackBar, routes, overlaynotf) {
        this.config = config;
        this.userService = userService;
        this.companyService = companyService;
        this.snackBar = snackBar;
        this.routes = routes;
        this.overlaynotf = overlaynotf;
        this.teamHeadNotifCOunt = 0;
        this.newTaskNotifCount = 0;
        this.timeExtNotifCount = 0;
        this.taskVerfNotifCount = 0;
        this.disp = false;
        this.leaveNotifCount = 0;
        this.socket = __WEBPACK_IMPORTED_MODULE_1_socket_io_client__(config.siteUrl);
        this.overlaynotfSrv = overlaynotf;
    }
    // closeoverlayNotif(){
    //   this.overlaynotfSrv.inc();
    // }
    UserTopbarComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.getAccessRightsforRole();
        // ---------------------------------Start-------------------------------------------
        // Function      : Get logged in entity
        // Params        : 
        // Returns       : Get logged in entity
        // Author        : Rinsha
        // Date          : 20-04-2018
        // Last Modified : 20-04-2018, Rinsha
        // Desc          :  
        this.userService.getLoggedinEntity().subscribe(function (data) {
            if (data == null || data == '') {
                _this.routes.navigate(['/home']);
            }
            if (data.role_id == 2) {
                //super admin
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/home']);
                }
                _this.routes.navigate(['/admin-dashboard']);
            }
            if (data.role_id == 3 || data.role_id == 1) {
                //company admin or pm
                if (data.delete_status == true || data.block_status == true || data.cmp_status == "Not Verified") {
                    _this.routes.navigate(['/company-login']);
                }
                if (data.cmp_status == "Expired") {
                    _this.routes.navigate(['/expired']);
                }
                if (data.is_profile_completed == false) {
                    _this.routes.navigate(['/compay-aditninfo', data.cmp_id]);
                }
                _this.routes.navigate(['/company-dashboard']);
            }
            if (data.role_id == 4) {
                //user
                if (data.delete_status == true || data.block_status == true) {
                    _this.routes.navigate(['/company-login']);
                }
                // this.routes.navigate(['/user-dashboard']);
            }
        });
        // -----------------------------------End------------------------------------------
        // this.count = 0;
        this.TeamHeadNotification();
        this.getTaskVerificationNotification();
        this.socket.on('doEstimation', function (data) {
            _this.TeamHeadNotification();
        });
        this.socket.on('resubmitEstimation', function (data) {
            _this.TeamHeadNotification();
        });
        this.socket.on('approveEstimation', function (data) {
            _this.TeamHeadNotification();
        });
        this.getProfile();
        this.socket.on('updateProfile', function (data) {
            _this.getProfile();
        });
        this.getTimeExtensionRequestNotification();
        this.getNewTaskRequestNotification();
        this.leaveRequestNotification();
        this.socket.on('Rejectedleave', function (data) {
            _this.leaveRequestNotification();
        });
        this.socket.on('Acceptedleave', function (data) {
            _this.leaveRequestNotification();
        });
        this.socket.on('newtaskrequestAccepted', function (data) {
            _this.getNewTaskRequestNotification();
        });
        this.socket.on('approvetimeextentionrequest', function (data) {
            _this.getTimeExtensionRequestNotification();
        });
        this.socket.on('newtaskdone', function (data) {
            _this.getTaskVerificationNotification();
        });
    };
    UserTopbarComponent.prototype.TeamHeadNotification = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : get TeamHeadNotification
        // Params        : 
        // Returns       : notification data
        // Author        : Rinsha
        // Date          : 14-03-2018
        // Last Modified : 14-03-2018, Rinsha
        // Desc          : check whether the loggedin user assigned for a project estimation(ie .as team head).
        this.teamHeadNotifCOunt = 0;
        this.userService.TeamHeadNotification().subscribe(function (res) {
            _this.teamheadNotif = res;
            _this.teamHeadNotifCOunt = _this.teamheadNotif.length;
            // console.log(res);
            // this.notif_id = this.teamheadNotif.tbl_estimation_notifications.id;
            _this.refresh();
        });
        // ---------------------------------End-------------------------------------------
    };
    UserTopbarComponent.prototype.getProfile = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getProfile
        // Params        : 
        // Returns       : logged in user details
        // Author        : Rinsha
        // Date          : 21-03-2018
        // Last Modified : 21-03-2018, Rinsha
        // Desc          : 
        this.userService.getProfile().subscribe(function (info) {
            _this.profile = info;
            _this.user_id = info.id;
            // console.log(info)
        });
        // ---------------------------------End-------------------------------------------
    };
    UserTopbarComponent.prototype.getNewTaskRequestNotification = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getNewTaskRequestNotification
        // Params        : 
        // Returns       : notification info
        // Author        : Rinsha
        // Date          : 05-04-2018
        // Last Modified : 05-04-2018, Rinsha
        // Desc          : 
        this.newTaskNotifCount = 0;
        this.userService.getNewTaskRequestNotification().subscribe(function (info) {
            // console.log(info)
            _this.newTaskNotif = info;
            _this.newTaskNotifCount = _this.newTaskNotif.length;
            _this.refresh();
        });
        // ---------------------------------End-------------------------------------------
    };
    UserTopbarComponent.prototype.getTimeExtensionRequestNotification = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getTimeExtensionRequestNotification
        // Params        : 
        // Returns       : notification info
        // Author        : Rinsha
        // Date          : 05-04-2018
        // Last Modified : 05-04-2018, Rinsha
        // Desc          : 
        this.timeExtNotifCount = 0;
        this.userService.getTimeExtensionRequestNotification().subscribe(function (info) {
            // console.log(info)
            _this.timeExtNotif = info;
            // console.log(info)
            _this.timeExtNotifCount = _this.timeExtNotif.length;
            _this.refresh();
        });
        // ---------------------------------End-------------------------------------------
    };
    UserTopbarComponent.prototype.closeNotif = function (notif_id) {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : close notification of time extension request approval
        // Params        : notification id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 05-04-2018
        // Last Modified : 05-04-2018, Rinsha
        // Desc          : 
        this.userService.closeNotif(notif_id).subscribe(function (res) {
            if (res.success == false) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 3000
                });
            }
            _this.getTimeExtensionRequestNotification();
        });
        // ---------------------------------End-------------------------------------------
    };
    UserTopbarComponent.prototype.closeNotif1 = function (notif_id) {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : close notification of new task request approval
        // Params        : notification id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 05-04-2018
        // Last Modified : 05-04-2018, Rinsha
        // Desc          : 
        this.userService.closeNotif1(notif_id).subscribe(function (res) {
            if (res.success == false) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 3000
                });
            }
            _this.getNewTaskRequestNotification();
        });
        // ---------------------------------End-------------------------------------------
    };
    UserTopbarComponent.prototype.refresh = function () {
        this.count = 0;
        this.countOverlay = 0;
        this.count = this.timeExtNotifCount + this.newTaskNotifCount + this.teamHeadNotifCOunt + this.leaveNotifCount + this.taskVerfNotifCount;
        this.countOverlay = this.timeExtNotifCount + this.newTaskNotifCount + this.teamHeadNotifCOunt + this.taskVerfNotifCount;
        // console.log(this.count)
    };
    UserTopbarComponent.prototype.logout = function () {
        this.userService.logout();
        this.routes.navigate(['/home']);
        return false;
    };
    UserTopbarComponent.prototype.getAccessRightsforRole = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : getAccessRightsforRole
        // Params        : 
        // Returns       : Access rights based on role
        // Author        : Manu Prasad
        // Date          : 19-04-2018
        // Last Modified : 19-04-2018, Manu Prasad
        // Desc          : 
        this.userService.getAccessRightsforRole().subscribe(function (res) {
            console.log(res);
            _this.rights = res;
            _this.disp = true;
            // console.log(res);      
            // console.log("res");
        });
        // ---------------------------------End-------------------------------------------
    };
    UserTopbarComponent.prototype.exist = function (id) {
        // console.log(id)
        var x = false;
        this.rights.forEach(function (element) {
            if (element.access_rights_id == id) {
                // console.log("hh")
                x = true;
            }
        });
        return x;
    };
    UserTopbarComponent.prototype.leaveRequestNotification = function () {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : leavenotif 
        // Params        : 
        // Returns       : 
        // Author        : Rinsha
        // Date          : 23-05-2018
        // Last Modified : 
        // Desc          : employee leave notification
        this.leaveNotifCount = 0;
        this.userService.leaveRequestNotification().subscribe(function (res) {
            _this.leaveNotif = res;
            _this.leaveNotifCount = _this.leaveNotif.length;
            _this.refresh();
        });
        // ---------------------------------End-------------------------------------------
    };
    UserTopbarComponent.prototype.closeNotif2 = function (notif_id) {
        var _this = this;
        // ---------------------------------Start-------------------------------------------
        // Function      : close notification of leave request
        // Params        : notification id
        // Returns       : 
        // Author        : Rinsha
        // Date          : 23-05-2018
        // Last Modified : 23-05-2018, Rinsha
        // Desc          : 
        this.userService.closeNotif2(notif_id).subscribe(function (res) {
            if (res.success == false) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 3000
                });
            }
            _this.leaveRequestNotification();
        });
        // ---------------------------------End-------------------------------------------
    };
    // ---------------------------------Start-------------------------------------------
    // Function      : close notification of leave request
    // Params        : notification id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 23-05-2018
    // Last Modified : 23-05-2018, Rinsha
    // Desc          : 
    UserTopbarComponent.prototype.closeoverlayNotif = function (msg, ref_id) {
        // console.log(msg);
        // console.log(this.overlaynotfSrv);
        this.overlaynotfSrv.inc();
        // this.companyService.saveActivityLog({msg:msg,ref_id:ref_id}).subscribe(data => {
        // });
    };
    // ---------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getTaskVerificationNotification
    // Params        : 
    // Returns       : 
    // Author        : Yasir poongadan
    // Date          : 01-08-2018
    // Last Modified : 01-08-2018, Yasir poongadan
    // Desc          : 
    UserTopbarComponent.prototype.getTaskVerificationNotification = function () {
        var _this = this;
        this.timeExtNotifCount = 0;
        this.userService.getTaskVerificationNotification().subscribe(function (info) {
            // console.log(info)
            _this.taskVerfNotif = info;
            // console.log(info)
            _this.taskVerfNotifCount = _this.taskVerfNotif.length;
            _this.refresh();
        });
        // ---------------------------------End-------------------------------------------
    };
    UserTopbarComponent.prototype.taskverfRead = function (taskId) {
        var _this = this;
        this.userService.closeTaskVerifNotification(taskId).subscribe(function (res) {
            if (res.success == false) {
                var snackBarRef = _this.snackBar.open(res.msg, '', {
                    duration: 3000
                });
            }
            _this.getTaskVerificationNotification();
        });
    };
    UserTopbarComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'user-topbar',
            template: __webpack_require__("../../../../../src/app/components/user-topbar/user-topbar.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-topbar/user-topbar.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__config_config__["a" /* Config */], __WEBPACK_IMPORTED_MODULE_3__services_user_service__["a" /* UserService */], __WEBPACK_IMPORTED_MODULE_4__services_company_service__["a" /* CompanyService */], __WEBPACK_IMPORTED_MODULE_6__angular_material__["z" /* MatSnackBar */], __WEBPACK_IMPORTED_MODULE_7__angular_router__["Router"], __WEBPACK_IMPORTED_MODULE_5__services_overlay_notifcount_service__["a" /* OverlayNotifcountService */]])
    ], UserTopbarComponent);
    return UserTopbarComponent;
}());



/***/ }),

/***/ "../../../../../src/app/components/user-view-project/user-view-project.component.css":
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__("../../../../css-loader/lib/css-base.js")(false);
// imports


// module
exports.push([module.i, ".task {\r\n    background: #dadada;\r\n    width: 100%;\r\n    padding: 6px 0;\r\n    display: inline-block;\r\n    margin-bottom: 6px;\r\n}\r\n.task h5 {\r\n\r\n    padding-top: 6px;\r\n    display: -webkit-inline-box;\r\n}\r\n.taskedit {\r\n    border-left: 1px solid #ccc;\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 5px;\r\n}\r\n.task ul li {\r\n    width: auto;\r\n    float: left;\r\n    padding: 8px;\r\n}\r\n.module{\r\n    background: #fbf6f1;\r\n    width: 100%;\r\n    padding: 6px 0;\r\n    display: inline-block;\r\n    margin-bottom: 6px\r\n}\r\n.module ul li {\r\n    width: auto;\r\n    float: left;\r\n    padding: 8px;\r\n}\r\n\r\n.taskedit2 {\r\n    border-left: 1px solid #f5f0f0;\r\n    display: inline-block;\r\n    width: 100%;\r\n    margin-top: 5px;\r\n}\r\n.inln{\r\n    display: inline;\r\n}\r\n.pro-lbl{\r\n    min-width: 132px;\r\n    margin-bottom: 15px;\r\n}\r\n.abst{    width: 21%;\r\n    float: right;}\r\n    .tsk-lbl{\r\n        color: #828282;\r\n    }\r\n    .tsk-dt{\r\ncolor : black !important\r\n    }", ""]);

// exports


/*** EXPORTS FROM exports-loader ***/
module.exports = module.exports.toString();

/***/ }),

/***/ "../../../../../src/app/components/user-view-project/user-view-project.component.html":
/***/ (function(module, exports) {

module.exports = "<body class=\"home\">\r\n    <div class=\"container-fluid display-table\">\r\n      <div class=\"row display-table-row\">\r\n  \r\n        <div class=\"col-md-1 col-xs-12 display-table-cell v-align box\" id=\"navigation\">\r\n          <!-- sidebar-->\r\n  \r\n          <user-sidebar></user-sidebar>\r\n          <!-- end sidebar-->\r\n        </div>\r\n  \r\n        <div class=\"col-md-12 col-xs-12\">\r\n          <!--<button type=\"button\" class=\"slide-toggle\">Slide Toggle</button> -->\r\n          <!-- topbar-->\r\n          <user-topbar></user-topbar>\r\n          <!-- end topbar-->\r\n  \r\n  \r\n          <div class=\"user-dashboard\">\r\n            <!-- <h1>Hello, JS</h1> -->\r\n            <div class=\"row\">\r\n                <ul class=\"breadcrumb text-left\">\r\n                    <li><a routerLink=\"/user-projects\">Projects</a></li>\r\n                    \r\n                    \r\n                    <li>Project Details</li>\r\n                  </ul>\r\n              <div class=\"col-md-12 col-sm-12 col-xs-12 gutter \">\r\n                <div class=\"white\">\r\n  \r\n                  <div class=\"col-md-6\" *ngIf=\"showData\">\r\n                    \r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"\" class=\"pro-lbl\">Project Name</label>\r\n                        <p for=\"\" class=\"inln\">{{project[0].project_name}}</p>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"\" class=\"pro-lbl\">Project Code</label>\r\n                        <p for=\"\" class=\"inln\">{{project[0].project_code}}</p>\r\n                    </div>\r\n                    <!-- <div class=\"col-md-12\">\r\n                        <label for=\"\">Team Leader</label>\r\n                        <p for=\"\">{{project[0].project_name}}</p>\r\n                    </div> -->\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"\" class=\"pro-lbl\">Team Members</label>\r\n                        <p for=\"\" class=\"inln\">{{project[0]?.project_name}}</p>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"\" class=\"pro-lbl\">Start Date</label>\r\n                        <p for=\"\" class=\"inln\">{{project[0]?.planned_start_date| date:'EEE, d MMM,y'}}</p>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"\" class=\"pro-lbl\">End Date</label>\r\n                        <p for=\"\" class=\"inln\">{{project[0]?.planned_end_date| date:'EEE, d MMM,y'}}</p>\r\n                    </div>\r\n                    <div class=\"col-md-12\">\r\n                        <label for=\"\" class=\"pro-lbl\">Status</label>\r\n                        <p for=\"\" class=\"inln\">{{project[0]?.status}}</p>\r\n                    </div>\r\n\r\n\r\n                  <div class=\"col-md-12 col-xs-12 pull-right\">\r\n                    <ng-container  *ngFor=\"let item of project[0].tbl_project_modules; let i=index\">\r\n                        <div class=\"module\">\r\n                            <div class=\"col-md-9 col-xs-7\">\r\n                              <h5>{{item.module_name}}</h5>\r\n                            </div>\r\n                            <div class=\"col-md-3 col-xs-5\">\r\n                              <ul class=\"taskedit\" >\r\n                                <li>{{item.total_hour}}Hrs</li>\r\n                                \r\n                              </ul>\r\n                            </div>\r\n                          </div>\r\n                          <ng-container *ngFor=\"let i of item.tbl_project_tasks\">\r\n                              <div class=\"task assigned relt\" >\r\n                                  <div class=\"col-md-12 col-xs-12 martop\">\r\n                                    <a data-toggle=\"tooltip\" matTooltip=\"Task\"> \r\n                                        <label for=\"\" class=\"tsk-lbl\">Task : </label>    \r\n                                        <h5 class=\"tsk-dt\">{{i.task_name}}</h5>                              \r\n                  \r\n                                    </a>\r\n                                    <div class=\"clearfix\"></div>\r\n                                      <a data-toggle=\"tooltip\" matTooltip=\"Planned start date\">\r\n                                        <label for=\"\" class=\"tsk-lbl\">Planned start date : </label>\r\n                                        <h5 class=\"tsk-dt\">{{i.planned_start_date_time | date:'EEE, d MMM,y'}}</h5>\r\n                                      </a>\r\n                                 \r\n                                    <a data-toggle=\"tooltip\" matTooltip=\"Planned end date\">\r\n                                      <label for=\"\" class=\"tsk-lbl\">Planned end date: </label>\r\n                                      <h5 class=\"tsk-dt\">{{i.planned_end_date_time | date:'EEE, d MMM,y'}} hrs</h5>\r\n                                    </a>\r\n                                \r\n                                    <a data-toggle=\"tooltip\" matTooltip=\"Status\">\r\n                                        <label for=\"\" class=\"tsk-lbl\" *ngIf=\"task?.end_date_time\">Status: </label>                                    \r\n                                      <h5 class=\"tsk-dt\">{{i.status}}</h5>\r\n                                    </a>\r\n\r\n\r\n                                    <div class=\"abst\">\r\n                                        <a data-toggle=\"tooltip\" matTooltip=\"Total hour\">\r\n                                                                        \r\n                                          <h5 class=\"tsk-dt\">  {{i.planned_hour+i.buffer_hour}}Hrs</h5>\r\n                                        </a>\r\n                                      \r\n                                    </div>\r\n                                  </div>\r\n                                 \r\n                                  <div class=\"clearfix\"></div>\r\n                                </div>\r\n\r\n\r\n\r\n                              <!-- <div class=\"col-md-10 pull-right\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"task\" >\r\n                                        <div class=\"col-md-9 col-xs-7\">\r\n                                          <span>Task : </span>\r\n                                          <h5>{{i.task_name}}</h5>\r\n                                        </div>\r\n                                        <div class=\"col-md-9 col-xs-7\">\r\n                                            <span>Planned start date : </span>\r\n                                          <h5>{{i.planned_start_date_time | date:'EEE, d MMM,y'}}</h5>\r\n                                        </div>\r\n                                        <div class=\"col-md-9 col-xs-7\">\r\n                                            <span>Planned end date: </span>\r\n                                          <h5>{{i.planned_end_date_time | date:'EEE, d MMM,y'}}</h5>\r\n                                        </div>\r\n                                        <div class=\"col-md-9 col-xs-7\">\r\n                                          <h5>{{i.status}}</h5>\r\n                                        </div>\r\n                                        <div class=\"col-md-3 col-xs-5\">\r\n                                          <ul class=\"taskedit2\">\r\n                                            <li>{{i.planned_hour+i.buffer_hour}}Hrs</li>\r\n                                            \r\n                                          </ul>\r\n                                        </div>\r\n                                      </div>\r\n                                </div>\r\n                                  \r\n                                </div> -->\r\n                          </ng-container>\r\n                          \r\n                          \r\n                    </ng-container>\r\n                      \r\n                    </div>\r\n                  </div>\r\n                  \r\n                <div class=\"text-center\">\r\n                    <app-spinner *ngIf=\"spinner\"></app-spinner>\r\n  \r\n                  </div>\r\n                  \r\n                </div>\r\n                <!--white-->\r\n              </div>\r\n  \r\n  \r\n  \r\n            </div>\r\n  \r\n  \r\n          </div>\r\n          <!-- footer-->\r\n          <!-- <admin-footer></admin-footer> -->\r\n          <!-- end footer-->\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Modal -->\r\n  \r\n  \r\n  \r\n  \r\n    <!--delete modal------>\r\n  </body>"

/***/ }),

/***/ "../../../../../src/app/components/user-view-project/user-view-project.component.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserViewProjectComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_material__ = __webpack_require__("../../../material/esm5/material.es5.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_user_service__ = __webpack_require__("../../../../../src/app/services/user.service.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__angular_router__ = __webpack_require__("../../../router/esm5/router.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var UserViewProjectComponent = (function () {
    function UserViewProjectComponent(userService, routes, snackBar, _activatedRoute) {
        this.userService = userService;
        this.routes = routes;
        this.snackBar = snackBar;
        this._activatedRoute = _activatedRoute;
        this.spinner = false;
        this.showData = false;
        this.xShow = false;
    }
    UserViewProjectComponent.prototype.ngOnInit = function () {
        this.getProjectDetails();
    };
    //  ---------------------------------Start-------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Manu Prasad 
    // Desc          : Get Teams from database
    UserViewProjectComponent.prototype.getProjectDetails = function () {
        var _this = this;
        this.spinner = true;
        this._activatedRoute.params.subscribe(function (params) {
            _this.projectId = params['id'];
        });
        // console.log(this.projectId)
        this.userService.getProjectDetails(this.projectId).subscribe(function (resProjects) {
            _this.project = resProjects;
            console.log(_this.project);
            if (resProjects.length > 0) {
                _this.showData = true;
                _this.spinner = false;
            }
            console.log(resProjects);
        });
    };
    UserViewProjectComponent = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"])({
            selector: 'app-user-view-project',
            template: __webpack_require__("../../../../../src/app/components/user-view-project/user-view-project.component.html"),
            styles: [__webpack_require__("../../../../../src/app/components/user-view-project/user-view-project.component.css")]
        }),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_2__services_user_service__["a" /* UserService */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["Router"],
            __WEBPACK_IMPORTED_MODULE_1__angular_material__["z" /* MatSnackBar */],
            __WEBPACK_IMPORTED_MODULE_3__angular_router__["ActivatedRoute"]])
    ], UserViewProjectComponent);
    return UserViewProjectComponent;
}());



/***/ }),

/***/ "../../../../../src/app/config/config.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Config; });
var Config = (function () {
    function Config() {
        // socketURL = "http://localhost:3000";
        // siteUrl = "http://localhost:3000";
        this.socketURL = "http://192.168.1.54:3002";
        this.siteUrl = "http://192.168.1.54:3002";
        // socketURL = "http://ec2-18-191-91-25.us-east-2.compute.amazonaws.com:3002";
        // siteUrl = "http://ec2-18-191-91-25.us-east-2.compute.amazonaws.com:3002";
    }
    return Config;
}());



/***/ }),

/***/ "../../../../../src/app/pipes/project.pipe.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ProjectPipe; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var ProjectPipe = (function () {
    function ProjectPipe() {
    }
    ProjectPipe.prototype.transform = function (project, searchTerm) {
        if (searchTerm === undefined) {
            return project;
        }
        return project.filter(function (pro) {
            // console.log(pro);
            return pro.project_name.toLowerCase().includes(searchTerm.toLowerCase());
        });
    };
    ProjectPipe = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Pipe"])({
            name: 'project'
        })
    ], ProjectPipe);
    return ProjectPipe;
}());



/***/ }),

/***/ "../../../../../src/app/pipes/teamfilter.pipe.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TeamfilterPipe; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var TeamfilterPipe = (function () {
    function TeamfilterPipe() {
    }
    TeamfilterPipe.prototype.transform = function (teamfilter, searchTermTeam) {
        if (searchTermTeam === undefined) {
            return teamfilter;
        }
        return teamfilter.filter(function (pro) {
            // console.log(pro);
            return pro.team_name.toLowerCase().includes(searchTermTeam.toLowerCase());
        });
    };
    TeamfilterPipe = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Pipe"])({
            name: 'teamfilter'
        })
    ], TeamfilterPipe);
    return TeamfilterPipe;
}());



/***/ }),

/***/ "../../../../../src/app/pipes/users.pipe.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UsersPipe; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var UsersPipe = (function () {
    function UsersPipe() {
    }
    UsersPipe.prototype.transform = function (users, searchTermTeam) {
        if (searchTermTeam === undefined) {
            return users;
        }
        return users.filter(function (pro) {
            console.log(pro);
            // return pro.f_name.toLowerCase().includes(searchTermTeam.toLowerCase());
            return pro.f_name.toLowerCase().includes(searchTermTeam.toLowerCase())
                || pro.l_name.toLowerCase().includes(searchTermTeam.toLowerCase())
                || pro.email.toLowerCase().includes(searchTermTeam.toLowerCase())
                || pro.contact_no.toLowerCase().includes(searchTermTeam.toLowerCase());
        });
    };
    UsersPipe = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Pipe"])({
            name: 'users'
        })
    ], UsersPipe);
    return UsersPipe;
}());



/***/ }),

/***/ "../../../../../src/app/pipes/viewproject.pipe.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ViewprojectPipe; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var ViewprojectPipe = (function () {
    function ViewprojectPipe() {
    }
    ViewprojectPipe.prototype.transform = function (viewproject, searchTermTeam) {
        if (searchTermTeam === undefined) {
            return viewproject;
        }
        return viewproject.filter(function (pro) {
            console.log(pro);
            // return pro.f_name.toLowerCase().includes(searchTermTeam.toLowerCase());
            return pro.module_name.toLowerCase().includes(searchTermTeam.toLowerCase());
        });
    };
    ViewprojectPipe = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Pipe"])({
            name: 'viewproject'
        })
    ], ViewprojectPipe);
    return ViewprojectPipe;
}());



/***/ }),

/***/ "../../../../../src/app/services/admin.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AdminService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__("../../../http/esm5/http.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/map.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var AdminService = (function () {
    function AdminService(http, config) {
        this.http = http;
        this.config = config;
        this.serviceUrl = config.siteUrl + '/admin/';
    }
    AdminService.prototype.setHeader = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        headers.append('Content-Type', 'application/json');
        return (headers);
    };
    AdminService.prototype.setHeaderWithAuthorization = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        this.loadToken();
        headers.append('Authorization', this.authToken);
        headers.append('Content-Type', 'application/json');
        return (headers);
    };
    AdminService.prototype.loadToken = function () {
        this.authToken = localStorage.getItem('id_token');
    };
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 05-03-2018
    // Last Modified : 
    // Desc          : all companieslist
    AdminService.prototype.getAllcompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allcompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Allactivecompanies
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 05-03-2018
    // Last Modified : 
    // Desc          : Allactivecompanies
    AdminService.prototype.getAllactivecompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allactivecompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          :  05-03-2018
    // Last Modified : 
    // Desc          : all blocked companies
    //all blocked companies
    AdminService.prototype.getAllblockedcompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allblockedcompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          :  05-03-2018
    // Last Modified : 
    // Desc          : all deleted companies
    //all deleted companies
    AdminService.prototype.getAlldeletedcompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'alldeletedcompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : company id
    // Returns       : 
    // Author        : sudha
    // Date          : 05-03-2018
    // Last Modified : 
    // Desc          : delete company
    //delete company
    AdminService.prototype.deleteCompany = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.put(this.serviceUrl + 'deletecompany/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : company id
    // Returns       : 
    // Author        : sudha
    // Date          : 05-03-2018
    // Last Modified : 
    // Desc          : block company
    //block company
    AdminService.prototype.blockCompany = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.put(this.serviceUrl + 'blockcompany/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : company id
    // Returns       : 
    // Author        : sudha
    // Date          : 05-03-2018
    // Last Modified : 
    // Desc          : unblock company
    //unblock company
    AdminService.prototype.unblockCompany = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.put(this.serviceUrl + 'unblockcompany/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 06-03-2018
    // Last Modified : 
    // Desc          : all subscribedcompanies
    //all subscribedcompanies
    AdminService.prototype.getAllsubcompanies = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        headers.append('Content-Type', 'application/json');
        return this.http.get(this.serviceUrl + 'allsubcompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 06-03-2018
    // Last Modified : 
    // Desc          : all subscribedactivecompanies
    AdminService.prototype.getAllsubactivecompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allsubactivecompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          :06-03-2018
    // Last Modified : 
    // Desc          : all subscribedblockcompanies
    AdminService.prototype.getAllsubblockcompanies = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        headers.append('Content-Type', 'application/json');
        return this.http.get(this.serviceUrl + 'allsubblockcompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 06-03-2018
    // Last Modified : 
    // Desc          : all subscribeddeletecompanies
    AdminService.prototype.getAllsubdeletecompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allsubdeletecompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 06-03-2018
    // Last Modified : 
    // Desc          : all trailcompanies
    AdminService.prototype.getAlltrialcompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'alltrialcompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 06-03-2018
    // Last Modified : 
    // Desc          : all trialactivecompanies
    AdminService.prototype.getAlltrialactivecompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'alltrialactivecompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 06-03-2018
    // Last Modified : 
    // Desc          : all trialblockcompanies
    AdminService.prototype.getAlltrialblockcompanies = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        headers.append('Content-Type', 'application/json');
        return this.http.get(this.serviceUrl + 'alltrialblockcompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 06-03-2018
    // Last Modified : 
    // Desc          : all trialdeletecompanies
    AdminService.prototype.getAlltrialdeletecompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'alltrialdeletecompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          :  06-03-2018
    // Last Modified : 
    // Desc          : all notverifiedcompanies
    //all not verified companies
    AdminService.prototype.getAllnotverficompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allnotverficompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          :  06-03-2018
    // Last Modified : 
    // Desc          : all notverfiactivecompanies
    AdminService.prototype.getAllnotverfiactivecompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allnotverfiactivecompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 06-03-2018
    // Last Modified : 
    // Desc          : all notverfiblockcompanies
    AdminService.prototype.getAllnotverfiblockcompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allnotverfiblockcompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          :  06-03-2018
    // Last Modified : 
    // Desc          : all notverfideletecompanies
    AdminService.prototype.getAllnotverfideletecompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allnotverfideletecompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          :  06-03-2018
    // Last Modified : 
    // Desc          : all expired companies
    //all expired companies
    AdminService.prototype.getAllexpiredcompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allexpiredcompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          :  06-03-2018
    // Last Modified : 
    // Desc          : all expiredactivecompanies
    AdminService.prototype.getAllexpiredactivecompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allexpiredactivecompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          :  06-03-2018
    // Last Modified : 
    // Desc          : all expiredblockcompanies
    AdminService.prototype.getAllexpiredblockcompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allexpiredblockcompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin company management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          :  06-03-2018
    // Last Modified : 
    // Desc          : all expireddeletecompanies
    AdminService.prototype.getAllexpireddeletecompanies = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allexpireddeletecompanies', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin notification management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          :  06-03-2018
    // Last Modified : 
    // Desc          : notification
    AdminService.prototype.getAdminnotification = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'adminnotification', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin user notification management
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 03-01-2018
    // Last Modified : 
    // Desc          : view status user notifcation
    AdminService.prototype.viewstatusadmin = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.put(this.serviceUrl + 'viewstatusadmin/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin Login
    // Params        : admin, contains username and password
    // Returns       : Token, admin id and role
    // Author        : Rinsha
    // Date          : 01-03-2018
    // Last Modified : 01-03-2018, Rinsha
    // Desc          : Admin login
    AdminService.prototype.adminLogin = function (admin) {
        var h = this.setHeader();
        return this.http.post(this.serviceUrl + "login", admin, { headers: h })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End-----------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Store User Data
    // Params        : Token, admin id and role
    // Returns       : 
    // Author        : Rinsha
    // Date          : 05-03-2018
    // Last Modified : 05-03-2018, Rinsha
    // Desc          : To locally store admin data
    AdminService.prototype.storeUserData = function (token, admin) {
        localStorage.setItem('id_token', token);
        localStorage.setItem('admin', JSON.stringify(admin));
        this.authToken = token;
        this.admin = admin;
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get all plans
    // Params        : 
    // Returns       : 
    // Author        : Rinsha
    // Date          : 05-03-2018
    // Last Modified : 05-03-2018, Rinsha
    // Desc          : getAllplans
    AdminService.prototype.getAllplans = function () {
        var headers = this.setHeader();
        return this.http.get(this.serviceUrl + 'allplans', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get all plans without default
    // Params        : 
    // Returns       : 
    // Author        : Rinsha
    // Date          : 06-03-2018
    // Last Modified : 06-03-2018, Rinsha
    // Desc          : getAllplans without default
    AdminService.prototype.getPlansWithoutDefault = function () {
        var headers = this.setHeader();
        return this.http.get(this.serviceUrl + 'allPlansWithoutDefault', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getCountsforAdminDashboard
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 02-03-2018
    // Last Modified : 02-03-2018, Jooshifa 
    // Desc          : for getting count of companies,projects,users
    AdminService.prototype.getCountsforAdminDashboard = function () {
        var h = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + "/get_counts_for_dashboard", {}, { headers: h })
            .map(function (res) { return res.json(); });
    };
    //  ---------------------------------End-------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getPieDataforAdminDashboard
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 06-03-2018
    // Last Modified : 06-03-2018, 
    // Desc          : get piegraph data
    AdminService.prototype.getPieDataforAdminDashboard = function () {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "/super_admin_pie_graph", { headers: h })
            .map(function (res) { return res.json(); });
    };
    //  ---------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : add plan
    // Params        : data from form
    // Returns       : 
    // Author        : Rinsha
    // Date          : 07-03-2018
    // Last Modified : 07-03-2018, Rinsha
    // Desc          : add plan 
    AdminService.prototype.addPlan = function (plan) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'addPlan', plan, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : best plan
    // Params        : id and value
    // Returns       : 
    // Author        : Rinsha
    // Date          : 07-03-2018
    // Last Modified : 07-03-2018, Rinsha
    // Desc          : to change a plan to best
    AdminService.prototype.bestPlan = function (id, value) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'bestPlan/' + id, { status: value }, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : delete plan
    // Params        : id 
    // Returns       : 
    // Author        : Rinsha
    // Date          : 07-03-2018
    // Last Modified : 07-03-2018, Rinsha
    // Desc          : to delete a plan which is'nt used by any company
    AdminService.prototype.deletePlan = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'deletePlan/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get plan by id
    // Params        : id
    // Returns       : plan
    // Author        : Rinsha
    // Date          : 07-03-2018
    // Last Modified : 07-03-2018, Rinsha
    // Desc          : getplan
    AdminService.prototype.getPlan = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'planById/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : update plan
    // Params        : value from form
    // Returns       : 
    // Author        : Rinsha
    // Date          : 07-03-2018
    // Last Modified : 07-03-2018, Rinsha
    // Desc          : update a plan
    AdminService.prototype.updatePlan = function (plan) {
        // console.log(plan);
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'updatePlan', plan, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getBarDataforAdminDashboard
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 06-03-2018
    // Last Modified : 06-03-2018, 
    // Desc          : get piegraph data
    AdminService.prototype.getBarDataforAdminDashboard = function () {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "/super_admin_bar_graph", { headers: h })
            .map(function (res) { return res.json(); });
    };
    //  ---------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get all estimated project
    // Params        : 
    // Returns       : 
    // Author        : Yasir Poongadan
    // Date          : 06-04-2018
    // Last Modified : 06-04-2018, Rinsha
    // Desc          : get all estimated project
    AdminService.prototype.getEstimatedProject = function (data) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'getAllEstimatedProject', data, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Get logged in entity
    // Params        : 
    // Returns       : Get logged in entity
    // Author        : Rinsha
    // Date          : 20-04-2018
    // Last Modified : 20-04-2018, Rinsha
    // Desc          :  
    AdminService.prototype.getLoggedinEntity = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getLoggedinUser', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get all estimated project
    // Params        : 
    // Returns       : 
    // Author        : Yasir Poongadan
    // Date          : 06-04-2018
    // Last Modified : 06-04-2018, Rinsha
    // Desc          : get all estimated project
    AdminService.prototype.getProjectReport = function (data) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'getProjectReport', data, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get all estimated project
    // Params        : 
    // Returns       : 
    // Author        : Yasir Poongadan
    // Date          : 06-04-2018
    // Last Modified : 06-04-2018, Rinsha
    // Desc          : get all estimated project
    AdminService.prototype.getActivityLog = function (data) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'getActivityLog', data, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    AdminService.prototype.logexecuteReportpdf = function (params) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'logexecuteReport', { params: params }, { headers: headers, responseType: __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* ResponseContentType */].Blob })
            .map(function (res) {
            return {
                filename: 'Activity-log-report.pdf',
                data: res.blob()
            };
        });
    };
    AdminService.prototype.logexecuteReportexcel = function (params) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'logexecuteReport', { params: params }, { headers: headers, responseType: __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* ResponseContentType */].Blob })
            .map(function (res) {
            return {
                filename: 'Activity-log-report.xlsx',
                data: res.blob()
            };
        });
    };
    AdminService.prototype.estimationReportpdf = function (params) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'estimationReport', { params: params }, { headers: headers, responseType: __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* ResponseContentType */].Blob })
            .map(function (res) {
            return {
                filename: 'estimation-report.pdf',
                data: res.blob()
            };
        });
    };
    AdminService.prototype.estimationReportexcel = function (params) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'estimationReport', { params: params }, { headers: headers, responseType: __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* ResponseContentType */].Blob })
            .map(function (res) {
            return {
                filename: 'estimation-report.xlsx',
                data: res.blob()
            };
        });
    };
    AdminService.prototype.projectReportpdf = function (params) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'projectReport', { params: params }, { headers: headers, responseType: __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* ResponseContentType */].Blob })
            .map(function (res) {
            return {
                filename: 'project-report.pdf',
                data: res.blob()
            };
        });
    };
    AdminService.prototype.projectReportexcel = function (params) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'projectReport', { params: params }, { headers: headers, responseType: __WEBPACK_IMPORTED_MODULE_1__angular_http__["d" /* ResponseContentType */].Blob })
            .map(function (res) {
            return {
                filename: 'project-report.xlsx',
                data: res.blob()
            };
        });
    };
    AdminService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_2__config_config__["a" /* Config */]])
    ], AdminService);
    return AdminService;
}());



/***/ }),

/***/ "../../../../../src/app/services/company.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CompanyService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__("../../../http/esm5/http.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/map.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CompanyService = (function () {
    function CompanyService(http, config) {
        this.http = http;
        this.config = config;
        this.serviceUrl = config.siteUrl + '/company/';
    }
    CompanyService.prototype.setHeader = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        headers.append('Content-Type', 'application/json');
        return (headers);
    };
    CompanyService.prototype.setHeaderWithAuthorization = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        this.loadToken();
        headers.append('Authorization', this.authToken);
        headers.append('Content-Type', 'application/json');
        return (headers);
    };
    CompanyService.prototype.loadToken = function () {
        this.authToken = localStorage.getItem('id_token');
    };
    //  ---------------------------------Start-------------------------------------------
    // Function      : getIndustries
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 06-03-2018
    // Last Modified : 06-03-2018, 
    // Desc          : get Ind=ustries list from DB
    CompanyService.prototype.getIndustries = function () {
        var h = this.setHeader();
        return this.http.get(this.serviceUrl + "/get_industries", { headers: h })
            .map(function (res) { return res.json(); });
    };
    //  ---------------------------------End-------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getCompanySize
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 06-03-2018
    // Last Modified : 06-03-2018, 
    // Desc          : get Company size list from DB
    CompanyService.prototype.getCompanySize = function () {
        var h = this.setHeader();
        return this.http.get(this.serviceUrl + "/get_cmp_size", { headers: h })
            .map(function (res) { return res.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get plan by id
    // Params        : id
    // Returns       : plan
    // Author        : Rinsha
    // Date          : 06-03-2018
    // Last Modified : 06-03-2018, Rinsha
    // Desc          : getplan
    CompanyService.prototype.getPlan = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'planById/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : upgrade
    // Params        : data from form
    // Returns       : message
    // Author        : Rinsha
    // Date          : 06-03-2018
    // Last Modified : 06-03-2018, Rinsha
    // Desc          : upgrade
    CompanyService.prototype.upgrade = function (id, data) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'upgrade/' + id, data, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get all projects
    // Params        : 
    // Returns       : 
    // Author        : Rinsha
    // Date          : 07-03-2018
    // Last Modified : 07-03-2018, Rinsha
    // Desc          : getAllProjects 
    CompanyService.prototype.getAllProject = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getAllProject', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      :getProjectsById
    // Params        : 
    // Returns       : 
    // Author        : Rinsha
    // Date          : 07-03-2018
    // Last Modified : 07-03-2018, Rinsha
    // Desc          : getAllProjects 
    CompanyService.prototype.getProjectsById = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getProjectsById/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Get All pm in a company
    // Params        : 
    // Returns       : All pm in a company
    // Author        : Rinsha
    // Date          : 08-03-2018
    // Last Modified : 08-03-2018, Rinsha
    // Desc          : 
    CompanyService.prototype.getAllPm = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getAllPm', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Get All project category in a company
    // Params        : 
    // Returns       : All project category in a company
    // Author        : Rinsha
    // Date          : 08-03-2018
    // Last Modified : 08-03-2018, Rinsha
    // Desc          : 
    CompanyService.prototype.getAllProjectCategory = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getAllProjectCategory', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : add project
    // Params        : data from form
    // Returns       : 
    // Author        : Rinsha
    // Date          : 08-03-2018
    // Last Modified : 08-03-2018, Rinsha
    // Desc          :  
    CompanyService.prototype.addProject = function (project) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'addProject', project, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : Login
    // Params        : username and password
    // Returns       : token, company details and company status
    // Author        : Jooshifa
    // Date          : 05-03-2018
    // Last Modified : 05-03-2018, jooshifa
    // Desc          : 
    CompanyService.prototype.authenticateCompany = function (company) {
        var h = this.setHeader();
        return this.http.post(this.serviceUrl + "authenticate", company, { headers: h })
            .map(function (res) { return res.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Store User Data
    // Params        : Token, id and role
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 05-03-2018
    // Last Modified : 05-03-2018, jooshifa
    // Desc          : To locally store  data
    CompanyService.prototype.storeUserData = function (token, company) {
        localStorage.setItem('id_token', token);
        localStorage.setItem('company', JSON.stringify(company));
        this.authToken = token;
        this.company = company;
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : Get logged user details
    // Params        : 
    // Returns       : get details of logged in entity
    // Author        : Jooshifa
    // Date          : 07-03-2018
    // Last Modified : 07-03-2018, Jooshifa
    // Desc          : 
    CompanyService.prototype.getLoggedUSerDetails = function () {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getLoggedinCompany', { headers: h })
            .map(function (res) { return res.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : Company verification
    // Params        : verification id
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 07-03-2018
    // Last Modified : 07-03-2018, Jooshifa
    // Desc          : 
    CompanyService.prototype.verifyCompany = function (verif_id) {
        var h = this.setHeader();
        return this.http.get(this.serviceUrl + "companyVerification/" + verif_id, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // // ---------------------------------Start-------------------------------------------
    // // Function      : Get logged in entity
    // // Params        : 
    // // Returns       : Get logged in entity
    // // Author        : Rinsha
    // // Date          : 08-03-2018
    // // Last Modified : 08-03-2018, Rinsha
    // // Desc          :  
    // getLoggedinEntity() {
    //   let headers = this.setHeaderWithAuthorization();
    //   return this.http.get(this.serviceUrl + 'getLoggedinCompany', { headers: headers })
    //     .map(res => res.json());
    // }
    // // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get project by id
    // Params        : id
    // Returns       : project
    // Author        : Rinsha
    // Date          : 08-03-2018
    // Last Modified : 08-03-2018, Rinsha
    // Desc          : getProject
    CompanyService.prototype.getProject = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getProjectById/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get developer team
    // Params        : 
    // Returns       : users in developer team
    // Author        : Rinsha
    // Date          : 09-03-2018
    // Last Modified : 09-03-2018, Rinsha
    // Desc          : getDeveloperTeam
    CompanyService.prototype.getDeveloperTeam = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getDeveloperTeam', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get developer team
    // Params        : 
    // Returns       : users in developer team
    // Author        : Rinsha
    // Date          : 09-03-2018
    // Last Modified : 09-03-2018, Rinsha
    // Desc          : getallTeamsforassign
    CompanyService.prototype.getallTeamsforassign = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getallTeamsforassign', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get designer team
    // Params        : 
    // Returns       : users in designer team
    // Author        : Rinsha
    // Date          : 09-03-2018
    // Last Modified : 09-03-2018, Rinsha
    // Desc          : getDesignerTeam
    CompanyService.prototype.getDesignerTeam = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getDesignerTeam', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get qc team
    // Params        : 
    // Returns       : users in qc team
    // Author        : Rinsha
    // Date          : 09-03-2018
    // Last Modified : 09-03-2018, Rinsha
    // Desc          : getQCTeam
    CompanyService.prototype.getQCTeam = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getQCTeam', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : assign project
    // Params        : form data
    // Returns       : 
    // Author        : Rinsha
    // Date          : 09-03-2018
    // Last Modified : 09-03-2018, Rinsha
    // Desc          : AssignTeamHead
    CompanyService.prototype.AssignTeamHead = function (project) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'AssignTeamHead', project, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : edit project
    // Params        : data from form
    // Returns       : 
    // Author        : Rinsha
    // Date          : 09-03-2018
    // Last Modified : 09-03-2018, Rinsha
    // Desc          :
    CompanyService.prototype.editProject = function (project) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'editProject', project, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get category by id
    // Params        : id
    // Returns       : category
    // Author        : Rinsha
    // Date          : 08-03-2018
    // Last Modified : 08-03-2018, Rinsha
    // Desc          : getCategoryById
    CompanyService.prototype.getCategoryById = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getCategoryById/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : delete project
    // Params        : id 
    // Returns       : 
    // Author        : Rinsha
    // Date          : 12-03-2018
    // Last Modified : 12-03-2018, Rinsha
    // Desc          : to delete a project
    CompanyService.prototype.deleteProject = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'deleteProject/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get all projects by status
    // Params        : 
    // Returns       : 
    // Author        : Rinsha
    // Date          : 12-03-2018
    // Last Modified : 12-03-2018, Rinsha
    // Desc          : getAllProjectByStatus
    CompanyService.prototype.getAllProjectByStatus = function (status) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getAllProjectByStatus/' + status, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get assignHeadNotification
    // Params        : 
    // Returns       : project data
    // Author        : Rinsha
    // Date          : 12-03-2018
    // Last Modified : 12-03-2018, Rinsha
    // Desc          : check whether the loggedin project manager assigned for a project. If yes, then notification to assign team heads
    CompanyService.prototype.assignHeadNotification = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'assignHeadNotification', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : close notification
    // Params        : project id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 12-03-2018
    // Last Modified : 12-03-2018, Rinsha
    // Desc          : close notification when pm sees the assign team head notification
    CompanyService.prototype.closeNotif = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'closeNotif/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get approveEstimationNotification
    // Params        : 
    // Returns       : notification data
    // Author        : Rinsha
    // Date          : 14-03-2018
    // Last Modified : 14-03-2018, Rinsha
    // Desc          : check whether the loggedin project manager have pending estimation approval notification
    CompanyService.prototype.approveEstimationNotification = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'approveEstimationNotification', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : close notification of estimation approval
    // Params        : notification id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 14-03-2018
    // Last Modified : 14-03-2018, Rinsha
    // Desc          : close notification when pm sees the estimation approval notification
    CompanyService.prototype.closeNotif2 = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'closeNotif2/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getProjectstimations
    // Params        : project id
    // Returns       : estimations
    // Author        : Rinsha
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Rinsha
    // Desc          :  
    CompanyService.prototype.getProjectstimations = function (pro_id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getProjectstimations/' + pro_id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : resubmitEstimation
    // Params        : estimation id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Rinsha
    // Desc          : 
    CompanyService.prototype.resubmitEstimation = function (est_id, resubmitData) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'resubmitEstimation/' + est_id, resubmitData, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : acceptEstimation
    // Params        : estimation id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Rinsha
    // Desc          :  
    CompanyService.prototype.acceptEstimation = function (est_id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'acceptEstimation/' + est_id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get team heads of the project who does nt involved in estimations
    // Params        : project id
    // Returns       : team head info
    // Author        : Rinsha
    // Date          : 16-03-2018
    // Last Modified : 16-03-2018, Rinsha
    // Desc          : getTeamHeadsToEstimate
    CompanyService.prototype.getTeamHeadsToEstimate = function (p_id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'getTeamHeadsToEstimate/' + p_id, {}, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : forwardEstimationRequest
    // Params        : project id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 16-03-2018
    // Last Modified : 16-03-2018, Rinsha
    // Desc          :  
    CompanyService.prototype.forwardEstimationRequest = function (p_id, head_id) {
        var Head_id = { head_id: head_id };
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'forwardEstimationRequest/' + p_id, JSON.stringify(Head_id), { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getTotalEstimations
    // Params        : project id
    // Returns       : estimations
    // Author        : Rinsha
    // Date          : 19-03-2018
    // Last Modified : 19-03-2018, Rinsha
    // Desc          :  
    CompanyService.prototype.getTotalEstimations = function (pro_id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getTotalEstimations/' + pro_id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : send request to admin for approval
    // Params        : project id, assignee id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 19-03-2018
    // Last Modified : 19-03-2018, Rinsha
    // Desc          : sendForApproval
    CompanyService.prototype.sendForApproval = function (pro_id, pm_id) {
        var PM_id = { pm_id: pm_id };
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'sendForApproval/' + pro_id, PM_id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get apprroveProjectNotification
    // Params        : 
    // Returns       : project data
    // Author        : Rinsha
    // Date          : 19-03-2018
    // Last Modified : 19-03-2018, Rinsha
    // Desc          : check whether the loggedin company admin have any project to approve
    CompanyService.prototype.approveProjectNotification = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'approveProjectNotification', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : close notification of project approval
    // Params        : project id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 19-03-2018
    // Last Modified : 19-03-2018, Rinsha
    // Desc          : close notification when pm sees the project approval notification
    CompanyService.prototype.closeNotif3 = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'closeNotif3/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : accept project
    // Params        : cost, estimated hr, project id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 20-03-2018
    // Last Modified : 20-03-2018, Rinsha
    // Desc          : acceptProject
    CompanyService.prototype.acceptProject = function (project_submit) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'acceptProject', project_submit, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : reject project
    // Params        : cost, estimated hr, project id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 20-03-2018
    // Last Modified : 20-03-2018, Rinsha
    // Desc          : rejectProject
    CompanyService.prototype.rejectProject = function (project_submit) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'rejectProject', project_submit, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : resubmit project
    // Params        : cost, estimated hr, project id, pm id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 20-03-2018
    // Last Modified : 20-03-2018, Rinsha
    // Desc          : resubmitProject
    CompanyService.prototype.resubmitProject = function (project_submit) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'resubmitProject', project_submit, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get planProjectNotification
    // Params        : 
    // Returns       : project data
    // Author        : Rinsha
    // Date          : 20-03-2018
    // Last Modified : 20-03-2018, Rinsha
    // Desc          : check whether the loggedin pm have any project to plan
    CompanyService.prototype.planProjectNotification = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'planProjectNotification', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : close notification of project plan
    // Params        : project id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 20-03-2018
    // Last Modified : 20-03-2018, Rinsha
    // Desc          : close notification when pm sees the project plan notification
    CompanyService.prototype.closeNotif4 = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'closeNotif4/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get resubmitEstimationNotification
    // Params        : 
    // Returns       : project data
    // Author        : Rinsha
    // Date          : 20-03-2018
    // Last Modified : 20-03-2018, Rinsha
    // Desc          : check whether the loggedin pm have any estimation to resubmit
    CompanyService.prototype.resubmitEstimationNotification = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'resubmitEstimationNotification', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAcceptedEstimations
    // Params        : project id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 20-03-2018
    // Last Modified : 20-03-2018, Rinsha
    // Desc          : 
    CompanyService.prototype.getAcceptedEstimations = function (pid) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getAcceptedEstimations/' + pid, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : forwardStatus
    // Params        : project id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 21-03-2018
    // Last Modified : 21-03-2018, Rinsha
    // Desc          : check whether the estimation request forwarded to any team head is pending
    CompanyService.prototype.getforwardStatus = function (pid) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getforwardStatus/' + pid, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getBarDataforAdminDashboard
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 06-03-2018
    // Last Modified : 06-03-2018, 
    // Desc          : get piegraph data
    CompanyService.prototype.registerCompany = function (details) {
        var h = this.setHeader();
        return this.http.post(this.serviceUrl + "/register_company", details, { headers: h })
            .map(function (res) { return res.json(); });
    };
    //  ---------------------------------End-------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : registerCompanyFromadtninfo
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 12-03-2018
    // Last Modified : 12-03-2018, 
    // Desc          : 
    CompanyService.prototype.registerCompanyFromadtninfo = function (details) {
        var h = this.setHeader();
        return this.http.post(this.serviceUrl + "/register_company2", details, { headers: h })
            .map(function (res) { return res.json(); });
    };
    //  ---------------------------------End-------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : forgotPassword
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 12-03-2018
    // Last Modified : 12-03-2018, 
    // Desc          : 
    CompanyService.prototype.forgotPassword = function (newPassword) {
        // console.log("here..."  +  newPassword.email)
        var h = this.setHeader();
        return this.http.post(this.serviceUrl + "/forgotPassword", newPassword, { headers: h })
            .map(function (res) { return res.json(); });
    };
    //  ---------------------------------End-------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : Get company details by id
    // Params        : id
    // Returns       : company details
    // Author        : Jooshifa
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, Jooshifa
    // Desc          : 
    CompanyService.prototype.getCompanyDetailsById = function (id) {
        var h = this.setHeader();
        return this.http.get(this.serviceUrl + "getCompanyDetails/" + id, { headers: h })
            .map(function (res) { return res.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : Generate token
    // Params        : company id
    // Returns       : jwt token
    // Author        : Jooshifa
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, Jooshifa
    // Desc          : 
    CompanyService.prototype.generateToken = function (id) {
        // console.log("id" + id);
        var h = this.setHeader();
        return this.http.get(this.serviceUrl + "generateToken/" + id, { headers: h })
            .map(function (res) { return res.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getProjectById 
    // Params        :  id
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 14-03-2018
    // Last Modified : 14-03-2018, Jooshifa
    // Desc :get project details of a purticular id
    CompanyService.prototype.getProjectById = function (id) {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "getProjects/" + id, { headers: h })
            .map(function (res) { return res.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getDeveloperUsers
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 14-03-2018
    // Last Modified : 14-03-2018, Jooshifa
    // Desc          : to get developer users
    CompanyService.prototype.getDeveloperUsers = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'get-developer-users', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getDesignerrUsers
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 14-03-2018
    // Last Modified : 14-03-2018, Jooshifa
    // Desc          : 
    CompanyService.prototype.getDesignerrUsers = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'get-designer-users', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getQcUsers
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 14-03-2018
    // Last Modified : 14-03-2018, Jooshifa
    // Desc          : 
    CompanyService.prototype.getQcUsers = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'get-qc-users', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getTasksModules
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 14-03-2018
    // Last Modified : 14-03-2018, Jooshifa
    // Desc          : 
    CompanyService.prototype.getTasksModules = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'get-modules-tasks/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAllUsers
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 14-03-2018
    // Last Modified : 14-03-2018, Jooshifa
    // Desc          : 
    CompanyService.prototype.getAllUsers = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'get-all-users', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getComplexity
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 16-03-2018
    // Last Modified : 16-03-2018, Jooshifa
    // Desc          
    CompanyService.prototype.getComplexity = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'get-complexity-percentage', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getDatetime
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 19-03-2018
    // Last Modified : 19-03-2018, Jooshifa
    // Desc          
    CompanyService.prototype.getDatetime = function (newTasks) {
        var h = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + "/get-date-time", newTasks, { headers: h })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getTeams
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, 
    // Desc          : get team names and strength from db
    CompanyService.prototype.getTeams = function () {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "getTeams", { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getTeamMembers
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, 
    // Desc          : get team members based on id passed from db
    CompanyService.prototype.getTeamMembers = function (id) {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "getMembers/" + id, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : get All Users by project id
    // Params        : project id , '' for all users
    // Returns       : All Users
    // Author        : Yasir Poongadan  
    // Date          : 09-03-2018
    // Last Modified : 09-03-2018, Yasir Poongadan
    // Desc          : 
    CompanyService.prototype.getUsers = function (projId) {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "getUsersByProject/" + projId, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // Function      : getTeamMembers
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, 
    // Desc          : get team members based on id passed from db
    CompanyService.prototype.assignTeam = function (members, head, teamId) {
        var h = this.setHeaderWithAuthorization();
        var data = [];
        data.push(members);
        data.push(head);
        data.push(teamId);
        return this.http.post(this.serviceUrl + "assignMemebers/", data, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getUserGroups
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, 
    // Desc          : get user groups  from db
    CompanyService.prototype.getUserGroups = function () {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "getUserGroups", { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getAccessRights
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, 
    // Desc          : get Access Rights  from db
    CompanyService.prototype.getAccessRights = function (roleId) {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "getAccessRights/" + roleId, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------------End--------------------------------------------
    // Function      : assignRights
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 16-03-2018
    // Last Modified : 16-03-2018, 
    // Desc          : assign tights to usergroup
    CompanyService.prototype.assignRights = function (rights, id) {
        var h = this.setHeaderWithAuthorization();
        ;
        return this.http.post(this.serviceUrl + "assignRights/" + id, rights, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // Function      : assignRights
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 16-03-2018
    // Last Modified : 16-03-2018, 
    // Desc          : assign tights to usergroup
    CompanyService.prototype.getWorkTimes = function () {
        var h = this.setHeaderWithAuthorization();
        ;
        return this.http.get(this.serviceUrl + "getWorkingTimes", { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // Function      : assignRights
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 16-03-2018
    // Last Modified : 16-03-2018, 
    // Desc          : assign tights to usergroup
    CompanyService.prototype.getWeekTimes = function () {
        var h = this.setHeaderWithAuthorization();
        ;
        return this.http.get(this.serviceUrl + "getWeekHours", { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------------End--------------------------------------------
    // Function      : saveWorkTimes
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 20-03-2018
    // Last Modified : 20-03-2018, 
    // Desc          : save company work time to DB
    CompanyService.prototype.saveWorkTimes = function (id, start, end) {
        var data = {
            id: id,
            start: start,
            end: end
        };
        var h = this.setHeaderWithAuthorization();
        ;
        return this.http.post(this.serviceUrl + "saveWorkingTimes", data, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------------End--------------------------------------------
    // Function      : saveWorkTimes
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 20-03-2018
    // Last Modified : 20-03-2018, 
    // Desc          : save company work time to DB
    CompanyService.prototype.deleteBreak = function (id) {
        var data = {
            id: id
        };
        var h = this.setHeaderWithAuthorization();
        ;
        return this.http.post(this.serviceUrl + "deleteBreak", data, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------------End--------------------------------------------
    // Function      : saveWorkTimes
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 20-03-2018
    // Last Modified : 20-03-2018, 
    // Desc          : save company work time to DB
    CompanyService.prototype.saveBreak = function (time) {
        var h = this.setHeaderWithAuthorization();
        ;
        return this.http.post(this.serviceUrl + "saveBreak", time, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // Function      : getHoliday
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 22-03-2018
    // Last Modified : 22-03-2018, 
    // Desc          : get Holidays from DB
    CompanyService.prototype.getHoliday = function (value) {
        var data = {
            year: value
        };
        var h = this.setHeaderWithAuthorization();
        ;
        return this.http.post(this.serviceUrl + "getHoliday", data, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // Function      : getHoliday
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 22-03-2018
    // Last Modified : 22-03-2018, 
    // Desc          : get Holidays from DB
    CompanyService.prototype.getYears = function () {
        var h = this.setHeaderWithAuthorization();
        ;
        return this.http.get(this.serviceUrl + "getYears", { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // Function      : updateHoliday
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 22-03-2018
    // Last Modified : 22-03-2018, 
    // Desc          : update holiday in DB
    CompanyService.prototype.updateHoliday = function (data) {
        var h = this.setHeaderWithAuthorization();
        ;
        return this.http.post(this.serviceUrl + "updateHoliday", data, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // Function      : updateHoliday
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 22-03-2018
    // Last Modified : 22-03-2018, 
    // Desc          : update holiday in DB
    CompanyService.prototype.deleteHoliday = function (data) {
        var d = {
            id: data
        };
        var h = this.setHeaderWithAuthorization();
        ;
        return this.http.post(this.serviceUrl + "deleteHoliday", d, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getAccessRights
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, 
    // Desc          : get Access Rights  from db
    CompanyService.prototype.saveHoliday = function (date, title) {
        var data = {
            date: date,
            title: title
        };
        var h = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + "saveHoliday", data, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Get logged in entity
    // Params        : 
    // Returns       : Get logged in entity
    // Author        : Rinsha
    // Date          : 08-03-2018
    // Last Modified : 08-03-2018, Rinsha
    // Desc          :  
    CompanyService.prototype.getLoggedinEntity = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getLoggedinCompany', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAvailablity
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 21-03-2018
    // Last Modified : 21-03-2018, Jooshifa
    // Desc          : 
    CompanyService.prototype.getAvailablity = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'get-availablity/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getPublicHolidays
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 21-03-2018
    // Last Modified : 21-03-2018, Jooshifa
    // Desc          : 
    CompanyService.prototype.getPublicHolidays = function () {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "/get-public-holidays", { headers: h })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getWorkingTime
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 21-03-2018
    // Last Modified : 21-03-2018, Jooshifa
    // Desc          : 
    CompanyService.prototype.getWorkingTime = function () {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "/get-working-time", { headers: h })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getOffDays
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 21-03-2018
    // Last Modified : 21-03-2018, Jooshifa
    // Desc          : 
    CompanyService.prototype.getOffDays = function () {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "/get-off-days-assoc", { headers: h })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : breakTime
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 21-03-2018
    // Last Modified : 21-03-2018, Jooshifa
    // Desc          : 
    CompanyService.prototype.getbreakTime = function () {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "/get-break-time", { headers: h })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : Logout
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 28-03-2018
    // Last Modified : 28-03-2018, Jooshifa
    // Desc          : 
    CompanyService.prototype.logout = function () {
        this.authToken = null;
        this.company = null;
        localStorage.clear();
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getUserProjectsOnStatus
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 26-03-2018
    // Last Modified : 26-03-2018, 
    // Desc          : get details of project involved by user based on status from db
    CompanyService.prototype.getNotifications = function () {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "getNotifications2", { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : closeNotifnewTaskReq
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 26-03-2018
    // Last Modified : 26-03-2018, 
    // Desc          : close the notification of new request
    CompanyService.prototype.closeNotifnewTaskReq = function (id) {
        var h = this.setHeaderWithAuthorization();
        var data = {
            id: id
        };
        return this.http.post(this.serviceUrl + "closeNotifnewTaskReq", data, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : closeNotifAproval
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 26-03-2018
    // Last Modified : 26-03-2018, 
    // Desc          : close the notification of new  Aproval 
    CompanyService.prototype.closeNotifAproval = function (id) {
        var h = this.setHeaderWithAuthorization();
        var data = {
            id: id
        };
        return this.http.post(this.serviceUrl + "closeNotifAproval", data, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : closeNotifAproval
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 26-03-2018
    // Last Modified : 26-03-2018, 
    // Desc          : close the notification of new  Aproval 
    CompanyService.prototype.getNewTaskRequests = function () {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "getNewTaskRequests", { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : closeNotifAproval
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 26-03-2018
    // Last Modified : 26-03-2018, 
    // Desc          : close the notification of new  Aproval 
    CompanyService.prototype.getNewTaskRequest = function (id) {
        // console.log("h")
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "getNewTaskRequest/" + id, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : closeNotifAproval
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 26-03-2018
    // Last Modified : 26-03-2018, 
    // Desc          : close the notification of new  Aproval 
    CompanyService.prototype.getProjectDetails = function (id) {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "getProjectsDetails/" + id, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : closeNotifAproval
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 26-03-2018
    // Last Modified : 26-03-2018, 
    // Desc          : close the notification of new  Aproval 
    CompanyService.prototype.editTask = function (task) {
        // console.log("h")
        var h = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + "edit-task-in-manage-new-task", task, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : closeNotifAproval
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 26-03-2018
    // Last Modified : 26-03-2018, 
    // Desc          : close the notification of new  Aproval 
    CompanyService.prototype.checkRole = function () {
        // console.log("h")
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "checkRole/", { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : closeNotifAproval
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 26-03-2018
    // Last Modified : 26-03-2018, 
    // Desc          : close the notification of new  Aproval 
    CompanyService.prototype.approveTask = function (data) {
        // console.log("h")
        var h = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + "approveTask/", data, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : closeNotifAproval
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 26-03-2018
    // Last Modified : 26-03-2018, 
    // Desc          : close the notification of new  Aproval 
    CompanyService.prototype.rejectTask = function (taskReqId) {
        // console.log("h")
        var h = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + "rejectTaskRequest/" + taskReqId, {}, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : rejectTask
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 07-04-2018
    // Last Modified : 07-04-2018, 
    // Desc          : Reject new Task request
    CompanyService.prototype.sendApproval = function (taskReqId) {
        // console.log("h")
        var h = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + "sendApproval/" + taskReqId, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getDayBreaks
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 07-04-2018
    // Last Modified : 07-04-2018, 
    // Desc          : Get breaks in the day
    CompanyService.prototype.getDayBreaks = function (day, week) {
        // console.log("h")
        var h = this.setHeaderWithAuthorization();
        var data = {
            day: day,
            week: week
        };
        return this.http.post(this.serviceUrl + "getDayBreaks/", data, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getDayBreaks
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 07-04-2018
    // Last Modified : 07-04-2018, 
    // Desc          : Get breaks in the day
    CompanyService.prototype.getDayDetails = function (day, week) {
        // console.log("h")
        var h = this.setHeaderWithAuthorization();
        var data = {
            day: day,
            week: week
        };
        return this.http.post(this.serviceUrl + "getDayDetails/", data, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : saveDayBreak
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 12-04-2018
    // Last Modified : 12-04-2018, 
    // Desc          : Get breaks in the day
    CompanyService.prototype.saveDayBreak = function (day, week, xtime, ytime, title) {
        // console.log("h")
        var h = this.setHeaderWithAuthorization();
        var data = {
            day: day,
            week: week,
            startTime: xtime,
            endTime: ytime,
            title: title
        };
        return this.http.post(this.serviceUrl + "saveDayBreak/", data, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : deleteExtraBreak
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 12-04-2018
    // Last Modified : 12-04-2018, 
    // Desc          : Delete breaks of days
    CompanyService.prototype.deleteExtraBreak = function (breakId) {
        // console.log("h")
        var h = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + "deleteExtraBreak/" + breakId, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : saveDayWorkTime
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 12-04-2018
    // Last Modified : 12-04-2018, 
    // Desc          : save working time of a day
    CompanyService.prototype.saveDayWorkTime = function (holiday, startTime, endTime, day, week) {
        // console.log("h")
        var h = this.setHeaderWithAuthorization();
        var data = {
            holiday: holiday,
            startTime: startTime,
            endTime: endTime,
            day: day,
            week: week
        };
        return this.http.post(this.serviceUrl + "saveDayWorkTime", data, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : geTAllEstimatedProject
    // Params        : 
    // Returns       : 
    // Author        : Yasir Poongadan
    // Date          : 09-04-2018
    // Last Modified : 09-04-2018, 
    // Desc          : to get All Estimated Project
    CompanyService.prototype.getAllEstimatedProject = function () {
        // console.log("h")
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "getAllEstimatedProject", { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAllusers
    // Params        : 
    // Returns       : list of users
    // Author        : sudha
    // Date          : 07-03-2018
    // Last Modified : 
    // Desc          : all users 
    CompanyService.prototype.getAllusers = function () {
        var headers = this.setHeaderWithAuthorization();
        // console.log(headers);
        return this.http.get(this.serviceUrl + 'allusers', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      :  company User management
    // Params        : User id
    // Returns       : 
    // Author        : sudha
    // Date          : 07-03-2018
    // Last Modified : 
    // Desc          : delete User
    //delete User
    CompanyService.prototype.deleteUser = function (id) {
        var header = this.setHeaderWithAuthorization();
        // console.log(header);
        return this.http.post(this.serviceUrl + 'deleteuser/' + id, {}, { headers: header })
            .map(function (response) { return response.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      :  company User management
    // Params        : User id
    // Returns       : 
    // Author        : sudha
    // Date          : 07-03-2018
    // Last Modified : 
    // Desc          : block User
    //block User
    CompanyService.prototype.blockUser = function (id) {
        var header = this.setHeaderWithAuthorization();
        return this.http.put(this.serviceUrl + 'blockuser/' + id, { headers: header })
            .map(function (response) { return response.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Admin User management
    // Params        : User id
    // Returns       : 
    // Author        : sudha
    // Date          : 07-03-2018
    // Last Modified : 
    // Desc          : unblock User
    //unblock User
    CompanyService.prototype.unblockUser = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.put(this.serviceUrl + 'unblockuser/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAllactiveusers
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 07-03-2018
    // Last Modified : 
    // Desc          : list of active users
    CompanyService.prototype.getAllactiveusers = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allactiveusers', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAllblockedusers
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 07-03-2018
    // Last Modified : 
    // Desc          : list of block users
    CompanyService.prototype.getAllblockedusers = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allblockedusers', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAlldeleteusers
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 07-03-2018
    // Last Modified : 
    // Desc          : list of all delete users
    CompanyService.prototype.getAlldeleteusers = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'alldeleteusers', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : adduser
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          :08-03-2018
    // Last Modified : 
    // Desc          : adduser
    CompanyService.prototype.addUser = function (data) {
        // console.log(data);
        // console.log("dgdh");
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'adduser', data, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // < ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAllusergroup
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 08-03-2018
    // Last Modified : 
    // Desc          : list of usergroup
    CompanyService.prototype.getAllusergroup = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allusergroup', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAllPrevexp
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 08-03-2018
    // Last Modified : 
    // Desc          : list of Prevexp
    CompanyService.prototype.getAllPrevexp = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allprevexp', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAllTeam
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 08-03-2018
    // Last Modified : 
    // Desc          : list of Team
    CompanyService.prototype.getAllTeam = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allteam', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAllDesignation
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 08-03-2018
    // Last Modified : 
    // Desc          : list of Designation
    CompanyService.prototype.getAllDesignation = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'alldesignation', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getSingleuser
    // Params        : User id
    // Returns       : 
    // Author        : sudha
    // Date          : 07-03-2018
    // Last Modified : 
    // Desc          : Singleuser
    //unblock User
    CompanyService.prototype.getSingleuser = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'singleuser', { id: id }, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : updateuser
    // Params        : user
    // Returns       : 
    // Author        : sudha
    // Date          : 29-01-2018
    // Last Modified :
    // Desc          : to updateuser 
    CompanyService.prototype.updateUser = function (user) {
        // console.log(plan);
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'updateuser', user, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // < ----------------------------------End------------------------------------------- 
    // ---------------------------------Start-------------------------------------------
    // Function      : allprojectcategory
    // Params        : 
    // Returns       : allprojectcategory
    // Author        : sudha
    // Date          : 12-03-2018
    // Last Modified : 
    // Desc          : allprojectcategory
    CompanyService.prototype.getAllprojectcategory = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allprojectcategory', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : deleteCategory
    // Params        : Category id
    // Returns       : 
    // Author        : sudha
    // Date          : 12-03-2018
    // Last Modified : 
    // Desc          : deleteCategory
    //deleteCategory
    CompanyService.prototype.deleteCategory = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.put(this.serviceUrl + 'deletecategory/' + id, {}, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : addCategory
    // Params        : Category name
    // Returns       : 
    // Author        : sudha
    // Date          : 12-03-2018
    // Last Modified : 
    // Desc          : addCategory
    //addCategory
    CompanyService.prototype.addCategory = function (name) {
        // console.log("er"+name);
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'addcategory/', { name: name }, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : updateCategory
    // Params        : Category name
    // Returns       : 
    // Author        : sudha
    // Date          : 13-03-2018
    // Last Modified : 
    // Desc          : updateCategory
    //updateCategory
    CompanyService.prototype.updateCategory = function (category) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'updatecategory/', (category), { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End-----------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : singlecategory
    // Params        : category id
    // Returns       : 
    // Author        : sudha
    // Date          : 13-03-2018
    // Last Modified : 
    // Desc          : singlecategory
    //unblock User
    CompanyService.prototype.getSinglecategory = function (project_id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "singlecategory/" + project_id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAllemployeeleaves
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 14-03-2018
    // Last Modified : 
    // Desc          : list of Allemployeeleaves
    CompanyService.prototype.getAllemployeeleaves = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allempleaves', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAllcompanyemployee
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 14-03-2018
    // Last Modified : 
    // Desc          : list of Allcompanyemployee
    CompanyService.prototype.getAllcompanyemployee = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allcompanyemployee', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------\
    // ---------------------------------Start-------------------------------------------
    // Function      : getAllcompanyemployee
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 14-03-2018
    // Last Modified : 
    // Desc          : list of Allcompanyemployee
    CompanyService.prototype.getAllcompanyemployeeWithTeam = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getAllcompanyemployeeWithTeam', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAllcompanyemployee
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 14-03-2018
    // Last Modified : 
    // Desc          : list of Allcompanyemployee
    CompanyService.prototype.getoldPlanningData = function (projectid) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getoldPlanningData/' + projectid, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAllcompanyemployee
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 14-03-2018
    // Last Modified : 
    // Desc          : list of Allcompanyemployee
    CompanyService.prototype.isProjectExist = function (holiday) {
        console.log(holiday);
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'isProjectExist/' + holiday, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : deleteEmpleave
    // Params        : Empleave id
    // Returns       : 
    // Author        : sudha
    // Date          : 14-03-2018
    // Last Modified : 
    // Desc          : deleteEmpleaveeCategory
    //deleteEmpleave
    CompanyService.prototype.deleteEmpleave = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.put(this.serviceUrl + 'deleteempleave/' + id, {}, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : singleempleave
    // Params        : empleave id
    // Returns       : 
    // Author        : sudha
    // Date          : 15-03-2018
    // Last Modified : 
    // Desc          : singleempleave
    //unblock User
    CompanyService.prototype.getSingleempleave = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "singleempleave/" + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : addEmpleave
    // Params        : data
    // Returns       : 
    // Author        : sudha
    // Date          : 15-03-2018
    // Last Modified : 
    // Desc          : addEmpleave
    CompanyService.prototype.addnewEmpleave = function (data) {
        // console.log(data)
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'addEmpleave', data, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // < ----------------------------------End-------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : updateEmpleave
    // Params        : Empleaveid
    // Returns       : 
    // Author        : sudha
    // Date          : 15-01-2018
    // Last Modified :
    // Desc          : to updateEmpleave 
    CompanyService.prototype.updateEmpleave = function (Empleave) {
        // console.log(Empleave);
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'updateempleave', Empleave, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // < ----------------------------------End------------------------------------------- 
    //  ---------------------------------Start-------------------------------------------
    // Function      : getDatefilterforlog
    // Params        : data
    // Returns       : 
    // Author        : sudha
    // Date          :16-03-2018
    // Last Modified : 
    // Desc          : datefilterforlog
    CompanyService.prototype.getDatefilterforlog = function (data) {
        // console.log(data)
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'datefilterforlog', data, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // < ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAllemppendingleaves
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 28-03-2018
    // Last Modified : 
    // Desc          : list of getAllemppendingleaves
    CompanyService.prototype.getAllemppendingleaves = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allemppendingleaves', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : userleave
    // Params        : userleave id
    // Returns       : 
    // Author        : sudha
    // Date          : 28-03-2018
    // Last Modified : 
    // Desc          : userleave
    //userleave
    CompanyService.prototype.getuserleave = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "userleave/" + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : addReason
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 29-03-2018
    // Last Modified : 
    // Desc          : add reject reason
    //updateCategory
    CompanyService.prototype.addReason = function (reason) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'addrejectleave/', reason, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : addaccept
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 29-03-2018
    // Last Modified : 
    // Desc          : add accept reason
    //addaccept
    CompanyService.prototype.addaccept = function (accept) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'addacceptleave/', accept, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : allemppendingleavesnotifi
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 29-03-2018
    // Last Modified : 
    // Desc          : list of get All emp pending leaves notification
    CompanyService.prototype.getAllemppendingleavesnotifi = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allemppendingleavesnotifi', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : closeNotif5
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 29-03-2018
    // Last Modified : 
    // Desc          : close Notif for leave request
    //closeNotif5
    CompanyService.prototype.closeNotif5 = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'leavenotifclose/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAlltimeextensionrequest
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 04-04-2018
    // Last Modified : 
    // Desc          : list of Altime extension request
    CompanyService.prototype.getAlltimeextensionrequest = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'alltimeextension', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : gettimerequest
    // Params        : gettimerequest id
    // Returns       : 
    // Author        : sudha
    // Date          : 04-04-2018
    // Last Modified : 
    // Desc          : get time request details
    //userleave
    CompanyService.prototype.gettimerequest = function (reqid, projid) {
        var data = { reqid: reqid, projid: projid };
        var headers = this.setHeaderWithAuthorization();
        // console.log("a"+data)
        return this.http.post(this.serviceUrl + "timerequest", data, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Rejecttimeextreq
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 05-04-2018
    // Last Modified : 
    // Desc          : Reject time ext req to pm
    //Rejecttimeextreq
    CompanyService.prototype.Rejecttimeextreq = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'rejecttimeextreq/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getUserleavedata
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 07-04-2018
    // Last Modified : 
    // Desc          : get User leave data(time extension request)
    //unblock User
    CompanyService.prototype.getUserleavedata = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "userleavedata/" + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Sendtoadmin
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 05-04-2018
    // Last Modified : 
    // Desc          : Send to admin (time ext req )
    //Sendtoadmin
    CompanyService.prototype.Sendtoadmin = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.put(this.serviceUrl + 'sendtoadmin/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAllSendtoadminnotif
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 05-04-2018
    // Last Modified : 
    // Desc          : send to admin notif(time extension approval)
    CompanyService.prototype.getAllSendtoadminnotif = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'sendtoadminnotif', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : closeNotif6
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          :  06-04-2018
    // Last Modified : 
    // Desc          : close Notif for time extension approval
    //closeNotif6
    CompanyService.prototype.closeNotif6 = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'admintimeextnotifclose/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAccessRightsforRole
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 19-04-2018
    // Last Modified : 
    // Desc          : getAccessRightsforRole
    //closeNotif6
    CompanyService.prototype.getAccessRightsforRole = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getAccessRightsforRole', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getTasksByUser
    // Params        : pro_id, user_id
    // Returns       : 
    // Author        : Rinsha
    // Date          :  17-04-2018
    // Last Modified : 
    // Desc          : 
    CompanyService.prototype.getTasksByUser = function (pro_id, user_id) {
        var userid = { user_id: user_id };
        var headers = this.setHeader();
        return this.http.post(this.serviceUrl + 'getTasksByUser/' + pro_id, userid, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getTasksByProject
    // Params        : pro_id
    // Returns       : 
    // Author        : Rinsha
    // Date          :  17-04-2018
    // Last Modified : 
    // Desc          : 
    CompanyService.prototype.getTasksByProject = function (pro_id) {
        var headers = this.setHeader();
        return this.http.get(this.serviceUrl + 'getTasksByProject/' + pro_id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getTasksforResourceGraph
    // Params        : pro_id, users
    // Returns       : 
    // Author        : Rinsha
    // Date          :  18-04-2018
    // Last Modified : 
    // Desc          : 
    CompanyService.prototype.getTasksforResourceGraph = function (pro_id, users) {
        var user = { user: users };
        var headers = this.setHeader();
        return this.http.post(this.serviceUrl + 'getTasksforResourceGraph/' + pro_id, user, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getHoursforResourceGraph
    // Params        : projects
    // Returns       : 
    // Author        : Rinsha
    // Date          :  18-04-2018
    // Last Modified : 
    // Desc          : 
    CompanyService.prototype.getHoursforResourceGraph = function (projects) {
        var project = { project: projects };
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'getHoursforResourceGraph', project, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getdataforProjectVsStatusGraph
    // Params        : projects
    // Returns       : 
    // Author        : Rinsha
    // Date          :  19-04-2018
    // Last Modified : 
    // Desc          : 
    CompanyService.prototype.getdataforProjectVsStatusGraph = function (projects) {
        var project = { project: projects };
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'getdataforProjectVsStatusGraph', project, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getLastTaskDetails
    // Params        : projects
    // Returns       : 
    // Author        : Rinsha
    // Date          :  19-04-2018
    // Last Modified : 
    // Desc          : 
    CompanyService.prototype.getLastTaskDetails = function (projectId, assignedId) {
        // let project = {project : projects};
        var headers = this.setHeader();
        return this.http.post(this.serviceUrl + 'getLastTaskDetails/' + projectId, { assignedId: assignedId }, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getUserleavedataplanning
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          :  06-04-2018
    // Last Modified : 
    // Desc          : getUserleavedataplanning
    //closeNotif6
    CompanyService.prototype.getUserleavedataplanning = function (data) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'company-planning-enddate/', data, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : ApprovedTimeextension
    // Params        : id
    // Returns       : 
    // Author        : sudha
    // Date          : 21-04-2018
    // Last Modified : 
    // Desc          : ApprovedTimeextension
    //Sendtoadmin
    CompanyService.prototype.ApprovedTimeextension = function (aditionalrequestdata) {
        // console.log(id)
        var headers = this.setHeader();
        return this.http.post(this.serviceUrl + 'ApprovedTimeextension', aditionalrequestdata, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    CompanyService.prototype.getProjectReport = function (data) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'getProjectReport', data, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : savecompanyPlanning
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 21-03-2018
    // Last Modified : 21-03-2018, Jooshifa
    // Desc          : 
    CompanyService.prototype.savecompanyPlanning = function (data, teamhead) {
        // let x= data
        // console.log(data)
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'save-company-planning-datas', { info: data, projectEndDate: data.projectEndDate, projectStartDate: data.projectStartDate, project_id: data.project_id, teamhead: teamhead }, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End------------------------------------------
    CompanyService.prototype.savecompanyRevisePlanning = function (changedData, oldData, teamhead, projectOldEndDate) {
        // console.log(data)
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'save-company-revise-planning-datas', { info: changedData, oldData: oldData, projectOldEndDate: projectOldEndDate, projectEndDate: changedData.projectEndDate, projectStartDate: changedData.projectStartDate, project_id: changedData.project_id, teamhead: teamhead }, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ---------------------------------Start-------------------------------------------
    // Function      : close notification
    // Params        : project id
    // Returns       : 
    // Author        : manu
    // Date          : 12-03-2018
    // Last Modified : 12-03-2018, Rinsha
    // Desc          : close notification timeextension
    CompanyService.prototype.closeNotif9 = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'closeNotif9/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getUserProjectsOnStatus
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 26-03-2018
    // Last Modified : 26-03-2018, 
    // Desc          : get details of time extension pending
    CompanyService.prototype.gettimeextentionNotifications = function () {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "getNotifications", { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : editTaskValidation
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, 
    // Desc          : 
    CompanyService.prototype.editTaskValidation = function (data) {
        var h = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'edit-task-validation', data, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAlldesignations
    // Params        : 
    // Returns       : getAlldesignations
    // Author        : Jooshifa
    // Date          : 12-03-2018
    // Last Modified : 
    // Desc          : getAlldesignations
    CompanyService.prototype.getAlldesignations = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getAlldesignations', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : addDesignation
    // Params        :  name
    // Returns       : 
    // Author        : sudha
    // Date          : 12-03-2018
    // Last Modified : 
    // Desc          :addDesignation
    //addCategory
    CompanyService.prototype.addDesignation = function (name) {
        // console.log("er"+name);
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'addDesignation/', { name: name }, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : deleteDesignation
    // Params        : Category id
    // Returns       : 
    // Author        : sudha
    // Date          : 12-03-2018
    // Last Modified : 
    // Desc          : deleteCategory
    //deleteCategory
    CompanyService.prototype.deleteDesignation = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.put(this.serviceUrl + 'deleteDesignation/' + id, {}, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : deleteDesignation
    // Params        : Category id
    // Returns       : 
    // Author        : sudha
    // Date          : 12-03-2018
    // Last Modified : 
    // Desc          : deleteCategory
    //deleteCategory
    CompanyService.prototype.getSingledesignation = function (id) {
        console.log("hereeee");
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getSingledesignation/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : updateDesignation
    // Params        :  name
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 13-03-2018
    // Last Modified : 
    // Desc          : updateCategory
    //updateCategory
    CompanyService.prototype.updateDesignation = function (designation) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'updateDesignation/', (designation), { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : checkEmailExist
    // Params        :  name
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 13-03-2018
    // Last Modified : 
    // Desc          : checkEmailExist
    //updateCategory
    CompanyService.prototype.checkEmailExist = function (email) {
        console.log(email);
        var headers = this.setHeader();
        return this.http.post(this.serviceUrl + 'checkemailexist/', { email: email }, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getProfile
    // Params        : 
    // Returns       : logged in user details
    // Author        : Rinsha
    // Date          : 21-03-2018
    // Last Modified : 21-03-2018, Rinsha
    // Desc          : 
    CompanyService.prototype.getProfile = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getProfile', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : saveActivityLog
    // Params        : msg,ref_id
    // Returns       : 
    // Author        : Yasir Poongadan
    // Date          : 27-07-2018
    // Last Modified : 27-07-2018, Yasir Poongadan
    // Desc          : 
    CompanyService.prototype.saveActivityLog = function (data) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'saveActivityLog/', data, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getProjectApproveNotifications
    // Params        : msg,ref_id
    // Returns       : 
    // Author        : Yasir Poongadan
    // Date          : 27-07-2018
    // Last Modified : 27-07-2018, Yasir Poongadan
    // Desc          : 
    CompanyService.prototype.getProjectApproveNotifications = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getProjectApproveNotifications/', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : projectApprove
    // Params        : 
    // Returns       : 
    // Author        : Yasir Poongadan 
    // Date          : 03-08-2018
    // Last Modified : 03-08-2018, Yasir Poongadan
    // Desc          :  
    CompanyService.prototype.projectApprove = function (projId) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'projectApprove/' + projId, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    CompanyService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_2__config_config__["a" /* Config */]])
    ], CompanyService);
    return CompanyService;
}());



/***/ }),

/***/ "../../../../../src/app/services/overlay-notifcount.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return OverlayNotifcountService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var OverlayNotifcountService = (function () {
    function OverlayNotifcountService() {
        this.notifReadCount = 0;
    }
    OverlayNotifcountService.prototype.inc = function () {
        this.notifReadCount++;
    };
    OverlayNotifcountService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])()
    ], OverlayNotifcountService);
    return OverlayNotifcountService;
}());



/***/ }),

/***/ "../../../../../src/app/services/super-admin.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SuperAdminService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__("../../../http/esm5/http.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_operator_map__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/map.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var SuperAdminService = (function () {
    function SuperAdminService(http, config) {
        this.http = http;
        this.config = config;
        this.serviceUrl = config.siteUrl + '/admin/';
    }
    SuperAdminService.prototype.setHeader = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        headers.append('Content-Type', 'application/json');
        return (headers);
    };
    //  ---------------------------------Start-------------------------------------------
    // Function      : getCountsforAdminDashboard
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 02-03-2018
    // Last Modified : 02-03-2018, Jooshifa 
    // Desc          : for getting count of companies,projects,users
    SuperAdminService.prototype.getCountsforAdminDashboard = function () {
        var h = this.setHeader();
        return this.http.post(this.serviceUrl + "/get_counts_for_dashboard", {}, { headers: h })
            .map(function (res) { return res.json(); });
    };
    //  ---------------------------------End-------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getPieDataforAdminDashboard
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 06-03-2018
    // Last Modified : 06-03-2018, 
    // Desc          : get piegraph data
    SuperAdminService.prototype.getPieDataforAdminDashboard = function () {
        var h = this.setHeader();
        return this.http.post(this.serviceUrl + "/get_counts_for_dashboard", {}, { headers: h })
            .map(function (res) { return res.json(); });
    };
    SuperAdminService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_3__config_config__["a" /* Config */]])
    ], SuperAdminService);
    return SuperAdminService;
}());



/***/ }),

/***/ "../../../../../src/app/services/timer.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return TimerService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var TimerService = (function () {
    function TimerService() {
        this.play = false;
        this.pause = false;
        this.stop = true;
        this.playPauseStop$ = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
    }
    TimerService.prototype.playTimer = function () {
        this.play = true;
        this.pause = false;
        this.stop = false;
        this.playPauseStop$.emit({
            play: this.play
        });
    };
    TimerService.prototype.pauseTimer = function () {
        this.play = false;
        this.pause = true;
        this.stop = false;
        this.playPauseStop$.emit({
            pause: this.pause
        });
    };
    TimerService.prototype.stopTimer = function () {
        this.play = false;
        this.pause = false;
        this.stop = true;
        this.playPauseStop$.emit({
            stop: this.stop
        });
    };
    TimerService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [])
    ], TimerService);
    return TimerService;
}());



/***/ }),

/***/ "../../../../../src/app/services/user.service.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return UserService; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_http__ = __webpack_require__("../../../http/esm5/http.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__config_config__ = __webpack_require__("../../../../../src/app/config/config.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_operator_map__ = __webpack_require__("../../../../rxjs/_esm5/add/operator/map.js");
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var UserService = (function () {
    function UserService(http, config) {
        this.http = http;
        this.config = config;
        this.serviceUrl = config.siteUrl + '/user/';
    }
    UserService.prototype.setHeader = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        headers.append('Content-Type', 'application/json');
        return (headers);
    };
    UserService.prototype.setHeaderWithAuthorization = function () {
        var headers = new __WEBPACK_IMPORTED_MODULE_1__angular_http__["a" /* Headers */]();
        this.loadToken();
        headers.append('Authorization', this.authToken);
        headers.append('Content-Type', 'application/json');
        return (headers);
    };
    UserService.prototype.loadToken = function () {
        this.authToken = localStorage.getItem('id_token');
    };
    // ---------------------------------Start-------------------------------------------
    // Function      : getTasksModules
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.getMyTasks = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'get-my-tasks', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getComplexity
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 16-03-2018
    // Last Modified : 16-03-2018, Jooshifa
    // Desc          
    UserService.prototype.getPercentage = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'get-progress-percentage', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getMyTasksPaused
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.getAllTasksInModule = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'get-all-task-in-module', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getMyTasksPaused
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.getTaskTime = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'get-task-time', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getMyTasksPaused
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.doneAtask = function (task) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'done-a-task/' + task, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getMyTasksPaused
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.pauseTask = function (task) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'pause-a-task', task, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : completeATask
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.completeATask = function (task) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'complete-a-task', (task), { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : completeATask
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.holdATask = function (task) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'hold-a-task', (task), { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getMyTasksPaused
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.startAtask = function (task) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'start-a-task/', task, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : Logout
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 28-03-2018
    // Last Modified : 28-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.logout = function () {
        this.authToken = null;
        this.company = null;
        localStorage.clear();
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getUserProfile
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.getUserProfile = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'get-user-Profile', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : newTaskRequest
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.newTaskRequest = function (task) {
        var h = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + "new-task-request", task, { headers: h })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : newTaskRequest
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.newTimeExtention = function (task) {
        var h = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + "time-extention-request", task, { headers: h })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getUserProjects
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 26-03-2018
    // Last Modified : 26-03-2018, 
    // Desc          : get details of project involved by user from db
    UserService.prototype.getUserProjects = function () {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "getUserProjects", { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getUserProjects
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 26-03-2018
    // Last Modified : 26-03-2018, 
    // Desc          : get details of project involved by user from db
    UserService.prototype.getProjectDetails = function (id) {
        var h = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "getUserProjectsDetails/" + id, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getUserProjectsOnStatus
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 26-03-2018
    // Last Modified : 26-03-2018, 
    // Desc          : get details of project involved by user based on status from db
    UserService.prototype.getUserProjectsOnStatus = function (status) {
        var h = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + "getUserProjectsOnStatus", { status: status }, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getUserProjectsOnStatus
    // Params        : 
    // Returns       : 
    // Author        : MANU PRASAD
    // Date          : 26-03-2018
    // Last Modified : 26-03-2018, 
    // Desc          : get details of project involved by user based on status from db
    UserService.prototype.getUserProjectSelected = function (id) {
        var h = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + "getSelectedProjects", { id: id }, { headers: h })
            .map(function (response) { return response.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get pm by id
    // Params        : login id
    // Returns       : user info
    // Author        : Rinsha
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, Rinsha
    // Desc          : getPmByLoginid
    UserService.prototype.getPmByLoginid = function (login_id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getPmByLoginid/' + login_id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getTeamMembers
    // Params        : login id, project id
    // Returns       : team members
    // Author        : Rinsha
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, Rinsha
    // Desc          :  Find user profile id of head from tbl_user_profie using login id. Then find the team id from tbl_estimation_teams using head id. Then team members from tbl_team_assocs. 
    UserService.prototype.getTeamMembers = function (project_id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getTeamMembers/' + project_id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : add estimation
    // Params        : data from form
    // Returns       : 
    // Author        : Rinsha
    // Date          : 13-03-2018
    // Last Modified : 13-03-2018, Rinsha
    // Desc          :  
    UserService.prototype.addEstimation = function (datafromForm) {
        console.log("service");
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'addEstimation', datafromForm, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get TeamHeadNotification
    // Params        : 
    // Returns       : notification data
    // Author        : Rinsha
    // Date          : 14-03-2018
    // Last Modified : 14-03-2018, Rinsha
    // Desc          : check whether the loggedin user assigned for a project estimation(ie .as team head).
    UserService.prototype.TeamHeadNotification = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getTeamHeadNotification', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : get notif by id
    // Params        : id
    // Returns       : notification
    // Author        : Rinsha
    // Date          : 14-03-2018
    // Last Modified : 14-03-2018, Rinsha
    // Desc          : check whether the logged in member is the suitable person to estimate
    UserService.prototype.getNotif = function (notif_id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getNotif/' + notif_id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getCurrentEstimation
    // Params        : notification id
    // Returns       : estimation
    // Author        : Rinsha
    // Date          : 15-03-2018
    // Last Modified : 15-03-2018, Rinsha
    // Desc          : get Current Estimation from notification id
    UserService.prototype.getCurrentEstimation = function (notif_id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getCurrentEstimation/' + notif_id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getProfile
    // Params        : 
    // Returns       : logged in user details
    // Author        : Rinsha
    // Date          : 21-03-2018
    // Last Modified : 21-03-2018, Rinsha
    // Desc          : 
    UserService.prototype.getProfile = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getProfile', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : updateUser
    // Params        : user data
    // Returns       : 
    // Author        : Rinsha
    // Date          : 21-03-2018
    // Last Modified : 21-03-2018, Rinsha
    // Desc          : 
    UserService.prototype.updateUser = function (profile) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'updateUser', profile, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getNewTaskRequestNotification
    // Params        : 
    // Returns       : notification info
    // Author        : Rinsha
    // Date          : 05-04-2018
    // Last Modified : 05-04-2018, Rinsha
    // Desc          : 
    UserService.prototype.getNewTaskRequestNotification = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getNewTaskRequestNotification', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getTimeExtensionRequestNotification
    // Params        : 
    // Returns       : notification info
    // Author        : Rinsha
    // Date          : 05-04-2018
    // Last Modified : 05-04-2018, Rinsha
    // Desc          :  
    UserService.prototype.getTimeExtensionRequestNotification = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getTimeExtensionRequestNotification', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : close notification of time extension request approval
    // Params        : notification id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 05-04-2018
    // Last Modified : 05-04-2018, Rinsha
    // Desc          :  
    UserService.prototype.closeNotif = function (notif_id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'closeNotif/' + notif_id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : close notification of new task request approval
    // Params        : notification id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 05-04-2018
    // Last Modified : 05-04-2018, Rinsha
    // Desc          :  
    UserService.prototype.closeNotif1 = function (notif_id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'closeNotif1/' + notif_id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : singleuserlog
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 16-03-2018
    // Last Modified : 
    // Desc          :user all activity log list
    UserService.prototype.getSingleUserActivitylog = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'singleuserlog', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : getDatefilterforlog
    // Params        : data
    // Returns       : 
    // Author        : sudha
    // Date          :16-03-2018
    // Last Modified : 
    // Desc          : datefilterforlog
    UserService.prototype.getDatefilterforlog = function (data) {
        // console.log(data)
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'datefilterforlog', data, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // < ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getSingleUserallleaves
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 19-03-2018
    // Last Modified : 
    // Desc          :get Single User all leaves
    UserService.prototype.getSingleUserallleaves = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'singleuserallleave', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ---------------------------------Start-------------------------------------------
    // Function      : deleteEmpleave
    // Params        : user id
    // Returns       : 
    // Author        : sudha
    // Date          : 28-03-2018
    // Last Modified : 
    // Desc          : deleteuser leave
    //deleteuser leave
    UserService.prototype.deleteuserleave = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'deleteuserleave/' + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : addUserleave
    // Params        : data
    // Returns       : 
    // Author        : sudha
    // Date          : 28-03-2018
    // Last Modified : 
    // Desc          : add USER leave
    UserService.prototype.addUserleave = function (data) {
        // console.log(data)
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'adduserleave', data, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // < ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : singleuserleave
    // Params        : user leave id
    // Returns       : 
    // Author        : sudha
    // Date          :  28-03-2018
    // Last Modified : 
    // Desc          : single user leave
    //unblock User
    UserService.prototype.getSingleuserleave = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "singleuserleave/" + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    //  ---------------------------------Start-------------------------------------------
    // Function      : updateUserleave
    // Params        : userleaveid
    // Returns       : 
    // Author        : sudha
    // Date          : 28-03-2018
    // Last Modified :
    // Desc          : to updateUserleave 
    UserService.prototype.updateUserleave = function (userleave) {
        // console.log(Empleave);
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'updateuserleave', userleave, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // < ----------------------------------End------------------------------------------- 
    // ---------------------------------Start-------------------------------------------
    // Function      : getMyallrequest
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 19-03-2018
    // Last Modified : 
    // Desc          :get My all request
    UserService.prototype.getMyallrequest = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'allmyrequest', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ---------------------------------Start-------------------------------------------
    // Function      : getMyallTimeextnrequest
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 19-03-2018
    // Last Modified : 
    // Desc          :get my time extension request
    UserService.prototype.getMyallTimeextnrequest = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'mytimeextrequest', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getMyallnewtaskrequest
    // Params        : 
    // Returns       : 
    // Author        : sudha
    // Date          : 19-03-2018
    // Last Modified : 
    // Desc          :get my all new task request
    UserService.prototype.getMyallnewtaskrequest = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'mynewtaskrequest', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getAllProject
    // Params        : 
    // Returns       : all projects
    // Author        : sudha  
    // Date          : 21-03-2018
    // Last Modified :
    // Desc          : 
    UserService.prototype.getAllProject = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "allProjects", { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getProjectdetails
    // Params        :  id
    // Returns       : 
    // Author        : sudha
    // Date          : 10-04-2018
    // Last Modified : 
    // Desc          : project details(dashboard)
    //projectdetails
    UserService.prototype.getProjectdetails = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "projectdetails/" + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getallprojectspercentage
    // Params        :  id
    // Returns       : 
    // Author        : sudha
    // Date          : 10-04-2018
    // Last Modified : 
    // Desc          : projectspercentage details(dashboard)
    //projectdetails
    UserService.prototype.getallprojectspercentage = function (id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "projectspercentage/" + id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getallprojectsvsstatus
    // Params        :  id
    // Returns       : 
    // Author        : sudha
    // Date          : 10-04-2018
    // Last Modified : 
    // Desc          : projects vs status details(dashboard)
    //projectdetails
    UserService.prototype.getallprojectsvsstatus = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "allprojectsvsstatus/", { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getAllMyTimeextensionrequest
    // Params        : 
    // Returns       : 
    // Author        : sudha  
    // Date          : 29-03-2018
    // Last Modified :
    // Desc          : 
    UserService.prototype.getAllMyTimeextensionrequest = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "allmytimeextrequest", { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start------------------------------------------------
    // Function      : getAllMyNewTaskrequest
    // Params        : 
    // Returns       : 
    // Author        : sudha  
    // Date          : 29-03-2018
    // Last Modified :
    // Desc          : 
    UserService.prototype.getAllMyNewTaskrequest = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + "allmynewtaskrequest", { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ---------------------------------------End--------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : Get logged in entity
    // Params        : 
    // Returns       : Get logged in entity
    // Author        : Rinsha
    // Date          : 20-04-2018
    // Last Modified : 20-04-2018, Rinsha
    // Desc          :  
    UserService.prototype.getLoggedinEntity = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getLoggedinUser', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getAccessRightsforRole
    // Params        : 
    // Returns       : 
    // Author        : Manu Prasad
    // Date          : 19-04-2018
    // Last Modified : 
    // Desc          : getAccessRightsforRole
    //closeNotif6
    UserService.prototype.getAccessRightsforRole = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getAccessRightsforRole', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : completeATask
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.addTimeAssoc = function (time) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'add-time-assoc', time, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : changeStausColor
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.changeStausColor = function (task) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'changeStausColor/' + task, {}, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : completeATask
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.holdTask = function (task) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'hold-a-task', (task), { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getMyTasksPaused
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.donetask = function (task) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'done-a-task', (task), { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : completeATask
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.completeTask = function (task) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'complete-a-task', (task), { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : completeATask
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.resumeTasks = function (task) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'resume-a-task', (task), { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : leavenotif 
    // Params        : 
    // Returns       : 
    // Author        : Rinsha
    // Date          : 23-05-2018
    // Last Modified : 
    // Desc          : employee leave notification
    UserService.prototype.leaveRequestNotification = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'leavenotif', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : close notification of leave request
    // Params        : notification id
    // Returns       : 
    // Author        : Rinsha
    // Date          : 23-05-2018
    // Last Modified : 23-05-2018, Rinsha 
    UserService.prototype.closeNotif2 = function (notif_id) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'closeNotif2/' + notif_id, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : isTeamHeadForAnyTasks
    // Params        : 
    // Returns       : 
    // Author        : Yasir Poongadan
    // Date          : 30-07-2018
    // Last Modified : 30-07-2018, Yasir Poongadan 
    UserService.prototype.isTeamHeadForAnyTasks = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'isTeamHeadForAnyTasks', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getVerificationTasks
    // Params        : 
    // Returns       : 
    // Author        : Yasir Poongadan
    // Date          : 30-07-2018
    // Last Modified : 30-07-2018, Yasir Poongadan
    // Desc          : 
    UserService.prototype.getVerificationTasks = function (task) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'getVerificationTasks', task, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : completeATask
    // Params        : 
    // Returns       : 
    // Author        : Jooshifa
    // Date          : 29-03-2018
    // Last Modified : 29-03-2018, Jooshifa
    // Desc          : 
    UserService.prototype.verifyTask = function (task) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'verifyTask', (task), { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : resubmitTask
    // Params        : 
    // Returns       : 
    // Author        : Yasir Poongadan
    // Date          : 01-08-2018
    // Last Modified : 01-08-2018, Yasir Poongadan
    // Desc          : 
    UserService.prototype.resubmitTask = function (task) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.post(this.serviceUrl + 'resubmitTask', (task), { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // ----------------------------------End-------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : getTaskVerificationNotification
    // Params        : 
    // Returns       : 
    // Author        : Yasir Poongadan 
    // Date          : 01-08-2018
    // Last Modified : 01-08-2018, Yasir Poongadan
    // Desc          :  
    UserService.prototype.getTaskVerificationNotification = function () {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'getTaskVerificationNotification', { headers: headers })
            .map(function (res) { return res.json(); });
    };
    // -----------------------------------End------------------------------------------
    // ---------------------------------Start-------------------------------------------
    // Function      : closeTaskVerifNotification
    // Params        : 
    // Returns       : 
    // Author        : Yasir Poongadan 
    // Date          : 01-08-2018
    // Last Modified : 01-08-2018, Yasir Poongadan
    // Desc          :  
    UserService.prototype.closeTaskVerifNotification = function (taskId) {
        var headers = this.setHeaderWithAuthorization();
        return this.http.get(this.serviceUrl + 'closeTaskVerifNotification/' + taskId, { headers: headers })
            .map(function (res) { return res.json(); });
    };
    UserService = __decorate([
        Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["Injectable"])(),
        __metadata("design:paramtypes", [__WEBPACK_IMPORTED_MODULE_1__angular_http__["b" /* Http */], __WEBPACK_IMPORTED_MODULE_2__config_config__["a" /* Config */]])
    ], UserService);
    return UserService;
}());



/***/ }),

/***/ "../../../../../src/assets/images/banner.jpg":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "banner.eafdcb78bd30b72df477.jpg";

/***/ }),

/***/ "../../../../../src/assets/images/bg.jpg":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "bg.3cf141ae4bc89adfb25e.jpg";

/***/ }),

/***/ "../../../../../src/assets/images/device.png":
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "device.84feef168ba745bdd7b5.png";

/***/ }),

/***/ "../../../../../src/environments/environment.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return environment; });
// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --env=prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `.angular-cli.json`.
var environment = {
    production: false
};


/***/ }),

/***/ "../../../../../src/main.ts":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__("../../../core/esm5/core.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser_dynamic__ = __webpack_require__("../../../platform-browser-dynamic/esm5/platform-browser-dynamic.js");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__app_app_module__ = __webpack_require__("../../../../../src/app/app.module.ts");
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__environments_environment__ = __webpack_require__("../../../../../src/environments/environment.ts");




if (__WEBPACK_IMPORTED_MODULE_3__environments_environment__["a" /* environment */].production) {
    Object(__WEBPACK_IMPORTED_MODULE_0__angular_core__["enableProdMode"])();
}
Object(__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser_dynamic__["a" /* platformBrowserDynamic */])().bootstrapModule(__WEBPACK_IMPORTED_MODULE_2__app_app_module__["a" /* AppModule */])
    .catch(function (err) { return console.log(err); });


/***/ }),

/***/ "../../../../moment/locale recursive ^\\.\\/.*$":
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": "../../../../moment/locale/af.js",
	"./af.js": "../../../../moment/locale/af.js",
	"./ar": "../../../../moment/locale/ar.js",
	"./ar-dz": "../../../../moment/locale/ar-dz.js",
	"./ar-dz.js": "../../../../moment/locale/ar-dz.js",
	"./ar-kw": "../../../../moment/locale/ar-kw.js",
	"./ar-kw.js": "../../../../moment/locale/ar-kw.js",
	"./ar-ly": "../../../../moment/locale/ar-ly.js",
	"./ar-ly.js": "../../../../moment/locale/ar-ly.js",
	"./ar-ma": "../../../../moment/locale/ar-ma.js",
	"./ar-ma.js": "../../../../moment/locale/ar-ma.js",
	"./ar-sa": "../../../../moment/locale/ar-sa.js",
	"./ar-sa.js": "../../../../moment/locale/ar-sa.js",
	"./ar-tn": "../../../../moment/locale/ar-tn.js",
	"./ar-tn.js": "../../../../moment/locale/ar-tn.js",
	"./ar.js": "../../../../moment/locale/ar.js",
	"./az": "../../../../moment/locale/az.js",
	"./az.js": "../../../../moment/locale/az.js",
	"./be": "../../../../moment/locale/be.js",
	"./be.js": "../../../../moment/locale/be.js",
	"./bg": "../../../../moment/locale/bg.js",
	"./bg.js": "../../../../moment/locale/bg.js",
	"./bm": "../../../../moment/locale/bm.js",
	"./bm.js": "../../../../moment/locale/bm.js",
	"./bn": "../../../../moment/locale/bn.js",
	"./bn.js": "../../../../moment/locale/bn.js",
	"./bo": "../../../../moment/locale/bo.js",
	"./bo.js": "../../../../moment/locale/bo.js",
	"./br": "../../../../moment/locale/br.js",
	"./br.js": "../../../../moment/locale/br.js",
	"./bs": "../../../../moment/locale/bs.js",
	"./bs.js": "../../../../moment/locale/bs.js",
	"./ca": "../../../../moment/locale/ca.js",
	"./ca.js": "../../../../moment/locale/ca.js",
	"./cs": "../../../../moment/locale/cs.js",
	"./cs.js": "../../../../moment/locale/cs.js",
	"./cv": "../../../../moment/locale/cv.js",
	"./cv.js": "../../../../moment/locale/cv.js",
	"./cy": "../../../../moment/locale/cy.js",
	"./cy.js": "../../../../moment/locale/cy.js",
	"./da": "../../../../moment/locale/da.js",
	"./da.js": "../../../../moment/locale/da.js",
	"./de": "../../../../moment/locale/de.js",
	"./de-at": "../../../../moment/locale/de-at.js",
	"./de-at.js": "../../../../moment/locale/de-at.js",
	"./de-ch": "../../../../moment/locale/de-ch.js",
	"./de-ch.js": "../../../../moment/locale/de-ch.js",
	"./de.js": "../../../../moment/locale/de.js",
	"./dv": "../../../../moment/locale/dv.js",
	"./dv.js": "../../../../moment/locale/dv.js",
	"./el": "../../../../moment/locale/el.js",
	"./el.js": "../../../../moment/locale/el.js",
	"./en-au": "../../../../moment/locale/en-au.js",
	"./en-au.js": "../../../../moment/locale/en-au.js",
	"./en-ca": "../../../../moment/locale/en-ca.js",
	"./en-ca.js": "../../../../moment/locale/en-ca.js",
	"./en-gb": "../../../../moment/locale/en-gb.js",
	"./en-gb.js": "../../../../moment/locale/en-gb.js",
	"./en-ie": "../../../../moment/locale/en-ie.js",
	"./en-ie.js": "../../../../moment/locale/en-ie.js",
	"./en-il": "../../../../moment/locale/en-il.js",
	"./en-il.js": "../../../../moment/locale/en-il.js",
	"./en-nz": "../../../../moment/locale/en-nz.js",
	"./en-nz.js": "../../../../moment/locale/en-nz.js",
	"./eo": "../../../../moment/locale/eo.js",
	"./eo.js": "../../../../moment/locale/eo.js",
	"./es": "../../../../moment/locale/es.js",
	"./es-do": "../../../../moment/locale/es-do.js",
	"./es-do.js": "../../../../moment/locale/es-do.js",
	"./es-us": "../../../../moment/locale/es-us.js",
	"./es-us.js": "../../../../moment/locale/es-us.js",
	"./es.js": "../../../../moment/locale/es.js",
	"./et": "../../../../moment/locale/et.js",
	"./et.js": "../../../../moment/locale/et.js",
	"./eu": "../../../../moment/locale/eu.js",
	"./eu.js": "../../../../moment/locale/eu.js",
	"./fa": "../../../../moment/locale/fa.js",
	"./fa.js": "../../../../moment/locale/fa.js",
	"./fi": "../../../../moment/locale/fi.js",
	"./fi.js": "../../../../moment/locale/fi.js",
	"./fo": "../../../../moment/locale/fo.js",
	"./fo.js": "../../../../moment/locale/fo.js",
	"./fr": "../../../../moment/locale/fr.js",
	"./fr-ca": "../../../../moment/locale/fr-ca.js",
	"./fr-ca.js": "../../../../moment/locale/fr-ca.js",
	"./fr-ch": "../../../../moment/locale/fr-ch.js",
	"./fr-ch.js": "../../../../moment/locale/fr-ch.js",
	"./fr.js": "../../../../moment/locale/fr.js",
	"./fy": "../../../../moment/locale/fy.js",
	"./fy.js": "../../../../moment/locale/fy.js",
	"./gd": "../../../../moment/locale/gd.js",
	"./gd.js": "../../../../moment/locale/gd.js",
	"./gl": "../../../../moment/locale/gl.js",
	"./gl.js": "../../../../moment/locale/gl.js",
	"./gom-latn": "../../../../moment/locale/gom-latn.js",
	"./gom-latn.js": "../../../../moment/locale/gom-latn.js",
	"./gu": "../../../../moment/locale/gu.js",
	"./gu.js": "../../../../moment/locale/gu.js",
	"./he": "../../../../moment/locale/he.js",
	"./he.js": "../../../../moment/locale/he.js",
	"./hi": "../../../../moment/locale/hi.js",
	"./hi.js": "../../../../moment/locale/hi.js",
	"./hr": "../../../../moment/locale/hr.js",
	"./hr.js": "../../../../moment/locale/hr.js",
	"./hu": "../../../../moment/locale/hu.js",
	"./hu.js": "../../../../moment/locale/hu.js",
	"./hy-am": "../../../../moment/locale/hy-am.js",
	"./hy-am.js": "../../../../moment/locale/hy-am.js",
	"./id": "../../../../moment/locale/id.js",
	"./id.js": "../../../../moment/locale/id.js",
	"./is": "../../../../moment/locale/is.js",
	"./is.js": "../../../../moment/locale/is.js",
	"./it": "../../../../moment/locale/it.js",
	"./it.js": "../../../../moment/locale/it.js",
	"./ja": "../../../../moment/locale/ja.js",
	"./ja.js": "../../../../moment/locale/ja.js",
	"./jv": "../../../../moment/locale/jv.js",
	"./jv.js": "../../../../moment/locale/jv.js",
	"./ka": "../../../../moment/locale/ka.js",
	"./ka.js": "../../../../moment/locale/ka.js",
	"./kk": "../../../../moment/locale/kk.js",
	"./kk.js": "../../../../moment/locale/kk.js",
	"./km": "../../../../moment/locale/km.js",
	"./km.js": "../../../../moment/locale/km.js",
	"./kn": "../../../../moment/locale/kn.js",
	"./kn.js": "../../../../moment/locale/kn.js",
	"./ko": "../../../../moment/locale/ko.js",
	"./ko.js": "../../../../moment/locale/ko.js",
	"./ky": "../../../../moment/locale/ky.js",
	"./ky.js": "../../../../moment/locale/ky.js",
	"./lb": "../../../../moment/locale/lb.js",
	"./lb.js": "../../../../moment/locale/lb.js",
	"./lo": "../../../../moment/locale/lo.js",
	"./lo.js": "../../../../moment/locale/lo.js",
	"./lt": "../../../../moment/locale/lt.js",
	"./lt.js": "../../../../moment/locale/lt.js",
	"./lv": "../../../../moment/locale/lv.js",
	"./lv.js": "../../../../moment/locale/lv.js",
	"./me": "../../../../moment/locale/me.js",
	"./me.js": "../../../../moment/locale/me.js",
	"./mi": "../../../../moment/locale/mi.js",
	"./mi.js": "../../../../moment/locale/mi.js",
	"./mk": "../../../../moment/locale/mk.js",
	"./mk.js": "../../../../moment/locale/mk.js",
	"./ml": "../../../../moment/locale/ml.js",
	"./ml.js": "../../../../moment/locale/ml.js",
	"./mn": "../../../../moment/locale/mn.js",
	"./mn.js": "../../../../moment/locale/mn.js",
	"./mr": "../../../../moment/locale/mr.js",
	"./mr.js": "../../../../moment/locale/mr.js",
	"./ms": "../../../../moment/locale/ms.js",
	"./ms-my": "../../../../moment/locale/ms-my.js",
	"./ms-my.js": "../../../../moment/locale/ms-my.js",
	"./ms.js": "../../../../moment/locale/ms.js",
	"./mt": "../../../../moment/locale/mt.js",
	"./mt.js": "../../../../moment/locale/mt.js",
	"./my": "../../../../moment/locale/my.js",
	"./my.js": "../../../../moment/locale/my.js",
	"./nb": "../../../../moment/locale/nb.js",
	"./nb.js": "../../../../moment/locale/nb.js",
	"./ne": "../../../../moment/locale/ne.js",
	"./ne.js": "../../../../moment/locale/ne.js",
	"./nl": "../../../../moment/locale/nl.js",
	"./nl-be": "../../../../moment/locale/nl-be.js",
	"./nl-be.js": "../../../../moment/locale/nl-be.js",
	"./nl.js": "../../../../moment/locale/nl.js",
	"./nn": "../../../../moment/locale/nn.js",
	"./nn.js": "../../../../moment/locale/nn.js",
	"./pa-in": "../../../../moment/locale/pa-in.js",
	"./pa-in.js": "../../../../moment/locale/pa-in.js",
	"./pl": "../../../../moment/locale/pl.js",
	"./pl.js": "../../../../moment/locale/pl.js",
	"./pt": "../../../../moment/locale/pt.js",
	"./pt-br": "../../../../moment/locale/pt-br.js",
	"./pt-br.js": "../../../../moment/locale/pt-br.js",
	"./pt.js": "../../../../moment/locale/pt.js",
	"./ro": "../../../../moment/locale/ro.js",
	"./ro.js": "../../../../moment/locale/ro.js",
	"./ru": "../../../../moment/locale/ru.js",
	"./ru.js": "../../../../moment/locale/ru.js",
	"./sd": "../../../../moment/locale/sd.js",
	"./sd.js": "../../../../moment/locale/sd.js",
	"./se": "../../../../moment/locale/se.js",
	"./se.js": "../../../../moment/locale/se.js",
	"./si": "../../../../moment/locale/si.js",
	"./si.js": "../../../../moment/locale/si.js",
	"./sk": "../../../../moment/locale/sk.js",
	"./sk.js": "../../../../moment/locale/sk.js",
	"./sl": "../../../../moment/locale/sl.js",
	"./sl.js": "../../../../moment/locale/sl.js",
	"./sq": "../../../../moment/locale/sq.js",
	"./sq.js": "../../../../moment/locale/sq.js",
	"./sr": "../../../../moment/locale/sr.js",
	"./sr-cyrl": "../../../../moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "../../../../moment/locale/sr-cyrl.js",
	"./sr.js": "../../../../moment/locale/sr.js",
	"./ss": "../../../../moment/locale/ss.js",
	"./ss.js": "../../../../moment/locale/ss.js",
	"./sv": "../../../../moment/locale/sv.js",
	"./sv.js": "../../../../moment/locale/sv.js",
	"./sw": "../../../../moment/locale/sw.js",
	"./sw.js": "../../../../moment/locale/sw.js",
	"./ta": "../../../../moment/locale/ta.js",
	"./ta.js": "../../../../moment/locale/ta.js",
	"./te": "../../../../moment/locale/te.js",
	"./te.js": "../../../../moment/locale/te.js",
	"./tet": "../../../../moment/locale/tet.js",
	"./tet.js": "../../../../moment/locale/tet.js",
	"./tg": "../../../../moment/locale/tg.js",
	"./tg.js": "../../../../moment/locale/tg.js",
	"./th": "../../../../moment/locale/th.js",
	"./th.js": "../../../../moment/locale/th.js",
	"./tl-ph": "../../../../moment/locale/tl-ph.js",
	"./tl-ph.js": "../../../../moment/locale/tl-ph.js",
	"./tlh": "../../../../moment/locale/tlh.js",
	"./tlh.js": "../../../../moment/locale/tlh.js",
	"./tr": "../../../../moment/locale/tr.js",
	"./tr.js": "../../../../moment/locale/tr.js",
	"./tzl": "../../../../moment/locale/tzl.js",
	"./tzl.js": "../../../../moment/locale/tzl.js",
	"./tzm": "../../../../moment/locale/tzm.js",
	"./tzm-latn": "../../../../moment/locale/tzm-latn.js",
	"./tzm-latn.js": "../../../../moment/locale/tzm-latn.js",
	"./tzm.js": "../../../../moment/locale/tzm.js",
	"./ug-cn": "../../../../moment/locale/ug-cn.js",
	"./ug-cn.js": "../../../../moment/locale/ug-cn.js",
	"./uk": "../../../../moment/locale/uk.js",
	"./uk.js": "../../../../moment/locale/uk.js",
	"./ur": "../../../../moment/locale/ur.js",
	"./ur.js": "../../../../moment/locale/ur.js",
	"./uz": "../../../../moment/locale/uz.js",
	"./uz-latn": "../../../../moment/locale/uz-latn.js",
	"./uz-latn.js": "../../../../moment/locale/uz-latn.js",
	"./uz.js": "../../../../moment/locale/uz.js",
	"./vi": "../../../../moment/locale/vi.js",
	"./vi.js": "../../../../moment/locale/vi.js",
	"./x-pseudo": "../../../../moment/locale/x-pseudo.js",
	"./x-pseudo.js": "../../../../moment/locale/x-pseudo.js",
	"./yo": "../../../../moment/locale/yo.js",
	"./yo.js": "../../../../moment/locale/yo.js",
	"./zh-cn": "../../../../moment/locale/zh-cn.js",
	"./zh-cn.js": "../../../../moment/locale/zh-cn.js",
	"./zh-hk": "../../../../moment/locale/zh-hk.js",
	"./zh-hk.js": "../../../../moment/locale/zh-hk.js",
	"./zh-tw": "../../../../moment/locale/zh-tw.js",
	"./zh-tw.js": "../../../../moment/locale/zh-tw.js"
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "../../../../moment/locale recursive ^\\.\\/.*$";

/***/ }),

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__("../../../../../src/main.ts");


/***/ }),

/***/ 1:
/***/ (function(module, exports) {

/* (ignored) */

/***/ })

},[0]);
//# sourceMappingURL=main.bundle.js.map